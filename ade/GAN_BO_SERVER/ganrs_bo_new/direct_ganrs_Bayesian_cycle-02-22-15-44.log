nohup: 忽略输入
/usr/local/home/yyq/bo/ganrs_bo_new
=============== start wordcount-100G ===============
2022年 02月 22日 星期二 14:05:02 CST
=============== start wordcount-100G ===============
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/logs*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/target*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
sys.path = ['/usr/local/home/yyq/bo/ganrs_bo_new', '/usr/local/home/python3/python3/lib/python38.zip', '/usr/local/home/python3/python3/lib/python3.8', '/usr/local/home/python3/python3/lib/python3.8/lib-dynload', '/usr/local/home/python3/python3/lib/python3.8/site-packages', '/usr/local/home/yyq/bo/ganrs_bo_new', '/usr/local/home/yyq/bo/ganrs_bo_new/bayes_scode']
benchmark = wordcount-100G	 gan+rs生成的样本数：initpoints = 6	 bo迭代搜索次数：--niters = 6
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
按照key值排序前的d2 = {'spark.broadcast.blockSize': (32.0, 64.0), 'spark.broadcast.checksum': (0.0, 1.0), 'spark.broadcast.compress': (0.0, 1.0), 'spark.default.parallelism': (200.0, 500.0), 'spark.executor.cores': (1.0, 4.0), 'spark.executor.instances': (4.0, 8.0), 'spark.executor.memory': (3.0, 7.0), 'spark.executor.memoryOverhead': (384.0, 877.0), 'spark.kryoserializer.buffer': (32.0, 128.0), 'spark.kryoserializer.buffer.max': (32.0, 128.0), 'spark.locality.wait': (4.0, 10.0), 'spark.maxRemoteBlockSizeFetchToMem': (1073741567.0, 2147483135.0), 'spark.memory.fraction': (0.5, 0.9), 'spark.memory.offHeap.enabled': (0.0, 1.0), 'spark.memory.offHeap.size': (0.0, 1024.0), 'spark.memory.storageFraction': (0.5, 0.9), 'spark.rdd.compress': (0.0, 1.0), 'spark.reducer.maxBlocksInFlightPerAddress': (1073741823.0, 2147483647.0), 'spark.reducer.maxReqsInFlight': (1073741823.0, 2147483647.0), 'spark.reducer.maxSizeInFlight': (24.0, 72.0), 'spark.scheduler.mode': (0.0, 1.0), 'spark.scheduler.revive.interval': (500.0, 1000.0), 'spark.shuffle.compress': (0.0, 1.0), 'spark.shuffle.file.buffer': (16.0, 48.0), 'spark.shuffle.io.numConnectionsPerPeer': (1.0, 5.0), 'spark.shuffle.sort.bypassMergeThreshold': (150.0, 350.0), 'spark.storage.memoryMapThreshold': (1.0, 4.0)}
按照key值排序后的d2 = {'spark.broadcast.blockSize': (32.0, 64.0), 'spark.broadcast.checksum': (0.0, 1.0), 'spark.broadcast.compress': (0.0, 1.0), 'spark.default.parallelism': (200.0, 500.0), 'spark.executor.cores': (1.0, 4.0), 'spark.executor.instances': (4.0, 8.0), 'spark.executor.memory': (3.0, 7.0), 'spark.executor.memoryOverhead': (384.0, 877.0), 'spark.kryoserializer.buffer': (32.0, 128.0), 'spark.kryoserializer.buffer.max': (32.0, 128.0), 'spark.locality.wait': (4.0, 10.0), 'spark.maxRemoteBlockSizeFetchToMem': (1073741567.0, 2147483135.0), 'spark.memory.fraction': (0.5, 0.9), 'spark.memory.offHeap.enabled': (0.0, 1.0), 'spark.memory.offHeap.size': (0.0, 1024.0), 'spark.memory.storageFraction': (0.5, 0.9), 'spark.rdd.compress': (0.0, 1.0), 'spark.reducer.maxBlocksInFlightPerAddress': (1073741823.0, 2147483647.0), 'spark.reducer.maxReqsInFlight': (1073741823.0, 2147483647.0), 'spark.reducer.maxSizeInFlight': (24.0, 72.0), 'spark.scheduler.mode': (0.0, 1.0), 'spark.scheduler.revive.interval': (500.0, 1000.0), 'spark.shuffle.compress': (0.0, 1.0), 'spark.shuffle.file.buffer': (16.0, 48.0), 'spark.shuffle.io.numConnectionsPerPeer': (1.0, 5.0), 'spark.shuffle.sort.bypassMergeThreshold': (150.0, 350.0), 'spark.storage.memoryMapThreshold': (1.0, 4.0)}
vital_params_name = ['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
vital_params_list = ['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold', 'runtime']
iterations = 0
gan_random方法获取的参数:	 n = 6	 type = random	 bo_res_df = Empty DataFrame
Columns: []
Index: []	 iterations = 0
随机生成的配置:[61, 0, 1, 412, 1, 4, 3, 870, 53, 45, 4, 1800175009, 0.73, 1, 739, 0.7, 0, 1566398492, 1698256702, 61, 1, 932, 0, 40, 2, 313, 2]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 61
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 412
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 1
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 3
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 870
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 53
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 45
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 4
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1800175009
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.73
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 1
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 739
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1566398492
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1698256702
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 61
================= config1 =================
2022年 02月 22日 星期二 14:05:04 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (95247) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (279732) - 没有那个进程
================= config2 =================
2022年 02月 22日 星期二 14:07:25 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (109666) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (302713) - 没有那个进程
================= config3 =================
2022年 02月 22日 星期二 14:10:30 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (123494) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (13913) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 932
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 40
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 2
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 313
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2
configNum = 1	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 1 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
随机生成的配置和实际运行时间:[61, 0, 1, 412, 1, 4, 3, 870, 53, 45, 4, 1800175009, 0.73, 1, 739, 0.7, 0, 1566398492, 1698256702, 61, 1, 932, 0, 40, 2, 313, 2, 333.83]
   spark.broadcast.blockSize  ...  runtime
0                         61  ...   333.83

[1 rows x 28 columns]
  spark.broadcast.blockSize  ... runtime
0                        61  ...  333.83

[1 rows x 28 columns]
随机生成的配置:[36, 0, 1, 265, 4, 5, 4, 513, 83, 38, 9, 1113627989, 0.77, 0, 650, 0.79, 0, 1465374078, 1307850066, 65, 1, 661, 0, 22, 4, 241, 2]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 36
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 265
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 513
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 83
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 38
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1113627989
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.77
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 650
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.79
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1465374078
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1307850066
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 65
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 661
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 22
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 241
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2
configNum = 2	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 2 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
随机生成的配置和实际运行时间:[36, 0, 1, 265, 4, 5, 4, 513, 83, 38, 9, 1113627989, 0.77, 0, 650, 0.79, 0, 1465374078, 1307850066, 65, 1, 661, 0, 22, 4, 241, 2, 176.341]
   spark.broadcast.blockSize  ...  runtime
0                         36  ...  176.341

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...  runtime
0                        61  ...  333.830
1                        36  ...  176.341

[2 rows x 28 columns]
随机生成的配置:[34, 0, 1, 267, 3, 8, 5, 597, 52, 91, 9, 1343168729, 0.8, 1, 846, 0.71, 1, 1459045871, 1578588605, 26, 1, 760, 1, 18, 1, 259, 3]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 34
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 267
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 8
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 597
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 52
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 91
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1343168729
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 1
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 846
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.71
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1459045871
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1578588605
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 26
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 760
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 18
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 259
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3
configNum = 3	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 3 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
随机生成的配置和实际运行时间:[34, 0, 1, 267, 3, 8, 5, 597, 52, 91, 9, 1343168729, 0.8, 1, 846, 0.71, 1, 1459045871, 1578588605, 26, 1, 760, 1, 18, 1, 259, 3, 185.759]
   spark.broadcast.blockSize  ...  runtime
0                         34  ...  185.759

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...  runtime
0                        61  ...  333.830
1                        36  ...  176.341
2                        34  ...  185.759

[3 rows x 28 columns]
  spark.broadcast.blockSize  ... spark.storage.memoryMapThreshold
0                        36  ...                                2

[1 rows x 27 columns]
  spark.broadcast.blockSize  ... spark.storage.memoryMapThreshold
0                     -0.75  ...                        -0.333333

[1 rows x 27 columns]
traindata.shape:(1, 27)
traindata.count_value:16.839877906543208
0
2000
Epoch: 0 Loss D.: 0.018163025379180908
Epoch: 0 Loss G.: 16.349254097145987
tensor(16.5822, dtype=torch.float64, grad_fn=<DivBackward0>)
1
2000
Epoch: 1 Loss D.: -0.018288612365722656
Epoch: 1 Loss G.: 16.907078608226968
tensor(16.2662, dtype=torch.float64, grad_fn=<DivBackward0>)
2
2000
Epoch: 2 Loss D.: -0.014185547828674316
Epoch: 2 Loss G.: 16.36343192896713
tensor(16.0536, dtype=torch.float64, grad_fn=<DivBackward0>)
3
2000
Epoch: 3 Loss D.: -0.021316170692443848
Epoch: 3 Loss G.: 16.236872130063368
tensor(16.0290, dtype=torch.float64, grad_fn=<DivBackward0>)
4
2000
Epoch: 4 Loss D.: -0.003653585910797119
Epoch: 4 Loss G.: 16.180926120829774
tensor(15.8233, dtype=torch.float64, grad_fn=<DivBackward0>)
5
2000
Epoch: 5 Loss D.: 0.004240900278091431
Epoch: 5 Loss G.: 15.830650328014984
tensor(15.9846, dtype=torch.float64, grad_fn=<DivBackward0>)
6
2000
Epoch: 6 Loss D.: -0.006475090980529785
Epoch: 6 Loss G.: 15.794374625486329
tensor(15.3816, dtype=torch.float64, grad_fn=<DivBackward0>)
7
2000
Epoch: 7 Loss D.: -0.01578819751739502
Epoch: 7 Loss G.: 15.799947710064247
tensor(15.3547, dtype=torch.float64, grad_fn=<DivBackward0>)
8
2000
Epoch: 8 Loss D.: 0.0066537559032440186
Epoch: 8 Loss G.: 14.429655961980119
tensor(15.8077, dtype=torch.float64, grad_fn=<DivBackward0>)
9
2000
Epoch: 9 Loss D.: -0.005456447601318359
Epoch: 9 Loss G.: 17.059176516541285
tensor(15.1584, dtype=torch.float64, grad_fn=<DivBackward0>)
10
2000
Epoch: 10 Loss D.: 0.007376551628112793
Epoch: 10 Loss G.: 15.808115963180557
tensor(15.5042, dtype=torch.float64, grad_fn=<DivBackward0>)
11
2000
Epoch: 11 Loss D.: 0.005391061305999756
Epoch: 11 Loss G.: 14.428993527599618
tensor(14.9309, dtype=torch.float64, grad_fn=<DivBackward0>)
12
2000
Epoch: 12 Loss D.: -0.0010475516319274902
Epoch: 12 Loss G.: 13.119966324147777
tensor(15.0582, dtype=torch.float64, grad_fn=<DivBackward0>)
13
2000
Epoch: 13 Loss D.: 0.0003364682197570801
Epoch: 13 Loss G.: 16.031864889253868
tensor(14.7010, dtype=torch.float64, grad_fn=<DivBackward0>)
14
2000
Epoch: 14 Loss D.: -0.0038004517555236816
Epoch: 14 Loss G.: 15.532885855351582
tensor(14.8104, dtype=torch.float64, grad_fn=<DivBackward0>)
15
2000
Epoch: 15 Loss D.: -0.004142284393310547
Epoch: 15 Loss G.: 15.960443890643313
tensor(14.2001, dtype=torch.float64, grad_fn=<DivBackward0>)
16
2000
Epoch: 16 Loss D.: 0.00788569450378418
Epoch: 16 Loss G.: 14.339968785465702
tensor(14.3835, dtype=torch.float64, grad_fn=<DivBackward0>)
17
2000
Epoch: 17 Loss D.: -0.00045502185821533203
Epoch: 17 Loss G.: 14.457121542942717
tensor(13.6053, dtype=torch.float64, grad_fn=<DivBackward0>)
18
2000
Epoch: 18 Loss D.: -0.0073143839836120605
Epoch: 18 Loss G.: 13.69953862140794
tensor(13.3917, dtype=torch.float64, grad_fn=<DivBackward0>)
19
2000
Epoch: 19 Loss D.: -0.0020369887351989746
Epoch: 19 Loss G.: 12.642960722547963
tensor(13.1814, dtype=torch.float64, grad_fn=<DivBackward0>)
20
2000
Epoch: 20 Loss D.: -0.01292186975479126
Epoch: 20 Loss G.: 13.869659534943297
tensor(12.7732, dtype=torch.float64, grad_fn=<DivBackward0>)
21
2000
Epoch: 21 Loss D.: 0.0004900693893432617
Epoch: 21 Loss G.: 14.335084432092502
tensor(12.9618, dtype=torch.float64, grad_fn=<DivBackward0>)
22
2000
Epoch: 22 Loss D.: -0.007630288600921631
Epoch: 22 Loss G.: 13.131041700941518
tensor(11.9219, dtype=torch.float64, grad_fn=<DivBackward0>)
23
2000
Epoch: 23 Loss D.: -0.015542924404144287
Epoch: 23 Loss G.: 10.649988595758572
tensor(12.8012, dtype=torch.float64, grad_fn=<DivBackward0>)
24
2000
Epoch: 24 Loss D.: -0.004524409770965576
Epoch: 24 Loss G.: 11.156135757816033
tensor(11.8531, dtype=torch.float64, grad_fn=<DivBackward0>)
25
2000
Epoch: 25 Loss D.: 0.0014000535011291504
Epoch: 25 Loss G.: 12.473542349700823
tensor(11.5929, dtype=torch.float64, grad_fn=<DivBackward0>)
26
2000
Epoch: 26 Loss D.: -0.006942927837371826
Epoch: 26 Loss G.: 13.606431691897109
tensor(12.5661, dtype=torch.float64, grad_fn=<DivBackward0>)
27
2000
Epoch: 27 Loss D.: -0.007102251052856445
Epoch: 27 Loss G.: 9.770007518780425
tensor(10.7075, dtype=torch.float64, grad_fn=<DivBackward0>)
28
2000
Epoch: 28 Loss D.: -0.001246809959411621
Epoch: 28 Loss G.: 15.930707616721287
tensor(11.4173, dtype=torch.float64, grad_fn=<DivBackward0>)
29
2000
Epoch: 29 Loss D.: -0.006962776184082031
Epoch: 29 Loss G.: 9.903368362587884
tensor(12.0327, dtype=torch.float64, grad_fn=<DivBackward0>)
30
2000
Epoch: 30 Loss D.: 0.006632387638092041
Epoch: 30 Loss G.: 10.576356076997714
tensor(10.5163, dtype=torch.float64, grad_fn=<DivBackward0>)
31
2000
Epoch: 31 Loss D.: -0.0053806304931640625
Epoch: 31 Loss G.: 9.178618622374728
tensor(10.3552, dtype=torch.float64, grad_fn=<DivBackward0>)
32
2000
Epoch: 32 Loss D.: -0.004015028476715088
Epoch: 32 Loss G.: 8.909510665612613
tensor(9.3300, dtype=torch.float64, grad_fn=<DivBackward0>)
33
2000
Epoch: 33 Loss D.: 0.00032067298889160156
Epoch: 33 Loss G.: 9.470112813564336
tensor(9.0103, dtype=torch.float64, grad_fn=<DivBackward0>)
34
2000
Epoch: 34 Loss D.: -0.008831441402435303
Epoch: 34 Loss G.: 15.889556726728573
tensor(8.7776, dtype=torch.float64, grad_fn=<DivBackward0>)
35
2000
Epoch: 35 Loss D.: -0.002174675464630127
Epoch: 35 Loss G.: 8.720518582862809
tensor(8.9740, dtype=torch.float64, grad_fn=<DivBackward0>)
36
2000
Epoch: 36 Loss D.: -0.005465209484100342
Epoch: 36 Loss G.: 9.779232939434245
tensor(8.3610, dtype=torch.float64, grad_fn=<DivBackward0>)
37
2000
Epoch: 37 Loss D.: -0.0004794001579284668
Epoch: 37 Loss G.: 7.184448474449114
tensor(9.0966, dtype=torch.float64, grad_fn=<DivBackward0>)
38
2000
Epoch: 38 Loss D.: -0.0030965805053710938
Epoch: 38 Loss G.: 7.417207118175621
tensor(8.2907, dtype=torch.float64, grad_fn=<DivBackward0>)
39
2000
Epoch: 39 Loss D.: -0.00746077299118042
Epoch: 39 Loss G.: 7.118585999908244
tensor(7.6855, dtype=torch.float64, grad_fn=<DivBackward0>)
40
2000
Epoch: 40 Loss D.: -0.007164418697357178
Epoch: 40 Loss G.: 7.515427189918552
tensor(7.9970, dtype=torch.float64, grad_fn=<DivBackward0>)
41
2000
Epoch: 41 Loss D.: -0.007796764373779297
Epoch: 41 Loss G.: 6.8104474937937605
tensor(7.1935, dtype=torch.float64, grad_fn=<DivBackward0>)
42
2000
Epoch: 42 Loss D.: -0.00755685567855835
Epoch: 42 Loss G.: 8.398200406414464
tensor(7.6471, dtype=torch.float64, grad_fn=<DivBackward0>)
43
2000
Epoch: 43 Loss D.: -0.0136566162109375
Epoch: 43 Loss G.: 7.919287047388349
tensor(6.6969, dtype=torch.float64, grad_fn=<DivBackward0>)
44
2000
Epoch: 44 Loss D.: -0.010891079902648926
Epoch: 44 Loss G.: 7.143442815643742
tensor(6.8275, dtype=torch.float64, grad_fn=<DivBackward0>)
45
2000
Epoch: 45 Loss D.: -0.008223295211791992
Epoch: 45 Loss G.: 5.4298178466524245
tensor(6.6674, dtype=torch.float64, grad_fn=<DivBackward0>)
46
2000
Epoch: 46 Loss D.: 0.0035966038703918457
Epoch: 46 Loss G.: 7.273132548036371
tensor(5.5973, dtype=torch.float64, grad_fn=<DivBackward0>)
47
2000
Epoch: 47 Loss D.: -0.009576380252838135
Epoch: 47 Loss G.: 9.654343127262786
tensor(5.8559, dtype=torch.float64, grad_fn=<DivBackward0>)
48
2000
Epoch: 48 Loss D.: 0.001438915729522705
Epoch: 48 Loss G.: 5.277821976926482
tensor(5.8153, dtype=torch.float64, grad_fn=<DivBackward0>)
49
2000
Epoch: 49 Loss D.: -0.0021993517875671387
Epoch: 49 Loss G.: 4.654512711774862
tensor(5.6357, dtype=torch.float64, grad_fn=<DivBackward0>)
50
2000
Epoch: 50 Loss D.: -0.0047338008880615234
Epoch: 50 Loss G.: 5.433465559977099
tensor(4.9337, dtype=torch.float64, grad_fn=<DivBackward0>)
51
2000
Epoch: 51 Loss D.: 0.0032528042793273926
Epoch: 51 Loss G.: 4.336606370892681
tensor(5.0327, dtype=torch.float64, grad_fn=<DivBackward0>)
52
2000
Epoch: 52 Loss D.: -0.009607315063476562
Epoch: 52 Loss G.: 5.307017977617377
tensor(4.2191, dtype=torch.float64, grad_fn=<DivBackward0>)
53
2000
Epoch: 53 Loss D.: -0.018441498279571533
Epoch: 53 Loss G.: 5.379406833100125
tensor(4.2636, dtype=torch.float64, grad_fn=<DivBackward0>)
54
2000
Epoch: 54 Loss D.: -0.013144612312316895
Epoch: 54 Loss G.: 3.4885373519339216
tensor(3.9587, dtype=torch.float64, grad_fn=<DivBackward0>)
55
2000
Epoch: 55 Loss D.: -0.014037847518920898
Epoch: 55 Loss G.: 6.3423614197494524
tensor(3.9207, dtype=torch.float64, grad_fn=<DivBackward0>)
56
2000
Epoch: 56 Loss D.: -0.017588436603546143
Epoch: 56 Loss G.: 3.9347997223402627
tensor(4.3929, dtype=torch.float64, grad_fn=<DivBackward0>)
57
2000
Epoch: 57 Loss D.: -0.0032414793968200684
Epoch: 57 Loss G.: 3.581145420647855
tensor(3.6213, dtype=torch.float64, grad_fn=<DivBackward0>)
58
2000
Epoch: 58 Loss D.: -0.003833174705505371
Epoch: 58 Loss G.: 3.4688834762098355
tensor(3.1713, dtype=torch.float64, grad_fn=<DivBackward0>)
59
2000
Epoch: 59 Loss D.: -0.010802209377288818
Epoch: 59 Loss G.: 3.494514683640556
tensor(3.5188, dtype=torch.float64, grad_fn=<DivBackward0>)
60
2000
Epoch: 60 Loss D.: -0.0045986175537109375
Epoch: 60 Loss G.: 4.126546462076709
tensor(3.5778, dtype=torch.float64, grad_fn=<DivBackward0>)
61
2000
Epoch: 61 Loss D.: -0.012430131435394287
Epoch: 61 Loss G.: 1.7158612328832912
tensor(4.5092, dtype=torch.float64, grad_fn=<DivBackward0>)
62
2000
Epoch: 62 Loss D.: -0.0015782713890075684
Epoch: 62 Loss G.: 1.9124266890054509
tensor(4.3625, dtype=torch.float64, grad_fn=<DivBackward0>)
63
2000
Epoch: 63 Loss D.: -0.005354046821594238
Epoch: 63 Loss G.: 2.6463209611739287
tensor(3.1807, dtype=torch.float64, grad_fn=<DivBackward0>)
64
2000
Epoch: 64 Loss D.: -0.005982637405395508
Epoch: 64 Loss G.: 2.201777302640483
tensor(2.5435, dtype=torch.float64, grad_fn=<DivBackward0>)
65
2000
Epoch: 65 Loss D.: -0.00486224889755249
Epoch: 65 Loss G.: 2.846634678212608
tensor(3.3238, dtype=torch.float64, grad_fn=<DivBackward0>)
66
2000
Epoch: 66 Loss D.: -0.010768532752990723
Epoch: 66 Loss G.: 3.187865711150373
tensor(2.1494, dtype=torch.float64, grad_fn=<DivBackward0>)
67
2000
Epoch: 67 Loss D.: -0.00796431303024292
Epoch: 67 Loss G.: 2.4876756681976766
tensor(3.4613, dtype=torch.float64, grad_fn=<DivBackward0>)
68
2000
Epoch: 68 Loss D.: -0.007310986518859863
Epoch: 68 Loss G.: 1.1092662493751013
tensor(2.7707, dtype=torch.float64, grad_fn=<DivBackward0>)
69
2000
Epoch: 69 Loss D.: -0.009440958499908447
Epoch: 69 Loss G.: 6.448677397620871
tensor(3.0279, dtype=torch.float64, grad_fn=<DivBackward0>)
70
2000
Epoch: 70 Loss D.: -0.0025244951248168945
Epoch: 70 Loss G.: 2.0800275365446446
tensor(2.8741, dtype=torch.float64, grad_fn=<DivBackward0>)
71
2000
Epoch: 71 Loss D.: -0.005607724189758301
Epoch: 71 Loss G.: 1.6932495834606933
tensor(2.3146, dtype=torch.float64, grad_fn=<DivBackward0>)
72
2000
Epoch: 72 Loss D.: 0.0007922649383544922
Epoch: 72 Loss G.: 1.4539156185720805
tensor(3.1594, dtype=torch.float64, grad_fn=<DivBackward0>)
73
2000
Epoch: 73 Loss D.: 0.008102595806121826
Epoch: 73 Loss G.: 4.326532217961743
tensor(3.3313, dtype=torch.float64, grad_fn=<DivBackward0>)
74
2000
Epoch: 74 Loss D.: -0.002977609634399414
Epoch: 74 Loss G.: 3.3898012394187895
tensor(2.4746, dtype=torch.float64, grad_fn=<DivBackward0>)
75
2000
Epoch: 75 Loss D.: -0.008257150650024414
Epoch: 75 Loss G.: 3.266122539285267
tensor(2.7074, dtype=torch.float64, grad_fn=<DivBackward0>)
76
2000
Epoch: 76 Loss D.: -0.014539718627929688
Epoch: 76 Loss G.: 6.0671268546106365
tensor(2.4280, dtype=torch.float64, grad_fn=<DivBackward0>)
77
2000
Epoch: 77 Loss D.: -0.007408857345581055
Epoch: 77 Loss G.: 3.4894050207712293
tensor(3.1486, dtype=torch.float64, grad_fn=<DivBackward0>)
78
2000
Epoch: 78 Loss D.: -0.004263460636138916
Epoch: 78 Loss G.: 1.2183776557380392
tensor(2.7917, dtype=torch.float64, grad_fn=<DivBackward0>)
79
2000
Epoch: 79 Loss D.: -0.006364285945892334
Epoch: 79 Loss G.: 1.5069979458982186
tensor(2.3538, dtype=torch.float64, grad_fn=<DivBackward0>)
80
2000
Epoch: 80 Loss D.: 0.009291350841522217
Epoch: 80 Loss G.: 3.59977477636282
tensor(2.7163, dtype=torch.float64, grad_fn=<DivBackward0>)
81
2000
Epoch: 81 Loss D.: -0.008685529232025146
Epoch: 81 Loss G.: 6.13459721143265
tensor(2.8558, dtype=torch.float64, grad_fn=<DivBackward0>)
82
2000
Epoch: 82 Loss D.: 0.0027946829795837402
Epoch: 82 Loss G.: 2.208196877044633
tensor(2.7659, dtype=torch.float64, grad_fn=<DivBackward0>)
83
2000
Epoch: 83 Loss D.: -0.005522489547729492
Epoch: 83 Loss G.: 1.6544456469152804
tensor(2.8248, dtype=torch.float64, grad_fn=<DivBackward0>)
84
2000
Epoch: 84 Loss D.: -0.0020682811737060547
Epoch: 84 Loss G.: 1.757701118800485
tensor(3.4459, dtype=torch.float64, grad_fn=<DivBackward0>)
85
2000
Epoch: 85 Loss D.: -0.00047087669372558594
Epoch: 85 Loss G.: 2.1847332557858974
tensor(2.0742, dtype=torch.float64, grad_fn=<DivBackward0>)
86
2000
Epoch: 86 Loss D.: -0.009337961673736572
Epoch: 86 Loss G.: 2.7202139939389576
tensor(3.4359, dtype=torch.float64, grad_fn=<DivBackward0>)
87
2000
Epoch: 87 Loss D.: 0.004246503114700317
Epoch: 87 Loss G.: 2.184073410438057
tensor(2.4105, dtype=torch.float64, grad_fn=<DivBackward0>)
88
2000
Epoch: 88 Loss D.: -0.01436394453048706
Epoch: 88 Loss G.: 3.0400264266155115
tensor(2.9734, dtype=torch.float64, grad_fn=<DivBackward0>)
89
2000
Epoch: 89 Loss D.: -0.0019844770431518555
Epoch: 89 Loss G.: 1.9471205960235944
tensor(2.8460, dtype=torch.float64, grad_fn=<DivBackward0>)
90
2000
Epoch: 90 Loss D.: 0.0008037686347961426
Epoch: 90 Loss G.: 1.6819928581835772
tensor(2.4449, dtype=torch.float64, grad_fn=<DivBackward0>)
91
2000
Epoch: 91 Loss D.: 0.0032674074172973633
Epoch: 91 Loss G.: 1.1942249587851808
tensor(1.9990, dtype=torch.float64, grad_fn=<DivBackward0>)
在第91轮收敛
----------------第0轮的原数据---------------------
         range  dissimilarity_value  ...  Euclidean_distance   distance
0     0.000000             0.019303  ...            0.588915  87.643773
1     0.000000             0.039219  ...            0.805536  31.485548
2     0.000000             0.026623  ...            0.649924  57.492395
3     0.000000             0.018564  ...            0.567196  94.577237
4     0.000000             0.029169  ...            0.710117  48.040307
..         ...                  ...  ...                 ...        ...
195  14.073828             0.030308  ...            0.787838  41.802079
196  14.198617             0.039410  ...            0.937402  26.956227
197  14.352757             0.037328  ...            0.917947  29.132951
198  14.816561             0.041838  ...            1.099568  21.697902
199  17.325027             0.046062  ...            1.054767  20.532223

[200 rows x 5 columns]
-----------------按照dissimilarity_value排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    2.128                0.008         0.996               0.331   391.787
1    6.159                0.008         0.998               0.231   540.474
2    6.186                0.008         0.998               0.238   549.845
3    4.165                0.008         0.998               0.237   535.269
4    2.183                0.009         0.997               0.291   365.084
..     ...                  ...           ...                 ...       ...
195  0.023                0.051         0.992               1.182    16.611
196  0.250                0.060         0.995               1.439    11.460
197  0.171                0.062         0.992               1.256    12.682
198  0.171                0.065         0.991               1.520    10.042
199  0.276                0.074         0.984               1.685     7.934

[200 rows x 5 columns]
-----------------按照range排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     0.000                0.019         0.996               0.589    87.644
1     0.000                0.025         0.995               0.761    52.170
2     0.000                0.015         0.998               0.377   178.940
3     0.000                0.026         0.995               0.457    84.277
4     0.000                0.027         0.995               0.650    57.492
..      ...                  ...           ...                 ...       ...
195  14.074                0.030         0.998               0.788    41.802
196  14.199                0.039         0.996               0.937    26.956
197  14.353                0.037         0.998               0.918    29.133
198  14.817                0.042         0.998               1.100    21.698
199  17.325                0.046         0.998               1.055    20.532

[200 rows x 5 columns]
-----------------按照cos_distance排序----------
================= config4 =================
2022年 02月 22日 星期二 14:13:48 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (133617) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (29560) - 没有那个进程
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     0.145                0.037         0.981               1.028    25.467
1     0.276                0.074         0.984               1.685     7.934
2     0.224                0.042         0.989               1.219    19.200
3     0.039                0.032         0.989               1.076    28.625
4     0.066                0.051         0.990               1.107    17.447
..      ...                  ...           ...                 ...       ...
195   0.000                0.013         0.998               0.427   178.515
196   0.000                0.010         0.998               0.261   377.634
197  11.365                0.027         0.998               0.633    57.629
198  17.325                0.046         0.998               1.055    20.532
199   0.000                0.017         0.999               0.381   156.589

[200 rows x 5 columns]
-----------------按照Euclidean_distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    2.042                0.009         0.998               0.225   522.758
1    6.159                0.008         0.998               0.231   540.474
2    4.165                0.008         0.998               0.237   535.269
3    6.186                0.008         0.998               0.238   549.845
4    4.059                0.011         0.998               0.256   364.123
..     ...                  ...           ...                 ...       ...
195  0.118                0.050         0.994               1.229    16.074
196  0.171                0.062         0.992               1.256    12.682
197  0.250                0.060         0.995               1.439    11.460
198  0.171                0.065         0.991               1.520    10.042
199  0.276                0.074         0.984               1.685     7.934

[200 rows x 5 columns]
-----------------按照distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    6.186                0.008         0.998               0.238   549.845
1    6.159                0.008         0.998               0.231   540.474
2    4.165                0.008         0.998               0.237   535.269
3    2.042                0.009         0.998               0.225   522.758
4    2.128                0.008         0.996               0.331   391.787
..     ...                  ...           ...                 ...       ...
195  0.118                0.050         0.994               1.229    16.074
196  0.171                0.062         0.992               1.256    12.682
197  0.250                0.060         0.995               1.439    11.460
198  0.171                0.065         0.991               1.520    10.042
199  0.276                0.074         0.984               1.685     7.934

[200 rows x 5 columns]
   distance
0   549.845
1   540.474
2   535.269
3   178.940
4   178.515
5   175.994
6    11.460
7    10.042
8     7.934
   distance
0   549.845
1   178.940
2     7.934
3   540.474
4   178.515
5    10.042
6   535.269
7   175.994
8    11.460
sgan数据生成时间花费为：523.83
   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                       37.0  ...                               2.0
1                       38.0  ...                               2.0
2                       44.0  ...                               2.0
3                       36.0  ...                               2.0
4                       37.0  ...                               2.0
5                       40.0  ...                               2.0
6                       36.0  ...                               2.0
7                       36.0  ...                               2.0
8                       40.0  ...                               2.0

[9 rows x 27 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 37.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 260.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 509.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 86.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 40.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1119833856.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7599999904632568
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 652.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7900000214576721
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1461130240.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1288648320.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 65.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 659.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 22.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 236.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.0
configNum = 4	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 4 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...   runtime
0                       37.0  ...  100000.0

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...     runtime
0                        36  ...     176.341
1                        34  ...     185.759
2                        61  ...     333.830
3                      37.0  ...  100000.000

[4 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 38.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 268.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 506.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 83.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 41.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1154817280.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.75
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 656.0
================= config5 =================
2022年 02月 22日 星期二 14:16:25 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (150379) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (57170) - 没有那个进程
================= config6 =================
2022年 02月 22日 星期二 14:20:13 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (166246) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (87352) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7799999713897705
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1499340800.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1323750016.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 62.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 674.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 23.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 239.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.0
configNum = 5	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 5 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       38.0  ...  219.735

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...     runtime
0                        36  ...     176.341
1                        34  ...     185.759
2                        61  ...     333.830
3                      37.0  ...  100000.000
4                      38.0  ...     219.735

[5 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 44.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 286.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 564.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 85.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 48.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1384110336.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.75
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 561.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7699999809265137
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1480802048.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1439833216.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 57.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 686.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 27.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 246.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.0
configNum = 6	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 6 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       44.0  ...  237.341

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...     runtime
0                        36  ...     176.341
1                        34  ...     185.759
2                        61  ...     333.830
3                      37.0  ...  100000.000
4                      38.0  ...     219.735
5                      44.0  ...     237.341

[6 rows x 28 columns]
  spark.broadcast.blockSize  ...     runtime
0                        36  ...     176.341
1                        34  ...     185.759
2                        61  ...     333.830
3                      37.0  ...  100000.000
4                      38.0  ...     219.735
5                      44.0  ...     237.341

[6 rows x 28 columns]
选择50%rs和50%gan的所有样本作为bo算法的初始样本,样本个数为:6
------------使用ganrs生成初始样本点------------
Tmax = 137.5
self._queue.empty = True
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (6, 27)
before probe, target = (6,)
标准化前的train_x = 
[[3.60000000e+01 0.00000000e+00 1.00000000e+00 2.65000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.13000000e+02
  8.30000000e+01 3.80000000e+01 9.00000000e+00 1.11362799e+09
  7.70000000e-01 0.00000000e+00 6.50000000e+02 7.90000000e-01
  0.00000000e+00 1.46537408e+09 1.30785007e+09 6.50000000e+01
  1.00000000e+00 6.61000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.41000000e+02 2.00000000e+00]
 [3.40000000e+01 0.00000000e+00 1.00000000e+00 2.67000000e+02
  3.00000000e+00 8.00000000e+00 5.00000000e+00 5.97000000e+02
  5.20000000e+01 9.10000000e+01 9.00000000e+00 1.34316873e+09
  8.00000000e-01 1.00000000e+00 8.46000000e+02 7.10000000e-01
  1.00000000e+00 1.45904587e+09 1.57858860e+09 2.60000000e+01
  1.00000000e+00 7.60000000e+02 1.00000000e+00 1.80000000e+01
  1.00000000e+00 2.59000000e+02 3.00000000e+00]
 [6.10000000e+01 0.00000000e+00 1.00000000e+00 4.12000000e+02
  1.00000000e+00 4.00000000e+00 3.00000000e+00 8.70000000e+02
  5.30000000e+01 4.50000000e+01 4.00000000e+00 1.80017501e+09
  7.30000000e-01 1.00000000e+00 7.39000000e+02 7.00000000e-01
  0.00000000e+00 1.56639849e+09 1.69825670e+09 6.10000000e+01
  1.00000000e+00 9.32000000e+02 0.00000000e+00 4.00000000e+01
  2.00000000e+00 3.13000000e+02 2.00000000e+00]
 [3.70000000e+01 0.00000000e+00 1.00000000e+00 2.60000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.09000000e+02
  8.60000000e+01 4.00000000e+01 9.00000000e+00 1.11983386e+09
  7.59999990e-01 0.00000000e+00 6.52000000e+02 7.90000021e-01
  0.00000000e+00 1.46113024e+09 1.28864832e+09 6.50000000e+01
  1.00000000e+00 6.59000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.36000000e+02 2.00000000e+00]
 [3.80000000e+01 0.00000000e+00 1.00000000e+00 2.68000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.06000000e+02
  8.30000000e+01 4.10000000e+01 9.00000000e+00 1.15481728e+09
  7.50000000e-01 0.00000000e+00 6.56000000e+02 7.79999971e-01
  0.00000000e+00 1.49934080e+09 1.32375002e+09 6.20000000e+01
  1.00000000e+00 6.74000000e+02 0.00000000e+00 2.30000000e+01
  4.00000000e+00 2.39000000e+02 2.00000000e+00]
 [4.40000000e+01 0.00000000e+00 1.00000000e+00 2.86000000e+02
  3.00000000e+00 5.00000000e+00 4.00000000e+00 5.64000000e+02
  8.50000000e+01 4.80000000e+01 8.00000000e+00 1.38411034e+09
  7.50000000e-01 0.00000000e+00 5.61000000e+02 7.69999981e-01
  0.00000000e+00 1.48080205e+09 1.43983322e+09 5.70000000e+01
  1.00000000e+00 6.86000000e+02 0.00000000e+00 2.70000000e+01
  4.00000000e+00 2.46000000e+02 2.00000000e+00]]
标准化后的train_x = 
[[-6.17467805e-01             nan             nan -5.20186168e-01
   7.80868809e-01 -2.67261242e-01  0.00000000e+00 -6.25326937e-01
   6.21915179e-01 -6.78990268e-01  5.47722558e-01 -8.57474842e-01
   4.62910123e-01 -7.07106781e-01 -3.82683313e-01  8.94427330e-01
  -4.47213595e-01 -6.23068688e-01 -8.62428401e-01  6.57559383e-01
              nan -6.96895332e-01 -4.47213595e-01 -4.71929178e-01
   6.86802820e-01 -5.49699465e-01 -4.47213595e-01]
 [-8.35397619e-01             nan             nan -4.83030013e-01
  -1.56173762e-01  2.13808994e+00  1.73205081e+00  2.99012880e-02
  -1.44373167e+00  2.19992847e+00  5.47722558e-01  9.95638139e-02
   1.85164027e+00  1.41421356e+00  1.82337343e+00 -1.25219798e+00
   2.23606798e+00 -7.92235245e-01  9.11322645e-01 -2.19186461e+00
              nan  3.22700301e-01  2.23606798e+00 -1.03824419e+00
  -1.78568733e+00  1.24931697e-01  2.23606798e+00]
 [ 2.10665487e+00             nan             nan  2.21079121e+00
  -2.03025890e+00 -1.06904497e+00 -1.73205081e+00  2.15939302e+00
  -1.37709790e+00 -2.98755718e-01 -2.19089023e+00  2.00498886e+00
  -1.38873008e+00  1.41421356e+00  6.19046536e-01 -1.52052615e+00
  -4.47213595e-01  2.07753075e+00  1.69533150e+00  3.65310768e-01
              nan  2.09411898e+00 -4.47213595e-01  2.07648838e+00
  -9.61523948e-01  2.14882518e+00 -4.47213595e-01]
 [-5.08502899e-01             nan             nan -6.13076555e-01
   7.80868809e-01 -2.67261242e-01  0.00000000e+00 -6.56528281e-01
   8.21816487e-01 -5.70351825e-01  5.47722558e-01 -8.31600330e-01
  -3.67887853e-07 -7.07106781e-01 -3.60172530e-01  8.94427906e-01
  -4.47213595e-01 -7.36515587e-01 -9.88229173e-01  6.57559383e-01
              nan -7.17493223e-01 -4.47213595e-01 -4.71929178e-01
   6.86802820e-01 -7.37097010e-01 -4.47213595e-01]
 [-3.99537992e-01             nan             nan -4.64451936e-01
   7.80868809e-01 -2.67261242e-01  0.00000000e+00 -6.79929289e-01
   6.21915179e-01 -5.16032604e-01  5.47722558e-01 -6.85741739e-01
  -4.62909976e-01 -7.07106781e-01 -3.15150964e-01  6.26098399e-01
  -4.47213595e-01  2.84934702e-01 -7.58259438e-01  4.38372922e-01
              nan -5.63009037e-01 -4.47213595e-01 -3.30350425e-01
   6.86802820e-01 -6.24658483e-01 -4.47213595e-01]
 [ 2.54251449e-01             nan             nan -1.30046542e-01
  -1.56173762e-01 -2.67261242e-01  0.00000000e+00 -2.27509800e-01
   7.55182718e-01 -1.35798054e-01  0.00000000e+00  2.70264233e-01
  -4.62909976e-01 -7.07106781e-01 -1.38441316e+00  3.57770491e-01
  -4.47213595e-01 -2.10645933e-01  2.26286601e-03  7.30621536e-02
              nan -4.39421687e-01 -4.47213595e-01  2.35964589e-01
   6.86802820e-01 -3.62301920e-01 -4.47213595e-01]]
train_y = 
[   -176.341    -185.759    -333.83  -100000.       -219.735    -237.341]
测试：每一列进行标准化，标准化后的train_x = 
[[-6.17467805e-01             nan             nan -5.20186168e-01
   7.80868809e-01 -2.67261242e-01  0.00000000e+00 -6.25326937e-01
   6.21915179e-01 -6.78990268e-01  5.47722558e-01 -8.57474842e-01
   4.62910123e-01 -7.07106781e-01 -3.82683313e-01  8.94427330e-01
  -4.47213595e-01 -6.23068688e-01 -8.62428401e-01  6.57559383e-01
              nan -6.96895332e-01 -4.47213595e-01 -4.71929178e-01
   6.86802820e-01 -5.49699465e-01 -4.47213595e-01]
 [-8.35397619e-01             nan             nan -4.83030013e-01
  -1.56173762e-01  2.13808994e+00  1.73205081e+00  2.99012880e-02
  -1.44373167e+00  2.19992847e+00  5.47722558e-01  9.95638139e-02
   1.85164027e+00  1.41421356e+00  1.82337343e+00 -1.25219798e+00
   2.23606798e+00 -7.92235245e-01  9.11322645e-01 -2.19186461e+00
              nan  3.22700301e-01  2.23606798e+00 -1.03824419e+00
  -1.78568733e+00  1.24931697e-01  2.23606798e+00]
 [ 2.10665487e+00             nan             nan  2.21079121e+00
  -2.03025890e+00 -1.06904497e+00 -1.73205081e+00  2.15939302e+00
  -1.37709790e+00 -2.98755718e-01 -2.19089023e+00  2.00498886e+00
  -1.38873008e+00  1.41421356e+00  6.19046536e-01 -1.52052615e+00
  -4.47213595e-01  2.07753075e+00  1.69533150e+00  3.65310768e-01
              nan  2.09411898e+00 -4.47213595e-01  2.07648838e+00
  -9.61523948e-01  2.14882518e+00 -4.47213595e-01]
 [-5.08502899e-01             nan             nan -6.13076555e-01
   7.80868809e-01 -2.67261242e-01  0.00000000e+00 -6.56528281e-01
   8.21816487e-01 -5.70351825e-01  5.47722558e-01 -8.31600330e-01
  -3.67887855e-07 -7.07106781e-01 -3.60172530e-01  8.94427906e-01
  -4.47213595e-01 -7.36515587e-01 -9.88229173e-01  6.57559383e-01
              nan -7.17493223e-01 -4.47213595e-01 -4.71929178e-01
   6.86802820e-01 -7.37097010e-01 -4.47213595e-01]
 [-3.99537992e-01             nan             nan -4.64451936e-01
   7.80868809e-01 -2.67261242e-01  0.00000000e+00 -6.79929289e-01
   6.21915179e-01 -5.16032604e-01  5.47722558e-01 -6.85741739e-01
  -4.62909976e-01 -7.07106781e-01 -3.15150964e-01  6.26098399e-01
  -4.47213595e-01  2.84934702e-01 -7.58259438e-01  4.38372922e-01
              nan -5.63009037e-01 -4.47213595e-01 -3.30350425e-01
   6.86802820e-01 -6.24658483e-01 -4.47213595e-01]
 [ 2.54251449e-01             nan             nan -1.30046542e-01
  -1.56173762e-01 -2.67261242e-01  0.00000000e+00 -2.27509800e-01
   7.55182718e-01 -1.35798054e-01  0.00000000e+00  2.70264233e-01
  -4.62909976e-01 -7.07106781e-01 -1.38441316e+00  3.57770491e-01
  -4.47213595e-01 -2.10645933e-01  2.26286601e-03  7.30621536e-02
              nan -4.39421687e-01 -4.47213595e-01  2.35964589e-01
   6.86802820e-01 -3.62301920e-01 -4.47213595e-01]]
================= config7 =================
2022年 02月 22日 星期二 14:24:19 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (179614) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (105543) - 没有那个进程
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-6.17467805e-01  0.00000000e+00  0.00000000e+00 -5.20186168e-01
   7.80868809e-01 -2.67261242e-01  0.00000000e+00 -6.25326937e-01
   6.21915179e-01 -6.78990268e-01  5.47722558e-01 -8.57474842e-01
   4.62910123e-01 -7.07106781e-01 -3.82683313e-01  8.94427330e-01
  -4.47213595e-01 -6.23068688e-01 -8.62428401e-01  6.57559383e-01
   0.00000000e+00 -6.96895332e-01 -4.47213595e-01 -4.71929178e-01
   6.86802820e-01 -5.49699465e-01 -4.47213595e-01]
 [-8.35397619e-01  0.00000000e+00  0.00000000e+00 -4.83030013e-01
  -1.56173762e-01  2.13808994e+00  1.73205081e+00  2.99012880e-02
  -1.44373167e+00  2.19992847e+00  5.47722558e-01  9.95638139e-02
   1.85164027e+00  1.41421356e+00  1.82337343e+00 -1.25219798e+00
   2.23606798e+00 -7.92235245e-01  9.11322645e-01 -2.19186461e+00
   0.00000000e+00  3.22700301e-01  2.23606798e+00 -1.03824419e+00
  -1.78568733e+00  1.24931697e-01  2.23606798e+00]
 [ 2.10665487e+00  0.00000000e+00  0.00000000e+00  2.21079121e+00
  -2.03025890e+00 -1.06904497e+00 -1.73205081e+00  2.15939302e+00
  -1.37709790e+00 -2.98755718e-01 -2.19089023e+00  2.00498886e+00
  -1.38873008e+00  1.41421356e+00  6.19046536e-01 -1.52052615e+00
  -4.47213595e-01  2.07753075e+00  1.69533150e+00  3.65310768e-01
   0.00000000e+00  2.09411898e+00 -4.47213595e-01  2.07648838e+00
  -9.61523948e-01  2.14882518e+00 -4.47213595e-01]
 [-5.08502899e-01  0.00000000e+00  0.00000000e+00 -6.13076555e-01
   7.80868809e-01 -2.67261242e-01  0.00000000e+00 -6.56528281e-01
   8.21816487e-01 -5.70351825e-01  5.47722558e-01 -8.31600330e-01
  -3.67887853e-07 -7.07106781e-01 -3.60172530e-01  8.94427906e-01
  -4.47213595e-01 -7.36515587e-01 -9.88229173e-01  6.57559383e-01
   0.00000000e+00 -7.17493223e-01 -4.47213595e-01 -4.71929178e-01
   6.86802820e-01 -7.37097010e-01 -4.47213595e-01]
 [-3.99537992e-01  0.00000000e+00  0.00000000e+00 -4.64451936e-01
   7.80868809e-01 -2.67261242e-01  0.00000000e+00 -6.79929289e-01
   6.21915179e-01 -5.16032604e-01  5.47722558e-01 -6.85741739e-01
  -4.62909976e-01 -7.07106781e-01 -3.15150964e-01  6.26098399e-01
  -4.47213595e-01  2.84934702e-01 -7.58259438e-01  4.38372922e-01
   0.00000000e+00 -5.63009037e-01 -4.47213595e-01 -3.30350425e-01
   6.86802820e-01 -6.24658483e-01 -4.47213595e-01]
 [ 2.54251449e-01  0.00000000e+00  0.00000000e+00 -1.30046542e-01
  -1.56173762e-01 -2.67261242e-01  0.00000000e+00 -2.27509800e-01
   7.55182718e-01 -1.35798054e-01  0.00000000e+00  2.70264233e-01
  -4.62909976e-01 -7.07106781e-01 -1.38441316e+00  3.57770491e-01
  -4.47213595e-01 -2.10645933e-01  2.26286601e-03  7.30621536e-02
   0.00000000e+00 -4.39421687e-01 -4.47213595e-01  2.35964589e-01
   6.86802820e-01 -3.62301920e-01 -4.47213595e-01]]
upper = 
[7960.66868549 7960.66868549 7960.66868549 ... 7960.66868549 7960.66868549
 7960.66868549]
upper.argmax() = 0
all predict_target = 
[16858.83433333 16858.83433333 16858.83433333 ... 16858.83433333
 16858.83433333 16858.83433333]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
 2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
 1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
 7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
 9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
 8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
 4.51257001e+00 1.69669367e+02 2.26332288e+00]
black_box_function中schafferRun(i) 中的i为[34.95483503260153, 0.1862602113776709, 0.34556072704304774, 319.030242269201, 2.616450202010071, 5.676778057613179, 5.740878001587038, 484.7949591176381, 116.29927389353077, 34.62920894700091, 8.022805061070414, 1521819079.827609, 0.7234759313783007, 0.14038693859523377, 202.85592482291588, 0.8202978274702146, 0.9682615757193975, 1410278471.7424064, 1817117571.1452203, 66.06667931020984, 0.8946066635038473, 542.522105684889, 0.03905478323288236, 21.434573426066205, 4.512570013717653, 169.66936676661, 2.2633228750151564]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 34.95483503260153
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.1862602113776709
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.34556072704304774
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 319.030242269201
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.616450202010071
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.676778057613179
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.740878001587038
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 484.7949591176381
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 116.29927389353077
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 34.62920894700091
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.022805061070414
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1521819079.827609
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7234759313783007
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.14038693859523377
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 202.85592482291588
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.8202978274702146
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.9682615757193975
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1410278471.7424064
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1817117571.1452203
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 66.06667931020984
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.8946066635038473
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 542.522105684889
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.03905478323288236
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 21.434573426066205
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.512570013717653
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 169.66936676661
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.2633228750151564
configNum = 7	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 7 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 34.95483503260153, 'spark.broadcast.checksum': 0.1862602113776709, 'spark.broadcast.compress': 0.34556072704304774, 'spark.default.parallelism': 319.030242269201, 'spark.executor.cores': 2.616450202010071, 'spark.executor.instances': 5.676778057613179, 'spark.executor.memory': 5.740878001587038, 'spark.executor.memoryOverhead': 484.7949591176381, 'spark.kryoserializer.buffer': 116.29927389353077, 'spark.kryoserializer.buffer.max': 34.62920894700091, 'spark.locality.wait': 8.022805061070414, 'spark.maxRemoteBlockSizeFetchToMem': 1521819079.827609, 'spark.memory.fraction': 0.7234759313783007, 'spark.memory.offHeap.enabled': 0.14038693859523377, 'spark.memory.offHeap.size': 202.85592482291588, 'spark.memory.storageFraction': 0.8202978274702146, 'spark.rdd.compress': 0.9682615757193975, 'spark.reducer.maxBlocksInFlightPerAddress': 1410278471.7424064, 'spark.reducer.maxReqsInFlight': 1817117571.1452203, 'spark.reducer.maxSizeInFlight': 66.06667931020984, 'spark.scheduler.mode': 0.8946066635038473, 'spark.scheduler.revive.interval': 542.522105684889, 'spark.shuffle.compress': 0.03905478323288236, 'spark.shuffle.file.buffer': 21.434573426066205, 'spark.shuffle.io.numConnectionsPerPeer': 4.512570013717653, 'spark.shuffle.sort.bypassMergeThreshold': 169.66936676661, 'spark.storage.memoryMapThreshold': 2.2633228750151564} target = -192.743
x_probe = {'spark.broadcast.blockSize': 34.95483503260153, 'spark.broadcast.checksum': 0.1862602113776709, 'spark.broadcast.compress': 0.34556072704304774, 'spark.default.parallelism': 319.030242269201, 'spark.executor.cores': 2.616450202010071, 'spark.executor.instances': 5.676778057613179, 'spark.executor.memory': 5.740878001587038, 'spark.executor.memoryOverhead': 484.7949591176381, 'spark.kryoserializer.buffer': 116.29927389353077, 'spark.kryoserializer.buffer.max': 34.62920894700091, 'spark.locality.wait': 8.022805061070414, 'spark.maxRemoteBlockSizeFetchToMem': 1521819079.827609, 'spark.memory.fraction': 0.7234759313783007, 'spark.memory.offHeap.enabled': 0.14038693859523377, 'spark.memory.offHeap.size': 202.85592482291588, 'spark.memory.storageFraction': 0.8202978274702146, 'spark.rdd.compress': 0.9682615757193975, 'spark.reducer.maxBlocksInFlightPerAddress': 1410278471.7424064, 'spark.reducer.maxReqsInFlight': 1817117571.1452203, 'spark.reducer.maxSizeInFlight': 66.06667931020984, 'spark.scheduler.mode': 0.8946066635038473, 'spark.scheduler.revive.interval': 542.522105684889, 'spark.shuffle.compress': 0.03905478323288236, 'spark.shuffle.file.buffer': 21.434573426066205, 'spark.shuffle.io.numConnectionsPerPeer': 4.512570013717653, 'spark.shuffle.sort.bypassMergeThreshold': 169.66936676661, 'spark.storage.memoryMapThreshold': 2.2633228750151564}
target = -192.743
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (7, 27)
before probe, target = (7,)
标准化前的train_x = 
[[3.60000000e+01 0.00000000e+00 1.00000000e+00 2.65000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.13000000e+02
  8.30000000e+01 3.80000000e+01 9.00000000e+00 1.11362799e+09
  7.70000000e-01 0.00000000e+00 6.50000000e+02 7.90000000e-01
  0.00000000e+00 1.46537408e+09 1.30785007e+09 6.50000000e+01
  1.00000000e+00 6.61000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.41000000e+02 2.00000000e+00]
 [3.40000000e+01 0.00000000e+00 1.00000000e+00 2.67000000e+02
  3.00000000e+00 8.00000000e+00 5.00000000e+00 5.97000000e+02
  5.20000000e+01 9.10000000e+01 9.00000000e+00 1.34316873e+09
  8.00000000e-01 1.00000000e+00 8.46000000e+02 7.10000000e-01
  1.00000000e+00 1.45904587e+09 1.57858860e+09 2.60000000e+01
  1.00000000e+00 7.60000000e+02 1.00000000e+00 1.80000000e+01
  1.00000000e+00 2.59000000e+02 3.00000000e+00]
 [6.10000000e+01 0.00000000e+00 1.00000000e+00 4.12000000e+02
  1.00000000e+00 4.00000000e+00 3.00000000e+00 8.70000000e+02
  5.30000000e+01 4.50000000e+01 4.00000000e+00 1.80017501e+09
  7.30000000e-01 1.00000000e+00 7.39000000e+02 7.00000000e-01
  0.00000000e+00 1.56639849e+09 1.69825670e+09 6.10000000e+01
  1.00000000e+00 9.32000000e+02 0.00000000e+00 4.00000000e+01
  2.00000000e+00 3.13000000e+02 2.00000000e+00]
 [3.70000000e+01 0.00000000e+00 1.00000000e+00 2.60000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.09000000e+02
  8.60000000e+01 4.00000000e+01 9.00000000e+00 1.11983386e+09
  7.59999990e-01 0.00000000e+00 6.52000000e+02 7.90000021e-01
  0.00000000e+00 1.46113024e+09 1.28864832e+09 6.50000000e+01
  1.00000000e+00 6.59000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.36000000e+02 2.00000000e+00]
 [3.80000000e+01 0.00000000e+00 1.00000000e+00 2.68000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.06000000e+02
  8.30000000e+01 4.10000000e+01 9.00000000e+00 1.15481728e+09
  7.50000000e-01 0.00000000e+00 6.56000000e+02 7.79999971e-01
  0.00000000e+00 1.49934080e+09 1.32375002e+09 6.20000000e+01
  1.00000000e+00 6.74000000e+02 0.00000000e+00 2.30000000e+01
  4.00000000e+00 2.39000000e+02 2.00000000e+00]
 [4.40000000e+01 0.00000000e+00 1.00000000e+00 2.86000000e+02
  3.00000000e+00 5.00000000e+00 4.00000000e+00 5.64000000e+02
  8.50000000e+01 4.80000000e+01 8.00000000e+00 1.38411034e+09
  7.50000000e-01 0.00000000e+00 5.61000000e+02 7.69999981e-01
  0.00000000e+00 1.48080205e+09 1.43983322e+09 5.70000000e+01
  1.00000000e+00 6.86000000e+02 0.00000000e+00 2.70000000e+01
  4.00000000e+00 2.46000000e+02 2.00000000e+00]
 [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
  2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
  1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
  7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
  9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
  8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
  4.51257001e+00 1.69669367e+02 2.26332288e+00]]
标准化后的train_x = 
[[-5.34062436e-01 -4.08248290e-01  4.08248290e-01 -6.26112240e-01
   9.05948821e-01 -3.29386161e-01 -3.06865985e-01 -5.19137945e-01
   1.59075077e-01 -5.70831459e-01  5.89674027e-01 -1.00645776e+00
   6.41152622e-01 -6.92370002e-01  1.85366969e-01  5.90373409e-01
  -6.32340448e-01 -2.74025382e-01 -9.59235407e-01  5.74953793e-01
   4.08248290e-01 -3.69998080e-01 -4.26651172e-01 -4.15620313e-01
   5.26289012e-01 -6.11652766e-02 -5.20570174e-01]
 [-7.60944898e-01 -4.08248290e-01  4.08248290e-01 -5.86633062e-01
  -8.74861717e-02  2.25473148e+00  9.27029722e-01  1.55015125e-01
  -1.36154993e+00  2.38576229e+00  5.89674027e-01 -2.16785657e-02
   1.90511146e+00  1.57198226e+00  1.23134550e+00 -1.35779881e+00
   1.61653907e+00 -4.17251542e-01  4.40135155e-01 -2.39033128e+00
   4.08248290e-01  5.21789592e-01  2.44765175e+00 -1.01441755e+00
  -1.93660607e+00  4.01169313e-01  2.36387947e+00]
 [ 2.30196834e+00 -4.08248290e-01  4.08248290e-01  2.27560731e+00
  -2.07435616e+00 -1.19075871e+00 -1.54076169e+00  2.34601260e+00
  -1.31249751e+00 -1.80337945e-01 -2.36833290e+00  1.93897677e+00
  -1.04412584e+00  1.57198226e+00  6.60326606e-01 -1.60132034e+00
  -6.32340448e-01  2.01245780e+00  1.05866554e+00  2.70821991e-01
   4.08248290e-01  2.07115807e+00 -4.26651172e-01  2.27896723e+00
  -1.11564104e+00  1.78817308e+00 -5.20570174e-01]
 [-4.20621205e-01 -4.08248290e-01  4.08248290e-01 -7.24810184e-01
   9.05948821e-01 -3.29386161e-01 -3.06865985e-01 -5.51240472e-01
   3.06232336e-01 -4.59261883e-01  5.89674027e-01 -9.79833255e-01
   2.19832606e-01 -6.92370002e-01  1.96040219e-01  5.90373932e-01
  -6.32340448e-01 -3.70076068e-01 -1.05848377e+00  5.74953793e-01
   4.08248290e-01 -3.88013992e-01 -4.26651172e-01 -4.15620313e-01
   5.26289012e-01 -1.89591552e-01 -5.20570174e-01]
 [-3.07179974e-01 -4.08248290e-01  4.08248290e-01 -5.66893474e-01
   9.05948821e-01 -3.29386161e-01 -3.06865985e-01 -5.75317367e-01
   1.59075077e-01 -4.03477096e-01  5.89674027e-01 -8.29746834e-01
  -2.01486607e-01 -6.92370002e-01  2.17386720e-01  3.46851185e-01
  -6.32340448e-01  4.94742635e-01 -8.77053084e-01  3.46854941e-01
   4.08248290e-01 -2.52894648e-01 -4.26651172e-01 -2.65921005e-01
   5.26289012e-01 -1.12535787e-01 -5.20570174e-01]
 [ 3.73467412e-01 -4.08248290e-01  4.08248290e-01 -2.11580876e-01
  -8.74861717e-02 -3.29386161e-01 -3.06865985e-01 -1.09830724e-01
   2.57179916e-01 -1.29835822e-02 -1.92735796e-03  1.53969743e-01
  -2.01486607e-01 -6.92370002e-01 -2.89592668e-01  1.03329890e-01
  -6.32340448e-01  7.51554988e-02 -2.77052015e-01 -3.33098109e-02
   4.08248290e-01 -1.44799173e-01 -4.26651172e-01  3.32876227e-01
   5.26289012e-01  6.72609984e-02 -5.20570174e-01]
 [-6.52627236e-01  2.44948974e+00 -2.44948974e+00  4.40422524e-01
  -4.68517962e-01  2.53571877e-01  1.84119591e+00 -7.45501217e-01
   1.79248503e+00 -7.58870322e-01  1.15641478e-02  7.44769903e-01
  -1.31899764e+00 -3.74484519e-01 -2.20087334e+00  1.32819073e+00
   1.54516317e+00 -1.52100294e+00  1.67302359e+00  6.56056568e-01
  -2.44948974e+00 -1.43724177e+00 -3.14395894e-01 -5.00264280e-01
   9.47091067e-01 -1.89331078e+00  2.38971399e-01]]
train_y = 
[   -176.341    -185.759    -333.83  -100000.       -219.735    -237.341
    -192.743]
测试：每一列进行标准化，标准化后的train_x = 
[[-5.34062436e-01 -4.08248290e-01  4.08248290e-01 -6.26112240e-01
   9.05948821e-01 -3.29386161e-01 -3.06865985e-01 -5.19137945e-01
   1.59075077e-01 -5.70831459e-01  5.89674027e-01 -1.00645776e+00
   6.41152622e-01 -6.92370002e-01  1.85366969e-01  5.90373409e-01
  -6.32340448e-01 -2.74025382e-01 -9.59235407e-01  5.74953793e-01
   4.08248290e-01 -3.69998080e-01 -4.26651172e-01 -4.15620313e-01
   5.26289012e-01 -6.11652766e-02 -5.20570174e-01]
 [-7.60944898e-01 -4.08248290e-01  4.08248290e-01 -5.86633062e-01
  -8.74861717e-02  2.25473148e+00  9.27029722e-01  1.55015125e-01
  -1.36154993e+00  2.38576229e+00  5.89674027e-01 -2.16785657e-02
   1.90511146e+00  1.57198226e+00  1.23134550e+00 -1.35779881e+00
   1.61653907e+00 -4.17251542e-01  4.40135155e-01 -2.39033128e+00
   4.08248290e-01  5.21789592e-01  2.44765175e+00 -1.01441755e+00
  -1.93660607e+00  4.01169313e-01  2.36387947e+00]
 [ 2.30196834e+00 -4.08248290e-01  4.08248290e-01  2.27560731e+00
  -2.07435616e+00 -1.19075871e+00 -1.54076169e+00  2.34601260e+00
  -1.31249751e+00 -1.80337945e-01 -2.36833290e+00  1.93897677e+00
  -1.04412584e+00  1.57198226e+00  6.60326606e-01 -1.60132034e+00
  -6.32340448e-01  2.01245780e+00  1.05866554e+00  2.70821991e-01
   4.08248290e-01  2.07115807e+00 -4.26651172e-01  2.27896723e+00
  -1.11564104e+00  1.78817308e+00 -5.20570174e-01]
 [-4.20621205e-01 -4.08248290e-01  4.08248290e-01 -7.24810184e-01
   9.05948821e-01 -3.29386161e-01 -3.06865985e-01 -5.51240472e-01
   3.06232336e-01 -4.59261883e-01  5.89674027e-01 -9.79833255e-01
   2.19832606e-01 -6.92370002e-01  1.96040219e-01  5.90373932e-01
  -6.32340448e-01 -3.70076068e-01 -1.05848377e+00  5.74953793e-01
   4.08248290e-01 -3.88013992e-01 -4.26651172e-01 -4.15620313e-01
   5.26289012e-01 -1.89591552e-01 -5.20570174e-01]
 [-3.07179974e-01 -4.08248290e-01  4.08248290e-01 -5.66893474e-01
   9.05948821e-01 -3.29386161e-01 -3.06865985e-01 -5.75317367e-01
   1.59075077e-01 -4.03477096e-01  5.89674027e-01 -8.29746834e-01
  -2.01486607e-01 -6.92370002e-01  2.17386720e-01  3.46851185e-01
  -6.32340448e-01  4.94742635e-01 -8.77053084e-01  3.46854941e-01
   4.08248290e-01 -2.52894648e-01 -4.26651172e-01 -2.65921005e-01
   5.26289012e-01 -1.12535787e-01 -5.20570174e-01]
 [ 3.73467412e-01 -4.08248290e-01  4.08248290e-01 -2.11580876e-01
  -8.74861717e-02 -3.29386161e-01 -3.06865985e-01 -1.09830724e-01
   2.57179916e-01 -1.29835822e-02 -1.92735796e-03  1.53969743e-01
  -2.01486607e-01 -6.92370002e-01 -2.89592668e-01  1.03329890e-01
  -6.32340448e-01  7.51554988e-02 -2.77052015e-01 -3.33098109e-02
   4.08248290e-01 -1.44799173e-01 -4.26651172e-01  3.32876227e-01
   5.26289012e-01  6.72609984e-02 -5.20570174e-01]
 [-6.52627236e-01  2.44948974e+00 -2.44948974e+00  4.40422524e-01
  -4.68517962e-01  2.53571877e-01  1.84119591e+00 -7.45501217e-01
   1.79248503e+00 -7.58870322e-01  1.15641478e-02  7.44769903e-01
  -1.31899764e+00 -3.74484519e-01 -2.20087334e+00  1.32819073e+00
   1.54516317e+00 -1.52100294e+00  1.67302359e+00  6.56056568e-01
  -2.44948974e+00 -1.43724177e+00 -3.14395894e-01 -5.00264280e-01
   9.47091067e-01 -1.89331078e+00  2.38971399e-01]]
================= config8 =================
2022年 02月 22日 星期二 14:27:40 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (195379) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (134605) - 没有那个进程
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-5.34062436e-01 -4.08248290e-01  4.08248290e-01 -6.26112240e-01
   9.05948821e-01 -3.29386161e-01 -3.06865985e-01 -5.19137945e-01
   1.59075077e-01 -5.70831459e-01  5.89674027e-01 -1.00645776e+00
   6.41152622e-01 -6.92370002e-01  1.85366969e-01  5.90373409e-01
  -6.32340448e-01 -2.74025382e-01 -9.59235407e-01  5.74953793e-01
   4.08248290e-01 -3.69998080e-01 -4.26651172e-01 -4.15620313e-01
   5.26289012e-01 -6.11652766e-02 -5.20570174e-01]
 [-7.60944898e-01 -4.08248290e-01  4.08248290e-01 -5.86633062e-01
  -8.74861717e-02  2.25473148e+00  9.27029722e-01  1.55015125e-01
  -1.36154993e+00  2.38576229e+00  5.89674027e-01 -2.16785657e-02
   1.90511146e+00  1.57198226e+00  1.23134550e+00 -1.35779881e+00
   1.61653907e+00 -4.17251542e-01  4.40135155e-01 -2.39033128e+00
   4.08248290e-01  5.21789592e-01  2.44765175e+00 -1.01441755e+00
  -1.93660607e+00  4.01169313e-01  2.36387947e+00]
 [ 2.30196834e+00 -4.08248290e-01  4.08248290e-01  2.27560731e+00
  -2.07435616e+00 -1.19075871e+00 -1.54076169e+00  2.34601260e+00
  -1.31249751e+00 -1.80337945e-01 -2.36833290e+00  1.93897677e+00
  -1.04412584e+00  1.57198226e+00  6.60326606e-01 -1.60132034e+00
  -6.32340448e-01  2.01245780e+00  1.05866554e+00  2.70821991e-01
   4.08248290e-01  2.07115807e+00 -4.26651172e-01  2.27896723e+00
  -1.11564104e+00  1.78817308e+00 -5.20570174e-01]
 [-4.20621205e-01 -4.08248290e-01  4.08248290e-01 -7.24810184e-01
   9.05948821e-01 -3.29386161e-01 -3.06865985e-01 -5.51240472e-01
   3.06232336e-01 -4.59261883e-01  5.89674027e-01 -9.79833255e-01
   2.19832606e-01 -6.92370002e-01  1.96040219e-01  5.90373932e-01
  -6.32340448e-01 -3.70076068e-01 -1.05848377e+00  5.74953793e-01
   4.08248290e-01 -3.88013992e-01 -4.26651172e-01 -4.15620313e-01
   5.26289012e-01 -1.89591552e-01 -5.20570174e-01]
 [-3.07179974e-01 -4.08248290e-01  4.08248290e-01 -5.66893474e-01
   9.05948821e-01 -3.29386161e-01 -3.06865985e-01 -5.75317367e-01
   1.59075077e-01 -4.03477096e-01  5.89674027e-01 -8.29746834e-01
  -2.01486607e-01 -6.92370002e-01  2.17386720e-01  3.46851185e-01
  -6.32340448e-01  4.94742635e-01 -8.77053084e-01  3.46854941e-01
   4.08248290e-01 -2.52894648e-01 -4.26651172e-01 -2.65921005e-01
   5.26289012e-01 -1.12535787e-01 -5.20570174e-01]
 [ 3.73467412e-01 -4.08248290e-01  4.08248290e-01 -2.11580876e-01
  -8.74861717e-02 -3.29386161e-01 -3.06865985e-01 -1.09830724e-01
   2.57179916e-01 -1.29835822e-02 -1.92735796e-03  1.53969743e-01
  -2.01486607e-01 -6.92370002e-01 -2.89592668e-01  1.03329890e-01
  -6.32340448e-01  7.51554988e-02 -2.77052015e-01 -3.33098109e-02
   4.08248290e-01 -1.44799173e-01 -4.26651172e-01  3.32876227e-01
   5.26289012e-01  6.72609984e-02 -5.20570174e-01]
 [-6.52627236e-01  2.44948974e+00 -2.44948974e+00  4.40422524e-01
  -4.68517962e-01  2.53571877e-01  1.84119591e+00 -7.45501217e-01
   1.79248503e+00 -7.58870322e-01  1.15641478e-02  7.44769903e-01
  -1.31899764e+00 -3.74484519e-01 -2.20087334e+00  1.32819073e+00
   1.54516317e+00 -1.52100294e+00  1.67302359e+00  6.56056568e-01
  -2.44948974e+00 -1.43724177e+00 -3.14395894e-01 -5.00264280e-01
   9.47091067e-01 -1.89331078e+00  2.38971399e-01]]
upper = 
[7930.44525705 7930.44525705 7930.44525705 ... 7930.44525705 7930.44525705
 7930.44525705]
upper.argmax() = 0
all predict_target = 
[14477.96414286 14477.96414286 14477.96414286 ... 14477.96414286
 14477.96414286 14477.96414286]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
 3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
 4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
 6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
 3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
 4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
 4.42164767e+00 2.33945444e+02 3.31393482e+00]
black_box_function中schafferRun(i) 中的i为[36.61969812007611, 0.07364737247333608, 0.5584392401983372, 445.5545120170226, 3.9175448574934912, 5.117223993771585, 6.470380899387955, 464.70773323136996, 41.99019054568298, 61.91462898379683, 6.519626467122063, 2021013775.6453583, 0.6571814037404378, 0.11154263017507804, 788.905781564202, 0.595949187598856, 0.31619690734200423, 1249572407.3437846, 2018422509.4722152, 33.2523732448466, 0.4383135336681899, 748.5078024204117, 0.9892728972986514, 20.703578148097737, 4.421647669194604, 233.9454438300806, 3.3139348234884003]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 36.61969812007611
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07364737247333608
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.5584392401983372
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 445.5545120170226
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9175448574934912
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.117223993771585
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 6.470380899387955
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 464.70773323136996
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 41.99019054568298
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 61.91462898379683
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 6.519626467122063
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2021013775.6453583
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6571814037404378
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.11154263017507804
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 788.905781564202
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.595949187598856
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.31619690734200423
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1249572407.3437846
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 2018422509.4722152
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 33.2523732448466
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.4383135336681899
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 748.5078024204117
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9892728972986514
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 20.703578148097737
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.421647669194604
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 233.9454438300806
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.3139348234884003
configNum = 8	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 8 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 36.61969812007611, 'spark.broadcast.checksum': 0.07364737247333608, 'spark.broadcast.compress': 0.5584392401983372, 'spark.default.parallelism': 445.5545120170226, 'spark.executor.cores': 3.9175448574934912, 'spark.executor.instances': 5.117223993771585, 'spark.executor.memory': 6.470380899387955, 'spark.executor.memoryOverhead': 464.70773323136996, 'spark.kryoserializer.buffer': 41.99019054568298, 'spark.kryoserializer.buffer.max': 61.91462898379683, 'spark.locality.wait': 6.519626467122063, 'spark.maxRemoteBlockSizeFetchToMem': 2021013775.6453583, 'spark.memory.fraction': 0.6571814037404378, 'spark.memory.offHeap.enabled': 0.11154263017507804, 'spark.memory.offHeap.size': 788.905781564202, 'spark.memory.storageFraction': 0.595949187598856, 'spark.rdd.compress': 0.31619690734200423, 'spark.reducer.maxBlocksInFlightPerAddress': 1249572407.3437846, 'spark.reducer.maxReqsInFlight': 2018422509.4722152, 'spark.reducer.maxSizeInFlight': 33.2523732448466, 'spark.scheduler.mode': 0.4383135336681899, 'spark.scheduler.revive.interval': 748.5078024204117, 'spark.shuffle.compress': 0.9892728972986514, 'spark.shuffle.file.buffer': 20.703578148097737, 'spark.shuffle.io.numConnectionsPerPeer': 4.421647669194604, 'spark.shuffle.sort.bypassMergeThreshold': 233.9454438300806, 'spark.storage.memoryMapThreshold': 3.3139348234884003} target = -222.119
x_probe = {'spark.broadcast.blockSize': 36.61969812007611, 'spark.broadcast.checksum': 0.07364737247333608, 'spark.broadcast.compress': 0.5584392401983372, 'spark.default.parallelism': 445.5545120170226, 'spark.executor.cores': 3.9175448574934912, 'spark.executor.instances': 5.117223993771585, 'spark.executor.memory': 6.470380899387955, 'spark.executor.memoryOverhead': 464.70773323136996, 'spark.kryoserializer.buffer': 41.99019054568298, 'spark.kryoserializer.buffer.max': 61.91462898379683, 'spark.locality.wait': 6.519626467122063, 'spark.maxRemoteBlockSizeFetchToMem': 2021013775.6453583, 'spark.memory.fraction': 0.6571814037404378, 'spark.memory.offHeap.enabled': 0.11154263017507804, 'spark.memory.offHeap.size': 788.905781564202, 'spark.memory.storageFraction': 0.595949187598856, 'spark.rdd.compress': 0.31619690734200423, 'spark.reducer.maxBlocksInFlightPerAddress': 1249572407.3437846, 'spark.reducer.maxReqsInFlight': 2018422509.4722152, 'spark.reducer.maxSizeInFlight': 33.2523732448466, 'spark.scheduler.mode': 0.4383135336681899, 'spark.scheduler.revive.interval': 748.5078024204117, 'spark.shuffle.compress': 0.9892728972986514, 'spark.shuffle.file.buffer': 20.703578148097737, 'spark.shuffle.io.numConnectionsPerPeer': 4.421647669194604, 'spark.shuffle.sort.bypassMergeThreshold': 233.9454438300806, 'spark.storage.memoryMapThreshold': 3.3139348234884003}
target = -222.119
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (8, 27)
before probe, target = (8,)
标准化前的train_x = 
[[3.60000000e+01 0.00000000e+00 1.00000000e+00 2.65000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.13000000e+02
  8.30000000e+01 3.80000000e+01 9.00000000e+00 1.11362799e+09
  7.70000000e-01 0.00000000e+00 6.50000000e+02 7.90000000e-01
  0.00000000e+00 1.46537408e+09 1.30785007e+09 6.50000000e+01
  1.00000000e+00 6.61000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.41000000e+02 2.00000000e+00]
 [3.40000000e+01 0.00000000e+00 1.00000000e+00 2.67000000e+02
  3.00000000e+00 8.00000000e+00 5.00000000e+00 5.97000000e+02
  5.20000000e+01 9.10000000e+01 9.00000000e+00 1.34316873e+09
  8.00000000e-01 1.00000000e+00 8.46000000e+02 7.10000000e-01
  1.00000000e+00 1.45904587e+09 1.57858860e+09 2.60000000e+01
  1.00000000e+00 7.60000000e+02 1.00000000e+00 1.80000000e+01
  1.00000000e+00 2.59000000e+02 3.00000000e+00]
 [6.10000000e+01 0.00000000e+00 1.00000000e+00 4.12000000e+02
  1.00000000e+00 4.00000000e+00 3.00000000e+00 8.70000000e+02
  5.30000000e+01 4.50000000e+01 4.00000000e+00 1.80017501e+09
  7.30000000e-01 1.00000000e+00 7.39000000e+02 7.00000000e-01
  0.00000000e+00 1.56639849e+09 1.69825670e+09 6.10000000e+01
  1.00000000e+00 9.32000000e+02 0.00000000e+00 4.00000000e+01
  2.00000000e+00 3.13000000e+02 2.00000000e+00]
 [3.70000000e+01 0.00000000e+00 1.00000000e+00 2.60000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.09000000e+02
  8.60000000e+01 4.00000000e+01 9.00000000e+00 1.11983386e+09
  7.59999990e-01 0.00000000e+00 6.52000000e+02 7.90000021e-01
  0.00000000e+00 1.46113024e+09 1.28864832e+09 6.50000000e+01
  1.00000000e+00 6.59000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.36000000e+02 2.00000000e+00]
 [3.80000000e+01 0.00000000e+00 1.00000000e+00 2.68000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.06000000e+02
  8.30000000e+01 4.10000000e+01 9.00000000e+00 1.15481728e+09
  7.50000000e-01 0.00000000e+00 6.56000000e+02 7.79999971e-01
  0.00000000e+00 1.49934080e+09 1.32375002e+09 6.20000000e+01
  1.00000000e+00 6.74000000e+02 0.00000000e+00 2.30000000e+01
  4.00000000e+00 2.39000000e+02 2.00000000e+00]
 [4.40000000e+01 0.00000000e+00 1.00000000e+00 2.86000000e+02
  3.00000000e+00 5.00000000e+00 4.00000000e+00 5.64000000e+02
  8.50000000e+01 4.80000000e+01 8.00000000e+00 1.38411034e+09
  7.50000000e-01 0.00000000e+00 5.61000000e+02 7.69999981e-01
  0.00000000e+00 1.48080205e+09 1.43983322e+09 5.70000000e+01
  1.00000000e+00 6.86000000e+02 0.00000000e+00 2.70000000e+01
  4.00000000e+00 2.46000000e+02 2.00000000e+00]
 [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
  2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
  1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
  7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
  9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
  8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
  4.51257001e+00 1.69669367e+02 2.26332288e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]]
标准化后的train_x = 
[[-0.50225711 -0.51633394  0.56335528 -0.73651111  0.82412062 -0.32056212
  -0.49861725 -0.41310923  0.34935125 -0.68764075  0.7140855  -1.02301048
   0.69984731 -0.67331316  0.07064155  0.66828304 -0.68625763  0.19056555
  -1.00165359  0.72133487  0.453073   -0.44658141 -0.59229449 -0.35469599
   0.42622494 -0.03288077 -0.64994764]
 [-0.74160858 -0.51633394  0.56335528 -0.70723982 -0.19551438  2.43301166
   0.44859072  0.2731888  -1.01053545  2.3639394   0.7140855  -0.28617988
   1.46560506  1.71863787  1.13326402 -0.50751793  1.71696444  0.11694869
   0.07787372 -1.93636425  0.453073    0.49652331  1.74379547 -0.98046383
  -2.08974808  0.45957109  1.36753828]
 [ 2.48963623 -0.51633394  0.56335528  1.4149292  -2.23478438 -1.23842004
  -1.44582522  2.50365741 -0.96666813 -0.28460187 -2.30607979  1.18081987
  -0.32116303  1.71863787  0.5531589  -0.65449305 -0.68625763  1.36579585
   0.55503142  0.44875035  0.453073    2.13504869 -0.59229449  2.46125926
  -1.2510904   1.93692667 -0.64994764]
 [-0.38258138 -0.51633394  0.56335528 -0.80968936  0.82412062 -0.32056212
  -0.49861725 -0.44579009  0.48095319 -0.57248679  0.7140855  -1.00308951
   0.44459448 -0.67331316  0.08148464  0.66828335 -0.68625763  0.14119642
  -1.07821753  0.72133487  0.453073   -0.46563403 -0.59229449 -0.35469599
   0.42622494 -0.16967296 -0.64994764]
 [-0.26290564 -0.51633394  0.56335528 -0.69260417  0.82412062 -0.32056212
  -0.49861725 -0.47030073  0.34935125 -0.5149098   0.7140855  -0.89079199
   0.18934214 -0.67331316  0.10317081  0.52130749 -0.68625763  0.58570489
  -0.93825504  0.51689648  0.453073   -0.32273938 -0.59229449 -0.19825404
   0.42622494 -0.08759765 -0.64994764]
 [ 0.45514876 -0.51633394  0.56335528 -0.4291625  -0.19551438 -0.32056212
  -0.49861725  0.00357172  0.43708587 -0.11187091  0.11005244 -0.15475646
   0.18934214 -0.67331316 -0.41187579  0.37433251 -0.68625763  0.37004115
  -0.47539156  0.17616582  0.453073   -0.20842365 -0.59229449  0.4275138
   0.42622494  0.10391141 -0.64994764]
 [-0.62733799  2.44387116 -2.12775283  0.05425651 -0.58659518  0.30062399
   1.15035627 -0.64355047  1.81010091 -0.88172074  0.12382745  0.2872915
  -0.48769157 -0.33751447 -2.35356937  1.11358572  1.64068995 -0.45036888
   1.02897042  0.79402494 -0.11958262 -1.5752386  -0.501059   -0.44315244
   0.85609572 -1.98437538 -0.11869745]
 [-0.42809428  0.6541325  -1.25237887  1.90602124  0.74004647 -0.21296714
   1.84134723 -0.80766742 -1.44963889  0.68929146 -0.78414211  1.88971695
  -2.17987652 -0.40650865  0.82372525 -2.18378113  0.07363376 -2.31988367
   1.83164218 -1.44214307 -2.59885535  0.38704507  1.71873599 -0.55751077
   0.779843   -0.2258824   2.00089737]]
train_y = 
[   -176.341    -185.759    -333.83  -100000.       -219.735    -237.341
    -192.743    -222.119]
测试：每一列进行标准化，标准化后的train_x = 
[[-0.50225711 -0.51633394  0.56335528 -0.73651111  0.82412062 -0.32056212
  -0.49861725 -0.41310923  0.34935125 -0.68764075  0.7140855  -1.02301048
   0.69984731 -0.67331316  0.07064155  0.66828304 -0.68625763  0.19056555
  -1.00165359  0.72133487  0.453073   -0.44658141 -0.59229449 -0.35469599
   0.42622494 -0.03288077 -0.64994764]
 [-0.74160858 -0.51633394  0.56335528 -0.70723982 -0.19551438  2.43301166
   0.44859072  0.2731888  -1.01053545  2.3639394   0.7140855  -0.28617988
   1.46560506  1.71863787  1.13326402 -0.50751793  1.71696444  0.11694869
   0.07787372 -1.93636425  0.453073    0.49652331  1.74379547 -0.98046383
  -2.08974808  0.45957109  1.36753828]
 [ 2.48963623 -0.51633394  0.56335528  1.4149292  -2.23478438 -1.23842004
  -1.44582522  2.50365741 -0.96666813 -0.28460187 -2.30607979  1.18081987
  -0.32116303  1.71863787  0.5531589  -0.65449305 -0.68625763  1.36579585
   0.55503142  0.44875035  0.453073    2.13504869 -0.59229449  2.46125926
  -1.2510904   1.93692667 -0.64994764]
 [-0.38258138 -0.51633394  0.56335528 -0.80968936  0.82412062 -0.32056212
  -0.49861725 -0.44579009  0.48095319 -0.57248679  0.7140855  -1.00308951
   0.44459448 -0.67331316  0.08148464  0.66828335 -0.68625763  0.14119642
  -1.07821753  0.72133487  0.453073   -0.46563403 -0.59229449 -0.35469599
   0.42622494 -0.16967296 -0.64994764]
 [-0.26290564 -0.51633394  0.56335528 -0.69260417  0.82412062 -0.32056212
  -0.49861725 -0.47030073  0.34935125 -0.5149098   0.7140855  -0.89079199
   0.18934214 -0.67331316  0.10317081  0.52130749 -0.68625763  0.58570489
  -0.93825504  0.51689648  0.453073   -0.32273938 -0.59229449 -0.19825404
   0.42622494 -0.08759765 -0.64994764]
 [ 0.45514876 -0.51633394  0.56335528 -0.4291625  -0.19551438 -0.32056212
  -0.49861725  0.00357172  0.43708587 -0.11187091  0.11005244 -0.15475646
   0.18934214 -0.67331316 -0.41187579  0.37433251 -0.68625763  0.37004115
  -0.47539156  0.17616582  0.453073   -0.20842365 -0.59229449  0.4275138
   0.42622494  0.10391141 -0.64994764]
 [-0.62733799  2.44387116 -2.12775283  0.05425651 -0.58659518  0.30062399
   1.15035627 -0.64355047  1.81010091 -0.88172074  0.12382745  0.2872915
  -0.48769157 -0.33751447 -2.35356937  1.11358572  1.64068995 -0.45036888
   1.02897042  0.79402494 -0.11958262 -1.5752386  -0.501059   -0.44315244
   0.85609572 -1.98437538 -0.11869745]
 [-0.42809428  0.6541325  -1.25237887  1.90602124  0.74004647 -0.21296714
   1.84134723 -0.80766742 -1.44963889  0.68929146 -0.78414211  1.88971695
  -2.17987652 -0.40650865  0.82372525 -2.18378113  0.07363376 -2.31988367
   1.83164218 -1.44214307 -2.59885535  0.38704507  1.71873599 -0.55751077
   0.779843   -0.2258824   2.00089737]]
================= config9 =================
2022年 02月 22日 星期二 14:31:31 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (217605) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (169029) - 没有那个进程
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-0.50225711 -0.51633394  0.56335528 -0.73651111  0.82412062 -0.32056212
  -0.49861725 -0.41310923  0.34935125 -0.68764075  0.7140855  -1.02301048
   0.69984731 -0.67331316  0.07064155  0.66828304 -0.68625763  0.19056555
  -1.00165359  0.72133487  0.453073   -0.44658141 -0.59229449 -0.35469599
   0.42622494 -0.03288077 -0.64994764]
 [-0.74160858 -0.51633394  0.56335528 -0.70723982 -0.19551438  2.43301166
   0.44859072  0.2731888  -1.01053545  2.3639394   0.7140855  -0.28617988
   1.46560506  1.71863787  1.13326402 -0.50751793  1.71696444  0.11694869
   0.07787372 -1.93636425  0.453073    0.49652331  1.74379547 -0.98046383
  -2.08974808  0.45957109  1.36753828]
 [ 2.48963623 -0.51633394  0.56335528  1.4149292  -2.23478438 -1.23842004
  -1.44582522  2.50365741 -0.96666813 -0.28460187 -2.30607979  1.18081987
  -0.32116303  1.71863787  0.5531589  -0.65449305 -0.68625763  1.36579585
   0.55503142  0.44875035  0.453073    2.13504869 -0.59229449  2.46125926
  -1.2510904   1.93692667 -0.64994764]
 [-0.38258138 -0.51633394  0.56335528 -0.80968936  0.82412062 -0.32056212
  -0.49861725 -0.44579009  0.48095319 -0.57248679  0.7140855  -1.00308951
   0.44459448 -0.67331316  0.08148464  0.66828335 -0.68625763  0.14119642
  -1.07821753  0.72133487  0.453073   -0.46563403 -0.59229449 -0.35469599
   0.42622494 -0.16967296 -0.64994764]
 [-0.26290564 -0.51633394  0.56335528 -0.69260417  0.82412062 -0.32056212
  -0.49861725 -0.47030073  0.34935125 -0.5149098   0.7140855  -0.89079199
   0.18934214 -0.67331316  0.10317081  0.52130749 -0.68625763  0.58570489
  -0.93825504  0.51689648  0.453073   -0.32273938 -0.59229449 -0.19825404
   0.42622494 -0.08759765 -0.64994764]
 [ 0.45514876 -0.51633394  0.56335528 -0.4291625  -0.19551438 -0.32056212
  -0.49861725  0.00357172  0.43708587 -0.11187091  0.11005244 -0.15475646
   0.18934214 -0.67331316 -0.41187579  0.37433251 -0.68625763  0.37004115
  -0.47539156  0.17616582  0.453073   -0.20842365 -0.59229449  0.4275138
   0.42622494  0.10391141 -0.64994764]
 [-0.62733799  2.44387116 -2.12775283  0.05425651 -0.58659518  0.30062399
   1.15035627 -0.64355047  1.81010091 -0.88172074  0.12382745  0.2872915
  -0.48769157 -0.33751447 -2.35356937  1.11358572  1.64068995 -0.45036888
   1.02897042  0.79402494 -0.11958262 -1.5752386  -0.501059   -0.44315244
   0.85609572 -1.98437538 -0.11869745]
 [-0.42809428  0.6541325  -1.25237887  1.90602124  0.74004647 -0.21296714
   1.84134723 -0.80766742 -1.44963889  0.68929146 -0.78414211  1.88971695
  -2.17987652 -0.40650865  0.82372525 -2.18378113  0.07363376 -2.31988367
   1.83164218 -1.44214307 -2.59885535  0.38704507  1.71873599 -0.55751077
   0.779843   -0.2258824   2.00089737]]
upper = 
[7840.70924776 7840.70924776 7840.70924776 ... 7840.70924776 7840.70924776
 7840.70924776]
upper.argmax() = 0
all predict_target = 
[12695.9835 12695.9835 12695.9835 ... 12695.9835 12695.9835 12695.9835]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
 2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
 9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
 8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
 2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
 9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
 3.92329382e+00 3.18911325e+02 1.65086553e+00]
black_box_function中schafferRun(i) 中的i为[55.745259772165355, 0.44313404559907554, 0.02137903608233227, 440.8164438727832, 2.0962713197806715, 4.7280497967472135, 4.858385383285416, 639.7028860084706, 92.66900730894112, 127.55177738996515, 8.01909477576675, 1661193861.8035913, 0.8627173196467961, 0.5331136009566859, 536.3630124572771, 0.6331993788741832, 0.2618574637033285, 1226495937.3311806, 1110689413.5398045, 61.16073986064795, 0.9733574694681935, 722.6966542557261, 0.538013192946581, 20.59957629896343, 3.923293815480439, 318.91132488380333, 1.6508655253289888]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 55.745259772165355
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.44313404559907554
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.02137903608233227
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 440.8164438727832
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.0962713197806715
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.7280497967472135
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.858385383285416
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 639.7028860084706
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 92.66900730894112
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 127.55177738996515
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.01909477576675
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1661193861.8035913
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8627173196467961
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.5331136009566859
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 536.3630124572771
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6331993788741832
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.2618574637033285
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1226495937.3311806
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1110689413.5398045
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 61.16073986064795
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9733574694681935
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 722.6966542557261
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.538013192946581
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 20.59957629896343
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.923293815480439
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 318.91132488380333
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 1.6508655253289888
configNum = 9	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 9 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 55.745259772165355, 'spark.broadcast.checksum': 0.44313404559907554, 'spark.broadcast.compress': 0.02137903608233227, 'spark.default.parallelism': 440.8164438727832, 'spark.executor.cores': 2.0962713197806715, 'spark.executor.instances': 4.7280497967472135, 'spark.executor.memory': 4.858385383285416, 'spark.executor.memoryOverhead': 639.7028860084706, 'spark.kryoserializer.buffer': 92.66900730894112, 'spark.kryoserializer.buffer.max': 127.55177738996515, 'spark.locality.wait': 8.01909477576675, 'spark.maxRemoteBlockSizeFetchToMem': 1661193861.8035913, 'spark.memory.fraction': 0.8627173196467961, 'spark.memory.offHeap.enabled': 0.5331136009566859, 'spark.memory.offHeap.size': 536.3630124572771, 'spark.memory.storageFraction': 0.6331993788741832, 'spark.rdd.compress': 0.2618574637033285, 'spark.reducer.maxBlocksInFlightPerAddress': 1226495937.3311806, 'spark.reducer.maxReqsInFlight': 1110689413.5398045, 'spark.reducer.maxSizeInFlight': 61.16073986064795, 'spark.scheduler.mode': 0.9733574694681935, 'spark.scheduler.revive.interval': 722.6966542557261, 'spark.shuffle.compress': 0.538013192946581, 'spark.shuffle.file.buffer': 20.59957629896343, 'spark.shuffle.io.numConnectionsPerPeer': 3.923293815480439, 'spark.shuffle.sort.bypassMergeThreshold': 318.91132488380333, 'spark.storage.memoryMapThreshold': 1.6508655253289888} target = -307.435
x_probe = {'spark.broadcast.blockSize': 55.745259772165355, 'spark.broadcast.checksum': 0.44313404559907554, 'spark.broadcast.compress': 0.02137903608233227, 'spark.default.parallelism': 440.8164438727832, 'spark.executor.cores': 2.0962713197806715, 'spark.executor.instances': 4.7280497967472135, 'spark.executor.memory': 4.858385383285416, 'spark.executor.memoryOverhead': 639.7028860084706, 'spark.kryoserializer.buffer': 92.66900730894112, 'spark.kryoserializer.buffer.max': 127.55177738996515, 'spark.locality.wait': 8.01909477576675, 'spark.maxRemoteBlockSizeFetchToMem': 1661193861.8035913, 'spark.memory.fraction': 0.8627173196467961, 'spark.memory.offHeap.enabled': 0.5331136009566859, 'spark.memory.offHeap.size': 536.3630124572771, 'spark.memory.storageFraction': 0.6331993788741832, 'spark.rdd.compress': 0.2618574637033285, 'spark.reducer.maxBlocksInFlightPerAddress': 1226495937.3311806, 'spark.reducer.maxReqsInFlight': 1110689413.5398045, 'spark.reducer.maxSizeInFlight': 61.16073986064795, 'spark.scheduler.mode': 0.9733574694681935, 'spark.scheduler.revive.interval': 722.6966542557261, 'spark.shuffle.compress': 0.538013192946581, 'spark.shuffle.file.buffer': 20.59957629896343, 'spark.shuffle.io.numConnectionsPerPeer': 3.923293815480439, 'spark.shuffle.sort.bypassMergeThreshold': 318.91132488380333, 'spark.storage.memoryMapThreshold': 1.6508655253289888}
target = -307.435
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (9, 27)
before probe, target = (9,)
标准化前的train_x = 
[[3.60000000e+01 0.00000000e+00 1.00000000e+00 2.65000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.13000000e+02
  8.30000000e+01 3.80000000e+01 9.00000000e+00 1.11362799e+09
  7.70000000e-01 0.00000000e+00 6.50000000e+02 7.90000000e-01
  0.00000000e+00 1.46537408e+09 1.30785007e+09 6.50000000e+01
  1.00000000e+00 6.61000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.41000000e+02 2.00000000e+00]
 [3.40000000e+01 0.00000000e+00 1.00000000e+00 2.67000000e+02
  3.00000000e+00 8.00000000e+00 5.00000000e+00 5.97000000e+02
  5.20000000e+01 9.10000000e+01 9.00000000e+00 1.34316873e+09
  8.00000000e-01 1.00000000e+00 8.46000000e+02 7.10000000e-01
  1.00000000e+00 1.45904587e+09 1.57858860e+09 2.60000000e+01
  1.00000000e+00 7.60000000e+02 1.00000000e+00 1.80000000e+01
  1.00000000e+00 2.59000000e+02 3.00000000e+00]
 [6.10000000e+01 0.00000000e+00 1.00000000e+00 4.12000000e+02
  1.00000000e+00 4.00000000e+00 3.00000000e+00 8.70000000e+02
  5.30000000e+01 4.50000000e+01 4.00000000e+00 1.80017501e+09
  7.30000000e-01 1.00000000e+00 7.39000000e+02 7.00000000e-01
  0.00000000e+00 1.56639849e+09 1.69825670e+09 6.10000000e+01
  1.00000000e+00 9.32000000e+02 0.00000000e+00 4.00000000e+01
  2.00000000e+00 3.13000000e+02 2.00000000e+00]
 [3.70000000e+01 0.00000000e+00 1.00000000e+00 2.60000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.09000000e+02
  8.60000000e+01 4.00000000e+01 9.00000000e+00 1.11983386e+09
  7.59999990e-01 0.00000000e+00 6.52000000e+02 7.90000021e-01
  0.00000000e+00 1.46113024e+09 1.28864832e+09 6.50000000e+01
  1.00000000e+00 6.59000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.36000000e+02 2.00000000e+00]
 [3.80000000e+01 0.00000000e+00 1.00000000e+00 2.68000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.06000000e+02
  8.30000000e+01 4.10000000e+01 9.00000000e+00 1.15481728e+09
  7.50000000e-01 0.00000000e+00 6.56000000e+02 7.79999971e-01
  0.00000000e+00 1.49934080e+09 1.32375002e+09 6.20000000e+01
  1.00000000e+00 6.74000000e+02 0.00000000e+00 2.30000000e+01
  4.00000000e+00 2.39000000e+02 2.00000000e+00]
 [4.40000000e+01 0.00000000e+00 1.00000000e+00 2.86000000e+02
  3.00000000e+00 5.00000000e+00 4.00000000e+00 5.64000000e+02
  8.50000000e+01 4.80000000e+01 8.00000000e+00 1.38411034e+09
  7.50000000e-01 0.00000000e+00 5.61000000e+02 7.69999981e-01
  0.00000000e+00 1.48080205e+09 1.43983322e+09 5.70000000e+01
  1.00000000e+00 6.86000000e+02 0.00000000e+00 2.70000000e+01
  4.00000000e+00 2.46000000e+02 2.00000000e+00]
 [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
  2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
  1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
  7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
  9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
  8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
  4.51257001e+00 1.69669367e+02 2.26332288e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]]
标准化后的train_x = 
[[-0.63906863 -0.54997451  0.65853888 -0.85084798  0.94253826 -0.26801418
  -0.56283859 -0.50082737  0.27053676 -0.70007716  0.74246344 -1.13802127
   0.26637773 -0.76974913  0.13696277  0.79157129 -0.72104387  0.38399595
  -0.73165298  0.70271224  0.44189428 -0.48976512 -0.68981942 -0.30309724
   0.40648323 -0.23123915 -0.4828437 ]
 [-0.85480906 -0.54997451  0.65853888 -0.82436936 -0.070976    2.60123012
   0.43635327  0.21193904 -1.12616239  1.1040542   0.74246344 -0.37892595
   0.83436815  1.71773194  1.24586471 -0.30328483  1.8274988   0.32487625
   0.25194658 -2.08367972  0.44189428  0.50944298  1.72933496 -0.95500774
  -2.24290187  0.19675578  1.46749425]
 [ 2.0576868  -0.54997451  0.65853888  1.09533034 -2.0980045  -1.22442895
  -1.56203044  2.52842988 -1.08110758 -0.46179566 -2.45827793  1.13240196
  -0.49094282  1.71773194  0.64049477 -0.44014184 -0.72104387  1.32779137
   0.68670362  0.41692844  0.44189428  2.24544089 -0.68981942  2.63050001
  -1.3597735   1.48074058 -0.4828437 ]
 [-0.53119841 -0.54997451  0.65853888 -0.91704452  0.94253826 -0.26801418
  -0.56283859 -0.53476863  0.4057012  -0.63199673  0.74246344 -1.11749835
   0.07704741 -0.76974913  0.14827809  0.79157159 -0.72104387  0.34434895
  -0.80141338  0.70271224  0.44189428 -0.50995114 -0.68981942 -0.30309724
   0.40648323 -0.35012663 -0.4828437 ]
 [-0.42332819 -0.54997451  0.65853888 -0.81113005  0.94253826 -0.26801418
  -0.56283859 -0.56022458  0.27053676 -0.59795651  0.74246344 -1.00180755
  -0.11228254 -0.76974913  0.17090875  0.65471389 -0.72104387  0.70132159
  -0.67388808  0.48837439  0.44189428 -0.35855597 -0.68981942 -0.14011961
   0.40648323 -0.27879414 -0.4828437 ]
 [ 0.22389311 -0.54997451  0.65853888 -0.5728225  -0.070976   -0.26801418
  -0.56283859 -0.06807634  0.36064638 -0.35967501  0.10231516 -0.24353133
  -0.11228254 -0.76974913 -0.36656924  0.517857   -0.72104387  0.52812791
  -0.25215505  0.13114465  0.44189428 -0.23743984 -0.68981942  0.51179089
   0.40648323 -0.11235167 -0.4828437 ]
 [-0.7518108   0.7613921  -1.21108615 -0.13552494 -0.45970918  0.37926635
   1.17663254 -0.74015601  1.77082926 -0.8148196   0.11691378  0.21187395
  -0.61446311 -0.42053928 -2.39282771  1.20621832  1.74661207 -0.13072103
   1.11852799  0.77892215 -0.16231636 -1.68556382 -0.59533987 -0.39524912
   0.85914835 -1.92730301  0.0307249 ]
 [-0.57222165 -0.03145956 -0.60292736  1.53956887  0.85896879 -0.15589942
   1.90554589 -0.91060244 -1.57715246  0.11398194 -0.8453434   1.8627197
  -1.86961832 -0.49228895  0.92284486 -1.8641502   0.08479744 -1.63207741
   1.84987362 -1.56552704 -2.77820435  0.39345211  1.70338444 -0.51438499
   0.77885225 -0.39897883  2.07977324]
 [ 1.49085683  2.56991451 -2.13721975  1.47684013 -0.98691789 -0.52811137
   0.2948531   0.57428645  0.70617206  2.34828453  0.11453865  0.67278883
   2.02179604  0.55636086 -0.50595701 -1.35435521 -0.05368895 -1.84766358
  -1.44794232  0.42841266  0.28915502  0.1329399   0.61171755 -0.53133497
   0.33874183  1.62129708 -1.16377391]]
train_y = 
[   -176.341    -185.759    -333.83  -100000.       -219.735    -237.341
    -192.743    -222.119    -307.435]
测试：每一列进行标准化，标准化后的train_x = 
[[-0.63906863 -0.54997451  0.65853888 -0.85084798  0.94253826 -0.26801418
  -0.56283859 -0.50082737  0.27053676 -0.70007716  0.74246344 -1.13802127
   0.26637773 -0.76974913  0.13696277  0.79157129 -0.72104387  0.38399595
  -0.73165298  0.70271224  0.44189428 -0.48976512 -0.68981942 -0.30309724
   0.40648323 -0.23123915 -0.4828437 ]
 [-0.85480906 -0.54997451  0.65853888 -0.82436936 -0.070976    2.60123012
   0.43635327  0.21193904 -1.12616239  1.1040542   0.74246344 -0.37892595
   0.83436815  1.71773194  1.24586471 -0.30328483  1.8274988   0.32487625
   0.25194658 -2.08367972  0.44189428  0.50944298  1.72933496 -0.95500774
  -2.24290187  0.19675578  1.46749425]
 [ 2.0576868  -0.54997451  0.65853888  1.09533034 -2.0980045  -1.22442895
  -1.56203044  2.52842988 -1.08110758 -0.46179566 -2.45827793  1.13240196
  -0.49094282  1.71773194  0.64049477 -0.44014184 -0.72104387  1.32779137
   0.68670362  0.41692844  0.44189428  2.24544089 -0.68981942  2.63050001
  -1.3597735   1.48074058 -0.4828437 ]
 [-0.53119841 -0.54997451  0.65853888 -0.91704452  0.94253826 -0.26801418
  -0.56283859 -0.53476863  0.4057012  -0.63199673  0.74246344 -1.11749835
   0.07704741 -0.76974913  0.14827809  0.79157159 -0.72104387  0.34434895
  -0.80141338  0.70271224  0.44189428 -0.50995114 -0.68981942 -0.30309724
   0.40648323 -0.35012663 -0.4828437 ]
 [-0.42332819 -0.54997451  0.65853888 -0.81113005  0.94253826 -0.26801418
  -0.56283859 -0.56022458  0.27053676 -0.59795651  0.74246344 -1.00180755
  -0.11228254 -0.76974913  0.17090875  0.65471389 -0.72104387  0.70132159
  -0.67388808  0.48837439  0.44189428 -0.35855597 -0.68981942 -0.14011961
   0.40648323 -0.27879414 -0.4828437 ]
 [ 0.22389311 -0.54997451  0.65853888 -0.5728225  -0.070976   -0.26801418
  -0.56283859 -0.06807634  0.36064638 -0.35967501  0.10231516 -0.24353133
  -0.11228254 -0.76974913 -0.36656924  0.517857   -0.72104387  0.52812791
  -0.25215505  0.13114465  0.44189428 -0.23743984 -0.68981942  0.51179089
   0.40648323 -0.11235167 -0.4828437 ]
 [-0.7518108   0.7613921  -1.21108615 -0.13552494 -0.45970918  0.37926635
   1.17663254 -0.74015601  1.77082926 -0.8148196   0.11691378  0.21187395
  -0.61446311 -0.42053928 -2.39282771  1.20621832  1.74661207 -0.13072103
   1.11852799  0.77892215 -0.16231636 -1.68556382 -0.59533987 -0.39524912
   0.85914835 -1.92730301  0.0307249 ]
 [-0.57222165 -0.03145956 -0.60292736  1.53956887  0.85896879 -0.15589942
   1.90554589 -0.91060244 -1.57715246  0.11398194 -0.8453434   1.8627197
  -1.86961832 -0.49228895  0.92284486 -1.8641502   0.08479744 -1.63207741
   1.84987362 -1.56552704 -2.77820435  0.39345211  1.70338444 -0.51438499
   0.77885225 -0.39897883  2.07977324]
 [ 1.49085683  2.56991451 -2.13721975  1.47684013 -0.98691789 -0.52811137
   0.2948531   0.57428645  0.70617206  2.34828453  0.11453865  0.67278883
   2.02179604  0.55636086 -0.50595701 -1.35435521 -0.05368895 -1.84766358
  -1.44794232  0.42841266  0.28915502  0.1329399   0.61171755 -0.53133497
   0.33874183  1.62129708 -1.16377391]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-0.63906863 -0.54997451  0.65853888 -0.85084798  0.94253826 -0.26801418
  -0.56283859 -0.50082737  0.27053676 -0.70007716  0.74246344 -1.13802127
   0.26637773 -0.76974913  0.13696277  0.79157129 -0.72104387  0.38399595
  -0.73165298  0.70271224  0.44189428 -0.48976512 -0.68981942 -0.30309724
   0.40648323 -0.23123915 -0.4828437 ]
 [-0.85480906 -0.54997451  0.65853888 -0.82436936 -0.070976    2.60123012
   0.43635327  0.21193904 -1.12616239  1.1040542   0.74246344 -0.37892595
   0.83436815  1.71773194  1.24586471 -0.30328483  1.8274988   0.32487625
   0.25194658 -2.08367972  0.44189428  0.50944298  1.72933496 -0.95500774
  -2.24290187  0.19675578  1.46749425]
 [ 2.0576868  -0.54997451  0.65853888  1.09533034 -2.0980045  -1.22442895
  -1.56203044  2.52842988 -1.08110758 -0.46179566 -2.45827793  1.13240196
  -0.49094282  1.71773194  0.64049477 -0.44014184 -0.72104387  1.32779137
   0.68670362  0.41692844  0.44189428  2.24544089 -0.68981942  2.63050001
  -1.3597735   1.48074058 -0.4828437 ]
 [-0.53119841 -0.54997451  0.65853888 -0.91704452  0.94253826 -0.26801418
  -0.56283859 -0.53476863  0.4057012  -0.63199673  0.74246344 -1.11749835
   0.07704741 -0.76974913  0.14827809  0.79157159 -0.72104387  0.34434895
  -0.80141338  0.70271224  0.44189428 -0.50995114 -0.68981942 -0.30309724
   0.40648323 -0.35012663 -0.4828437 ]
 [-0.42332819 -0.54997451  0.65853888 -0.81113005  0.94253826 -0.26801418
  -0.56283859 -0.56022458  0.27053676 -0.59795651  0.74246344 -1.00180755
  -0.11228254 -0.76974913  0.17090875  0.65471389 -0.72104387  0.70132159
  -0.67388808  0.48837439  0.44189428 -0.35855597 -0.68981942 -0.14011961
   0.40648323 -0.27879414 -0.4828437 ]
 [ 0.22389311 -0.54997451  0.65853888 -0.5728225  -0.070976   -0.26801418
  -0.56283859 -0.06807634  0.36064638 -0.35967501  0.10231516 -0.24353133
  -0.11228254 -0.76974913 -0.36656924  0.517857   -0.72104387  0.52812791
  -0.25215505  0.13114465  0.44189428 -0.23743984 -0.68981942  0.51179089
   0.40648323 -0.11235167 -0.4828437 ]
 [-0.7518108   0.7613921  -1.21108615 -0.13552494 -0.45970918  0.37926635
   1.17663254 -0.74015601  1.77082926 -0.8148196   0.11691378  0.21187395
  -0.61446311 -0.42053928 -2.39282771  1.20621832  1.74661207 -0.13072103
   1.11852799  0.77892215 -0.16231636 -1.68556382 -0.59533987 -0.39524912
   0.85914835 -1.92730301  0.0307249 ]
 [-0.57222165 -0.03145956 -0.60292736  1.53956887  0.85896879 -0.15589942
   1.90554589 -0.91060244 -1.57715246  0.11398194 -0.8453434   1.8627197
  -1.86961832 -0.49228895  0.92284486 -1.8641502   0.08479744 -1.63207741
   1.84987362 -1.56552704 -2.77820435  0.39345211  1.70338444 -0.51438499
   0.77885225 -0.39897883  2.07977324]
 [ 1.49085683  2.56991451 -2.13721975  1.47684013 -0.98691789 -0.52811137
   0.2948531   0.57428645  0.70617206  2.34828453  0.11453865  0.67278883
   2.02179604  0.55636086 -0.50595701 -1.35435521 -0.05368895 -1.84766358
  -1.44794232  0.42841266  0.28915502  0.1329399   0.61171755 -0.53133497
   0.33874183  1.62129708 -1.16377391]]
upper = 
[7718.36410499 7718.36410499 7718.36410499 ... 7718.36410499 7718.36410499
 7718.36410499]
upper.argmax() = 0
all predict_target = 
[11319.47811111 11319.47811111 11319.47811111 ... 11319.47811111
 11319.47811111 11319.47811111]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
 2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
 8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
 8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
 5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
 1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
 4.83405782e+00 1.52008826e+02 2.73765423e+00]
black_box_function中schafferRun(i) 中的i为[34.67237929724381, 0.7634696002969796, 0.35450219459517185, 321.04122077612624, 2.3939467033727153, 4.5186277200035905, 5.724940422326447, 545.6707675150069, 88.1932417958986, 67.25129282527449, 4.431028096003187, 1500363825.8170424, 0.8932043231121947, 0.5946921902029674, 627.8322173121403, 0.6089506548339559, 0.5469218901471669, 1267503482.3179002, 1553283837.9463983, 60.976266047481246, 0.1001079156264395, 516.2114807486785, 0.6034526651475726, 36.83865554831312, 4.834057821225401, 152.00882584458364, 2.737654233532858]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 34.67237929724381
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.7634696002969796
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.35450219459517185
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 321.04122077612624
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.3939467033727153
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.5186277200035905
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.724940422326447
================= config10 =================
2022年 02月 22日 星期二 14:36:47 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (219757) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (174371) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 545.6707675150069
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 88.1932417958986
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 67.25129282527449
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 4.431028096003187
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1500363825.8170424
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8932043231121947
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.5946921902029674
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 627.8322173121403
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6089506548339559
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.5469218901471669
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1267503482.3179002
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1553283837.9463983
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 60.976266047481246
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.1001079156264395
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 516.2114807486785
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.6034526651475726
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 36.83865554831312
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.834057821225401
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 152.00882584458364
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.737654233532858
configNum = 10	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 10 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 34.67237929724381, 'spark.broadcast.checksum': 0.7634696002969796, 'spark.broadcast.compress': 0.35450219459517185, 'spark.default.parallelism': 321.04122077612624, 'spark.executor.cores': 2.3939467033727153, 'spark.executor.instances': 4.5186277200035905, 'spark.executor.memory': 5.724940422326447, 'spark.executor.memoryOverhead': 545.6707675150069, 'spark.kryoserializer.buffer': 88.1932417958986, 'spark.kryoserializer.buffer.max': 67.25129282527449, 'spark.locality.wait': 4.431028096003187, 'spark.maxRemoteBlockSizeFetchToMem': 1500363825.8170424, 'spark.memory.fraction': 0.8932043231121947, 'spark.memory.offHeap.enabled': 0.5946921902029674, 'spark.memory.offHeap.size': 627.8322173121403, 'spark.memory.storageFraction': 0.6089506548339559, 'spark.rdd.compress': 0.5469218901471669, 'spark.reducer.maxBlocksInFlightPerAddress': 1267503482.3179002, 'spark.reducer.maxReqsInFlight': 1553283837.9463983, 'spark.reducer.maxSizeInFlight': 60.976266047481246, 'spark.scheduler.mode': 0.1001079156264395, 'spark.scheduler.revive.interval': 516.2114807486785, 'spark.shuffle.compress': 0.6034526651475726, 'spark.shuffle.file.buffer': 36.83865554831312, 'spark.shuffle.io.numConnectionsPerPeer': 4.834057821225401, 'spark.shuffle.sort.bypassMergeThreshold': 152.00882584458364, 'spark.storage.memoryMapThreshold': 2.737654233532858} target = -100000.0
x_probe = {'spark.broadcast.blockSize': 34.67237929724381, 'spark.broadcast.checksum': 0.7634696002969796, 'spark.broadcast.compress': 0.35450219459517185, 'spark.default.parallelism': 321.04122077612624, 'spark.executor.cores': 2.3939467033727153, 'spark.executor.instances': 4.5186277200035905, 'spark.executor.memory': 5.724940422326447, 'spark.executor.memoryOverhead': 545.6707675150069, 'spark.kryoserializer.buffer': 88.1932417958986, 'spark.kryoserializer.buffer.max': 67.25129282527449, 'spark.locality.wait': 4.431028096003187, 'spark.maxRemoteBlockSizeFetchToMem': 1500363825.8170424, 'spark.memory.fraction': 0.8932043231121947, 'spark.memory.offHeap.enabled': 0.5946921902029674, 'spark.memory.offHeap.size': 627.8322173121403, 'spark.memory.storageFraction': 0.6089506548339559, 'spark.rdd.compress': 0.5469218901471669, 'spark.reducer.maxBlocksInFlightPerAddress': 1267503482.3179002, 'spark.reducer.maxReqsInFlight': 1553283837.9463983, 'spark.reducer.maxSizeInFlight': 60.976266047481246, 'spark.scheduler.mode': 0.1001079156264395, 'spark.scheduler.revive.interval': 516.2114807486785, 'spark.shuffle.compress': 0.6034526651475726, 'spark.shuffle.file.buffer': 36.83865554831312, 'spark.shuffle.io.numConnectionsPerPeer': 4.834057821225401, 'spark.shuffle.sort.bypassMergeThreshold': 152.00882584458364, 'spark.storage.memoryMapThreshold': 2.737654233532858}
target = -100000.0
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (10, 27)
before probe, target = (10,)
标准化前的train_x = 
[[3.60000000e+01 0.00000000e+00 1.00000000e+00 2.65000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.13000000e+02
  8.30000000e+01 3.80000000e+01 9.00000000e+00 1.11362799e+09
  7.70000000e-01 0.00000000e+00 6.50000000e+02 7.90000000e-01
  0.00000000e+00 1.46537408e+09 1.30785007e+09 6.50000000e+01
  1.00000000e+00 6.61000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.41000000e+02 2.00000000e+00]
 [3.40000000e+01 0.00000000e+00 1.00000000e+00 2.67000000e+02
  3.00000000e+00 8.00000000e+00 5.00000000e+00 5.97000000e+02
  5.20000000e+01 9.10000000e+01 9.00000000e+00 1.34316873e+09
  8.00000000e-01 1.00000000e+00 8.46000000e+02 7.10000000e-01
  1.00000000e+00 1.45904587e+09 1.57858860e+09 2.60000000e+01
  1.00000000e+00 7.60000000e+02 1.00000000e+00 1.80000000e+01
  1.00000000e+00 2.59000000e+02 3.00000000e+00]
 [6.10000000e+01 0.00000000e+00 1.00000000e+00 4.12000000e+02
  1.00000000e+00 4.00000000e+00 3.00000000e+00 8.70000000e+02
  5.30000000e+01 4.50000000e+01 4.00000000e+00 1.80017501e+09
  7.30000000e-01 1.00000000e+00 7.39000000e+02 7.00000000e-01
  0.00000000e+00 1.56639849e+09 1.69825670e+09 6.10000000e+01
  1.00000000e+00 9.32000000e+02 0.00000000e+00 4.00000000e+01
  2.00000000e+00 3.13000000e+02 2.00000000e+00]
 [3.70000000e+01 0.00000000e+00 1.00000000e+00 2.60000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.09000000e+02
  8.60000000e+01 4.00000000e+01 9.00000000e+00 1.11983386e+09
  7.59999990e-01 0.00000000e+00 6.52000000e+02 7.90000021e-01
  0.00000000e+00 1.46113024e+09 1.28864832e+09 6.50000000e+01
  1.00000000e+00 6.59000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.36000000e+02 2.00000000e+00]
 [3.80000000e+01 0.00000000e+00 1.00000000e+00 2.68000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.06000000e+02
  8.30000000e+01 4.10000000e+01 9.00000000e+00 1.15481728e+09
  7.50000000e-01 0.00000000e+00 6.56000000e+02 7.79999971e-01
  0.00000000e+00 1.49934080e+09 1.32375002e+09 6.20000000e+01
  1.00000000e+00 6.74000000e+02 0.00000000e+00 2.30000000e+01
  4.00000000e+00 2.39000000e+02 2.00000000e+00]
 [4.40000000e+01 0.00000000e+00 1.00000000e+00 2.86000000e+02
  3.00000000e+00 5.00000000e+00 4.00000000e+00 5.64000000e+02
  8.50000000e+01 4.80000000e+01 8.00000000e+00 1.38411034e+09
  7.50000000e-01 0.00000000e+00 5.61000000e+02 7.69999981e-01
  0.00000000e+00 1.48080205e+09 1.43983322e+09 5.70000000e+01
  1.00000000e+00 6.86000000e+02 0.00000000e+00 2.70000000e+01
  4.00000000e+00 2.46000000e+02 2.00000000e+00]
 [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
  2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
  1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
  7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
  9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
  8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
  4.51257001e+00 1.69669367e+02 2.26332288e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]]
标准化后的train_x = 
[[-5.73879138e-01 -5.96564404e-01  7.66998352e-01 -8.84868799e-01
   1.04157911e+00 -2.00481265e-01 -6.71808318e-01 -5.03092152e-01
   2.29092679e-01 -7.65770316e-01  8.33457636e-01 -1.21323006e+00
   5.27455094e-03 -8.64679982e-01  1.43153538e-01  8.93096744e-01
  -8.12774899e-01  5.07372824e-01 -7.87089883e-01  6.91022574e-01
   5.36247088e-01 -2.64327745e-01 -7.85353268e-01 -4.50888566e-01
   2.89640124e-01  2.94846142e-03 -5.83637097e-01]
 [-7.94635115e-01 -5.96564404e-01  7.66998352e-01 -8.56974422e-01
  -2.52810543e-03  2.74679083e+00  3.16932491e-01  2.46358345e-01
  -1.22477061e+00  1.12769421e+00  8.33457636e-01 -4.13866663e-01
   4.67814931e-01  1.69374513e+00  1.31203103e+00 -1.25253260e-01
   1.81481128e+00  4.50825339e-01  2.48390290e-01 -2.22109463e+00
   5.36247088e-01  6.32042132e-01  1.69226320e+00 -1.02206046e+00
  -2.33674216e+00  3.65207195e-01  1.38426881e+00]
 [ 2.18557057e+00 -5.96564404e-01  7.66998352e-01  1.16536791e+00
  -2.09074253e+00 -1.18290530e+00 -1.66054913e+00  2.68207246e+00
  -1.17787179e+00 -5.15690095e-01 -1.94335615e+00  1.17763336e+00
  -6.11445955e-01  1.69374513e+00  6.73919336e-01 -2.52547011e-01
  -8.12774899e-01  1.41010507e+00  7.06078886e-01  3.92343887e-01
   5.36247088e-01  2.18937161e+00 -7.85353268e-01  2.11938495e+00
  -1.46128140e+00  1.45198340e+00 -5.83637097e-01]
 [-4.63501150e-01 -5.96564404e-01  7.66998352e-01 -9.54604741e-01
   1.04157911e+00 -2.00481265e-01 -6.71808318e-01 -5.38780271e-01
   3.69789126e-01 -6.94318824e-01  8.33457636e-01 -1.19161846e+00
  -1.48905723e-01 -8.64679982e-01  1.55080859e-01  8.93097017e-01
  -8.12774899e-01  4.69450809e-01 -8.60529843e-01  6.91022574e-01
   5.36247088e-01 -2.82436228e-01 -7.85353268e-01 -4.50888566e-01
   2.89640124e-01 -9.76789645e-02 -5.83637097e-01]
 [-3.53123161e-01 -5.96564404e-01  7.66998352e-01 -8.43027233e-01
   1.04157911e+00 -2.00481265e-01 -6.71808318e-01 -5.65546361e-01
   2.29092679e-01 -6.58593078e-01  8.33457636e-01 -1.06979055e+00
  -3.03085702e-01 -8.64679982e-01  1.78935502e-01  7.65802630e-01
  -8.12774899e-01  8.10892082e-01 -7.26278138e-01  4.67013559e-01
   5.36247088e-01 -1.46622610e-01 -7.85353268e-01 -3.08095593e-01
   2.89640124e-01 -3.73025090e-02 -5.83637097e-01]
 [ 3.09144769e-01 -5.96564404e-01  7.66998352e-01 -5.91977841e-01
  -2.52810543e-03 -2.00481265e-01 -6.71808318e-01 -4.80686360e-02
   3.22890310e-01 -4.08512858e-01  2.78094879e-01 -2.71289698e-01
  -3.03085702e-01 -8.64679982e-01 -3.87612261e-01  6.38509000e-01
  -8.12774899e-01  6.45233817e-01 -2.82300519e-01  9.36651998e-02
   5.36247088e-01 -3.79717157e-02 -7.85353268e-01  2.63076298e-01
   2.89640124e-01  1.03575887e-01 -5.83637097e-01]
 [-6.89242344e-01  1.61126432e-01 -1.07833959e+00 -1.31298827e-01
  -4.02995216e-01  4.64401763e-01  1.04946881e+00 -7.54738366e-01
   1.79078919e+00 -8.86194340e-01  2.90759961e-01  2.08273666e-01
  -7.12034128e-01 -5.05510513e-01 -2.52346199e+00  1.27876915e+00
   1.73141583e+00  1.50504408e-02  1.16068012e+00  7.70671168e-01
   1.81601264e-01 -1.33705518e+00 -6.88590494e-01 -5.31627508e-01
   7.38375058e-01 -1.43261514e+00 -6.54424565e-02]
 [-5.05478106e-01 -2.96973102e-01 -4.78080998e-01  1.63335901e+00
   9.55487099e-01 -8.53175962e-02  1.77075809e+00 -9.33957193e-01
  -1.69421882e+00  8.85976407e-02 -5.44049447e-01  1.94669260e+00
  -1.73416399e+00 -5.79306516e-01  9.71540483e-01 -1.57704883e+00
   1.80597247e-02 -1.42098408e+00  1.93060107e+00 -1.67956230e+00
  -1.35381320e+00  5.27989003e-01  1.66568556e+00 -6.36008496e-01
   6.58776113e-01 -1.39027904e-01  2.00206300e+00]
 [ 1.60556291e+00  1.20606753e+00 -1.99244240e+00  1.56727628e+00
  -9.46117739e-01 -4.67651680e-01  1.76912340e-01  6.27354764e-01
   6.82557671e-01  2.43353372e+00  2.88699406e-01  6.93638919e-01
   1.43479136e+00  4.99251243e-01 -5.34538895e-01 -1.10287717e+00
  -1.24721846e-01 -1.62719041e+00 -1.54116039e+00  4.04346280e-01
   4.46595669e-01  2.94288642e-01  5.47637080e-01 -6.50859230e-01
   2.22486869e-01  1.57095168e+00 -1.27070089e+00]
 [-7.20419240e-01  2.50916556e+00 -1.05312712e+00 -1.03251331e-01
  -6.35312724e-01 -6.73392960e-01  1.03371067e+00 -2.11602593e-01
   4.72649569e-01  2.79253937e-01 -1.70397920e+00  1.33556887e-01
   1.90484036e+00  6.56795452e-01  1.09524041e-02 -1.41154827e+00
   6.24309501e-01 -1.26075589e+00  1.51608411e-01  3.90571681e-01
  -2.49186626e+00 -1.57527792e+00  7.09770994e-01  1.66796717e+00
   1.01982502e+00 -1.78804210e+00  8.67997025e-01]]
train_y = 
[   -176.341    -185.759    -333.83  -100000.       -219.735    -237.341
    -192.743    -222.119    -307.435 -100000.   ]
测试：每一列进行标准化，标准化后的train_x = 
[[-5.73879138e-01 -5.96564404e-01  7.66998352e-01 -8.84868799e-01
   1.04157911e+00 -2.00481265e-01 -6.71808318e-01 -5.03092152e-01
   2.29092679e-01 -7.65770316e-01  8.33457636e-01 -1.21323006e+00
   5.27455094e-03 -8.64679982e-01  1.43153538e-01  8.93096744e-01
  -8.12774899e-01  5.07372824e-01 -7.87089883e-01  6.91022574e-01
   5.36247088e-01 -2.64327745e-01 -7.85353268e-01 -4.50888566e-01
   2.89640124e-01  2.94846142e-03 -5.83637097e-01]
 [-7.94635115e-01 -5.96564404e-01  7.66998352e-01 -8.56974422e-01
  -2.52810543e-03  2.74679083e+00  3.16932491e-01  2.46358345e-01
  -1.22477061e+00  1.12769421e+00  8.33457636e-01 -4.13866663e-01
   4.67814931e-01  1.69374513e+00  1.31203103e+00 -1.25253260e-01
   1.81481128e+00  4.50825339e-01  2.48390290e-01 -2.22109463e+00
   5.36247088e-01  6.32042132e-01  1.69226320e+00 -1.02206046e+00
  -2.33674216e+00  3.65207195e-01  1.38426881e+00]
 [ 2.18557057e+00 -5.96564404e-01  7.66998352e-01  1.16536791e+00
  -2.09074253e+00 -1.18290530e+00 -1.66054913e+00  2.68207246e+00
  -1.17787179e+00 -5.15690095e-01 -1.94335615e+00  1.17763336e+00
  -6.11445955e-01  1.69374513e+00  6.73919336e-01 -2.52547011e-01
  -8.12774899e-01  1.41010507e+00  7.06078886e-01  3.92343887e-01
   5.36247088e-01  2.18937161e+00 -7.85353268e-01  2.11938495e+00
  -1.46128140e+00  1.45198340e+00 -5.83637097e-01]
 [-4.63501150e-01 -5.96564404e-01  7.66998352e-01 -9.54604741e-01
   1.04157911e+00 -2.00481265e-01 -6.71808318e-01 -5.38780271e-01
   3.69789126e-01 -6.94318824e-01  8.33457636e-01 -1.19161846e+00
  -1.48905723e-01 -8.64679982e-01  1.55080859e-01  8.93097017e-01
  -8.12774899e-01  4.69450809e-01 -8.60529843e-01  6.91022574e-01
   5.36247088e-01 -2.82436228e-01 -7.85353268e-01 -4.50888566e-01
   2.89640124e-01 -9.76789645e-02 -5.83637097e-01]
 [-3.53123161e-01 -5.96564404e-01  7.66998352e-01 -8.43027233e-01
   1.04157911e+00 -2.00481265e-01 -6.71808318e-01 -5.65546361e-01
   2.29092679e-01 -6.58593078e-01  8.33457636e-01 -1.06979055e+00
  -3.03085702e-01 -8.64679982e-01  1.78935502e-01  7.65802630e-01
  -8.12774899e-01  8.10892082e-01 -7.26278138e-01  4.67013559e-01
   5.36247088e-01 -1.46622610e-01 -7.85353268e-01 -3.08095593e-01
   2.89640124e-01 -3.73025090e-02 -5.83637097e-01]
 [ 3.09144769e-01 -5.96564404e-01  7.66998352e-01 -5.91977841e-01
  -2.52810543e-03 -2.00481265e-01 -6.71808318e-01 -4.80686360e-02
   3.22890310e-01 -4.08512858e-01  2.78094879e-01 -2.71289698e-01
  -3.03085702e-01 -8.64679982e-01 -3.87612261e-01  6.38509000e-01
  -8.12774899e-01  6.45233817e-01 -2.82300519e-01  9.36651998e-02
   5.36247088e-01 -3.79717157e-02 -7.85353268e-01  2.63076298e-01
   2.89640124e-01  1.03575887e-01 -5.83637097e-01]
 [-6.89242344e-01  1.61126432e-01 -1.07833959e+00 -1.31298827e-01
  -4.02995216e-01  4.64401763e-01  1.04946881e+00 -7.54738366e-01
   1.79078919e+00 -8.86194340e-01  2.90759961e-01  2.08273666e-01
  -7.12034128e-01 -5.05510513e-01 -2.52346199e+00  1.27876915e+00
   1.73141583e+00  1.50504408e-02  1.16068012e+00  7.70671168e-01
   1.81601264e-01 -1.33705518e+00 -6.88590494e-01 -5.31627508e-01
   7.38375058e-01 -1.43261514e+00 -6.54424565e-02]
 [-5.05478106e-01 -2.96973102e-01 -4.78080998e-01  1.63335901e+00
   9.55487099e-01 -8.53175962e-02  1.77075809e+00 -9.33957193e-01
  -1.69421882e+00  8.85976407e-02 -5.44049447e-01  1.94669260e+00
  -1.73416399e+00 -5.79306516e-01  9.71540483e-01 -1.57704883e+00
   1.80597247e-02 -1.42098408e+00  1.93060107e+00 -1.67956230e+00
  -1.35381320e+00  5.27989003e-01  1.66568556e+00 -6.36008496e-01
   6.58776113e-01 -1.39027904e-01  2.00206300e+00]
 [ 1.60556291e+00  1.20606753e+00 -1.99244240e+00  1.56727628e+00
  -9.46117739e-01 -4.67651680e-01  1.76912340e-01  6.27354764e-01
   6.82557671e-01  2.43353372e+00  2.88699406e-01  6.93638919e-01
   1.43479136e+00  4.99251243e-01 -5.34538895e-01 -1.10287717e+00
  -1.24721846e-01 -1.62719041e+00 -1.54116039e+00  4.04346280e-01
   4.46595669e-01  2.94288642e-01  5.47637080e-01 -6.50859230e-01
   2.22486869e-01  1.57095168e+00 -1.27070089e+00]
 [-7.20419240e-01  2.50916556e+00 -1.05312712e+00 -1.03251331e-01
  -6.35312724e-01 -6.73392960e-01  1.03371067e+00 -2.11602593e-01
   4.72649569e-01  2.79253937e-01 -1.70397920e+00  1.33556887e-01
   1.90484036e+00  6.56795452e-01  1.09524041e-02 -1.41154827e+00
   6.24309501e-01 -1.26075589e+00  1.51608411e-01  3.90571681e-01
  -2.49186626e+00 -1.57527792e+00  7.09770994e-01  1.66796717e+00
   1.01982502e+00 -1.78804210e+00  8.67997025e-01]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-5.73879138e-01 -5.96564404e-01  7.66998352e-01 -8.84868799e-01
   1.04157911e+00 -2.00481265e-01 -6.71808318e-01 -5.03092152e-01
   2.29092679e-01 -7.65770316e-01  8.33457636e-01 -1.21323006e+00
   5.27455094e-03 -8.64679982e-01  1.43153538e-01  8.93096744e-01
  -8.12774899e-01  5.07372824e-01 -7.87089883e-01  6.91022574e-01
   5.36247088e-01 -2.64327745e-01 -7.85353268e-01 -4.50888566e-01
   2.89640124e-01  2.94846142e-03 -5.83637097e-01]
 [-7.94635115e-01 -5.96564404e-01  7.66998352e-01 -8.56974422e-01
  -2.52810543e-03  2.74679083e+00  3.16932491e-01  2.46358345e-01
  -1.22477061e+00  1.12769421e+00  8.33457636e-01 -4.13866663e-01
   4.67814931e-01  1.69374513e+00  1.31203103e+00 -1.25253260e-01
   1.81481128e+00  4.50825339e-01  2.48390290e-01 -2.22109463e+00
   5.36247088e-01  6.32042132e-01  1.69226320e+00 -1.02206046e+00
  -2.33674216e+00  3.65207195e-01  1.38426881e+00]
 [ 2.18557057e+00 -5.96564404e-01  7.66998352e-01  1.16536791e+00
  -2.09074253e+00 -1.18290530e+00 -1.66054913e+00  2.68207246e+00
  -1.17787179e+00 -5.15690095e-01 -1.94335615e+00  1.17763336e+00
  -6.11445955e-01  1.69374513e+00  6.73919336e-01 -2.52547011e-01
  -8.12774899e-01  1.41010507e+00  7.06078886e-01  3.92343887e-01
   5.36247088e-01  2.18937161e+00 -7.85353268e-01  2.11938495e+00
  -1.46128140e+00  1.45198340e+00 -5.83637097e-01]
 [-4.63501150e-01 -5.96564404e-01  7.66998352e-01 -9.54604741e-01
   1.04157911e+00 -2.00481265e-01 -6.71808318e-01 -5.38780271e-01
   3.69789126e-01 -6.94318824e-01  8.33457636e-01 -1.19161846e+00
  -1.48905723e-01 -8.64679982e-01  1.55080859e-01  8.93097017e-01
  -8.12774899e-01  4.69450809e-01 -8.60529843e-01  6.91022574e-01
   5.36247088e-01 -2.82436228e-01 -7.85353268e-01 -4.50888566e-01
   2.89640124e-01 -9.76789645e-02 -5.83637097e-01]
 [-3.53123161e-01 -5.96564404e-01  7.66998352e-01 -8.43027233e-01
   1.04157911e+00 -2.00481265e-01 -6.71808318e-01 -5.65546361e-01
   2.29092679e-01 -6.58593078e-01  8.33457636e-01 -1.06979055e+00
  -3.03085702e-01 -8.64679982e-01  1.78935502e-01  7.65802630e-01
  -8.12774899e-01  8.10892082e-01 -7.26278138e-01  4.67013559e-01
   5.36247088e-01 -1.46622610e-01 -7.85353268e-01 -3.08095593e-01
   2.89640124e-01 -3.73025090e-02 -5.83637097e-01]
 [ 3.09144769e-01 -5.96564404e-01  7.66998352e-01 -5.91977841e-01
  -2.52810543e-03 -2.00481265e-01 -6.71808318e-01 -4.80686360e-02
   3.22890310e-01 -4.08512858e-01  2.78094879e-01 -2.71289698e-01
  -3.03085702e-01 -8.64679982e-01 -3.87612261e-01  6.38509000e-01
  -8.12774899e-01  6.45233817e-01 -2.82300519e-01  9.36651998e-02
   5.36247088e-01 -3.79717157e-02 -7.85353268e-01  2.63076298e-01
   2.89640124e-01  1.03575887e-01 -5.83637097e-01]
 [-6.89242344e-01  1.61126432e-01 -1.07833959e+00 -1.31298827e-01
  -4.02995216e-01  4.64401763e-01  1.04946881e+00 -7.54738366e-01
   1.79078919e+00 -8.86194340e-01  2.90759961e-01  2.08273666e-01
  -7.12034128e-01 -5.05510513e-01 -2.52346199e+00  1.27876915e+00
   1.73141583e+00  1.50504408e-02  1.16068012e+00  7.70671168e-01
   1.81601264e-01 -1.33705518e+00 -6.88590494e-01 -5.31627508e-01
   7.38375058e-01 -1.43261514e+00 -6.54424565e-02]
 [-5.05478106e-01 -2.96973102e-01 -4.78080998e-01  1.63335901e+00
   9.55487099e-01 -8.53175962e-02  1.77075809e+00 -9.33957193e-01
  -1.69421882e+00  8.85976407e-02 -5.44049447e-01  1.94669260e+00
  -1.73416399e+00 -5.79306516e-01  9.71540483e-01 -1.57704883e+00
   1.80597247e-02 -1.42098408e+00  1.93060107e+00 -1.67956230e+00
  -1.35381320e+00  5.27989003e-01  1.66568556e+00 -6.36008496e-01
   6.58776113e-01 -1.39027904e-01  2.00206300e+00]
 [ 1.60556291e+00  1.20606753e+00 -1.99244240e+00  1.56727628e+00
  -9.46117739e-01 -4.67651680e-01  1.76912340e-01  6.27354764e-01
   6.82557671e-01  2.43353372e+00  2.88699406e-01  6.93638919e-01
   1.43479136e+00  4.99251243e-01 -5.34538895e-01 -1.10287717e+00
  -1.24721846e-01 -1.62719041e+00 -1.54116039e+00  4.04346280e-01
   4.46595669e-01  2.94288642e-01  5.47637080e-01 -6.50859230e-01
   2.22486869e-01  1.57095168e+00 -1.27070089e+00]
 [-7.20419240e-01  2.50916556e+00 -1.05312712e+00 -1.03251331e-01
  -6.35312724e-01 -6.73392960e-01  1.03371067e+00 -2.11602593e-01
   4.72649569e-01  2.79253937e-01 -1.70397920e+00  1.33556887e-01
   1.90484036e+00  6.56795452e-01  1.09524041e-02 -1.41154827e+00
   6.24309501e-01 -1.26075589e+00  1.51608411e-01  3.90571681e-01
  -2.49186626e+00 -1.57527792e+00  7.09770994e-01  1.66796717e+00
   1.01982502e+00 -1.78804210e+00  8.67997025e-01]]
upper = 
[7875.42355895 7875.42355895 7875.42355895 ... 7875.42355895 7875.42355895
 7875.42355895]
upper.argmax() = 0
all predict_target = 
[20187.5303 20187.5303 20187.5303 ... 20187.5303 20187.5303 20187.5303]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
 1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
 1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
 8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
 2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
 3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
 1.27240201e+00 3.46469984e+02 2.48084061e+00]
black_box_function中schafferRun(i) 中的i为[54.16424774738462, 0.8118541264455323, 0.6814745734261551, 260.51081801876865, 1.8360168603040026, 5.066267042338279, 3.1514919852675307, 670.2558455338509, 117.74265573435449, 58.03476197397718, 5.72528197697442, 1622082048.4161954, 0.8120472839611643, 0.8117552902289551, 419.250561812153, 0.7631302250942644, 0.238960640172461, 1619762587.5562062, 1143936034.705254, 62.02416968034852, 0.34932607611651456, 907.9884182674773, 0.5299290994225245, 21.062631417436855, 1.2724020052767182, 346.46998436947644, 2.4808406090686295]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 54.16424774738462
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.8118541264455323
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.6814745734261551
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 260.51081801876865
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 1.8360168603040026
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.066267042338279
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 3.1514919852675307
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 670.2558455338509
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 117.74265573435449
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 58.03476197397718
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 5.72528197697442
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1622082048.4161954
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8120472839611643
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.8117552902289551
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 419.250561812153
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7631302250942644
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.238960640172461
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1619762587.5562062
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1143936034.705254
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 62.02416968034852
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.34932607611651456
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 907.9884182674773
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.5299290994225245
================= config11 =================
2022年 02月 22日 星期二 14:38:02 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (245129) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (207576) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 21.062631417436855
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1.2724020052767182
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 346.46998436947644
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.4808406090686295
configNum = 11	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 11 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 54.16424774738462, 'spark.broadcast.checksum': 0.8118541264455323, 'spark.broadcast.compress': 0.6814745734261551, 'spark.default.parallelism': 260.51081801876865, 'spark.executor.cores': 1.8360168603040026, 'spark.executor.instances': 5.066267042338279, 'spark.executor.memory': 3.1514919852675307, 'spark.executor.memoryOverhead': 670.2558455338509, 'spark.kryoserializer.buffer': 117.74265573435449, 'spark.kryoserializer.buffer.max': 58.03476197397718, 'spark.locality.wait': 5.72528197697442, 'spark.maxRemoteBlockSizeFetchToMem': 1622082048.4161954, 'spark.memory.fraction': 0.8120472839611643, 'spark.memory.offHeap.enabled': 0.8117552902289551, 'spark.memory.offHeap.size': 419.250561812153, 'spark.memory.storageFraction': 0.7631302250942644, 'spark.rdd.compress': 0.238960640172461, 'spark.reducer.maxBlocksInFlightPerAddress': 1619762587.5562062, 'spark.reducer.maxReqsInFlight': 1143936034.705254, 'spark.reducer.maxSizeInFlight': 62.02416968034852, 'spark.scheduler.mode': 0.34932607611651456, 'spark.scheduler.revive.interval': 907.9884182674773, 'spark.shuffle.compress': 0.5299290994225245, 'spark.shuffle.file.buffer': 21.062631417436855, 'spark.shuffle.io.numConnectionsPerPeer': 1.2724020052767182, 'spark.shuffle.sort.bypassMergeThreshold': 346.46998436947644, 'spark.storage.memoryMapThreshold': 2.4808406090686295} target = -316.038
x_probe = {'spark.broadcast.blockSize': 54.16424774738462, 'spark.broadcast.checksum': 0.8118541264455323, 'spark.broadcast.compress': 0.6814745734261551, 'spark.default.parallelism': 260.51081801876865, 'spark.executor.cores': 1.8360168603040026, 'spark.executor.instances': 5.066267042338279, 'spark.executor.memory': 3.1514919852675307, 'spark.executor.memoryOverhead': 670.2558455338509, 'spark.kryoserializer.buffer': 117.74265573435449, 'spark.kryoserializer.buffer.max': 58.03476197397718, 'spark.locality.wait': 5.72528197697442, 'spark.maxRemoteBlockSizeFetchToMem': 1622082048.4161954, 'spark.memory.fraction': 0.8120472839611643, 'spark.memory.offHeap.enabled': 0.8117552902289551, 'spark.memory.offHeap.size': 419.250561812153, 'spark.memory.storageFraction': 0.7631302250942644, 'spark.rdd.compress': 0.238960640172461, 'spark.reducer.maxBlocksInFlightPerAddress': 1619762587.5562062, 'spark.reducer.maxReqsInFlight': 1143936034.705254, 'spark.reducer.maxSizeInFlight': 62.02416968034852, 'spark.scheduler.mode': 0.34932607611651456, 'spark.scheduler.revive.interval': 907.9884182674773, 'spark.shuffle.compress': 0.5299290994225245, 'spark.shuffle.file.buffer': 21.062631417436855, 'spark.shuffle.io.numConnectionsPerPeer': 1.2724020052767182, 'spark.shuffle.sort.bypassMergeThreshold': 346.46998436947644, 'spark.storage.memoryMapThreshold': 2.4808406090686295}
target = -316.038
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (11, 27)
before probe, target = (11,)
标准化前的train_x = 
[[3.60000000e+01 0.00000000e+00 1.00000000e+00 2.65000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.13000000e+02
  8.30000000e+01 3.80000000e+01 9.00000000e+00 1.11362799e+09
  7.70000000e-01 0.00000000e+00 6.50000000e+02 7.90000000e-01
  0.00000000e+00 1.46537408e+09 1.30785007e+09 6.50000000e+01
  1.00000000e+00 6.61000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.41000000e+02 2.00000000e+00]
 [3.40000000e+01 0.00000000e+00 1.00000000e+00 2.67000000e+02
  3.00000000e+00 8.00000000e+00 5.00000000e+00 5.97000000e+02
  5.20000000e+01 9.10000000e+01 9.00000000e+00 1.34316873e+09
  8.00000000e-01 1.00000000e+00 8.46000000e+02 7.10000000e-01
  1.00000000e+00 1.45904587e+09 1.57858860e+09 2.60000000e+01
  1.00000000e+00 7.60000000e+02 1.00000000e+00 1.80000000e+01
  1.00000000e+00 2.59000000e+02 3.00000000e+00]
 [6.10000000e+01 0.00000000e+00 1.00000000e+00 4.12000000e+02
  1.00000000e+00 4.00000000e+00 3.00000000e+00 8.70000000e+02
  5.30000000e+01 4.50000000e+01 4.00000000e+00 1.80017501e+09
  7.30000000e-01 1.00000000e+00 7.39000000e+02 7.00000000e-01
  0.00000000e+00 1.56639849e+09 1.69825670e+09 6.10000000e+01
  1.00000000e+00 9.32000000e+02 0.00000000e+00 4.00000000e+01
  2.00000000e+00 3.13000000e+02 2.00000000e+00]
 [3.70000000e+01 0.00000000e+00 1.00000000e+00 2.60000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.09000000e+02
  8.60000000e+01 4.00000000e+01 9.00000000e+00 1.11983386e+09
  7.59999990e-01 0.00000000e+00 6.52000000e+02 7.90000021e-01
  0.00000000e+00 1.46113024e+09 1.28864832e+09 6.50000000e+01
  1.00000000e+00 6.59000000e+02 0.00000000e+00 2.20000000e+01
  4.00000000e+00 2.36000000e+02 2.00000000e+00]
 [3.80000000e+01 0.00000000e+00 1.00000000e+00 2.68000000e+02
  4.00000000e+00 5.00000000e+00 4.00000000e+00 5.06000000e+02
  8.30000000e+01 4.10000000e+01 9.00000000e+00 1.15481728e+09
  7.50000000e-01 0.00000000e+00 6.56000000e+02 7.79999971e-01
  0.00000000e+00 1.49934080e+09 1.32375002e+09 6.20000000e+01
  1.00000000e+00 6.74000000e+02 0.00000000e+00 2.30000000e+01
  4.00000000e+00 2.39000000e+02 2.00000000e+00]
 [4.40000000e+01 0.00000000e+00 1.00000000e+00 2.86000000e+02
  3.00000000e+00 5.00000000e+00 4.00000000e+00 5.64000000e+02
  8.50000000e+01 4.80000000e+01 8.00000000e+00 1.38411034e+09
  7.50000000e-01 0.00000000e+00 5.61000000e+02 7.69999981e-01
  0.00000000e+00 1.48080205e+09 1.43983322e+09 5.70000000e+01
  1.00000000e+00 6.86000000e+02 0.00000000e+00 2.70000000e+01
  4.00000000e+00 2.46000000e+02 2.00000000e+00]
 [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
  2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
  1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
  7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
  9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
  8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
  4.51257001e+00 1.69669367e+02 2.26332288e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]]
标准化后的train_x = 
[[-0.67792137 -0.68470636  0.81630182 -0.80549552  1.13447063 -0.19719444
  -0.51012266 -0.59204577  0.05502512 -0.79828732  0.92799595 -1.30726024
  -0.05571116 -0.96033038  0.25092105  0.87218917 -0.83352331  0.30614307
  -0.63535402  0.67335663  0.64442699 -0.39990236 -0.86313768 -0.4108075
   0.42578399 -0.16802776 -0.64286664]
 [-0.89050734 -0.68470636  0.81630182 -0.77736502  0.10651237  2.89135871
   0.43358351  0.16655341 -1.27519311  1.18736928  0.92799595 -0.48047717
   0.42025223  1.55992675  1.40001703 -0.18142123  1.91804039  0.25459453
   0.3636626  -2.35083396  0.64442699  0.40817388  1.7031397  -1.00075891
  -1.90204985  0.15185603  1.40886433]
 [ 1.97940318 -0.68470636  0.81630182  1.26209645 -1.94940416 -1.22671216
  -1.45382884  2.63200076 -1.23228284 -0.53603079 -1.86378397  1.16561429
  -0.69032901  1.55992675  0.77270443 -0.31312253 -0.83352331  1.1290714
   0.80523407  0.36318324  0.64442699  1.81210433 -0.86313768  2.24397386
  -1.12610523  1.11150739 -0.64286664]
 [-0.57162839 -0.68470636  0.81630182 -0.87582178  1.13447063 -0.19719444
  -0.51012266 -0.62816954  0.18375592 -0.72335689  0.92799595 -1.28490732
  -0.21436577 -0.96033038  0.26264651  0.87218945 -0.83352331  0.27157346
  -0.70620785  0.67335663  0.64442699 -0.41622713 -0.86313768 -0.4108075
   0.42578399 -0.25688436 -0.64286664]
 [-0.46533541 -0.68470636  0.81630182 -0.76329977  1.13447063 -0.19719444
  -0.51012266 -0.65526237  0.05502512 -0.68589167  0.92799595 -1.15890048
  -0.37302008 -0.96033038  0.28609745  0.74048749 -0.83352331  0.58283042
  -0.57668371  0.44072659  0.64442699 -0.29379134 -0.86313768 -0.26331965
   0.42578399 -0.2035704  -0.64286664]
 [ 0.17242248 -0.68470636  0.81630182 -0.51012524  0.10651237 -0.19719444
  -0.51012266 -0.13146769  0.14084565 -0.42363514  0.36963997 -0.33300955
  -0.37302008 -0.96033038 -0.27086234  0.60878632 -0.83352331  0.43181679
  -0.14834039  0.05300984  0.64442699 -0.1958427  -0.86313768  0.32663176
   0.42578399 -0.07917115 -0.64286664]
 [-0.78901507 -0.06897146 -1.11759343 -0.04554657 -0.28776082  0.49956056
   1.13275466 -0.84676388  1.48390581 -0.92457475  0.38237331  0.16300374
  -0.79383627 -0.6065192  -2.37056601  1.27121549  1.8307101  -0.14265672
   1.24382691  0.75607052  0.31153687 -1.3669647  -0.76291228 -0.49420105
   0.82350994 -1.43566737 -0.10259894]
 [-0.61205181 -0.4412445  -0.48852858  1.73404911  1.04971019 -0.07651026
   1.82119105 -1.02817046 -1.70471669  0.09767948 -0.45693545  1.96105371
  -1.84562854 -0.67921427  1.06528878 -1.68348525  0.03651263 -1.451742
   1.98663574 -1.78846066 -1.12968779  0.31437013  1.67561097 -0.60201398
   0.75295923 -0.29339654  2.05297413]
 [ 1.42086117  0.7801964  -2.0755638   1.66740699 -0.822483   -0.47717199
   0.29994092  0.55220073  0.4699248   2.55678961  0.38030165  0.66501793
   1.4152905   0.38325297 -0.41530246 -1.19289539 -0.11300581 -1.63971914
  -1.36287057  0.37564755  0.56027523  0.10368956  0.5175534  -0.61735299
   0.36626424  1.21655945 -1.35919665]
 [-0.81903814  1.83915462 -1.09117102 -0.01726165 -0.51648513 -0.69277573
   1.11771427 -0.29699794  0.27786851  0.29761876 -1.62311685  0.08572403
   1.89898041  0.53844685  0.12095722 -1.51225424  0.67136711 -1.3056784
   0.27028881  0.36134283 -2.19792714 -1.58172219  0.68548924  1.77771395
   1.07296667 -1.74951852  0.8706014 ]
 [ 1.25281069  1.99910312 -0.12495406 -0.868637   -1.09001372 -0.12897135
  -1.31086492  0.82812275  1.54584171 -0.04768058 -0.90046245  0.52414105
   0.61138777  1.08550168 -1.10190168  0.51831074 -0.17600788  1.56376658
  -1.24019159  0.44260079 -1.41075912  1.61611252  0.49680738 -0.54905798
  -1.69068098  1.70631324  0.34368893]]
train_y = 
[   -176.341    -185.759    -333.83  -100000.       -219.735    -237.341
    -192.743    -222.119    -307.435 -100000.       -316.038]
测试：每一列进行标准化，标准化后的train_x = 
[[-0.67792137 -0.68470636  0.81630182 -0.80549552  1.13447063 -0.19719444
  -0.51012266 -0.59204577  0.05502512 -0.79828732  0.92799595 -1.30726024
  -0.05571116 -0.96033038  0.25092105  0.87218917 -0.83352331  0.30614307
  -0.63535402  0.67335663  0.64442699 -0.39990236 -0.86313768 -0.4108075
   0.42578399 -0.16802776 -0.64286664]
 [-0.89050734 -0.68470636  0.81630182 -0.77736502  0.10651237  2.89135871
   0.43358351  0.16655341 -1.27519311  1.18736928  0.92799595 -0.48047717
   0.42025223  1.55992675  1.40001703 -0.18142123  1.91804039  0.25459453
   0.3636626  -2.35083396  0.64442699  0.40817388  1.7031397  -1.00075891
  -1.90204985  0.15185603  1.40886433]
 [ 1.97940318 -0.68470636  0.81630182  1.26209645 -1.94940416 -1.22671216
  -1.45382884  2.63200076 -1.23228284 -0.53603079 -1.86378397  1.16561429
  -0.69032901  1.55992675  0.77270443 -0.31312253 -0.83352331  1.1290714
   0.80523407  0.36318324  0.64442699  1.81210433 -0.86313768  2.24397386
  -1.12610523  1.11150739 -0.64286664]
 [-0.57162839 -0.68470636  0.81630182 -0.87582178  1.13447063 -0.19719444
  -0.51012266 -0.62816954  0.18375592 -0.72335689  0.92799595 -1.28490732
  -0.21436577 -0.96033038  0.26264651  0.87218945 -0.83352331  0.27157346
  -0.70620785  0.67335663  0.64442699 -0.41622713 -0.86313768 -0.4108075
   0.42578399 -0.25688436 -0.64286664]
 [-0.46533541 -0.68470636  0.81630182 -0.76329977  1.13447063 -0.19719444
  -0.51012266 -0.65526237  0.05502512 -0.68589167  0.92799595 -1.15890048
  -0.37302008 -0.96033038  0.28609745  0.74048749 -0.83352331  0.58283042
  -0.57668371  0.44072659  0.64442699 -0.29379134 -0.86313768 -0.26331965
   0.42578399 -0.2035704  -0.64286664]
 [ 0.17242248 -0.68470636  0.81630182 -0.51012524  0.10651237 -0.19719444
  -0.51012266 -0.13146769  0.14084565 -0.42363514  0.36963997 -0.33300955
  -0.37302008 -0.96033038 -0.27086234  0.60878632 -0.83352331  0.43181679
  -0.14834039  0.05300984  0.64442699 -0.1958427  -0.86313768  0.32663176
   0.42578399 -0.07917115 -0.64286664]
 [-0.78901507 -0.06897146 -1.11759343 -0.04554657 -0.28776082  0.49956056
   1.13275466 -0.84676388  1.48390581 -0.92457475  0.38237331  0.16300374
  -0.79383627 -0.6065192  -2.37056601  1.27121549  1.8307101  -0.14265672
   1.24382691  0.75607052  0.31153687 -1.3669647  -0.76291228 -0.49420105
   0.82350994 -1.43566737 -0.10259894]
 [-0.61205181 -0.4412445  -0.48852858  1.73404911  1.04971019 -0.07651026
   1.82119105 -1.02817046 -1.70471669  0.09767948 -0.45693545  1.96105371
  -1.84562854 -0.67921427  1.06528878 -1.68348525  0.03651263 -1.451742
   1.98663574 -1.78846066 -1.12968779  0.31437013  1.67561097 -0.60201398
   0.75295923 -0.29339654  2.05297413]
 [ 1.42086117  0.7801964  -2.0755638   1.66740699 -0.822483   -0.47717199
   0.29994092  0.55220073  0.4699248   2.55678961  0.38030165  0.66501793
   1.4152905   0.38325297 -0.41530246 -1.19289539 -0.11300581 -1.63971914
  -1.36287057  0.37564755  0.56027523  0.10368956  0.5175534  -0.61735299
   0.36626424  1.21655945 -1.35919665]
 [-0.81903814  1.83915462 -1.09117102 -0.01726165 -0.51648513 -0.69277573
   1.11771427 -0.29699794  0.27786851  0.29761876 -1.62311685  0.08572403
   1.89898041  0.53844685  0.12095722 -1.51225424  0.67136711 -1.3056784
   0.27028881  0.36134283 -2.19792714 -1.58172219  0.68548924  1.77771395
   1.07296667 -1.74951852  0.8706014 ]
 [ 1.25281069  1.99910312 -0.12495406 -0.868637   -1.09001372 -0.12897135
  -1.31086492  0.82812275  1.54584171 -0.04768058 -0.90046245  0.52414105
   0.61138777  1.08550168 -1.10190168  0.51831074 -0.17600788  1.56376658
  -1.24019159  0.44260079 -1.41075912  1.61611252  0.49680738 -0.54905798
  -1.69068098  1.70631324  0.34368893]]
================= config12 =================
2022年 02月 22日 星期二 14:43:27 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (264172) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (239816) - 没有那个进程
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-0.67792137 -0.68470636  0.81630182 -0.80549552  1.13447063 -0.19719444
  -0.51012266 -0.59204577  0.05502512 -0.79828732  0.92799595 -1.30726024
  -0.05571116 -0.96033038  0.25092105  0.87218917 -0.83352331  0.30614307
  -0.63535402  0.67335663  0.64442699 -0.39990236 -0.86313768 -0.4108075
   0.42578399 -0.16802776 -0.64286664]
 [-0.89050734 -0.68470636  0.81630182 -0.77736502  0.10651237  2.89135871
   0.43358351  0.16655341 -1.27519311  1.18736928  0.92799595 -0.48047717
   0.42025223  1.55992675  1.40001703 -0.18142123  1.91804039  0.25459453
   0.3636626  -2.35083396  0.64442699  0.40817388  1.7031397  -1.00075891
  -1.90204985  0.15185603  1.40886433]
 [ 1.97940318 -0.68470636  0.81630182  1.26209645 -1.94940416 -1.22671216
  -1.45382884  2.63200076 -1.23228284 -0.53603079 -1.86378397  1.16561429
  -0.69032901  1.55992675  0.77270443 -0.31312253 -0.83352331  1.1290714
   0.80523407  0.36318324  0.64442699  1.81210433 -0.86313768  2.24397386
  -1.12610523  1.11150739 -0.64286664]
 [-0.57162839 -0.68470636  0.81630182 -0.87582178  1.13447063 -0.19719444
  -0.51012266 -0.62816954  0.18375592 -0.72335689  0.92799595 -1.28490732
  -0.21436577 -0.96033038  0.26264651  0.87218945 -0.83352331  0.27157346
  -0.70620785  0.67335663  0.64442699 -0.41622713 -0.86313768 -0.4108075
   0.42578399 -0.25688436 -0.64286664]
 [-0.46533541 -0.68470636  0.81630182 -0.76329977  1.13447063 -0.19719444
  -0.51012266 -0.65526237  0.05502512 -0.68589167  0.92799595 -1.15890048
  -0.37302008 -0.96033038  0.28609745  0.74048749 -0.83352331  0.58283042
  -0.57668371  0.44072659  0.64442699 -0.29379134 -0.86313768 -0.26331965
   0.42578399 -0.2035704  -0.64286664]
 [ 0.17242248 -0.68470636  0.81630182 -0.51012524  0.10651237 -0.19719444
  -0.51012266 -0.13146769  0.14084565 -0.42363514  0.36963997 -0.33300955
  -0.37302008 -0.96033038 -0.27086234  0.60878632 -0.83352331  0.43181679
  -0.14834039  0.05300984  0.64442699 -0.1958427  -0.86313768  0.32663176
   0.42578399 -0.07917115 -0.64286664]
 [-0.78901507 -0.06897146 -1.11759343 -0.04554657 -0.28776082  0.49956056
   1.13275466 -0.84676388  1.48390581 -0.92457475  0.38237331  0.16300374
  -0.79383627 -0.6065192  -2.37056601  1.27121549  1.8307101  -0.14265672
   1.24382691  0.75607052  0.31153687 -1.3669647  -0.76291228 -0.49420105
   0.82350994 -1.43566737 -0.10259894]
 [-0.61205181 -0.4412445  -0.48852858  1.73404911  1.04971019 -0.07651026
   1.82119105 -1.02817046 -1.70471669  0.09767948 -0.45693545  1.96105371
  -1.84562854 -0.67921427  1.06528878 -1.68348525  0.03651263 -1.451742
   1.98663574 -1.78846066 -1.12968779  0.31437013  1.67561097 -0.60201398
   0.75295923 -0.29339654  2.05297413]
 [ 1.42086117  0.7801964  -2.0755638   1.66740699 -0.822483   -0.47717199
   0.29994092  0.55220073  0.4699248   2.55678961  0.38030165  0.66501793
   1.4152905   0.38325297 -0.41530246 -1.19289539 -0.11300581 -1.63971914
  -1.36287057  0.37564755  0.56027523  0.10368956  0.5175534  -0.61735299
   0.36626424  1.21655945 -1.35919665]
 [-0.81903814  1.83915462 -1.09117102 -0.01726165 -0.51648513 -0.69277573
   1.11771427 -0.29699794  0.27786851  0.29761876 -1.62311685  0.08572403
   1.89898041  0.53844685  0.12095722 -1.51225424  0.67136711 -1.3056784
   0.27028881  0.36134283 -2.19792714 -1.58172219  0.68548924  1.77771395
   1.07296667 -1.74951852  0.8706014 ]
 [ 1.25281069  1.99910312 -0.12495406 -0.868637   -1.09001372 -0.12897135
  -1.31086492  0.82812275  1.54584171 -0.04768058 -0.90046245  0.52414105
   0.61138777  1.08550168 -1.10190168  0.51831074 -0.17600788  1.56376658
  -1.24019159  0.44260079 -1.41075912  1.61611252  0.49680738 -0.54905798
  -1.69068098  1.70631324  0.34368893]]
upper = 
[7933.99395862 7933.99395862 7933.99395862 ... 7933.99395862 7933.99395862
 7933.99395862]
upper.argmax() = 0
all predict_target = 
[18381.031 18381.031 18381.031 ... 18381.031 18381.031 18381.031]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
 1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
 8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
 8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
 6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
 6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
 1.53065596e+00 2.62862863e+02 2.14441758e+00]
black_box_function中schafferRun(i) 中的i为[63.01881867431135, 0.36814579525039026, 0.16707522752633308, 450.0039648702609, 1.5032230841169367, 6.531987516727485, 3.4823316476801978, 686.160782663697, 85.20664700646536, 49.87608307555112, 9.698410635290028, 1913016667.1751738, 0.872156021708049, 0.1524303648558728, 186.82330780842335, 0.7156103953365842, 0.6550967523366862, 1158524706.3942978, 1905039520.2842817, 66.63272023055234, 0.006651740923130589, 659.5943467391934, 0.5606029525119136, 38.52435644496572, 1.530655960938093, 262.862862953374, 2.1444175751264876]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 63.01881867431135
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.36814579525039026
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.16707522752633308
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 450.0039648702609
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 1.5032230841169367
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.531987516727485
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 3.4823316476801978
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 686.160782663697
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 85.20664700646536
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 49.87608307555112
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.698410635290028
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1913016667.1751738
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.872156021708049
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.1524303648558728
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 186.82330780842335
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7156103953365842
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.6550967523366862
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1158524706.3942978
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1905039520.2842817
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 66.63272023055234
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.006651740923130589
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 659.5943467391934
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.5606029525119136
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.52435644496572
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1.530655960938093
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 262.862862953374
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.1444175751264876
configNum = 12	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 12 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 63.01881867431135, 'spark.broadcast.checksum': 0.36814579525039026, 'spark.broadcast.compress': 0.16707522752633308, 'spark.default.parallelism': 450.0039648702609, 'spark.executor.cores': 1.5032230841169367, 'spark.executor.instances': 6.531987516727485, 'spark.executor.memory': 3.4823316476801978, 'spark.executor.memoryOverhead': 686.160782663697, 'spark.kryoserializer.buffer': 85.20664700646536, 'spark.kryoserializer.buffer.max': 49.87608307555112, 'spark.locality.wait': 9.698410635290028, 'spark.maxRemoteBlockSizeFetchToMem': 1913016667.1751738, 'spark.memory.fraction': 0.872156021708049, 'spark.memory.offHeap.enabled': 0.1524303648558728, 'spark.memory.offHeap.size': 186.82330780842335, 'spark.memory.storageFraction': 0.7156103953365842, 'spark.rdd.compress': 0.6550967523366862, 'spark.reducer.maxBlocksInFlightPerAddress': 1158524706.3942978, 'spark.reducer.maxReqsInFlight': 1905039520.2842817, 'spark.reducer.maxSizeInFlight': 66.63272023055234, 'spark.scheduler.mode': 0.006651740923130589, 'spark.scheduler.revive.interval': 659.5943467391934, 'spark.shuffle.compress': 0.5606029525119136, 'spark.shuffle.file.buffer': 38.52435644496572, 'spark.shuffle.io.numConnectionsPerPeer': 1.530655960938093, 'spark.shuffle.sort.bypassMergeThreshold': 262.862862953374, 'spark.storage.memoryMapThreshold': 2.1444175751264876} target = -220.801
x_probe = {'spark.broadcast.blockSize': 63.01881867431135, 'spark.broadcast.checksum': 0.36814579525039026, 'spark.broadcast.compress': 0.16707522752633308, 'spark.default.parallelism': 450.0039648702609, 'spark.executor.cores': 1.5032230841169367, 'spark.executor.instances': 6.531987516727485, 'spark.executor.memory': 3.4823316476801978, 'spark.executor.memoryOverhead': 686.160782663697, 'spark.kryoserializer.buffer': 85.20664700646536, 'spark.kryoserializer.buffer.max': 49.87608307555112, 'spark.locality.wait': 9.698410635290028, 'spark.maxRemoteBlockSizeFetchToMem': 1913016667.1751738, 'spark.memory.fraction': 0.872156021708049, 'spark.memory.offHeap.enabled': 0.1524303648558728, 'spark.memory.offHeap.size': 186.82330780842335, 'spark.memory.storageFraction': 0.7156103953365842, 'spark.rdd.compress': 0.6550967523366862, 'spark.reducer.maxBlocksInFlightPerAddress': 1158524706.3942978, 'spark.reducer.maxReqsInFlight': 1905039520.2842817, 'spark.reducer.maxSizeInFlight': 66.63272023055234, 'spark.scheduler.mode': 0.006651740923130589, 'spark.scheduler.revive.interval': 659.5943467391934, 'spark.shuffle.compress': 0.5606029525119136, 'spark.shuffle.file.buffer': 38.52435644496572, 'spark.shuffle.io.numConnectionsPerPeer': 1.530655960938093, 'spark.shuffle.sort.bypassMergeThreshold': 262.862862953374, 'spark.storage.memoryMapThreshold': 2.1444175751264876}
target = -220.801
1376s
{'maxIndex': 1, 'target': -176.341, 'params': {'spark.broadcast.blockSize': 36.0, 'spark.broadcast.checksum': 0.0, 'spark.broadcast.compress': 1.0, 'spark.default.parallelism': 265.0, 'spark.executor.cores': 4.0, 'spark.executor.instances': 5.0, 'spark.executor.memory': 4.0, 'spark.executor.memoryOverhead': 513.0, 'spark.kryoserializer.buffer': 83.0, 'spark.kryoserializer.buffer.max': 38.0, 'spark.locality.wait': 9.0, 'spark.maxRemoteBlockSizeFetchToMem': 1113627989.0, 'spark.memory.fraction': 0.77, 'spark.memory.offHeap.enabled': 0.0, 'spark.memory.offHeap.size': 650.0, 'spark.memory.storageFraction': 0.79, 'spark.rdd.compress': 0.0, 'spark.reducer.maxBlocksInFlightPerAddress': 1465374078.0, 'spark.reducer.maxReqsInFlight': 1307850066.0, 'spark.reducer.maxSizeInFlight': 65.0, 'spark.scheduler.mode': 1.0, 'spark.scheduler.revive.interval': 661.0, 'spark.shuffle.compress': 0.0, 'spark.shuffle.file.buffer': 22.0, 'spark.shuffle.io.numConnectionsPerPeer': 4.0, 'spark.shuffle.sort.bypassMergeThreshold': 241.0, 'spark.storage.memoryMapThreshold': 2.0}}
iterations = 1
iterations = 1
gan_random方法获取的参数:	 n = 6	 type = bo_result	 bo_res_df =       runtime  ...  spark.storage.memoryMapThreshold
1     307.435  ...                          1.650866
2  100000.000  ...                          2.737654
3     316.038  ...                          2.480841
4     220.801  ...                          2.144418

[4 rows x 28 columns]	 iterations = 1
   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                  63.018819  ...                          2.144418

[1 rows x 27 columns]
   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                   0.938676  ...                         -0.237055

[1 rows x 27 columns]
traindata.shape:(1, 27)
traindata.count_value:14.372657225225923
0
2000
Epoch: 0 Loss D.: 0.02924734354019165
Epoch: 0 Loss G.: 15.69956795789321
tensor(14.9384, dtype=torch.float64, grad_fn=<DivBackward0>)
1
2000
Epoch: 1 Loss D.: -0.0008437633514404297
Epoch: 1 Loss G.: 14.965263069719272
tensor(14.8761, dtype=torch.float64, grad_fn=<DivBackward0>)
2
2000
Epoch: 2 Loss D.: -0.004580020904541016
Epoch: 2 Loss G.: 15.313662028983432
tensor(14.8056, dtype=torch.float64, grad_fn=<DivBackward0>)
3
2000
Epoch: 3 Loss D.: -0.004197180271148682
Epoch: 3 Loss G.: 15.026133705711862
tensor(14.7840, dtype=torch.float64, grad_fn=<DivBackward0>)
4
2000
Epoch: 4 Loss D.: 0.006758570671081543
Epoch: 4 Loss G.: 14.686848087439577
tensor(14.5318, dtype=torch.float64, grad_fn=<DivBackward0>)
5
2000
Epoch: 5 Loss D.: -0.0004494190216064453
Epoch: 5 Loss G.: 14.897921862862011
tensor(14.7480, dtype=torch.float64, grad_fn=<DivBackward0>)
6
2000
Epoch: 6 Loss D.: -0.0012187957763671875
Epoch: 6 Loss G.: 14.20849886640926
tensor(14.4808, dtype=torch.float64, grad_fn=<DivBackward0>)
7
2000
Epoch: 7 Loss D.: -0.004906892776489258
Epoch: 7 Loss G.: 14.37526189267655
tensor(14.2874, dtype=torch.float64, grad_fn=<DivBackward0>)
8
2000
Epoch: 8 Loss D.: -0.003702223300933838
Epoch: 8 Loss G.: 13.86257878117164
tensor(14.2584, dtype=torch.float64, grad_fn=<DivBackward0>)
9
2000
Epoch: 9 Loss D.: 0.0035133957862854004
Epoch: 9 Loss G.: 14.286821969896751
tensor(14.1695, dtype=torch.float64, grad_fn=<DivBackward0>)
10
2000
Epoch: 10 Loss D.: -0.001989305019378662
Epoch: 10 Loss G.: 14.103797455521564
tensor(14.1426, dtype=torch.float64, grad_fn=<DivBackward0>)
11
2000
Epoch: 11 Loss D.: -0.001900315284729004
Epoch: 11 Loss G.: 13.377363161387182
tensor(13.8846, dtype=torch.float64, grad_fn=<DivBackward0>)
12
2000
Epoch: 12 Loss D.: 0.001155257225036621
Epoch: 12 Loss G.: 14.024811090082126
tensor(13.8817, dtype=torch.float64, grad_fn=<DivBackward0>)
13
2000
Epoch: 13 Loss D.: -0.00684279203414917
Epoch: 13 Loss G.: 13.184675050080015
tensor(13.7676, dtype=torch.float64, grad_fn=<DivBackward0>)
14
2000
Epoch: 14 Loss D.: -0.0019451379776000977
Epoch: 14 Loss G.: 13.212541096602434
tensor(13.3598, dtype=torch.float64, grad_fn=<DivBackward0>)
15
2000
Epoch: 15 Loss D.: -0.003347933292388916
Epoch: 15 Loss G.: 12.75630815777828
tensor(13.0542, dtype=torch.float64, grad_fn=<DivBackward0>)
16
2000
Epoch: 16 Loss D.: -0.008276700973510742
Epoch: 16 Loss G.: 12.933462592976428
tensor(13.3080, dtype=torch.float64, grad_fn=<DivBackward0>)
17
2000
Epoch: 17 Loss D.: -0.0006108880043029785
Epoch: 17 Loss G.: 14.60826030477901
tensor(13.0180, dtype=torch.float64, grad_fn=<DivBackward0>)
18
2000
Epoch: 18 Loss D.: -0.0022927522659301758
Epoch: 18 Loss G.: 11.943909971824782
tensor(13.3687, dtype=torch.float64, grad_fn=<DivBackward0>)
19
2000
Epoch: 19 Loss D.: 0.006082653999328613
Epoch: 19 Loss G.: 12.213893023169534
tensor(12.0234, dtype=torch.float64, grad_fn=<DivBackward0>)
20
2000
Epoch: 20 Loss D.: -0.010871648788452148
Epoch: 20 Loss G.: 13.82454916540434
tensor(11.9324, dtype=torch.float64, grad_fn=<DivBackward0>)
21
2000
Epoch: 21 Loss D.: 0.009843438863754272
Epoch: 21 Loss G.: 11.671535231954353
tensor(12.2996, dtype=torch.float64, grad_fn=<DivBackward0>)
22
2000
Epoch: 22 Loss D.: 0.010698437690734863
Epoch: 22 Loss G.: 10.801200527765817
tensor(12.1677, dtype=torch.float64, grad_fn=<DivBackward0>)
23
2000
Epoch: 23 Loss D.: -0.008799850940704346
Epoch: 23 Loss G.: 13.870503729899285
tensor(12.3588, dtype=torch.float64, grad_fn=<DivBackward0>)
24
2000
Epoch: 24 Loss D.: -0.003573179244995117
Epoch: 24 Loss G.: 11.436739415711658
tensor(12.1682, dtype=torch.float64, grad_fn=<DivBackward0>)
25
2000
Epoch: 25 Loss D.: -0.002484560012817383
Epoch: 25 Loss G.: 13.324541539997055
tensor(11.4634, dtype=torch.float64, grad_fn=<DivBackward0>)
26
2000
Epoch: 26 Loss D.: -0.002814948558807373
Epoch: 26 Loss G.: 12.907990643026567
tensor(11.9996, dtype=torch.float64, grad_fn=<DivBackward0>)
27
2000
Epoch: 27 Loss D.: 0.0039598941802978516
Epoch: 27 Loss G.: 9.177929889832049
tensor(10.8003, dtype=torch.float64, grad_fn=<DivBackward0>)
28
2000
Epoch: 28 Loss D.: -0.021288394927978516
Epoch: 28 Loss G.: 9.869200714975788
tensor(11.1497, dtype=torch.float64, grad_fn=<DivBackward0>)
29
2000
Epoch: 29 Loss D.: -0.0016006827354431152
Epoch: 29 Loss G.: 9.601330831849536
tensor(10.9607, dtype=torch.float64, grad_fn=<DivBackward0>)
30
2000
Epoch: 30 Loss D.: -0.0016823410987854004
Epoch: 30 Loss G.: 8.703917970152832
tensor(10.6297, dtype=torch.float64, grad_fn=<DivBackward0>)
31
2000
Epoch: 31 Loss D.: -0.002806544303894043
Epoch: 31 Loss G.: 10.584584384915287
tensor(10.4671, dtype=torch.float64, grad_fn=<DivBackward0>)
32
2000
Epoch: 32 Loss D.: 0.00450444221496582
Epoch: 32 Loss G.: 13.106270616146064
tensor(9.5243, dtype=torch.float64, grad_fn=<DivBackward0>)
33
2000
Epoch: 33 Loss D.: 0.004303932189941406
Epoch: 33 Loss G.: 8.045766561184553
tensor(10.0625, dtype=torch.float64, grad_fn=<DivBackward0>)
34
2000
Epoch: 34 Loss D.: -0.0034027099609375
Epoch: 34 Loss G.: 12.337478633505475
tensor(9.0803, dtype=torch.float64, grad_fn=<DivBackward0>)
35
2000
Epoch: 35 Loss D.: 0.0017199516296386719
Epoch: 35 Loss G.: 11.485696782469942
tensor(8.5935, dtype=torch.float64, grad_fn=<DivBackward0>)
36
2000
Epoch: 36 Loss D.: 0.0029866695404052734
Epoch: 36 Loss G.: 8.275859782375564
tensor(8.9551, dtype=torch.float64, grad_fn=<DivBackward0>)
37
2000
Epoch: 37 Loss D.: 0.00015401840209960938
Epoch: 37 Loss G.: 6.671832601254725
tensor(9.2954, dtype=torch.float64, grad_fn=<DivBackward0>)
38
2000
Epoch: 38 Loss D.: -0.001300811767578125
Epoch: 38 Loss G.: 6.594660304307726
tensor(8.2647, dtype=torch.float64, grad_fn=<DivBackward0>)
39
2000
Epoch: 39 Loss D.: 0.005511045455932617
Epoch: 39 Loss G.: 7.438593468290702
tensor(8.3635, dtype=torch.float64, grad_fn=<DivBackward0>)
40
2000
Epoch: 40 Loss D.: -0.002500295639038086
Epoch: 40 Loss G.: 10.339958195424574
tensor(8.9223, dtype=torch.float64, grad_fn=<DivBackward0>)
41
2000
Epoch: 41 Loss D.: -0.00830012559890747
Epoch: 41 Loss G.: 6.41045251181177
tensor(7.3245, dtype=torch.float64, grad_fn=<DivBackward0>)
42
2000
Epoch: 42 Loss D.: -0.006592810153961182
Epoch: 42 Loss G.: 6.840935667301355
tensor(6.3644, dtype=torch.float64, grad_fn=<DivBackward0>)
43
2000
Epoch: 43 Loss D.: -0.0032555460929870605
Epoch: 43 Loss G.: 5.480287138385827
tensor(8.3850, dtype=torch.float64, grad_fn=<DivBackward0>)
44
2000
Epoch: 44 Loss D.: -0.0025009512901306152
Epoch: 44 Loss G.: 5.341284747939507
tensor(6.0633, dtype=torch.float64, grad_fn=<DivBackward0>)
45
2000
Epoch: 45 Loss D.: 0.003106534481048584
Epoch: 45 Loss G.: 5.0906042308332955
tensor(5.8635, dtype=torch.float64, grad_fn=<DivBackward0>)
46
2000
Epoch: 46 Loss D.: -0.008507251739501953
Epoch: 46 Loss G.: 5.265430870234968
tensor(5.2384, dtype=torch.float64, grad_fn=<DivBackward0>)
47
2000
Epoch: 47 Loss D.: 0.006935179233551025
Epoch: 47 Loss G.: 4.701644460492825
tensor(7.0495, dtype=torch.float64, grad_fn=<DivBackward0>)
48
2000
Epoch: 48 Loss D.: 0.004589676856994629
Epoch: 48 Loss G.: 4.339763179145254
tensor(5.8200, dtype=torch.float64, grad_fn=<DivBackward0>)
49
2000
Epoch: 49 Loss D.: -0.004566609859466553
Epoch: 49 Loss G.: 3.6953467976568923
tensor(4.9645, dtype=torch.float64, grad_fn=<DivBackward0>)
50
2000
Epoch: 50 Loss D.: -0.005968451499938965
Epoch: 50 Loss G.: 3.626280146666256
tensor(6.1901, dtype=torch.float64, grad_fn=<DivBackward0>)
51
2000
Epoch: 51 Loss D.: -0.00047713518142700195
Epoch: 51 Loss G.: 3.683287866502108
tensor(3.8354, dtype=torch.float64, grad_fn=<DivBackward0>)
52
2000
Epoch: 52 Loss D.: 0.010897934436798096
Epoch: 52 Loss G.: 3.6096550079824334
tensor(5.6583, dtype=torch.float64, grad_fn=<DivBackward0>)
53
2000
Epoch: 53 Loss D.: 0.0013679862022399902
Epoch: 53 Loss G.: 2.6963489343633134
tensor(4.9352, dtype=torch.float64, grad_fn=<DivBackward0>)
54
2000
Epoch: 54 Loss D.: -0.005232870578765869
Epoch: 54 Loss G.: 2.7104553480137685
tensor(4.2179, dtype=torch.float64, grad_fn=<DivBackward0>)
55
2000
Epoch: 55 Loss D.: -0.0015980005264282227
Epoch: 55 Loss G.: 4.585380609904241
tensor(5.3550, dtype=torch.float64, grad_fn=<DivBackward0>)
56
2000
Epoch: 56 Loss D.: -0.0011835098266601562
Epoch: 56 Loss G.: 4.740807989784199
tensor(3.5314, dtype=torch.float64, grad_fn=<DivBackward0>)
57
2000
Epoch: 57 Loss D.: -0.00023627281188964844
Epoch: 57 Loss G.: 2.4598505450180994
tensor(4.3650, dtype=torch.float64, grad_fn=<DivBackward0>)
58
2000
Epoch: 58 Loss D.: 0.0023076534271240234
Epoch: 58 Loss G.: 7.061807569897671
tensor(4.4743, dtype=torch.float64, grad_fn=<DivBackward0>)
59
2000
Epoch: 59 Loss D.: -0.0032365918159484863
Epoch: 59 Loss G.: 2.4997614761182896
tensor(4.2756, dtype=torch.float64, grad_fn=<DivBackward0>)
60
2000
Epoch: 60 Loss D.: 0.0015094876289367676
Epoch: 60 Loss G.: 2.7255020504008365
tensor(3.7430, dtype=torch.float64, grad_fn=<DivBackward0>)
61
2000
Epoch: 61 Loss D.: -0.006426572799682617
Epoch: 61 Loss G.: 7.892842461205023
tensor(5.3222, dtype=torch.float64, grad_fn=<DivBackward0>)
62
2000
Epoch: 62 Loss D.: 0.004860997200012207
Epoch: 62 Loss G.: 4.248838534336193
tensor(3.4264, dtype=torch.float64, grad_fn=<DivBackward0>)
63
2000
Epoch: 63 Loss D.: 0.0007446408271789551
Epoch: 63 Loss G.: 3.888504777480186
tensor(4.5522, dtype=torch.float64, grad_fn=<DivBackward0>)
64
2000
Epoch: 64 Loss D.: 0.005655109882354736
Epoch: 64 Loss G.: 4.241618403849331
tensor(3.9516, dtype=torch.float64, grad_fn=<DivBackward0>)
65
2000
Epoch: 65 Loss D.: -0.004697859287261963
Epoch: 65 Loss G.: 2.3500669207232963
tensor(5.2238, dtype=torch.float64, grad_fn=<DivBackward0>)
66
2000
Epoch: 66 Loss D.: -0.005539596080780029
Epoch: 66 Loss G.: 8.478454231060317
tensor(4.8821, dtype=torch.float64, grad_fn=<DivBackward0>)
67
2000
Epoch: 67 Loss D.: 0.0025370121002197266
Epoch: 67 Loss G.: 4.774438019780194
tensor(2.3074, dtype=torch.float64, grad_fn=<DivBackward0>)
68
2000
Epoch: 68 Loss D.: 0.00189208984375
Epoch: 68 Loss G.: 2.741996200021983
tensor(2.7694, dtype=torch.float64, grad_fn=<DivBackward0>)
69
2000
Epoch: 69 Loss D.: -0.018113255500793457
Epoch: 69 Loss G.: 4.2575537715307314
tensor(3.5435, dtype=torch.float64, grad_fn=<DivBackward0>)
70
2000
Epoch: 70 Loss D.: 0.004374563694000244
Epoch: 70 Loss G.: 4.317669877332823
tensor(2.8117, dtype=torch.float64, grad_fn=<DivBackward0>)
71
2000
Epoch: 71 Loss D.: -0.016926586627960205
Epoch: 71 Loss G.: 3.3979581671763075
tensor(2.6037, dtype=torch.float64, grad_fn=<DivBackward0>)
72
2000
Epoch: 72 Loss D.: -0.003634810447692871
Epoch: 72 Loss G.: 3.10529187895632
tensor(2.8707, dtype=torch.float64, grad_fn=<DivBackward0>)
73
2000
Epoch: 73 Loss D.: 0.014988631010055542
Epoch: 73 Loss G.: 5.14391773307536
tensor(2.8619, dtype=torch.float64, grad_fn=<DivBackward0>)
74
2000
Epoch: 74 Loss D.: -0.0004884600639343262
Epoch: 74 Loss G.: 2.204308946075836
tensor(2.4541, dtype=torch.float64, grad_fn=<DivBackward0>)
75
2000
Epoch: 75 Loss D.: -0.010444819927215576
Epoch: 75 Loss G.: 1.6186757259478184
tensor(2.7922, dtype=torch.float64, grad_fn=<DivBackward0>)
76
2000
Epoch: 76 Loss D.: -0.00899052619934082
Epoch: 76 Loss G.: 3.9390556690134044
tensor(1.9414, dtype=torch.float64, grad_fn=<DivBackward0>)
77
2000
Epoch: 77 Loss D.: 0.0017912983894348145
Epoch: 77 Loss G.: 3.029465502102594
tensor(1.7832, dtype=torch.float64, grad_fn=<DivBackward0>)
78
2000
Epoch: 78 Loss D.: 0.0032881498336791992
Epoch: 78 Loss G.: 2.076275555115918
tensor(2.5994, dtype=torch.float64, grad_fn=<DivBackward0>)
79
2000
Epoch: 79 Loss D.: -0.00928187370300293
Epoch: 79 Loss G.: 1.59072519492983
tensor(1.9114, dtype=torch.float64, grad_fn=<DivBackward0>)
80
2000
Epoch: 80 Loss D.: 0.0041252970695495605
Epoch: 80 Loss G.: 2.1764197527741174
tensor(1.7898, dtype=torch.float64, grad_fn=<DivBackward0>)
81
2000
Epoch: 81 Loss D.: 0.002937793731689453
Epoch: 81 Loss G.: 2.363603111124088
tensor(2.1149, dtype=torch.float64, grad_fn=<DivBackward0>)
82
2000
Epoch: 82 Loss D.: -0.00030678510665893555
Epoch: 82 Loss G.: 0.9927793950671294
tensor(2.0783, dtype=torch.float64, grad_fn=<DivBackward0>)
在第82轮收敛
----------------第0轮的原数据---------------------
         range  dissimilarity_value  ...  Euclidean_distance   distance
0     3.947390             0.099366  ...            0.296169  33.832004
1     3.947390             0.097987  ...            0.378894  26.836079
2     3.947390             0.111063  ...            0.841184  10.537020
3     3.947390             0.136233  ...            1.327049   5.350500
4     3.947390             0.118262  ...            0.987587   8.413815
..         ...                  ...  ...                 ...        ...
195   8.970713             0.103078  ...            0.562914  17.161415
196   9.064334             0.098065  ...            0.617550  16.425509
197   9.293532             0.102779  ...            0.643529  15.042064
198  14.786738             0.109522  ...            0.852642  10.658450
199  15.497596             0.115718  ...            1.177148   7.295340

[200 rows x 5 columns]
-----------------按照dissimilarity_value排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    5.981                0.093         0.997               0.248    43.257
1    6.131                0.095         0.996               0.347    30.106
2    6.081                0.096         0.997               0.358    28.874
3    6.090                0.096         0.996               0.335    30.861
4    3.947                0.096         0.996               0.277    37.322
..     ...                  ...           ...                 ...       ...
195  4.078                0.139         0.975               1.466     4.781
196  4.097                0.139         0.970               1.430     4.883
197  4.678                0.141         0.978               1.368     5.068
198  4.257                0.144         0.945               1.508     4.353
199  4.193                0.150         0.966               1.650     3.914

[200 rows x 5 columns]
-----------------按照range排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     3.947                0.108         0.993               0.446    20.610
1     3.947                0.099         0.996               0.352    28.526
2     3.947                0.113         0.995               0.639    13.724
3     3.947                0.111         0.993               0.613    14.621
4     3.947                0.111         0.984               0.841    10.537
..      ...                  ...           ...                 ...       ...
195   8.971                0.103         0.996               0.563    17.161
196   9.064                0.098         0.995               0.618    16.426
197   9.294                0.103         0.995               0.644    15.042
198  14.787                0.110         0.995               0.853    10.658
199  15.498                0.116         0.994               1.177     7.295

[200 rows x 5 columns]
-----------------按照cos_distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    4.257                0.144         0.945               1.508     4.353
1    4.193                0.150         0.966               1.650     3.914
2    3.947                0.136         0.967               1.327     5.351
3    4.097                0.139         0.970               1.430     4.883
4    4.052                0.136         0.971               1.256     5.694
..     ...                  ...           ...                 ...       ...
195  3.947                0.097         0.997               0.255    40.251
196  6.560                0.100         0.997               0.600    16.570
197  6.580                0.104         0.998               0.616    15.570
198  3.947                0.101         0.998               0.220    45.066
199  6.117                0.096         0.998               0.302    34.540

[200 rows x 5 columns]
-----------------按照Euclidean_distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    3.947                0.101         0.998               0.220    45.066
1    3.965                0.101         0.997               0.248    39.692
2    5.981                0.093         0.997               0.248    43.257
3    4.055                0.103         0.997               0.252    38.420
4    3.947                0.097         0.997               0.255    40.251
..     ...                  ...           ...                 ...       ...
195  4.678                0.141         0.978               1.368     5.068
196  4.097                0.139         0.970               1.430     4.883
197  4.078                0.139         0.975               1.466     4.781
198  4.257                0.144         0.945               1.508     4.353
199  4.193                0.150         0.966               1.650     3.914

[200 rows x 5 columns]
-----------------按照distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    3.947                0.101         0.998               0.220    45.066
1    5.981                0.093         0.997               0.248    43.257
2    3.947                0.097         0.997               0.255    40.251
3    3.965                0.101         0.997               0.248    39.692
4    4.055                0.103         0.997               0.252    38.420
..     ...                  ...           ...                 ...       ...
195  4.678                0.141         0.978               1.368     5.068
196  4.097                0.139         0.970               1.430     4.883
197  4.078                0.139         0.975               1.466     4.781
198  4.257                0.144         0.945               1.508     4.353
199  4.193                0.150         0.966               1.650     3.914

[200 rows x 5 columns]
   distance
0    45.066
1    43.257
2    40.251
3    24.903
4    24.813
5    24.478
6     4.781
7     4.353
8     3.914
   distance
0    45.066
1    24.903
2     3.914
3    43.257
4    24.813
5     4.353
6    40.251
7    24.478
8     4.781
sgan数据生成时间花费为：3.55
   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                       62.0  ...                               2.0
1                       63.0  ...                               2.0
2                       53.0  ...                               2.0
3                       63.0  ...                               2.0
4                       62.0  ...                               2.0
5                       55.0  ...                               2.0
6                       63.0  ...                               2.0
7                       64.0  ...                               2.0
8                       54.0  ...                               2.0

[9 rows x 27 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 62.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 459.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 7.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 680.0
================= config13 =================
2022年 02月 22日 星期二 14:47:20 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (281416) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (267329) - 没有那个进程
================= config14 =================
2022年 02月 22日 星期二 14:51:12 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (306670) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (306193) - 没有那个进程
================= config15 =================
2022年 02月 22日 星期二 14:57:40 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (310952) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (1360) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 88.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 51.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 10.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1911303424.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8799999952316284
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 221.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7099999785423279
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1119786752.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1894369024.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 68.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 641.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 39.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 2.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 260.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.0
configNum = 13	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 13 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       62.0  ...  223.547

[1 rows x 28 columns]
   spark.broadcast.blockSize  ...     runtime
0                  63.018819  ...     220.801
1                  55.745260  ...     307.435
2                  54.164248  ...     316.038
3                  34.672379  ...  100000.000
4                  62.000000  ...     223.547

[5 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 63.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 450.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 676.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 87.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 51.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1821221248.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8799999952316284
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 231.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7200000286102295
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1191839488.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1838431360.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 69.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 656.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 2.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 265.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.0
configNum = 14	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 14 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       63.0  ...  379.414

[1 rows x 28 columns]
   spark.broadcast.blockSize  ...     runtime
0                  63.018819  ...     220.801
1                  55.745260  ...     307.435
2                  54.164248  ...     316.038
3                  34.672379  ...  100000.000
4                  62.000000  ...     223.547
5                  63.000000  ...     379.414

[6 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 53.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 400.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 646.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 87.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 62.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1758088832.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7599999904632568
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 234.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7200000286102295
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1349272960.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1727917056.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 61.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 698.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 35.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 2.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 261.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.0
configNum = 15	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 15 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...   runtime
0                       53.0  ...  100000.0

[1 rows x 28 columns]
   spark.broadcast.blockSize  ...     runtime
0                  63.018819  ...     220.801
1                  55.745260  ...     307.435
2                  54.164248  ...     316.038
3                  34.672379  ...  100000.000
4                  62.000000  ...     223.547
5                  63.000000  ...     379.414
6                  53.000000  ...  100000.000

[7 rows x 28 columns]
   spark.broadcast.blockSize  ...     runtime
0                  63.018819  ...     220.801
1                  55.745260  ...     307.435
2                  54.164248  ...     316.038
3                  34.672379  ...  100000.000
4                  62.000000  ...     223.547
5                  63.000000  ...     379.414
6                  53.000000  ...  100000.000

[7 rows x 28 columns]
选择50%rs和50%gan的所有样本作为bo算法的初始样本,样本个数为:7
------------使用ganrs生成初始样本点------------
Tmax = 137.5
self._queue.empty = True
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (7, 27)
before probe, target = (7,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]]
标准化后的train_x = 
[[ 8.59937828e-01  8.25456280e-02 -3.26377463e-02  7.36535141e-01
  -7.82254503e-01  9.64856901e-01 -6.08398144e-01  8.19823153e-01
  -6.64122408e-01 -6.56939772e-01  9.71950537e-01  1.20015771e+00
   4.65665808e-01 -4.64752195e-01 -1.00224011e+00  3.92468541e-01
  -5.31394023e-02 -7.51932727e-01  9.74834477e-01  7.54959254e-01
  -5.88949323e-01 -2.41509720e-01 -8.49995808e-01  7.62456676e-01
  -7.92137051e-01 -6.62891138e-02 -1.22868547e-03]
 [ 7.14838254e-02  3.10097085e-01 -6.38897787e-01  6.08045130e-01
   6.25438794e-01 -1.10757593e+00  9.17397835e-01 -2.08231729e-01
   3.86311387e-02  2.38093843e+00  9.40840830e-02 -5.57200148e-01
   2.53431861e-01  7.43529844e-01  1.13293297e+00 -1.24362570e+00
  -1.30165557e+00 -3.17490812e-01 -1.53279553e+00 -8.84826199e-01
   2.29299406e+00  3.37226625e-01 -9.52772032e-01 -1.59127514e+00
   1.14584609e+00  9.25885089e-01 -1.48811652e+00]
 [-9.98979253e-02  1.42897626e+00  2.10784215e+00 -1.91357870e+00
   7.68388640e-03 -7.19018991e-01 -9.75239797e-01  4.67866878e-01
   2.39989415e+00 -3.37855753e-01 -1.10501214e+00 -8.30143865e-01
  -8.85909285e-01  1.62793377e+00  4.17548288e-01  1.33587299e+00
  -1.37435191e+00  2.19609493e+00 -1.42784153e+00 -6.26082643e-01
   4.32631498e-01  2.03661105e+00 -9.89552087e-01 -1.53047063e+00
  -1.00131698e+00  1.41373061e+00  1.01228816e+00]
 [-2.21281705e+00  1.28215366e+00  7.47269261e-01 -1.06704435e+00
   1.33201815e+00 -1.34816805e+00  1.87825144e+00 -2.28904436e+00
  -3.82865541e-01  2.26006090e-02 -1.78158651e+00 -1.67956048e+00
   9.38947414e-01  9.38979227e-01  1.69167518e+00 -1.72503218e+00
  -3.96589481e-01 -5.53888001e-02 -1.35599194e-01 -9.40107368e-01
  -3.10337749e-01 -1.55653098e+00 -6.55043239e-01  5.41104570e-01
   1.88354457e+00 -2.02863584e+00  1.78597161e+00]
 [ 7.49497853e-01 -1.03459088e+00 -7.27858625e-01  8.62347170e-01
   3.96923670e-01  1.50252759e+00 -1.14321715e+00  6.83492773e-01
  -4.01063718e-01 -6.12983645e-01  1.12960711e+00  1.18820176e+00
   6.42041484e-01 -9.48563549e-01 -7.93470825e-01  2.81085731e-01
   1.04191212e+00 -9.99528524e-01  9.41149511e-01  1.16469126e+00
  -6.08779494e-01 -4.12045865e-01  1.14912106e+00  8.24914199e-01
  -4.11978878e-01 -1.16967735e-01 -4.36304856e-01]
 [ 8.57897883e-01 -1.03459088e+00 -7.27858625e-01  7.36479692e-01
  -1.97673367e+00  3.53689240e-01 -3.43970932e-02  5.94977799e-01
  -4.95236811e-01 -6.12983645e-01  6.06854677e-01  5.59558852e-01
   6.42041484e-01 -9.48563549e-01 -7.32385545e-01  4.79615309e-01
   1.04191212e+00 -5.38999442e-01  7.64563691e-01  1.46436073e+00
  -6.08779494e-01 -2.74474902e-01  1.14912106e+00  6.93602585e-01
  -4.11978878e-01 -2.84573487e-02 -4.36304856e-01]
 [-2.26102416e-01 -1.03459088e+00 -7.27858625e-01  3.72159216e-02
   3.96923670e-01  3.53689240e-01 -3.43970932e-02 -6.88845080e-02
  -4.95236811e-01 -1.82776223e-01  8.41022425e-02  1.18986176e-01
  -2.05621876e+00 -9.48563549e-01 -7.14059961e-01  4.79615309e-01
   1.04191212e+00  4.67245379e-01  4.15688575e-01 -9.32995027e-01
  -6.08779494e-01  1.10723793e-01  1.14912106e+00  2.99667741e-01
  -4.11978878e-01 -9.92656577e-02 -4.36304856e-01]]
train_y = 
[   -220.801    -307.435    -316.038 -100000.       -223.547    -379.414
 -100000.   ]
测试：每一列进行标准化，标准化后的train_x = 
[[ 8.59937828e-01  8.25456280e-02 -3.26377463e-02  7.36535141e-01
  -7.82254503e-01  9.64856901e-01 -6.08398144e-01  8.19823153e-01
  -6.64122408e-01 -6.56939772e-01  9.71950537e-01  1.20015771e+00
   4.65665808e-01 -4.64752195e-01 -1.00224011e+00  3.92468541e-01
  -5.31394023e-02 -7.51932727e-01  9.74834477e-01  7.54959254e-01
  -5.88949323e-01 -2.41509720e-01 -8.49995808e-01  7.62456676e-01
  -7.92137051e-01 -6.62891138e-02 -1.22868547e-03]
 [ 7.14838254e-02  3.10097085e-01 -6.38897787e-01  6.08045130e-01
   6.25438794e-01 -1.10757593e+00  9.17397835e-01 -2.08231729e-01
   3.86311387e-02  2.38093843e+00  9.40840830e-02 -5.57200148e-01
   2.53431861e-01  7.43529844e-01  1.13293297e+00 -1.24362570e+00
  -1.30165557e+00 -3.17490812e-01 -1.53279553e+00 -8.84826199e-01
   2.29299406e+00  3.37226625e-01 -9.52772032e-01 -1.59127514e+00
   1.14584609e+00  9.25885089e-01 -1.48811652e+00]
 [-9.98979253e-02  1.42897626e+00  2.10784215e+00 -1.91357870e+00
   7.68388640e-03 -7.19018991e-01 -9.75239797e-01  4.67866878e-01
   2.39989415e+00 -3.37855753e-01 -1.10501214e+00 -8.30143865e-01
  -8.85909285e-01  1.62793377e+00  4.17548288e-01  1.33587299e+00
  -1.37435191e+00  2.19609493e+00 -1.42784153e+00 -6.26082643e-01
   4.32631498e-01  2.03661105e+00 -9.89552087e-01 -1.53047063e+00
  -1.00131698e+00  1.41373061e+00  1.01228816e+00]
 [-2.21281705e+00  1.28215366e+00  7.47269261e-01 -1.06704435e+00
   1.33201815e+00 -1.34816805e+00  1.87825144e+00 -2.28904436e+00
  -3.82865541e-01  2.26006090e-02 -1.78158651e+00 -1.67956048e+00
   9.38947414e-01  9.38979227e-01  1.69167518e+00 -1.72503218e+00
  -3.96589481e-01 -5.53888001e-02 -1.35599194e-01 -9.40107368e-01
  -3.10337749e-01 -1.55653098e+00 -6.55043239e-01  5.41104570e-01
   1.88354457e+00 -2.02863584e+00  1.78597161e+00]
 [ 7.49497853e-01 -1.03459088e+00 -7.27858625e-01  8.62347170e-01
   3.96923670e-01  1.50252759e+00 -1.14321715e+00  6.83492773e-01
  -4.01063718e-01 -6.12983645e-01  1.12960711e+00  1.18820176e+00
   6.42041484e-01 -9.48563549e-01 -7.93470825e-01  2.81085731e-01
   1.04191212e+00 -9.99528524e-01  9.41149511e-01  1.16469126e+00
  -6.08779494e-01 -4.12045865e-01  1.14912106e+00  8.24914199e-01
  -4.11978878e-01 -1.16967735e-01 -4.36304856e-01]
 [ 8.57897883e-01 -1.03459088e+00 -7.27858625e-01  7.36479692e-01
  -1.97673367e+00  3.53689240e-01 -3.43970932e-02  5.94977799e-01
  -4.95236811e-01 -6.12983645e-01  6.06854677e-01  5.59558852e-01
   6.42041484e-01 -9.48563549e-01 -7.32385545e-01  4.79615309e-01
   1.04191212e+00 -5.38999442e-01  7.64563691e-01  1.46436073e+00
  -6.08779494e-01 -2.74474902e-01  1.14912106e+00  6.93602585e-01
  -4.11978878e-01 -2.84573487e-02 -4.36304856e-01]
 [-2.26102416e-01 -1.03459088e+00 -7.27858625e-01  3.72159216e-02
   3.96923670e-01  3.53689240e-01 -3.43970932e-02 -6.88845080e-02
  -4.95236811e-01 -1.82776223e-01  8.41022425e-02  1.18986176e-01
  -2.05621876e+00 -9.48563549e-01 -7.14059961e-01  4.79615309e-01
   1.04191212e+00  4.67245379e-01  4.15688575e-01 -9.32995027e-01
  -6.08779494e-01  1.10723793e-01  1.14912106e+00  2.99667741e-01
  -4.11978878e-01 -9.92656577e-02 -4.36304856e-01]]
================= config16 =================
2022年 02月 22日 星期二 14:59:09 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (12947) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (25071) - 没有那个进程
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 8.59937828e-01  8.25456280e-02 -3.26377463e-02  7.36535141e-01
  -7.82254503e-01  9.64856901e-01 -6.08398144e-01  8.19823153e-01
  -6.64122408e-01 -6.56939772e-01  9.71950537e-01  1.20015771e+00
   4.65665808e-01 -4.64752195e-01 -1.00224011e+00  3.92468541e-01
  -5.31394023e-02 -7.51932727e-01  9.74834477e-01  7.54959254e-01
  -5.88949323e-01 -2.41509720e-01 -8.49995808e-01  7.62456676e-01
  -7.92137051e-01 -6.62891138e-02 -1.22868547e-03]
 [ 7.14838254e-02  3.10097085e-01 -6.38897787e-01  6.08045130e-01
   6.25438794e-01 -1.10757593e+00  9.17397835e-01 -2.08231729e-01
   3.86311387e-02  2.38093843e+00  9.40840830e-02 -5.57200148e-01
   2.53431861e-01  7.43529844e-01  1.13293297e+00 -1.24362570e+00
  -1.30165557e+00 -3.17490812e-01 -1.53279553e+00 -8.84826199e-01
   2.29299406e+00  3.37226625e-01 -9.52772032e-01 -1.59127514e+00
   1.14584609e+00  9.25885089e-01 -1.48811652e+00]
 [-9.98979253e-02  1.42897626e+00  2.10784215e+00 -1.91357870e+00
   7.68388640e-03 -7.19018991e-01 -9.75239797e-01  4.67866878e-01
   2.39989415e+00 -3.37855753e-01 -1.10501214e+00 -8.30143865e-01
  -8.85909285e-01  1.62793377e+00  4.17548288e-01  1.33587299e+00
  -1.37435191e+00  2.19609493e+00 -1.42784153e+00 -6.26082643e-01
   4.32631498e-01  2.03661105e+00 -9.89552087e-01 -1.53047063e+00
  -1.00131698e+00  1.41373061e+00  1.01228816e+00]
 [-2.21281705e+00  1.28215366e+00  7.47269261e-01 -1.06704435e+00
   1.33201815e+00 -1.34816805e+00  1.87825144e+00 -2.28904436e+00
  -3.82865541e-01  2.26006090e-02 -1.78158651e+00 -1.67956048e+00
   9.38947414e-01  9.38979227e-01  1.69167518e+00 -1.72503218e+00
  -3.96589481e-01 -5.53888001e-02 -1.35599194e-01 -9.40107368e-01
  -3.10337749e-01 -1.55653098e+00 -6.55043239e-01  5.41104570e-01
   1.88354457e+00 -2.02863584e+00  1.78597161e+00]
 [ 7.49497853e-01 -1.03459088e+00 -7.27858625e-01  8.62347170e-01
   3.96923670e-01  1.50252759e+00 -1.14321715e+00  6.83492773e-01
  -4.01063718e-01 -6.12983645e-01  1.12960711e+00  1.18820176e+00
   6.42041484e-01 -9.48563549e-01 -7.93470825e-01  2.81085731e-01
   1.04191212e+00 -9.99528524e-01  9.41149511e-01  1.16469126e+00
  -6.08779494e-01 -4.12045865e-01  1.14912106e+00  8.24914199e-01
  -4.11978878e-01 -1.16967735e-01 -4.36304856e-01]
 [ 8.57897883e-01 -1.03459088e+00 -7.27858625e-01  7.36479692e-01
  -1.97673367e+00  3.53689240e-01 -3.43970932e-02  5.94977799e-01
  -4.95236811e-01 -6.12983645e-01  6.06854677e-01  5.59558852e-01
   6.42041484e-01 -9.48563549e-01 -7.32385545e-01  4.79615309e-01
   1.04191212e+00 -5.38999442e-01  7.64563691e-01  1.46436073e+00
  -6.08779494e-01 -2.74474902e-01  1.14912106e+00  6.93602585e-01
  -4.11978878e-01 -2.84573487e-02 -4.36304856e-01]
 [-2.26102416e-01 -1.03459088e+00 -7.27858625e-01  3.72159216e-02
   3.96923670e-01  3.53689240e-01 -3.43970932e-02 -6.88845080e-02
  -4.95236811e-01 -1.82776223e-01  8.41022425e-02  1.18986176e-01
  -2.05621876e+00 -9.48563549e-01 -7.14059961e-01  4.79615309e-01
   1.04191212e+00  4.67245379e-01  4.15688575e-01 -9.32995027e-01
  -6.08779494e-01  1.10723793e-01  1.14912106e+00  2.99667741e-01
  -4.11978878e-01 -9.92656577e-02 -4.36304856e-01]]
upper = 
[7003.63134119 7192.71609855 6795.14722362 ... 7156.54383496 7455.13154095
 7652.95393346]
upper.argmax() = 5221
all predict_target = 
[29414.29820068 28709.54335117 30175.05429794 ... 28828.05059998
 27742.64952234 26974.38292725]
upper.argmax() = 5221, sortnumber[0] = 5221
x_max = [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
 2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
 8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
 7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
 7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
 9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
 1.92507113e+00 2.20103672e+02 1.91996484e+00]
black_box_function中schafferRun(i) 中的i为[55.730799824878346, 0.4310580642712091, 0.3833437630532476, 430.65455270833286, 2.038976996523313, 5.7761982417080855, 5.775732057910439, 589.3232843255906, 80.56456781106974, 63.49594163097434, 9.527883035462121, 1704103236.5798106, 0.7941387074675736, 0.4753698047853906, 142.44059080509714, 0.672525052167738, 0.7001937578652636, 1266970111.7571423, 2125761384.7160015, 61.87982930599628, 0.9450639739871967, 717.2681887086324, 0.07972985584044479, 37.8341002667185, 1.9250711285765312, 220.10367184958926, 1.9199648446755697]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 55.730799824878346
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.4310580642712091
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.3833437630532476
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 430.65455270833286
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.038976996523313
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.7761982417080855
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.775732057910439
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 589.3232843255906
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 80.56456781106974
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 63.49594163097434
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.527883035462121
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1704103236.5798106
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7941387074675736
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.4753698047853906
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 142.44059080509714
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.672525052167738
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.7001937578652636
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1266970111.7571423
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 2125761384.7160015
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 61.87982930599628
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9450639739871967
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 717.2681887086324
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.07972985584044479
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 37.8341002667185
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1.9250711285765312
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 220.10367184958926
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 1.9199648446755697
configNum = 16	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 16 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 55.730799824878346, 'spark.broadcast.checksum': 0.4310580642712091, 'spark.broadcast.compress': 0.3833437630532476, 'spark.default.parallelism': 430.65455270833286, 'spark.executor.cores': 2.038976996523313, 'spark.executor.instances': 5.7761982417080855, 'spark.executor.memory': 5.775732057910439, 'spark.executor.memoryOverhead': 589.3232843255906, 'spark.kryoserializer.buffer': 80.56456781106974, 'spark.kryoserializer.buffer.max': 63.49594163097434, 'spark.locality.wait': 9.527883035462121, 'spark.maxRemoteBlockSizeFetchToMem': 1704103236.5798106, 'spark.memory.fraction': 0.7941387074675736, 'spark.memory.offHeap.enabled': 0.4753698047853906, 'spark.memory.offHeap.size': 142.44059080509714, 'spark.memory.storageFraction': 0.672525052167738, 'spark.rdd.compress': 0.7001937578652636, 'spark.reducer.maxBlocksInFlightPerAddress': 1266970111.7571423, 'spark.reducer.maxReqsInFlight': 2125761384.7160015, 'spark.reducer.maxSizeInFlight': 61.87982930599628, 'spark.scheduler.mode': 0.9450639739871967, 'spark.scheduler.revive.interval': 717.2681887086324, 'spark.shuffle.compress': 0.07972985584044479, 'spark.shuffle.file.buffer': 37.8341002667185, 'spark.shuffle.io.numConnectionsPerPeer': 1.9250711285765312, 'spark.shuffle.sort.bypassMergeThreshold': 220.10367184958926, 'spark.storage.memoryMapThreshold': 1.9199648446755697} target = -247.247
x_probe = {'spark.broadcast.blockSize': 55.730799824878346, 'spark.broadcast.checksum': 0.4310580642712091, 'spark.broadcast.compress': 0.3833437630532476, 'spark.default.parallelism': 430.65455270833286, 'spark.executor.cores': 2.038976996523313, 'spark.executor.instances': 5.7761982417080855, 'spark.executor.memory': 5.775732057910439, 'spark.executor.memoryOverhead': 589.3232843255906, 'spark.kryoserializer.buffer': 80.56456781106974, 'spark.kryoserializer.buffer.max': 63.49594163097434, 'spark.locality.wait': 9.527883035462121, 'spark.maxRemoteBlockSizeFetchToMem': 1704103236.5798106, 'spark.memory.fraction': 0.7941387074675736, 'spark.memory.offHeap.enabled': 0.4753698047853906, 'spark.memory.offHeap.size': 142.44059080509714, 'spark.memory.storageFraction': 0.672525052167738, 'spark.rdd.compress': 0.7001937578652636, 'spark.reducer.maxBlocksInFlightPerAddress': 1266970111.7571423, 'spark.reducer.maxReqsInFlight': 2125761384.7160015, 'spark.reducer.maxSizeInFlight': 61.87982930599628, 'spark.scheduler.mode': 0.9450639739871967, 'spark.scheduler.revive.interval': 717.2681887086324, 'spark.shuffle.compress': 0.07972985584044479, 'spark.shuffle.file.buffer': 37.8341002667185, 'spark.shuffle.io.numConnectionsPerPeer': 1.9250711285765312, 'spark.shuffle.sort.bypassMergeThreshold': 220.10367184958926, 'spark.storage.memoryMapThreshold': 1.9199648446755697}
target = -247.247
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (8, 27)
before probe, target = (8,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]]
标准化后的train_x = 
[[ 0.90969135  0.05146339 -0.14416174  0.71548414 -0.88846558  1.01797649
  -0.75022332  0.9540138  -0.52445941 -0.68503097  0.87925606  1.31202977
   0.60971819 -0.56081186 -0.82183631  0.47510332 -0.06880585 -0.79582076
   0.70486477  0.87243328 -0.72886315 -0.29507572 -0.34258291  0.70569148
  -0.77294823  0.03758136  0.08675705]
 [ 0.06705597  0.29359715 -0.76380512  0.57994918  0.59438427 -1.196257
   0.59612057 -0.04149147  0.17562064  2.55946737 -0.01660012 -0.55891206
   0.40324833  0.70627781  1.2595576  -1.25099154 -1.40284997 -0.33148314
  -1.60298299 -0.83345558  1.69942524  0.32044914 -0.41745365 -1.74244245
   1.27050555  1.05600151 -1.45907481]
 [-0.11610288  1.48417804  2.04356975 -2.07993219 -0.05635249 -0.78111409
  -1.07391995  0.61320094  2.52790068 -0.34424457 -1.24026888 -0.84949705
  -0.70514933  1.63372607  0.5621915   1.47040392 -1.48052627  2.35507261
  -1.50639065 -0.56428149  0.1319077   2.12785826 -0.4442473  -1.67919922
  -0.99351233  1.55675198  1.14045229]
 [-2.37421864  1.32794653  0.6529619  -1.1869834   1.33868781 -1.45331098
   1.44396615 -2.05642276 -0.24427253  0.04072809 -1.93070798 -1.75381433
   1.07014589  0.9112398   1.80422661 -1.75887992 -0.43578352 -0.05134483
  -0.31710093 -0.89096525 -0.49410862 -1.69368889 -0.20056326  0.47546151
   2.0483517  -1.97667526  1.94480653]
 [ 0.79166211 -1.13726315 -0.85472979  0.84819429  0.35366876  1.59243585
  -1.22214113  0.82199982 -0.26240148 -0.63808518  1.04014342  1.29930106
   0.78130366 -1.06817053 -0.61832535  0.35759341  1.10126073 -1.06045463
   0.67386348  1.2986825  -0.7455718  -0.47645233  1.11373988  0.77065401
  -0.37210075 -0.01443786 -0.36556665]
 [ 0.90751123 -1.13726315 -0.85472979  0.71542565 -2.14671783  0.36499132
  -0.24373174  0.73628735 -0.35621631 -0.63808518  0.50667845  0.63002685
   0.78130366 -1.06817053 -0.55877864  0.56704398  1.10126073 -0.56823468
   0.51134621  1.61043231 -0.7455718  -0.3301364   1.11373988  0.63407583
  -0.37210075  0.07641388 -0.36556665]
 [-0.25097995 -1.13726315 -0.85472979 -0.0221779   0.35366876  0.36499132
  -0.24373174  0.09344383 -0.35621631 -0.17861737 -0.02678651  0.16097847
  -1.84367426 -1.06817053 -0.54091463  0.56704398  1.10126073  0.50725392
   0.19026588 -0.8835662  -0.7455718   0.07954821  1.11373988  0.22434128
  -0.37210075  0.00373249 -0.36556665]
 [ 0.0653808   0.25460434  0.77562459  0.43004024  0.45112631  0.09028708
   1.49366116 -1.1210315  -0.95995528 -0.11613218  0.78828556 -0.24011272
  -1.09689613  0.51407978 -1.08612078 -0.42731716  0.08418343 -0.05498849
   1.34613423 -0.60927958  1.62835422  0.26749774 -1.93637252  0.61141755
  -0.43609443 -0.7393681  -0.61624111]]
train_y = 
[   -220.801    -307.435    -316.038 -100000.       -223.547    -379.414
 -100000.       -247.247]
测试：每一列进行标准化，标准化后的train_x = 
[[ 0.90969135  0.05146339 -0.14416174  0.71548414 -0.88846558  1.01797649
  -0.75022332  0.9540138  -0.52445941 -0.68503097  0.87925606  1.31202977
   0.60971819 -0.56081186 -0.82183631  0.47510332 -0.06880585 -0.79582076
   0.70486477  0.87243328 -0.72886315 -0.29507572 -0.34258291  0.70569148
  -0.77294823  0.03758136  0.08675705]
 [ 0.06705597  0.29359715 -0.76380512  0.57994918  0.59438427 -1.196257
   0.59612057 -0.04149147  0.17562064  2.55946737 -0.01660012 -0.55891206
   0.40324833  0.70627781  1.2595576  -1.25099154 -1.40284997 -0.33148314
  -1.60298299 -0.83345558  1.69942524  0.32044914 -0.41745365 -1.74244245
   1.27050555  1.05600151 -1.45907481]
 [-0.11610288  1.48417804  2.04356975 -2.07993219 -0.05635249 -0.78111409
  -1.07391995  0.61320094  2.52790068 -0.34424457 -1.24026888 -0.84949705
  -0.70514933  1.63372607  0.5621915   1.47040392 -1.48052627  2.35507261
  -1.50639065 -0.56428149  0.1319077   2.12785826 -0.4442473  -1.67919922
  -0.99351233  1.55675198  1.14045229]
 [-2.37421864  1.32794653  0.6529619  -1.1869834   1.33868781 -1.45331098
   1.44396615 -2.05642276 -0.24427253  0.04072809 -1.93070798 -1.75381433
   1.07014589  0.9112398   1.80422661 -1.75887992 -0.43578352 -0.05134483
  -0.31710093 -0.89096525 -0.49410862 -1.69368889 -0.20056326  0.47546151
   2.0483517  -1.97667526  1.94480653]
 [ 0.79166211 -1.13726315 -0.85472979  0.84819429  0.35366876  1.59243585
  -1.22214113  0.82199982 -0.26240148 -0.63808518  1.04014342  1.29930106
   0.78130366 -1.06817053 -0.61832535  0.35759341  1.10126073 -1.06045463
   0.67386348  1.2986825  -0.7455718  -0.47645233  1.11373988  0.77065401
  -0.37210075 -0.01443786 -0.36556665]
 [ 0.90751123 -1.13726315 -0.85472979  0.71542565 -2.14671783  0.36499132
  -0.24373174  0.73628735 -0.35621631 -0.63808518  0.50667845  0.63002685
   0.78130366 -1.06817053 -0.55877864  0.56704398  1.10126073 -0.56823468
   0.51134621  1.61043231 -0.7455718  -0.3301364   1.11373988  0.63407583
  -0.37210075  0.07641388 -0.36556665]
 [-0.25097995 -1.13726315 -0.85472979 -0.0221779   0.35366876  0.36499132
  -0.24373174  0.09344383 -0.35621631 -0.17861737 -0.02678651  0.16097847
  -1.84367426 -1.06817053 -0.54091463  0.56704398  1.10126073  0.50725392
   0.19026588 -0.8835662  -0.7455718   0.07954821  1.11373988  0.22434128
  -0.37210075  0.00373249 -0.36556665]
 [ 0.0653808   0.25460434  0.77562459  0.43004024  0.45112631  0.09028708
   1.49366116 -1.1210315  -0.95995528 -0.11613218  0.78828556 -0.24011272
  -1.09689613  0.51407978 -1.08612078 -0.42731716  0.08418343 -0.05498849
   1.34613423 -0.60927958  1.62835422  0.26749774 -1.93637252  0.61141755
  -0.43609443 -0.7393681  -0.61624111]]
================= config17 =================
2022年 02月 22日 星期二 15:03:24 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (24273) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (46018) - 没有那个进程
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 0.90969135  0.05146339 -0.14416174  0.71548414 -0.88846558  1.01797649
  -0.75022332  0.9540138  -0.52445941 -0.68503097  0.87925606  1.31202977
   0.60971819 -0.56081186 -0.82183631  0.47510332 -0.06880585 -0.79582076
   0.70486477  0.87243328 -0.72886315 -0.29507572 -0.34258291  0.70569148
  -0.77294823  0.03758136  0.08675705]
 [ 0.06705597  0.29359715 -0.76380512  0.57994918  0.59438427 -1.196257
   0.59612057 -0.04149147  0.17562064  2.55946737 -0.01660012 -0.55891206
   0.40324833  0.70627781  1.2595576  -1.25099154 -1.40284997 -0.33148314
  -1.60298299 -0.83345558  1.69942524  0.32044914 -0.41745365 -1.74244245
   1.27050555  1.05600151 -1.45907481]
 [-0.11610288  1.48417804  2.04356975 -2.07993219 -0.05635249 -0.78111409
  -1.07391995  0.61320094  2.52790068 -0.34424457 -1.24026888 -0.84949705
  -0.70514933  1.63372607  0.5621915   1.47040392 -1.48052627  2.35507261
  -1.50639065 -0.56428149  0.1319077   2.12785826 -0.4442473  -1.67919922
  -0.99351233  1.55675198  1.14045229]
 [-2.37421864  1.32794653  0.6529619  -1.1869834   1.33868781 -1.45331098
   1.44396615 -2.05642276 -0.24427253  0.04072809 -1.93070798 -1.75381433
   1.07014589  0.9112398   1.80422661 -1.75887992 -0.43578352 -0.05134483
  -0.31710093 -0.89096525 -0.49410862 -1.69368889 -0.20056326  0.47546151
   2.0483517  -1.97667526  1.94480653]
 [ 0.79166211 -1.13726315 -0.85472979  0.84819429  0.35366876  1.59243585
  -1.22214113  0.82199982 -0.26240148 -0.63808518  1.04014342  1.29930106
   0.78130366 -1.06817053 -0.61832535  0.35759341  1.10126073 -1.06045463
   0.67386348  1.2986825  -0.7455718  -0.47645233  1.11373988  0.77065401
  -0.37210075 -0.01443786 -0.36556665]
 [ 0.90751123 -1.13726315 -0.85472979  0.71542565 -2.14671783  0.36499132
  -0.24373174  0.73628735 -0.35621631 -0.63808518  0.50667845  0.63002685
   0.78130366 -1.06817053 -0.55877864  0.56704398  1.10126073 -0.56823468
   0.51134621  1.61043231 -0.7455718  -0.3301364   1.11373988  0.63407583
  -0.37210075  0.07641388 -0.36556665]
 [-0.25097995 -1.13726315 -0.85472979 -0.0221779   0.35366876  0.36499132
  -0.24373174  0.09344383 -0.35621631 -0.17861737 -0.02678651  0.16097847
  -1.84367426 -1.06817053 -0.54091463  0.56704398  1.10126073  0.50725392
   0.19026588 -0.8835662  -0.7455718   0.07954821  1.11373988  0.22434128
  -0.37210075  0.00373249 -0.36556665]
 [ 0.0653808   0.25460434  0.77562459  0.43004024  0.45112631  0.09028708
   1.49366116 -1.1210315  -0.95995528 -0.11613218  0.78828556 -0.24011272
  -1.09689613  0.51407978 -1.08612078 -0.42731716  0.08418343 -0.05498849
   1.34613423 -0.60927958  1.62835422  0.26749774 -1.93637252  0.61141755
  -0.43609443 -0.7393681  -0.61624111]]
upper = 
[7082.26523113 7315.32092792 7893.46179736 ... 7421.54437591 7734.44484977
 7069.80823783]
upper.argmax() = 5336
all predict_target = 
[26844.99739814 25995.90386853 23826.58694389 ... 25622.68902394
 24434.37769894 26855.33159727]
upper.argmax() = 5336, sortnumber[0] = 5336
x_max = [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
 2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
 8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
 8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
 3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
 5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
 3.15357234e+00 3.00158875e+02 1.98128633e+00]
black_box_function中schafferRun(i) 中的i为[46.296316396921384, 0.42214924197145864, 0.518235199224174, 344.80213831518273, 2.4653075295151017, 6.374310140981918, 4.676830003051949, 709.7079908646017, 84.77708819540491, 74.2363967090102, 9.524312259747798, 1874278466.254091, 0.8442897907382508, 0.1333681890849675, 440.8935859844843, 0.7575321911119384, 0.324612942430897, 1240763871.0561666, 1678597398.150659, 63.50966720761015, 0.5026418668396696, 705.0351595869108, 0.20398188998060918, 28.631147344867557, 3.153572339595305, 300.1588754856678, 1.9812863290544627]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 46.296316396921384
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.42214924197145864
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.518235199224174
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 344.80213831518273
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.4653075295151017
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.374310140981918
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.676830003051949
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 709.7079908646017
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 84.77708819540491
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 74.2363967090102
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.524312259747798
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1874278466.254091
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8442897907382508
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.1333681890849675
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 440.8935859844843
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7575321911119384
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.324612942430897
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1240763871.0561666
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1678597398.150659
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 63.50966720761015
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.5026418668396696
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 705.0351595869108
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.20398188998060918
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 28.631147344867557
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.153572339595305
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 300.1588754856678
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 1.9812863290544627
configNum = 17	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 17 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 46.296316396921384, 'spark.broadcast.checksum': 0.42214924197145864, 'spark.broadcast.compress': 0.518235199224174, 'spark.default.parallelism': 344.80213831518273, 'spark.executor.cores': 2.4653075295151017, 'spark.executor.instances': 6.374310140981918, 'spark.executor.memory': 4.676830003051949, 'spark.executor.memoryOverhead': 709.7079908646017, 'spark.kryoserializer.buffer': 84.77708819540491, 'spark.kryoserializer.buffer.max': 74.2363967090102, 'spark.locality.wait': 9.524312259747798, 'spark.maxRemoteBlockSizeFetchToMem': 1874278466.254091, 'spark.memory.fraction': 0.8442897907382508, 'spark.memory.offHeap.enabled': 0.1333681890849675, 'spark.memory.offHeap.size': 440.8935859844843, 'spark.memory.storageFraction': 0.7575321911119384, 'spark.rdd.compress': 0.324612942430897, 'spark.reducer.maxBlocksInFlightPerAddress': 1240763871.0561666, 'spark.reducer.maxReqsInFlight': 1678597398.150659, 'spark.reducer.maxSizeInFlight': 63.50966720761015, 'spark.scheduler.mode': 0.5026418668396696, 'spark.scheduler.revive.interval': 705.0351595869108, 'spark.shuffle.compress': 0.20398188998060918, 'spark.shuffle.file.buffer': 28.631147344867557, 'spark.shuffle.io.numConnectionsPerPeer': 3.153572339595305, 'spark.shuffle.sort.bypassMergeThreshold': 300.1588754856678, 'spark.storage.memoryMapThreshold': 1.9812863290544627} target = -100000.0
x_probe = {'spark.broadcast.blockSize': 46.296316396921384, 'spark.broadcast.checksum': 0.42214924197145864, 'spark.broadcast.compress': 0.518235199224174, 'spark.default.parallelism': 344.80213831518273, 'spark.executor.cores': 2.4653075295151017, 'spark.executor.instances': 6.374310140981918, 'spark.executor.memory': 4.676830003051949, 'spark.executor.memoryOverhead': 709.7079908646017, 'spark.kryoserializer.buffer': 84.77708819540491, 'spark.kryoserializer.buffer.max': 74.2363967090102, 'spark.locality.wait': 9.524312259747798, 'spark.maxRemoteBlockSizeFetchToMem': 1874278466.254091, 'spark.memory.fraction': 0.8442897907382508, 'spark.memory.offHeap.enabled': 0.1333681890849675, 'spark.memory.offHeap.size': 440.8935859844843, 'spark.memory.storageFraction': 0.7575321911119384, 'spark.rdd.compress': 0.324612942430897, 'spark.reducer.maxBlocksInFlightPerAddress': 1240763871.0561666, 'spark.reducer.maxReqsInFlight': 1678597398.150659, 'spark.reducer.maxSizeInFlight': 63.50966720761015, 'spark.scheduler.mode': 0.5026418668396696, 'spark.scheduler.revive.interval': 705.0351595869108, 'spark.shuffle.compress': 0.20398188998060918, 'spark.shuffle.file.buffer': 28.631147344867557, 'spark.shuffle.io.numConnectionsPerPeer': 3.153572339595305, 'spark.shuffle.sort.bypassMergeThreshold': 300.1588754856678, 'spark.storage.memoryMapThreshold': 1.9812863290544627}
target = -100000.0
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (9, 27)
before probe, target = (9,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]
 [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
  2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
  8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
  8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
  3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
  5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
  3.15357234e+00 3.00158875e+02 1.98128633e+00]]
标准化后的train_x = 
[[ 1.02737773e+00  2.78909748e-02 -2.84475382e-01  8.25958883e-01
  -1.00049682e+00  9.47441301e-01 -8.36947146e-01  7.55433545e-01
  -4.81262285e-01 -7.61109597e-01  8.12467188e-01  1.20274835e+00
   6.46686175e-01 -5.10329551e-01 -9.28807656e-01  3.13990031e-01
   6.25193545e-02 -8.14043796e-01  7.41994844e-01  9.36746573e-01
  -8.21891626e-01 -3.30034991e-01 -1.63760729e-01  8.06122772e-01
  -8.74025544e-01 -4.32220089e-02  1.40611118e-01]
 [ 1.81854416e-01  2.83987981e-01 -8.83869676e-01  6.87484177e-01
   4.03040150e-01 -1.31715134e+00  5.77371970e-01 -1.94171023e-01
   2.48466844e-01  2.65925744e+00 -1.06678837e-01 -6.75252468e-01
   4.27691816e-01  8.05437499e-01  1.22250316e+00 -1.35489883e+00
  -1.25275805e+00 -3.23030941e-01 -1.70554732e+00 -8.71593651e-01
   1.71627906e+00  3.22032856e-01 -2.34556045e-01 -1.73241633e+00
   1.24949043e+00  1.00752385e+00 -1.48284345e+00]
 [-1.93216605e-03  1.54322671e+00  1.83176410e+00 -2.03008985e+00
  -2.12890787e-01 -8.92566676e-01 -1.17698682e+00  4.30334863e-01
   2.70036824e+00 -4.01850801e-01 -1.36215969e+00 -9.66933825e-01
  -7.47941437e-01  1.76851525e+00  5.01711566e-01  1.27630451e+00
  -1.32934164e+00  2.51786187e+00 -1.60310822e+00 -5.86253652e-01
   7.78299006e-02  2.23674575e+00 -2.59891239e-01 -1.66683764e+00
  -1.10323131e+00  1.52416866e+00  1.24721682e+00]
 [-2.26778709e+00  1.37798572e+00  4.86599370e-01 -1.11777306e+00
   1.10753328e+00 -1.58005159e+00  1.46802422e+00 -2.11619797e+00
  -1.89209217e-01  3.98938623e-03 -2.07054835e+00 -1.87466306e+00
   1.13504350e+00  1.01827345e+00  1.78546836e+00 -1.84595484e+00
  -2.99295846e-01 -2.67992629e-02 -3.41830608e-01 -9.32557213e-01
  -5.76514241e-01 -1.81168218e+00 -2.94716085e-02  5.67390827e-01
   2.05781248e+00 -2.12141320e+00  2.09196106e+00]
 [ 9.08943969e-01 -1.22938647e+00 -9.71823055e-01  9.61547506e-01
   1.75199735e-01  1.53496581e+00 -1.33269150e+00  6.29506463e-01
  -2.08105942e-01 -7.11619104e-01  9.77537186e-01  1.18997162e+00
   8.28680049e-01 -1.03717926e+00 -7.18460486e-01  2.00374613e-01
   1.21612598e+00 -1.09388033e+00  7.09117037e-01  1.38859523e+00
  -8.39356355e-01 -5.22179718e-01  1.21329035e+00  8.73484254e-01
  -4.57472924e-01 -9.68923734e-02 -3.34425654e-01]
 [ 1.02519013e+00 -1.22938647e+00 -9.71823055e-01  8.25899124e-01
  -2.19144919e+00  2.79605044e-01 -3.04883443e-01  5.47746018e-01
  -3.05893921e-01 -7.11619104e-01  4.30203568e-01  5.18172256e-01
   8.28680049e-01 -1.03717926e+00 -6.56913521e-01  4.02883608e-01
   1.21612598e+00 -5.73383361e-01  5.36762568e-01  1.71906795e+00
  -8.39356355e-01 -3.67177182e-01  1.21329035e+00  7.31862484e-01
  -4.57472924e-01 -3.15689708e-03 -3.34425654e-01]
 [-1.37271500e-01 -1.22938647e+00 -9.71823055e-01  7.22970059e-02
   1.75199735e-01  2.79605044e-01 -3.04883443e-01 -6.54573139e-02
  -3.05893921e-01 -2.27245739e-01 -1.17130050e-01  4.73541798e-02
  -1.95552947e+00 -1.03717926e+00 -6.38449431e-01  4.02883608e-01
   1.21612598e+00  5.63889830e-01  1.96247200e-01 -9.24713789e-01
  -8.39356355e-01  6.68299195e-02  1.21329035e+00  3.06997173e-01
  -4.57472924e-01 -7.81452782e-02 -3.34425654e-01]
 [ 1.80173502e-01  2.42746551e-01  6.05253615e-01  5.34323723e-01
   2.67444602e-01 -1.34690211e-03  1.52022827e+00 -1.22393568e+00
  -9.35201825e-01 -1.61373531e-01  7.19131699e-01 -3.55250311e-01
  -1.16345166e+00  6.05855860e-01 -1.20196981e+00 -5.58522556e-01
   2.13356451e-01 -3.06522431e-02  1.42208044e+00 -6.33954207e-01
   1.64199201e+00  2.65937794e-01 -1.67079592e+00  7.08367470e-01
  -5.23973860e-01 -8.44832638e-01 -5.97687530e-01]
 [-9.16548998e-01  2.12321482e-01  1.16019713e+00 -7.59647504e-01
   1.27641930e+00  7.49499309e-01  3.90767887e-01  1.23674110e+00
  -5.23267972e-01  3.11571047e-01  7.17177294e-01  9.13853256e-01
   1.40986909e-04 -5.76214729e-01  6.34917812e-01  1.16293985e+00
  -1.04285821e+00 -2.19961763e-01  4.42840533e-02 -9.53372468e-02
   4.80373958e-01  1.39527758e-01 -1.28139550e+00 -5.94971015e-01
   5.66346577e-01  6.55969891e-01 -3.95981055e-01]]
train_y = 
[   -220.801    -307.435    -316.038 -100000.       -223.547    -379.414
 -100000.       -247.247 -100000.   ]
测试：每一列进行标准化，标准化后的train_x = 
[[ 1.02737773e+00  2.78909748e-02 -2.84475382e-01  8.25958883e-01
  -1.00049682e+00  9.47441301e-01 -8.36947146e-01  7.55433545e-01
  -4.81262285e-01 -7.61109597e-01  8.12467188e-01  1.20274835e+00
   6.46686175e-01 -5.10329551e-01 -9.28807656e-01  3.13990031e-01
   6.25193545e-02 -8.14043796e-01  7.41994844e-01  9.36746573e-01
  -8.21891626e-01 -3.30034991e-01 -1.63760729e-01  8.06122772e-01
  -8.74025544e-01 -4.32220089e-02  1.40611118e-01]
 [ 1.81854416e-01  2.83987981e-01 -8.83869676e-01  6.87484177e-01
   4.03040150e-01 -1.31715134e+00  5.77371970e-01 -1.94171023e-01
   2.48466844e-01  2.65925744e+00 -1.06678837e-01 -6.75252468e-01
   4.27691816e-01  8.05437499e-01  1.22250316e+00 -1.35489883e+00
  -1.25275805e+00 -3.23030941e-01 -1.70554732e+00 -8.71593651e-01
   1.71627906e+00  3.22032856e-01 -2.34556045e-01 -1.73241633e+00
   1.24949043e+00  1.00752385e+00 -1.48284345e+00]
 [-1.93216605e-03  1.54322671e+00  1.83176410e+00 -2.03008985e+00
  -2.12890787e-01 -8.92566676e-01 -1.17698682e+00  4.30334863e-01
   2.70036824e+00 -4.01850801e-01 -1.36215969e+00 -9.66933825e-01
  -7.47941437e-01  1.76851525e+00  5.01711566e-01  1.27630451e+00
  -1.32934164e+00  2.51786187e+00 -1.60310822e+00 -5.86253652e-01
   7.78299006e-02  2.23674575e+00 -2.59891239e-01 -1.66683764e+00
  -1.10323131e+00  1.52416866e+00  1.24721682e+00]
 [-2.26778709e+00  1.37798572e+00  4.86599370e-01 -1.11777306e+00
   1.10753328e+00 -1.58005159e+00  1.46802422e+00 -2.11619797e+00
  -1.89209217e-01  3.98938623e-03 -2.07054835e+00 -1.87466306e+00
   1.13504350e+00  1.01827345e+00  1.78546836e+00 -1.84595484e+00
  -2.99295846e-01 -2.67992629e-02 -3.41830608e-01 -9.32557213e-01
  -5.76514241e-01 -1.81168218e+00 -2.94716085e-02  5.67390827e-01
   2.05781248e+00 -2.12141320e+00  2.09196106e+00]
 [ 9.08943969e-01 -1.22938647e+00 -9.71823055e-01  9.61547506e-01
   1.75199735e-01  1.53496581e+00 -1.33269150e+00  6.29506463e-01
  -2.08105942e-01 -7.11619104e-01  9.77537186e-01  1.18997162e+00
   8.28680049e-01 -1.03717926e+00 -7.18460486e-01  2.00374613e-01
   1.21612598e+00 -1.09388033e+00  7.09117037e-01  1.38859523e+00
  -8.39356355e-01 -5.22179718e-01  1.21329035e+00  8.73484254e-01
  -4.57472924e-01 -9.68923734e-02 -3.34425654e-01]
 [ 1.02519013e+00 -1.22938647e+00 -9.71823055e-01  8.25899124e-01
  -2.19144919e+00  2.79605044e-01 -3.04883443e-01  5.47746018e-01
  -3.05893921e-01 -7.11619104e-01  4.30203568e-01  5.18172256e-01
   8.28680049e-01 -1.03717926e+00 -6.56913521e-01  4.02883608e-01
   1.21612598e+00 -5.73383361e-01  5.36762568e-01  1.71906795e+00
  -8.39356355e-01 -3.67177182e-01  1.21329035e+00  7.31862484e-01
  -4.57472924e-01 -3.15689708e-03 -3.34425654e-01]
 [-1.37271500e-01 -1.22938647e+00 -9.71823055e-01  7.22970059e-02
   1.75199735e-01  2.79605044e-01 -3.04883443e-01 -6.54573139e-02
  -3.05893921e-01 -2.27245739e-01 -1.17130050e-01  4.73541798e-02
  -1.95552947e+00 -1.03717926e+00 -6.38449431e-01  4.02883608e-01
   1.21612598e+00  5.63889830e-01  1.96247200e-01 -9.24713789e-01
  -8.39356355e-01  6.68299195e-02  1.21329035e+00  3.06997173e-01
  -4.57472924e-01 -7.81452782e-02 -3.34425654e-01]
 [ 1.80173502e-01  2.42746551e-01  6.05253615e-01  5.34323723e-01
   2.67444602e-01 -1.34690211e-03  1.52022827e+00 -1.22393568e+00
  -9.35201825e-01 -1.61373531e-01  7.19131699e-01 -3.55250311e-01
  -1.16345166e+00  6.05855860e-01 -1.20196981e+00 -5.58522556e-01
   2.13356451e-01 -3.06522431e-02  1.42208044e+00 -6.33954207e-01
   1.64199201e+00  2.65937794e-01 -1.67079592e+00  7.08367470e-01
  -5.23973860e-01 -8.44832638e-01 -5.97687530e-01]
 [-9.16548998e-01  2.12321482e-01  1.16019713e+00 -7.59647504e-01
   1.27641930e+00  7.49499309e-01  3.90767887e-01  1.23674110e+00
  -5.23267972e-01  3.11571047e-01  7.17177294e-01  9.13853256e-01
   1.40986909e-04 -5.76214729e-01  6.34917812e-01  1.16293985e+00
  -1.04285821e+00 -2.19961763e-01  4.42840533e-02 -9.53372468e-02
   4.80373958e-01  1.39527758e-01 -1.28139550e+00 -5.94971015e-01
   5.66346577e-01  6.55969891e-01 -3.95981055e-01]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 1.02737773e+00  2.78909748e-02 -2.84475382e-01  8.25958883e-01
  -1.00049682e+00  9.47441301e-01 -8.36947146e-01  7.55433545e-01
  -4.81262285e-01 -7.61109597e-01  8.12467188e-01  1.20274835e+00
   6.46686175e-01 -5.10329551e-01 -9.28807656e-01  3.13990031e-01
   6.25193545e-02 -8.14043796e-01  7.41994844e-01  9.36746573e-01
  -8.21891626e-01 -3.30034991e-01 -1.63760729e-01  8.06122772e-01
  -8.74025544e-01 -4.32220089e-02  1.40611118e-01]
 [ 1.81854416e-01  2.83987981e-01 -8.83869676e-01  6.87484177e-01
   4.03040150e-01 -1.31715134e+00  5.77371970e-01 -1.94171023e-01
   2.48466844e-01  2.65925744e+00 -1.06678837e-01 -6.75252468e-01
   4.27691816e-01  8.05437499e-01  1.22250316e+00 -1.35489883e+00
  -1.25275805e+00 -3.23030941e-01 -1.70554732e+00 -8.71593651e-01
   1.71627906e+00  3.22032856e-01 -2.34556045e-01 -1.73241633e+00
   1.24949043e+00  1.00752385e+00 -1.48284345e+00]
 [-1.93216605e-03  1.54322671e+00  1.83176410e+00 -2.03008985e+00
  -2.12890787e-01 -8.92566676e-01 -1.17698682e+00  4.30334863e-01
   2.70036824e+00 -4.01850801e-01 -1.36215969e+00 -9.66933825e-01
  -7.47941437e-01  1.76851525e+00  5.01711566e-01  1.27630451e+00
  -1.32934164e+00  2.51786187e+00 -1.60310822e+00 -5.86253652e-01
   7.78299006e-02  2.23674575e+00 -2.59891239e-01 -1.66683764e+00
  -1.10323131e+00  1.52416866e+00  1.24721682e+00]
 [-2.26778709e+00  1.37798572e+00  4.86599370e-01 -1.11777306e+00
   1.10753328e+00 -1.58005159e+00  1.46802422e+00 -2.11619797e+00
  -1.89209217e-01  3.98938623e-03 -2.07054835e+00 -1.87466306e+00
   1.13504350e+00  1.01827345e+00  1.78546836e+00 -1.84595484e+00
  -2.99295846e-01 -2.67992629e-02 -3.41830608e-01 -9.32557213e-01
  -5.76514241e-01 -1.81168218e+00 -2.94716085e-02  5.67390827e-01
   2.05781248e+00 -2.12141320e+00  2.09196106e+00]
 [ 9.08943969e-01 -1.22938647e+00 -9.71823055e-01  9.61547506e-01
   1.75199735e-01  1.53496581e+00 -1.33269150e+00  6.29506463e-01
  -2.08105942e-01 -7.11619104e-01  9.77537186e-01  1.18997162e+00
   8.28680049e-01 -1.03717926e+00 -7.18460486e-01  2.00374613e-01
   1.21612598e+00 -1.09388033e+00  7.09117037e-01  1.38859523e+00
  -8.39356355e-01 -5.22179718e-01  1.21329035e+00  8.73484254e-01
  -4.57472924e-01 -9.68923734e-02 -3.34425654e-01]
 [ 1.02519013e+00 -1.22938647e+00 -9.71823055e-01  8.25899124e-01
  -2.19144919e+00  2.79605044e-01 -3.04883443e-01  5.47746018e-01
  -3.05893921e-01 -7.11619104e-01  4.30203568e-01  5.18172256e-01
   8.28680049e-01 -1.03717926e+00 -6.56913521e-01  4.02883608e-01
   1.21612598e+00 -5.73383361e-01  5.36762568e-01  1.71906795e+00
  -8.39356355e-01 -3.67177182e-01  1.21329035e+00  7.31862484e-01
  -4.57472924e-01 -3.15689708e-03 -3.34425654e-01]
 [-1.37271500e-01 -1.22938647e+00 -9.71823055e-01  7.22970059e-02
   1.75199735e-01  2.79605044e-01 -3.04883443e-01 -6.54573139e-02
  -3.05893921e-01 -2.27245739e-01 -1.17130050e-01  4.73541798e-02
  -1.95552947e+00 -1.03717926e+00 -6.38449431e-01  4.02883608e-01
   1.21612598e+00  5.63889830e-01  1.96247200e-01 -9.24713789e-01
  -8.39356355e-01  6.68299195e-02  1.21329035e+00  3.06997173e-01
  -4.57472924e-01 -7.81452782e-02 -3.34425654e-01]
 [ 1.80173502e-01  2.42746551e-01  6.05253615e-01  5.34323723e-01
   2.67444602e-01 -1.34690211e-03  1.52022827e+00 -1.22393568e+00
  -9.35201825e-01 -1.61373531e-01  7.19131699e-01 -3.55250311e-01
  -1.16345166e+00  6.05855860e-01 -1.20196981e+00 -5.58522556e-01
   2.13356451e-01 -3.06522431e-02  1.42208044e+00 -6.33954207e-01
   1.64199201e+00  2.65937794e-01 -1.67079592e+00  7.08367470e-01
  -5.23973860e-01 -8.44832638e-01 -5.97687530e-01]
 [-9.16548998e-01  2.12321482e-01  1.16019713e+00 -7.59647504e-01
   1.27641930e+00  7.49499309e-01  3.90767887e-01  1.23674110e+00
  -5.23267972e-01  3.11571047e-01  7.17177294e-01  9.13853256e-01
   1.40986909e-04 -5.76214729e-01  6.34917812e-01  1.16293985e+00
  -1.04285821e+00 -2.19961763e-01  4.42840533e-02 -9.53372468e-02
   4.80373958e-01  1.39527758e-01 -1.28139550e+00 -5.94971015e-01
   5.66346577e-01  6.55969891e-01 -3.95981055e-01]]
upper = 
[7816.60194919 6657.60988444 6683.91071729 ... 6633.88938583 6382.78098916
 6644.42213633]
upper.argmax() = 4870
all predict_target = 
[27955.70142268 33221.14155339 33180.26398453 ... 33438.89491477
 34472.73970803 33381.14554268]
upper.argmax() = 4870, sortnumber[0] = 4870
x_max = [4.36883181e+01 3.93887592e-01 1.71377673e-01 4.23952021e+02
 1.43690786e+00 6.67133457e+00 4.29529748e+00 6.58491389e+02
 1.07905272e+02 7.24808481e+01 8.48493312e+00 2.00660456e+09
 8.23714321e-01 1.61230903e-02 2.20425715e+02 5.31682574e-01
 5.96947713e-01 1.61967190e+09 2.06608150e+09 6.09592459e+01
 6.64114333e-01 6.74860321e+02 9.85825731e-01 4.10068495e+01
 2.91276590e+00 2.72192121e+02 3.35595803e+00]
black_box_function中schafferRun(i) 中的i为[43.68831808799437, 0.3938875923196036, 0.17137767279048322, 423.95202057722736, 1.4369078576127337, 6.671334566164054, 4.295297476784729, 658.4913886208662, 107.9052722099326, 72.48084805951893, 8.484933116740358, 2006604563.9054012, 0.8237143210491664, 0.016123090292280984, 220.4257150859246, 0.5316825741685054, 0.5969477126592141, 1619671898.0492802, 2066081498.839044, 60.95924591324033, 0.664114332682163, 674.8603208944696, 0.9858257307277813, 41.00684947212698, 2.9127658969480943, 272.1921208402357, 3.3559580316078232]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 43.68831808799437
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.3938875923196036
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.17137767279048322
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 423.95202057722736
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 1.4369078576127337
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.671334566164054
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.295297476784729
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 658.4913886208662
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 107.9052722099326
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 72.48084805951893
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.484933116740358
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2006604563.9054012
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8237143210491664
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.016123090292280984
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 220.4257150859246
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5316825741685054
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.5969477126592141
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1619671898.0492802
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 2066081498.839044
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 60.95924591324033
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.664114332682163
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 674.8603208944696
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9858257307277813
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 41.00684947212698
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 2.9127658969480943
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 272.1921208402357
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.3559580316078232
================= config18 =================
2022年 02月 22日 星期二 15:06:47 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (47803) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (83281) - 没有那个进程
configNum = 18	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 18 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 43.68831808799437, 'spark.broadcast.checksum': 0.3938875923196036, 'spark.broadcast.compress': 0.17137767279048322, 'spark.default.parallelism': 423.95202057722736, 'spark.executor.cores': 1.4369078576127337, 'spark.executor.instances': 6.671334566164054, 'spark.executor.memory': 4.295297476784729, 'spark.executor.memoryOverhead': 658.4913886208662, 'spark.kryoserializer.buffer': 107.9052722099326, 'spark.kryoserializer.buffer.max': 72.48084805951893, 'spark.locality.wait': 8.484933116740358, 'spark.maxRemoteBlockSizeFetchToMem': 2006604563.9054012, 'spark.memory.fraction': 0.8237143210491664, 'spark.memory.offHeap.enabled': 0.016123090292280984, 'spark.memory.offHeap.size': 220.4257150859246, 'spark.memory.storageFraction': 0.5316825741685054, 'spark.rdd.compress': 0.5969477126592141, 'spark.reducer.maxBlocksInFlightPerAddress': 1619671898.0492802, 'spark.reducer.maxReqsInFlight': 2066081498.839044, 'spark.reducer.maxSizeInFlight': 60.95924591324033, 'spark.scheduler.mode': 0.664114332682163, 'spark.scheduler.revive.interval': 674.8603208944696, 'spark.shuffle.compress': 0.9858257307277813, 'spark.shuffle.file.buffer': 41.00684947212698, 'spark.shuffle.io.numConnectionsPerPeer': 2.9127658969480943, 'spark.shuffle.sort.bypassMergeThreshold': 272.1921208402357, 'spark.storage.memoryMapThreshold': 3.3559580316078232} target = -335.557
x_probe = {'spark.broadcast.blockSize': 43.68831808799437, 'spark.broadcast.checksum': 0.3938875923196036, 'spark.broadcast.compress': 0.17137767279048322, 'spark.default.parallelism': 423.95202057722736, 'spark.executor.cores': 1.4369078576127337, 'spark.executor.instances': 6.671334566164054, 'spark.executor.memory': 4.295297476784729, 'spark.executor.memoryOverhead': 658.4913886208662, 'spark.kryoserializer.buffer': 107.9052722099326, 'spark.kryoserializer.buffer.max': 72.48084805951893, 'spark.locality.wait': 8.484933116740358, 'spark.maxRemoteBlockSizeFetchToMem': 2006604563.9054012, 'spark.memory.fraction': 0.8237143210491664, 'spark.memory.offHeap.enabled': 0.016123090292280984, 'spark.memory.offHeap.size': 220.4257150859246, 'spark.memory.storageFraction': 0.5316825741685054, 'spark.rdd.compress': 0.5969477126592141, 'spark.reducer.maxBlocksInFlightPerAddress': 1619671898.0492802, 'spark.reducer.maxReqsInFlight': 2066081498.839044, 'spark.reducer.maxSizeInFlight': 60.95924591324033, 'spark.scheduler.mode': 0.664114332682163, 'spark.scheduler.revive.interval': 674.8603208944696, 'spark.shuffle.compress': 0.9858257307277813, 'spark.shuffle.file.buffer': 41.00684947212698, 'spark.shuffle.io.numConnectionsPerPeer': 2.9127658969480943, 'spark.shuffle.sort.bypassMergeThreshold': 272.1921208402357, 'spark.storage.memoryMapThreshold': 3.3559580316078232}
target = -335.557
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (10, 27)
before probe, target = (10,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]
 [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
  2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
  8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
  8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
  3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
  5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
  3.15357234e+00 3.00158875e+02 1.98128633e+00]
 [4.36883181e+01 3.93887592e-01 1.71377673e-01 4.23952021e+02
  1.43690786e+00 6.67133457e+00 4.29529748e+00 6.58491389e+02
  1.07905272e+02 7.24808481e+01 8.48493312e+00 2.00660456e+09
  8.23714321e-01 1.61230903e-02 2.20425715e+02 5.31682574e-01
  5.96947713e-01 1.61967190e+09 2.06608150e+09 6.09592459e+01
  6.64114333e-01 6.74860321e+02 9.85825731e-01 4.10068495e+01
  2.91276590e+00 2.72192121e+02 3.35595803e+00]]
标准化后的train_x = 
[[ 1.13035300e+00  1.71814046e-02 -2.70780963e-01  8.17325951e-01
  -8.75790816e-01  8.29674185e-01 -8.82074806e-01  7.74887550e-01
  -6.05129545e-01 -8.24713935e-01  8.39861539e-01  9.14912549e-01
   7.23777111e-01 -4.14954567e-01 -8.80291939e-01  4.69464483e-01
   7.97429702e-02 -8.78947100e-01  6.06759847e-01  1.04144392e+00
  -9.24609729e-01 -3.29238839e-01 -2.77479823e-01  6.83342398e-01
  -9.52569777e-01 -5.93882445e-02 -1.74395044e-01]
 [ 2.98804612e-01  2.86950526e-01 -9.00361667e-01  6.72712054e-01
   5.13529448e-01 -1.41992454e+00  6.08748302e-01 -2.24284173e-01
   6.89351225e-02  2.77081664e+00 -1.27939929e-01 -7.81781343e-01
   4.95521567e-01  9.09655684e-01  1.33049904e+00 -7.26585633e-01
  -1.30547536e+00 -4.74003665e-01 -1.79558512e+00 -7.85986047e-01
   1.64773809e+00  3.57083214e-01 -3.47476043e-01 -1.82941763e+00
   1.27202448e+00  1.04723621e+00 -1.21541881e+00]
 [ 1.18055681e-01  1.61341557e+00  1.95203556e+00 -2.16534394e+00
  -9.61626014e-02 -9.98151060e-01 -1.24050806e+00  4.32819472e-01
   2.33380305e+00 -4.47056809e-01 -1.44988028e+00 -1.04530305e+00
  -7.29828747e-01  1.87920623e+00  5.89778753e-01  1.15913075e+00
  -1.38613134e+00  1.86891033e+00 -1.69503770e+00 -4.97633856e-01
  -1.27732170e-02  2.37237915e+00 -3.72525268e-01 -1.76450490e+00
  -1.19268562e+00  1.59135617e+00  5.35204631e-01]
 [-2.11034888e+00  1.43935295e+00  5.39126287e-01 -1.21258015e+00
   1.21088662e+00 -1.68108413e+00  1.54757812e+00 -2.24663647e+00
  -3.35354575e-01 -2.04327694e-02 -2.19576784e+00 -1.86539781e+00
   1.23278687e+00  1.12392209e+00  1.90902928e+00 -1.07851297e+00
  -3.01312042e-01 -2.29698304e-01 -4.57051292e-01 -8.47593171e-01
  -6.75928274e-01 -1.88871942e+00 -1.44706480e-01  4.47034795e-01
   2.11882223e+00 -2.24809752e+00  1.07688830e+00]
 [ 1.01387673e+00 -1.30721765e+00 -9.92744512e-01  9.58925811e-01
   2.87996874e-01  1.41330868e+00 -1.40463519e+00  6.42387367e-01
  -3.52809839e-01 -7.72688939e-01  1.01366960e+00  9.03369316e-01
   9.13467434e-01 -9.45345203e-01 -6.64129020e-01  3.88039209e-01
   1.29469355e+00 -1.10973121e+00  5.74489174e-01  1.49806252e+00
  -9.42309626e-01 -5.31477248e-01  1.08402790e+00  7.50019819e-01
  -5.16189466e-01 -1.15912796e-01 -4.79007553e-01]
 [ 1.12820156e+00 -1.30721765e+00 -9.92744512e-01  8.17263543e-01
  -2.05467979e+00  1.66259687e-01 -3.21230471e-01  5.56359217e-01
  -4.43138454e-01 -7.72688939e-01  4.37362608e-01  2.96427155e-01
   9.13467434e-01 -9.45345203e-01 -6.00880384e-01  5.33172245e-01
   1.29469355e+00 -6.80471923e-01  4.05317464e-01  1.83202387e+00
  -9.42309626e-01 -3.68332171e-01  1.08402790e+00  6.09836229e-01
  -5.16189466e-01 -1.71924725e-02 -4.79007553e-01]
 [-1.50467460e-02 -1.30721765e+00 -9.92744512e-01  3.02509399e-02
   2.87996874e-01  1.66259687e-01 -3.21230471e-01 -8.88519067e-02
  -4.43138454e-01 -2.63509888e-01 -1.38944382e-01 -1.28936960e-01
  -1.98848520e+00 -9.45345203e-01 -5.81905793e-01  5.33172245e-01
   1.29469355e+00  2.57449166e-01  7.10901765e-02 -8.39666948e-01
  -9.42309626e-01  8.84740436e-02  1.08402790e+00  1.89285460e-01
  -5.16189466e-01 -9.61687310e-02 -4.79007553e-01]
 [ 2.97151481e-01  2.43507362e-01  6.63756141e-01  5.12761326e-01
   3.79307374e-01 -1.12832071e-01  1.60260602e+00 -1.30780015e+00
  -1.02444213e+00 -1.94264238e-01  7.41585291e-01 -4.92673000e-01
  -1.16291074e+00  7.08732667e-01 -1.16100657e+00 -1.55843053e-01
   2.38600949e-01 -2.32875897e-01  1.27428674e+00 -5.45837963e-01
   1.57245074e+00  2.98041385e-01 -1.76750448e+00  5.86579809e-01
  -5.85855812e-01 -9.03628478e-01 -6.47821560e-01]
 [-7.81444238e-01  2.11458006e-01  1.24664746e+00 -8.38577316e-01
   1.37806197e+00  6.33042772e-01  4.12050347e-01  1.28131824e+00
  -6.43930997e-01  3.02900737e-01  7.39527428e-01  6.53908115e-01
   4.98897844e-02 -4.81282556e-01  7.26667930e-01  1.07788519e+00
  -1.08441393e+00 -3.89001436e-01 -7.80667641e-02 -1.53509242e-03
   3.95191201e-01  1.64990820e-01 -1.38249938e+00 -7.03523167e-01
   5.56363320e-01  6.76986638e-01 -5.18479330e-01]
 [-1.07960320e+00  1.09787139e-01 -2.52189287e-01  4.07261781e-01
  -1.03114595e+00  1.00344678e+00 -1.30379182e-03  1.79800856e-01
   1.44520582e+00  2.21638137e-01  1.40525963e-01  1.54547503e+00
  -4.47685517e-01 -8.89243939e-01 -6.67761294e-01 -2.19992247e+00
  -1.25091892e-01  1.86837004e+00  1.09379747e+00 -8.53277238e-01
   8.24860059e-01 -1.63200938e-01  1.04010777e+00  1.03134718e+00
   3.32469584e-01  1.24809226e-01  2.38104447e+00]]
train_y = 
[   -220.801    -307.435    -316.038 -100000.       -223.547    -379.414
 -100000.       -247.247 -100000.       -335.557]
测试：每一列进行标准化，标准化后的train_x = 
[[ 1.13035300e+00  1.71814046e-02 -2.70780963e-01  8.17325951e-01
  -8.75790816e-01  8.29674185e-01 -8.82074806e-01  7.74887550e-01
  -6.05129545e-01 -8.24713935e-01  8.39861539e-01  9.14912549e-01
   7.23777111e-01 -4.14954567e-01 -8.80291939e-01  4.69464483e-01
   7.97429702e-02 -8.78947100e-01  6.06759847e-01  1.04144392e+00
  -9.24609729e-01 -3.29238839e-01 -2.77479823e-01  6.83342398e-01
  -9.52569777e-01 -5.93882445e-02 -1.74395044e-01]
 [ 2.98804612e-01  2.86950526e-01 -9.00361667e-01  6.72712054e-01
   5.13529448e-01 -1.41992454e+00  6.08748302e-01 -2.24284173e-01
   6.89351225e-02  2.77081664e+00 -1.27939929e-01 -7.81781343e-01
   4.95521567e-01  9.09655684e-01  1.33049904e+00 -7.26585633e-01
  -1.30547536e+00 -4.74003665e-01 -1.79558512e+00 -7.85986047e-01
   1.64773809e+00  3.57083214e-01 -3.47476043e-01 -1.82941763e+00
   1.27202448e+00  1.04723621e+00 -1.21541881e+00]
 [ 1.18055681e-01  1.61341557e+00  1.95203556e+00 -2.16534394e+00
  -9.61626014e-02 -9.98151060e-01 -1.24050806e+00  4.32819472e-01
   2.33380305e+00 -4.47056809e-01 -1.44988028e+00 -1.04530305e+00
  -7.29828747e-01  1.87920623e+00  5.89778753e-01  1.15913075e+00
  -1.38613134e+00  1.86891033e+00 -1.69503770e+00 -4.97633856e-01
  -1.27732170e-02  2.37237915e+00 -3.72525268e-01 -1.76450490e+00
  -1.19268562e+00  1.59135617e+00  5.35204631e-01]
 [-2.11034888e+00  1.43935295e+00  5.39126287e-01 -1.21258015e+00
   1.21088662e+00 -1.68108413e+00  1.54757812e+00 -2.24663647e+00
  -3.35354575e-01 -2.04327694e-02 -2.19576784e+00 -1.86539781e+00
   1.23278687e+00  1.12392209e+00  1.90902928e+00 -1.07851297e+00
  -3.01312042e-01 -2.29698304e-01 -4.57051292e-01 -8.47593171e-01
  -6.75928274e-01 -1.88871942e+00 -1.44706480e-01  4.47034795e-01
   2.11882223e+00 -2.24809752e+00  1.07688830e+00]
 [ 1.01387673e+00 -1.30721765e+00 -9.92744512e-01  9.58925811e-01
   2.87996874e-01  1.41330868e+00 -1.40463519e+00  6.42387367e-01
  -3.52809839e-01 -7.72688939e-01  1.01366960e+00  9.03369316e-01
   9.13467434e-01 -9.45345203e-01 -6.64129020e-01  3.88039209e-01
   1.29469355e+00 -1.10973121e+00  5.74489174e-01  1.49806252e+00
  -9.42309626e-01 -5.31477248e-01  1.08402790e+00  7.50019819e-01
  -5.16189466e-01 -1.15912796e-01 -4.79007553e-01]
 [ 1.12820156e+00 -1.30721765e+00 -9.92744512e-01  8.17263543e-01
  -2.05467979e+00  1.66259687e-01 -3.21230471e-01  5.56359217e-01
  -4.43138454e-01 -7.72688939e-01  4.37362608e-01  2.96427155e-01
   9.13467434e-01 -9.45345203e-01 -6.00880384e-01  5.33172245e-01
   1.29469355e+00 -6.80471923e-01  4.05317464e-01  1.83202387e+00
  -9.42309626e-01 -3.68332171e-01  1.08402790e+00  6.09836229e-01
  -5.16189466e-01 -1.71924725e-02 -4.79007553e-01]
 [-1.50467460e-02 -1.30721765e+00 -9.92744512e-01  3.02509399e-02
   2.87996874e-01  1.66259687e-01 -3.21230471e-01 -8.88519067e-02
  -4.43138454e-01 -2.63509888e-01 -1.38944382e-01 -1.28936960e-01
  -1.98848520e+00 -9.45345203e-01 -5.81905793e-01  5.33172245e-01
   1.29469355e+00  2.57449166e-01  7.10901765e-02 -8.39666948e-01
  -9.42309626e-01  8.84740436e-02  1.08402790e+00  1.89285460e-01
  -5.16189466e-01 -9.61687310e-02 -4.79007553e-01]
 [ 2.97151481e-01  2.43507362e-01  6.63756141e-01  5.12761326e-01
   3.79307374e-01 -1.12832071e-01  1.60260602e+00 -1.30780015e+00
  -1.02444213e+00 -1.94264238e-01  7.41585291e-01 -4.92673000e-01
  -1.16291074e+00  7.08732667e-01 -1.16100657e+00 -1.55843053e-01
   2.38600949e-01 -2.32875897e-01  1.27428674e+00 -5.45837963e-01
   1.57245074e+00  2.98041385e-01 -1.76750448e+00  5.86579809e-01
  -5.85855812e-01 -9.03628478e-01 -6.47821560e-01]
 [-7.81444238e-01  2.11458006e-01  1.24664746e+00 -8.38577316e-01
   1.37806197e+00  6.33042772e-01  4.12050347e-01  1.28131824e+00
  -6.43930997e-01  3.02900737e-01  7.39527428e-01  6.53908115e-01
   4.98897844e-02 -4.81282556e-01  7.26667930e-01  1.07788519e+00
  -1.08441393e+00 -3.89001436e-01 -7.80667641e-02 -1.53509242e-03
   3.95191201e-01  1.64990820e-01 -1.38249938e+00 -7.03523167e-01
   5.56363320e-01  6.76986638e-01 -5.18479330e-01]
 [-1.07960320e+00  1.09787139e-01 -2.52189287e-01  4.07261781e-01
  -1.03114595e+00  1.00344678e+00 -1.30379182e-03  1.79800856e-01
   1.44520582e+00  2.21638137e-01  1.40525963e-01  1.54547503e+00
  -4.47685517e-01 -8.89243939e-01 -6.67761294e-01 -2.19992247e+00
  -1.25091892e-01  1.86837004e+00  1.09379747e+00 -8.53277238e-01
   8.24860059e-01 -1.63200938e-01  1.04010777e+00  1.03134718e+00
   3.32469584e-01  1.24809226e-01  2.38104447e+00]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 1.13035300e+00  1.71814046e-02 -2.70780963e-01  8.17325951e-01
  -8.75790816e-01  8.29674185e-01 -8.82074806e-01  7.74887550e-01
  -6.05129545e-01 -8.24713935e-01  8.39861539e-01  9.14912549e-01
   7.23777111e-01 -4.14954567e-01 -8.80291939e-01  4.69464483e-01
   7.97429702e-02 -8.78947100e-01  6.06759847e-01  1.04144392e+00
  -9.24609729e-01 -3.29238839e-01 -2.77479823e-01  6.83342398e-01
  -9.52569777e-01 -5.93882445e-02 -1.74395044e-01]
 [ 2.98804612e-01  2.86950526e-01 -9.00361667e-01  6.72712054e-01
   5.13529448e-01 -1.41992454e+00  6.08748302e-01 -2.24284173e-01
   6.89351225e-02  2.77081664e+00 -1.27939929e-01 -7.81781343e-01
   4.95521567e-01  9.09655684e-01  1.33049904e+00 -7.26585633e-01
  -1.30547536e+00 -4.74003665e-01 -1.79558512e+00 -7.85986047e-01
   1.64773809e+00  3.57083214e-01 -3.47476043e-01 -1.82941763e+00
   1.27202448e+00  1.04723621e+00 -1.21541881e+00]
 [ 1.18055681e-01  1.61341557e+00  1.95203556e+00 -2.16534394e+00
  -9.61626014e-02 -9.98151060e-01 -1.24050806e+00  4.32819472e-01
   2.33380305e+00 -4.47056809e-01 -1.44988028e+00 -1.04530305e+00
  -7.29828747e-01  1.87920623e+00  5.89778753e-01  1.15913075e+00
  -1.38613134e+00  1.86891033e+00 -1.69503770e+00 -4.97633856e-01
  -1.27732170e-02  2.37237915e+00 -3.72525268e-01 -1.76450490e+00
  -1.19268562e+00  1.59135617e+00  5.35204631e-01]
 [-2.11034888e+00  1.43935295e+00  5.39126287e-01 -1.21258015e+00
   1.21088662e+00 -1.68108413e+00  1.54757812e+00 -2.24663647e+00
  -3.35354575e-01 -2.04327694e-02 -2.19576784e+00 -1.86539781e+00
   1.23278687e+00  1.12392209e+00  1.90902928e+00 -1.07851297e+00
  -3.01312042e-01 -2.29698304e-01 -4.57051292e-01 -8.47593171e-01
  -6.75928274e-01 -1.88871942e+00 -1.44706480e-01  4.47034795e-01
   2.11882223e+00 -2.24809752e+00  1.07688830e+00]
 [ 1.01387673e+00 -1.30721765e+00 -9.92744512e-01  9.58925811e-01
   2.87996874e-01  1.41330868e+00 -1.40463519e+00  6.42387367e-01
  -3.52809839e-01 -7.72688939e-01  1.01366960e+00  9.03369316e-01
   9.13467434e-01 -9.45345203e-01 -6.64129020e-01  3.88039209e-01
   1.29469355e+00 -1.10973121e+00  5.74489174e-01  1.49806252e+00
  -9.42309626e-01 -5.31477248e-01  1.08402790e+00  7.50019819e-01
  -5.16189466e-01 -1.15912796e-01 -4.79007553e-01]
 [ 1.12820156e+00 -1.30721765e+00 -9.92744512e-01  8.17263543e-01
  -2.05467979e+00  1.66259687e-01 -3.21230471e-01  5.56359217e-01
  -4.43138454e-01 -7.72688939e-01  4.37362608e-01  2.96427155e-01
   9.13467434e-01 -9.45345203e-01 -6.00880384e-01  5.33172245e-01
   1.29469355e+00 -6.80471923e-01  4.05317464e-01  1.83202387e+00
  -9.42309626e-01 -3.68332171e-01  1.08402790e+00  6.09836229e-01
  -5.16189466e-01 -1.71924725e-02 -4.79007553e-01]
 [-1.50467460e-02 -1.30721765e+00 -9.92744512e-01  3.02509399e-02
   2.87996874e-01  1.66259687e-01 -3.21230471e-01 -8.88519067e-02
  -4.43138454e-01 -2.63509888e-01 -1.38944382e-01 -1.28936960e-01
  -1.98848520e+00 -9.45345203e-01 -5.81905793e-01  5.33172245e-01
   1.29469355e+00  2.57449166e-01  7.10901765e-02 -8.39666948e-01
  -9.42309626e-01  8.84740436e-02  1.08402790e+00  1.89285460e-01
  -5.16189466e-01 -9.61687310e-02 -4.79007553e-01]
 [ 2.97151481e-01  2.43507362e-01  6.63756141e-01  5.12761326e-01
   3.79307374e-01 -1.12832071e-01  1.60260602e+00 -1.30780015e+00
  -1.02444213e+00 -1.94264238e-01  7.41585291e-01 -4.92673000e-01
  -1.16291074e+00  7.08732667e-01 -1.16100657e+00 -1.55843053e-01
   2.38600949e-01 -2.32875897e-01  1.27428674e+00 -5.45837963e-01
   1.57245074e+00  2.98041385e-01 -1.76750448e+00  5.86579809e-01
  -5.85855812e-01 -9.03628478e-01 -6.47821560e-01]
 [-7.81444238e-01  2.11458006e-01  1.24664746e+00 -8.38577316e-01
   1.37806197e+00  6.33042772e-01  4.12050347e-01  1.28131824e+00
  -6.43930997e-01  3.02900737e-01  7.39527428e-01  6.53908115e-01
   4.98897844e-02 -4.81282556e-01  7.26667930e-01  1.07788519e+00
  -1.08441393e+00 -3.89001436e-01 -7.80667641e-02 -1.53509242e-03
   3.95191201e-01  1.64990820e-01 -1.38249938e+00 -7.03523167e-01
   5.56363320e-01  6.76986638e-01 -5.18479330e-01]
 [-1.07960320e+00  1.09787139e-01 -2.52189287e-01  4.07261781e-01
  -1.03114595e+00  1.00344678e+00 -1.30379182e-03  1.79800856e-01
   1.44520582e+00  2.21638137e-01  1.40525963e-01  1.54547503e+00
  -4.47685517e-01 -8.89243939e-01 -6.67761294e-01 -2.19992247e+00
  -1.25091892e-01  1.86837004e+00  1.09379747e+00 -8.53277238e-01
   8.24860059e-01 -1.63200938e-01  1.04010777e+00  1.03134718e+00
   3.32469584e-01  1.24809226e-01  2.38104447e+00]]
upper = 
[5943.68243387 6773.84733716 7057.67577827 ... 6919.00766477 6510.5554935
 6863.09293257]
upper.argmax() = 6891
all predict_target = 
[34580.10266721 31192.24479543 30012.07601122 ... 30614.13604215
 32232.0262885  30844.10819486]
upper.argmax() = 6891, sortnumber[0] = 6891
x_max = [5.49626877e+01 3.16666694e-02 2.21389759e-02 4.60732610e+02
 1.10310023e+00 4.73814876e+00 4.06065234e+00 5.75187853e+02
 4.79146575e+01 4.83872774e+01 9.74566504e+00 1.69217295e+09
 8.57542382e-01 4.58216750e-01 2.59585183e+02 8.48674213e-01
 3.54895498e-01 1.44134746e+09 1.65755319e+09 6.60915278e+01
 4.45018063e-01 6.03098323e+02 5.16018707e-01 3.96975174e+01
 1.78567724e+00 3.03247703e+02 2.53500206e+00]
black_box_function中schafferRun(i) 中的i为[54.962687721477025, 0.03166666943140406, 0.022138975887760037, 460.73261040313014, 1.1031002257054205, 4.7381487646663984, 4.0606523385975235, 575.1878530827628, 47.914657473542945, 48.38727738963276, 9.745665035467292, 1692172947.3391948, 0.8575423815743106, 0.4582167504987217, 259.5851831735598, 0.848674213146283, 0.3548954979102523, 1441347458.2325988, 1657553187.3381314, 66.09152782152138, 0.4450180634362725, 603.0983226821006, 0.5160187071715182, 39.69751740249883, 1.7856772439103636, 303.24770293671565, 2.535002063743748]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 54.962687721477025
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.03166666943140406
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.022138975887760037
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 460.73261040313014
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 1.1031002257054205
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.7381487646663984
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0606523385975235
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 575.1878530827628
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 47.914657473542945
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 48.38727738963276
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.745665035467292
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1692172947.3391948
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8575423815743106
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.4582167504987217
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 259.5851831735598
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.848674213146283
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.3548954979102523
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1441347458.2325988
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1657553187.3381314
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 66.09152782152138
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.4450180634362725
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 603.0983226821006
================= config19 =================
2022年 02月 22日 星期二 15:12:31 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (88514) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (141032) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.5160187071715182
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 39.69751740249883
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1.7856772439103636
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 303.24770293671565
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.535002063743748
configNum = 19	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 19 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 54.962687721477025, 'spark.broadcast.checksum': 0.03166666943140406, 'spark.broadcast.compress': 0.022138975887760037, 'spark.default.parallelism': 460.73261040313014, 'spark.executor.cores': 1.1031002257054205, 'spark.executor.instances': 4.7381487646663984, 'spark.executor.memory': 4.0606523385975235, 'spark.executor.memoryOverhead': 575.1878530827628, 'spark.kryoserializer.buffer': 47.914657473542945, 'spark.kryoserializer.buffer.max': 48.38727738963276, 'spark.locality.wait': 9.745665035467292, 'spark.maxRemoteBlockSizeFetchToMem': 1692172947.3391948, 'spark.memory.fraction': 0.8575423815743106, 'spark.memory.offHeap.enabled': 0.4582167504987217, 'spark.memory.offHeap.size': 259.5851831735598, 'spark.memory.storageFraction': 0.848674213146283, 'spark.rdd.compress': 0.3548954979102523, 'spark.reducer.maxBlocksInFlightPerAddress': 1441347458.2325988, 'spark.reducer.maxReqsInFlight': 1657553187.3381314, 'spark.reducer.maxSizeInFlight': 66.09152782152138, 'spark.scheduler.mode': 0.4450180634362725, 'spark.scheduler.revive.interval': 603.0983226821006, 'spark.shuffle.compress': 0.5160187071715182, 'spark.shuffle.file.buffer': 39.69751740249883, 'spark.shuffle.io.numConnectionsPerPeer': 1.7856772439103636, 'spark.shuffle.sort.bypassMergeThreshold': 303.24770293671565, 'spark.storage.memoryMapThreshold': 2.535002063743748} target = -477.782
x_probe = {'spark.broadcast.blockSize': 54.962687721477025, 'spark.broadcast.checksum': 0.03166666943140406, 'spark.broadcast.compress': 0.022138975887760037, 'spark.default.parallelism': 460.73261040313014, 'spark.executor.cores': 1.1031002257054205, 'spark.executor.instances': 4.7381487646663984, 'spark.executor.memory': 4.0606523385975235, 'spark.executor.memoryOverhead': 575.1878530827628, 'spark.kryoserializer.buffer': 47.914657473542945, 'spark.kryoserializer.buffer.max': 48.38727738963276, 'spark.locality.wait': 9.745665035467292, 'spark.maxRemoteBlockSizeFetchToMem': 1692172947.3391948, 'spark.memory.fraction': 0.8575423815743106, 'spark.memory.offHeap.enabled': 0.4582167504987217, 'spark.memory.offHeap.size': 259.5851831735598, 'spark.memory.storageFraction': 0.848674213146283, 'spark.rdd.compress': 0.3548954979102523, 'spark.reducer.maxBlocksInFlightPerAddress': 1441347458.2325988, 'spark.reducer.maxReqsInFlight': 1657553187.3381314, 'spark.reducer.maxSizeInFlight': 66.09152782152138, 'spark.scheduler.mode': 0.4450180634362725, 'spark.scheduler.revive.interval': 603.0983226821006, 'spark.shuffle.compress': 0.5160187071715182, 'spark.shuffle.file.buffer': 39.69751740249883, 'spark.shuffle.io.numConnectionsPerPeer': 1.7856772439103636, 'spark.shuffle.sort.bypassMergeThreshold': 303.24770293671565, 'spark.storage.memoryMapThreshold': 2.535002063743748}
target = -477.782
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (11, 27)
before probe, target = (11,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]
 [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
  2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
  8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
  8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
  3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
  5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
  3.15357234e+00 3.00158875e+02 1.98128633e+00]
 [4.36883181e+01 3.93887592e-01 1.71377673e-01 4.23952021e+02
  1.43690786e+00 6.67133457e+00 4.29529748e+00 6.58491389e+02
  1.07905272e+02 7.24808481e+01 8.48493312e+00 2.00660456e+09
  8.23714321e-01 1.61230903e-02 2.20425715e+02 5.31682574e-01
  5.96947713e-01 1.61967190e+09 2.06608150e+09 6.09592459e+01
  6.64114333e-01 6.74860321e+02 9.85825731e-01 4.10068495e+01
  2.91276590e+00 2.72192121e+02 3.35595803e+00]
 [5.49626877e+01 3.16666694e-02 2.21389759e-02 4.60732610e+02
  1.10310023e+00 4.73814876e+00 4.06065234e+00 5.75187853e+02
  4.79146575e+01 4.83872774e+01 9.74566504e+00 1.69217295e+09
  8.57542382e-01 4.58216750e-01 2.59585183e+02 8.48674213e-01
  3.54895498e-01 1.44134746e+09 1.65755319e+09 6.60915278e+01
  4.45018063e-01 6.03098323e+02 5.16018707e-01 3.96975174e+01
  1.78567724e+00 3.03247703e+02 2.53500206e+00]]
标准化后的train_x = 
[[ 1.16324992  0.1240138  -0.19158024  0.73153339 -0.654273    0.92456155
  -0.89810365  0.8691843  -0.16390634 -0.75291206  0.77222526  0.9993988
   0.7193185  -0.48783876 -0.87620425  0.21343987  0.16964114 -0.97045099
   0.64929425  0.97782033 -0.99016984 -0.24558154 -0.24944371  0.61605229
  -0.90991657 -0.12948325 -0.24026618]
 [ 0.29284666  0.39024254 -0.82898561  0.58615203  0.62427423 -1.24739284
   0.66086506 -0.07334818  0.28910377  2.88825768 -0.20980707 -0.75412653
   0.48140098  0.87556264  1.42411463 -0.802726   -1.22389542 -0.55775411
  -1.86800962 -0.87735214  1.70058643  0.44675779 -0.32228662 -1.93725314
   1.37079478  1.00344769 -1.3117521 ]
 [ 0.10365206  1.69929936  2.05886231 -2.26696556  0.06319404 -0.84017677
  -1.2729209   0.54650676  1.81122488 -0.37046122 -1.55118566 -1.026475
  -0.79581799  1.87350643  0.65339823  0.79938131 -1.30503574  1.83001961
  -1.76265073 -0.58462243 -0.03636033  2.4797227  -0.34835458 -1.871293
  -1.15608953  1.56050236  0.4900976 ]
 [-2.22887678  1.5275211   0.62839285 -1.30914544  1.26602985 -1.49953857
   1.64260883 -1.98106101  0.01739791  0.06157809 -2.30804099 -1.87403917
   1.24987447  1.09610383  2.02607297 -1.10172396 -0.21370211 -0.30877104
  -0.46542322 -0.93989453 -0.73004126 -1.81873476 -0.11127058  0.37593168
   2.23895366 -2.37022213  1.04763187]
 [ 1.04133119 -1.18300415 -0.92251663  0.87388472  0.41672378  1.48805205
  -1.44455029  0.74419505  0.00566697 -0.7002267   0.94858905  0.98746893
   0.91703835 -1.03376186 -0.65128763  0.14426084  1.39188749 -1.20565392
   0.61547934  1.44137093 -1.00868449 -0.44959306  1.16743549  0.68380561
  -0.46252823 -0.18735149 -0.55379218]
 [ 1.16099795 -1.18300415 -0.92251663  0.73147065 -1.73916701  0.28404464
  -0.31162309  0.6630435  -0.05503903 -0.7002267   0.36380785  0.36019699
   0.91703835 -1.03376186 -0.58547768  0.26756608  1.39188749 -0.76817561
   0.43821229  1.7804022  -1.00868449 -0.28501762  1.16743549  0.54136004
  -0.46252823 -0.08628441 -0.55379218]
 [-0.0356697  -1.18300415 -0.92251663 -0.05971864  0.41672378  0.28404464
  -0.31162309  0.05440695 -0.05503903 -0.18458448 -0.22097334 -0.07941486
  -2.10775293 -1.03376186 -0.5657347   0.26756608  1.39188749  0.18770383
   0.08799129 -0.93184798 -1.00868449  0.17579361  1.16743549  0.11402335
  -0.46252823 -0.16713807 -0.55379218]
 [ 0.29111628  0.34736951  0.75457165  0.42535244  0.50075393  0.01458566
   1.70015206 -1.09544376 -0.44570843 -0.11445988  0.67250393 -0.45533439
  -1.24723218  0.6687556  -1.16828667 -0.3178223   0.32945306 -0.31200948
   1.34876417 -0.63355833  1.62183351  0.38719832 -1.80006653  0.51772836
  -0.53395197 -0.99379261 -0.72754598]
 [-0.83787783  0.31574076  1.34470737 -0.93315777  1.419876    0.73471682
   0.45517603  1.34690736 -0.18998314  0.38901576  0.6704158   0.72965192
   0.01690576 -0.55610916  0.79583086  0.73035497 -1.00150652 -0.47112435
  -0.06830322 -0.08099231  0.39038321  0.25298124 -1.39940357 -0.79319147
   0.63708052  0.62439661 -0.59441897]
 [-1.14996855  0.2154042  -0.1727575   0.319293   -0.79724139  1.09233643
   0.02292745  0.30783081  1.2140366   0.30672167  0.06260643  1.65108223
  -0.50173173 -0.97601767 -0.655067   -2.05447506 -0.03642376  1.82946898
   1.15963798 -0.94566489  0.83983027 -0.07808792  1.12172915  0.96967241
   0.40753889  0.05909293  2.3899499 ]
 [ 0.19919879 -1.07057884 -0.82566096  0.90130118 -1.51689419 -1.23523361
  -0.24290841 -1.38222177 -2.42775417 -0.82270216  0.79985874 -0.53840893
   0.35095842  0.60732264 -0.39735875  1.85417817 -0.89419311  0.74674708
  -0.13499255  0.79433917  0.22999147 -0.86543875 -0.39321002  0.78316387
  -0.66682507  0.68683236  0.60768041]]
train_y = 
[   -220.801    -307.435    -316.038 -100000.       -223.547    -379.414
 -100000.       -247.247 -100000.       -335.557    -477.782]
测试：每一列进行标准化，标准化后的train_x = 
[[ 1.16324992  0.1240138  -0.19158024  0.73153339 -0.654273    0.92456155
  -0.89810365  0.8691843  -0.16390634 -0.75291206  0.77222526  0.9993988
   0.7193185  -0.48783876 -0.87620425  0.21343987  0.16964114 -0.97045099
   0.64929425  0.97782033 -0.99016984 -0.24558154 -0.24944371  0.61605229
  -0.90991657 -0.12948325 -0.24026618]
 [ 0.29284666  0.39024254 -0.82898561  0.58615203  0.62427423 -1.24739284
   0.66086506 -0.07334818  0.28910377  2.88825768 -0.20980707 -0.75412653
   0.48140098  0.87556264  1.42411463 -0.802726   -1.22389542 -0.55775411
  -1.86800962 -0.87735214  1.70058643  0.44675779 -0.32228662 -1.93725314
   1.37079478  1.00344769 -1.3117521 ]
 [ 0.10365206  1.69929936  2.05886231 -2.26696556  0.06319404 -0.84017677
  -1.2729209   0.54650676  1.81122488 -0.37046122 -1.55118566 -1.026475
  -0.79581799  1.87350643  0.65339823  0.79938131 -1.30503574  1.83001961
  -1.76265073 -0.58462243 -0.03636033  2.4797227  -0.34835458 -1.871293
  -1.15608953  1.56050236  0.4900976 ]
 [-2.22887678  1.5275211   0.62839285 -1.30914544  1.26602985 -1.49953857
   1.64260883 -1.98106101  0.01739791  0.06157809 -2.30804099 -1.87403917
   1.24987447  1.09610383  2.02607297 -1.10172396 -0.21370211 -0.30877104
  -0.46542322 -0.93989453 -0.73004126 -1.81873476 -0.11127058  0.37593168
   2.23895366 -2.37022213  1.04763187]
 [ 1.04133119 -1.18300415 -0.92251663  0.87388472  0.41672378  1.48805205
  -1.44455029  0.74419505  0.00566697 -0.7002267   0.94858905  0.98746893
   0.91703835 -1.03376186 -0.65128763  0.14426084  1.39188749 -1.20565392
   0.61547934  1.44137093 -1.00868449 -0.44959306  1.16743549  0.68380561
  -0.46252823 -0.18735149 -0.55379218]
 [ 1.16099795 -1.18300415 -0.92251663  0.73147065 -1.73916701  0.28404464
  -0.31162309  0.6630435  -0.05503903 -0.7002267   0.36380785  0.36019699
   0.91703835 -1.03376186 -0.58547768  0.26756608  1.39188749 -0.76817561
   0.43821229  1.7804022  -1.00868449 -0.28501762  1.16743549  0.54136004
  -0.46252823 -0.08628441 -0.55379218]
 [-0.0356697  -1.18300415 -0.92251663 -0.05971864  0.41672378  0.28404464
  -0.31162309  0.05440695 -0.05503903 -0.18458448 -0.22097334 -0.07941486
  -2.10775293 -1.03376186 -0.5657347   0.26756608  1.39188749  0.18770383
   0.08799129 -0.93184798 -1.00868449  0.17579361  1.16743549  0.11402335
  -0.46252823 -0.16713807 -0.55379218]
 [ 0.29111628  0.34736951  0.75457165  0.42535244  0.50075393  0.01458566
   1.70015206 -1.09544376 -0.44570843 -0.11445988  0.67250393 -0.45533439
  -1.24723218  0.6687556  -1.16828667 -0.3178223   0.32945306 -0.31200948
   1.34876417 -0.63355833  1.62183351  0.38719832 -1.80006653  0.51772836
  -0.53395197 -0.99379261 -0.72754598]
 [-0.83787783  0.31574076  1.34470737 -0.93315777  1.419876    0.73471682
   0.45517603  1.34690736 -0.18998314  0.38901576  0.6704158   0.72965192
   0.01690576 -0.55610916  0.79583086  0.73035497 -1.00150652 -0.47112435
  -0.06830322 -0.08099231  0.39038321  0.25298124 -1.39940357 -0.79319147
   0.63708052  0.62439661 -0.59441897]
 [-1.14996855  0.2154042  -0.1727575   0.319293   -0.79724139  1.09233643
   0.02292745  0.30783081  1.2140366   0.30672167  0.06260643  1.65108223
  -0.50173173 -0.97601767 -0.655067   -2.05447506 -0.03642376  1.82946898
   1.15963798 -0.94566489  0.83983027 -0.07808792  1.12172915  0.96967241
   0.40753889  0.05909293  2.3899499 ]
 [ 0.19919879 -1.07057884 -0.82566096  0.90130118 -1.51689419 -1.23523361
  -0.24290841 -1.38222177 -2.42775417 -0.82270216  0.79985874 -0.53840893
   0.35095842  0.60732264 -0.39735875  1.85417817 -0.89419311  0.74674708
  -0.13499255  0.79433917  0.22999147 -0.86543875 -0.39321002  0.78316387
  -0.66682507  0.68683236  0.60768041]]
================= config20 =================
2022年 02月 22日 星期二 15:20:38 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (100082) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (174809) - 没有那个进程
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 1.16324992  0.1240138  -0.19158024  0.73153339 -0.654273    0.92456155
  -0.89810365  0.8691843  -0.16390634 -0.75291206  0.77222526  0.9993988
   0.7193185  -0.48783876 -0.87620425  0.21343987  0.16964114 -0.97045099
   0.64929425  0.97782033 -0.99016984 -0.24558154 -0.24944371  0.61605229
  -0.90991657 -0.12948325 -0.24026618]
 [ 0.29284666  0.39024254 -0.82898561  0.58615203  0.62427423 -1.24739284
   0.66086506 -0.07334818  0.28910377  2.88825768 -0.20980707 -0.75412653
   0.48140098  0.87556264  1.42411463 -0.802726   -1.22389542 -0.55775411
  -1.86800962 -0.87735214  1.70058643  0.44675779 -0.32228662 -1.93725314
   1.37079478  1.00344769 -1.3117521 ]
 [ 0.10365206  1.69929936  2.05886231 -2.26696556  0.06319404 -0.84017677
  -1.2729209   0.54650676  1.81122488 -0.37046122 -1.55118566 -1.026475
  -0.79581799  1.87350643  0.65339823  0.79938131 -1.30503574  1.83001961
  -1.76265073 -0.58462243 -0.03636033  2.4797227  -0.34835458 -1.871293
  -1.15608953  1.56050236  0.4900976 ]
 [-2.22887678  1.5275211   0.62839285 -1.30914544  1.26602985 -1.49953857
   1.64260883 -1.98106101  0.01739791  0.06157809 -2.30804099 -1.87403917
   1.24987447  1.09610383  2.02607297 -1.10172396 -0.21370211 -0.30877104
  -0.46542322 -0.93989453 -0.73004126 -1.81873476 -0.11127058  0.37593168
   2.23895366 -2.37022213  1.04763187]
 [ 1.04133119 -1.18300415 -0.92251663  0.87388472  0.41672378  1.48805205
  -1.44455029  0.74419505  0.00566697 -0.7002267   0.94858905  0.98746893
   0.91703835 -1.03376186 -0.65128763  0.14426084  1.39188749 -1.20565392
   0.61547934  1.44137093 -1.00868449 -0.44959306  1.16743549  0.68380561
  -0.46252823 -0.18735149 -0.55379218]
 [ 1.16099795 -1.18300415 -0.92251663  0.73147065 -1.73916701  0.28404464
  -0.31162309  0.6630435  -0.05503903 -0.7002267   0.36380785  0.36019699
   0.91703835 -1.03376186 -0.58547768  0.26756608  1.39188749 -0.76817561
   0.43821229  1.7804022  -1.00868449 -0.28501762  1.16743549  0.54136004
  -0.46252823 -0.08628441 -0.55379218]
 [-0.0356697  -1.18300415 -0.92251663 -0.05971864  0.41672378  0.28404464
  -0.31162309  0.05440695 -0.05503903 -0.18458448 -0.22097334 -0.07941486
  -2.10775293 -1.03376186 -0.5657347   0.26756608  1.39188749  0.18770383
   0.08799129 -0.93184798 -1.00868449  0.17579361  1.16743549  0.11402335
  -0.46252823 -0.16713807 -0.55379218]
 [ 0.29111628  0.34736951  0.75457165  0.42535244  0.50075393  0.01458566
   1.70015206 -1.09544376 -0.44570843 -0.11445988  0.67250393 -0.45533439
  -1.24723218  0.6687556  -1.16828667 -0.3178223   0.32945306 -0.31200948
   1.34876417 -0.63355833  1.62183351  0.38719832 -1.80006653  0.51772836
  -0.53395197 -0.99379261 -0.72754598]
 [-0.83787783  0.31574076  1.34470737 -0.93315777  1.419876    0.73471682
   0.45517603  1.34690736 -0.18998314  0.38901576  0.6704158   0.72965192
   0.01690576 -0.55610916  0.79583086  0.73035497 -1.00150652 -0.47112435
  -0.06830322 -0.08099231  0.39038321  0.25298124 -1.39940357 -0.79319147
   0.63708052  0.62439661 -0.59441897]
 [-1.14996855  0.2154042  -0.1727575   0.319293   -0.79724139  1.09233643
   0.02292745  0.30783081  1.2140366   0.30672167  0.06260643  1.65108223
  -0.50173173 -0.97601767 -0.655067   -2.05447506 -0.03642376  1.82946898
   1.15963798 -0.94566489  0.83983027 -0.07808792  1.12172915  0.96967241
   0.40753889  0.05909293  2.3899499 ]
 [ 0.19919879 -1.07057884 -0.82566096  0.90130118 -1.51689419 -1.23523361
  -0.24290841 -1.38222177 -2.42775417 -0.82270216  0.79985874 -0.53840893
   0.35095842  0.60732264 -0.39735875  1.85417817 -0.89419311  0.74674708
  -0.13499255  0.79433917  0.22999147 -0.86543875 -0.39321002  0.78316387
  -0.66682507  0.68683236  0.60768041]]
upper = 
[7704.45364588 7275.08081121 7279.82414808 ... 7166.99749265 6883.94471078
 6686.88359781]
upper.argmax() = 9188
all predict_target = 
[25956.8292886  27622.47768755 27609.00020153 ... 28008.27686409
 29040.50034022 29877.03385234]
upper.argmax() = 9188, sortnumber[0] = 9188
x_max = [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
 2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
 7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
 7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
 4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
 2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
 2.73005095e+00 2.20692111e+02 1.77617490e+00]
black_box_function中schafferRun(i) 中的i为[62.99768950117159, 0.23413912803411496, 0.54624117578541, 496.6927840407109, 2.2839700690736633, 6.613292446130918, 5.929662496355077, 466.23193617097036, 70.73852710206887, 42.50367995183045, 9.792455823602282, 2092234621.316702, 0.7455693320270103, 0.4569920044062866, 311.92409772350584, 0.7714900238777631, 0.42328926062432537, 1312030638.0690248, 1988244606.5784078, 60.23368533555572, 0.02306880368719544, 718.3641767450156, 0.5091671023572009, 33.711758983644735, 2.730050945490989, 220.69211088573223, 1.7761749031177816]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 62.99768950117159
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.23413912803411496
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.54624117578541
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 496.6927840407109
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.2839700690736633
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.613292446130918
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.929662496355077
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 466.23193617097036
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 70.73852710206887
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 42.50367995183045
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.792455823602282
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2092234621.316702
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7455693320270103
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.4569920044062866
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 311.92409772350584
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7714900238777631
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.42328926062432537
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1312030638.0690248
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1988244606.5784078
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 60.23368533555572
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.02306880368719544
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 718.3641767450156
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.5091671023572009
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 33.711758983644735
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 2.730050945490989
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 220.69211088573223
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 1.7761749031177816
configNum = 20	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 20 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 62.99768950117159, 'spark.broadcast.checksum': 0.23413912803411496, 'spark.broadcast.compress': 0.54624117578541, 'spark.default.parallelism': 496.6927840407109, 'spark.executor.cores': 2.2839700690736633, 'spark.executor.instances': 6.613292446130918, 'spark.executor.memory': 5.929662496355077, 'spark.executor.memoryOverhead': 466.23193617097036, 'spark.kryoserializer.buffer': 70.73852710206887, 'spark.kryoserializer.buffer.max': 42.50367995183045, 'spark.locality.wait': 9.792455823602282, 'spark.maxRemoteBlockSizeFetchToMem': 2092234621.316702, 'spark.memory.fraction': 0.7455693320270103, 'spark.memory.offHeap.enabled': 0.4569920044062866, 'spark.memory.offHeap.size': 311.92409772350584, 'spark.memory.storageFraction': 0.7714900238777631, 'spark.rdd.compress': 0.42328926062432537, 'spark.reducer.maxBlocksInFlightPerAddress': 1312030638.0690248, 'spark.reducer.maxReqsInFlight': 1988244606.5784078, 'spark.reducer.maxSizeInFlight': 60.23368533555572, 'spark.scheduler.mode': 0.02306880368719544, 'spark.scheduler.revive.interval': 718.3641767450156, 'spark.shuffle.compress': 0.5091671023572009, 'spark.shuffle.file.buffer': 33.711758983644735, 'spark.shuffle.io.numConnectionsPerPeer': 2.730050945490989, 'spark.shuffle.sort.bypassMergeThreshold': 220.69211088573223, 'spark.storage.memoryMapThreshold': 1.7761749031177816} target = -231.466
x_probe = {'spark.broadcast.blockSize': 62.99768950117159, 'spark.broadcast.checksum': 0.23413912803411496, 'spark.broadcast.compress': 0.54624117578541, 'spark.default.parallelism': 496.6927840407109, 'spark.executor.cores': 2.2839700690736633, 'spark.executor.instances': 6.613292446130918, 'spark.executor.memory': 5.929662496355077, 'spark.executor.memoryOverhead': 466.23193617097036, 'spark.kryoserializer.buffer': 70.73852710206887, 'spark.kryoserializer.buffer.max': 42.50367995183045, 'spark.locality.wait': 9.792455823602282, 'spark.maxRemoteBlockSizeFetchToMem': 2092234621.316702, 'spark.memory.fraction': 0.7455693320270103, 'spark.memory.offHeap.enabled': 0.4569920044062866, 'spark.memory.offHeap.size': 311.92409772350584, 'spark.memory.storageFraction': 0.7714900238777631, 'spark.rdd.compress': 0.42328926062432537, 'spark.reducer.maxBlocksInFlightPerAddress': 1312030638.0690248, 'spark.reducer.maxReqsInFlight': 1988244606.5784078, 'spark.reducer.maxSizeInFlight': 60.23368533555572, 'spark.scheduler.mode': 0.02306880368719544, 'spark.scheduler.revive.interval': 718.3641767450156, 'spark.shuffle.compress': 0.5091671023572009, 'spark.shuffle.file.buffer': 33.711758983644735, 'spark.shuffle.io.numConnectionsPerPeer': 2.730050945490989, 'spark.shuffle.sort.bypassMergeThreshold': 220.69211088573223, 'spark.storage.memoryMapThreshold': 1.7761749031177816}
target = -231.466
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (12, 27)
before probe, target = (12,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]
 [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
  2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
  8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
  8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
  3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
  5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
  3.15357234e+00 3.00158875e+02 1.98128633e+00]
 [4.36883181e+01 3.93887592e-01 1.71377673e-01 4.23952021e+02
  1.43690786e+00 6.67133457e+00 4.29529748e+00 6.58491389e+02
  1.07905272e+02 7.24808481e+01 8.48493312e+00 2.00660456e+09
  8.23714321e-01 1.61230903e-02 2.20425715e+02 5.31682574e-01
  5.96947713e-01 1.61967190e+09 2.06608150e+09 6.09592459e+01
  6.64114333e-01 6.74860321e+02 9.85825731e-01 4.10068495e+01
  2.91276590e+00 2.72192121e+02 3.35595803e+00]
 [5.49626877e+01 3.16666694e-02 2.21389759e-02 4.60732610e+02
  1.10310023e+00 4.73814876e+00 4.06065234e+00 5.75187853e+02
  4.79146575e+01 4.83872774e+01 9.74566504e+00 1.69217295e+09
  8.57542382e-01 4.58216750e-01 2.59585183e+02 8.48674213e-01
  3.54895498e-01 1.44134746e+09 1.65755319e+09 6.60915278e+01
  4.45018063e-01 6.03098323e+02 5.16018707e-01 3.96975174e+01
  1.78567724e+00 3.03247703e+02 2.53500206e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]]
标准化后的train_x = 
[[ 1.05623095  0.15932454 -0.30184614  0.58552626 -0.74092937  0.84081955
  -0.96848935  0.84718181 -0.07706953 -0.65846396  0.71447376  0.71159854
   0.78671529 -0.55368563 -0.91045347  0.139718    0.22988409 -1.01019701
   0.57893294  1.06383446 -0.91846706 -0.2893344  -0.22279252  0.64936256
  -0.96849396 -0.04789087 -0.15368194]
 [ 0.19422727  0.43596888 -0.91487366  0.44574998  0.53919357 -1.3349191
   0.4635719   0.16387495  0.37602212  2.96670669 -0.28317468 -0.82488247
   0.58442628  0.84924875  1.49187097 -0.8873513  -1.20051516 -0.57917568
  -1.96348934 -0.76844771  1.79296413  0.42903564 -0.29833351 -2.01694172
   1.40824404  1.09056644 -1.22557379]
 [ 0.00685844  1.79623961  1.86252722 -2.29736739 -0.02257811 -0.92699353
  -1.31279469  0.61325059  1.8984172  -0.27769358 -1.64588363 -1.06352073
  -0.50152724  1.87612876  0.68697785  0.73194657 -1.28380185  1.91461927
  -1.85707915 -0.47932988  0.04267122  2.53843634 -0.32536702 -1.94806244
  -1.22503173  1.65033839  0.57695855]
 [-2.30316099  1.61774091  0.48676671 -1.37647544  1.18174011 -1.58750416
   1.36539706 -1.21915779  0.10426736  0.15244737 -2.41477434 -1.80617681
   1.23781971  1.07618472  2.12052261 -1.18955749 -0.16359958 -0.31913734
  -0.54690751 -0.83021841 -0.65633974 -1.92163533 -0.07950148  0.39861519
   2.31295572 -2.29955994  1.13470405]
 [ 0.93548876 -1.19882756 -1.00482753  0.72238932  0.33138733  1.40529183
  -1.47045264  0.75656847  0.09253431 -0.60601009  0.89364206  0.70114529
   0.9548263  -1.11543823 -0.67556313  0.06979669  1.48446206 -1.25584335
   0.54478061  1.52166547 -0.93712397 -0.50101638  1.24656759  0.72011436
  -0.50226886 -0.10604139 -0.46732671]
 [ 1.05400072 -1.19882756 -1.00482753  0.58546594 -1.82716043  0.19918664
  -0.42975109  0.69773612  0.03181737 -0.60601009  0.29956178  0.15151456
   0.9548263  -1.11543823 -0.6068349   0.19442498  1.48446206 -0.79894026
   0.36574474  1.85651356 -0.93712397 -0.33025321  1.24656759  0.57136474
  -0.50226886 -0.0044813  -0.46732671]
 [-0.13111883 -1.19882756 -1.00482753 -0.17521953  0.33138733  0.19918664
  -0.42975109  0.25649346  0.03181737 -0.09263358 -0.29451851 -0.2336839
  -1.61699796 -1.11543823 -0.58621643  0.19442498  1.48446206  0.19938187
   0.01202913 -0.82227114 -0.93712397  0.14788369  1.24656759  0.12511587
  -0.50226886 -0.08572937 -0.46732671]
 [ 0.19251359  0.39141854  0.60811975  0.29114993  0.41552104 -0.07074182
   1.418256   -0.5771127  -0.35892235 -0.02281709  0.61316668 -0.56307362
  -0.88534149  0.63644516 -1.21548802 -0.39724459  0.39392346 -0.32251956
   1.28538238 -0.52766198  1.7136061   0.36723684 -1.83085007  0.54668722
  -0.57669981 -0.91641628 -0.64114634]
 [-0.92558548  0.35855239  1.17568546 -1.01498375  1.33577586  0.65064404
   0.27462693  1.19351624 -0.10315102  0.4784463   0.61104535  0.47523984
   0.18948991 -0.62393559  0.83572652  0.66217958 -0.97224349 -0.48869941
  -0.14582493  0.01808612  0.47269372  0.22797344 -1.41534664 -0.82224856
   0.64363761  0.70966637 -0.50796889]
 [-1.23466446  0.25429038 -0.28374328  0.18917955 -0.88407395  1.00888674
  -0.12243455  0.44021791  1.30112143  0.39651381 -0.0064293   1.2826192
  -0.25148084 -1.05601971 -0.67951008 -2.15253158  0.01836824  1.91404419
   1.09436904 -0.83591757  0.92559419 -0.11554332  1.1991683   1.01863246
   0.40443141  0.14160517  2.47753061]
 [ 0.10148313 -1.08200386 -0.91167615  0.74874875 -1.60461367 -1.32273868
  -0.36663011 -0.78501788 -2.34132483 -0.7279474   0.74254667 -0.63586552
   0.47351769  0.5732309  -0.410374    1.79806137 -0.86209136  0.7832476
  -0.21317971  0.88261721  0.31106959 -0.93249711 -0.37188389  0.82386981
  -0.71516737  0.77240668  0.69458591]
 [ 1.05372689 -0.33504872  1.29352268  1.29583638  0.94435029  0.93888184
   1.57845164 -2.38755117 -0.95552942 -1.00253838  0.77034415  1.80508561
  -1.92627393  0.56871734 -0.05065792  0.8361328  -0.61331055 -0.03678032
   0.8452418  -1.07887014 -0.87242023  0.3797138  -0.39479592 -0.06650949
   0.22293066 -0.9044639  -0.95342802]]
train_y = 
[   -220.801    -307.435    -316.038 -100000.       -223.547    -379.414
 -100000.       -247.247 -100000.       -335.557    -477.782    -231.466]
测试：每一列进行标准化，标准化后的train_x = 
[[ 1.05623095  0.15932454 -0.30184614  0.58552626 -0.74092937  0.84081955
  -0.96848935  0.84718181 -0.07706953 -0.65846396  0.71447376  0.71159854
   0.78671529 -0.55368563 -0.91045347  0.139718    0.22988409 -1.01019701
   0.57893294  1.06383446 -0.91846706 -0.2893344  -0.22279252  0.64936256
  -0.96849396 -0.04789087 -0.15368194]
 [ 0.19422727  0.43596888 -0.91487366  0.44574998  0.53919357 -1.3349191
   0.4635719   0.16387495  0.37602212  2.96670669 -0.28317468 -0.82488247
   0.58442628  0.84924875  1.49187097 -0.8873513  -1.20051516 -0.57917568
  -1.96348934 -0.76844771  1.79296413  0.42903564 -0.29833351 -2.01694172
   1.40824404  1.09056644 -1.22557379]
 [ 0.00685844  1.79623961  1.86252722 -2.29736739 -0.02257811 -0.92699353
  -1.31279469  0.61325059  1.8984172  -0.27769358 -1.64588363 -1.06352073
  -0.50152724  1.87612876  0.68697785  0.73194657 -1.28380185  1.91461927
  -1.85707915 -0.47932988  0.04267122  2.53843634 -0.32536702 -1.94806244
  -1.22503173  1.65033839  0.57695855]
 [-2.30316099  1.61774091  0.48676671 -1.37647544  1.18174011 -1.58750416
   1.36539706 -1.21915779  0.10426736  0.15244737 -2.41477434 -1.80617681
   1.23781971  1.07618472  2.12052261 -1.18955749 -0.16359958 -0.31913734
  -0.54690751 -0.83021841 -0.65633974 -1.92163533 -0.07950148  0.39861519
   2.31295572 -2.29955994  1.13470405]
 [ 0.93548876 -1.19882756 -1.00482753  0.72238932  0.33138733  1.40529183
  -1.47045264  0.75656847  0.09253431 -0.60601009  0.89364206  0.70114529
   0.9548263  -1.11543823 -0.67556313  0.06979669  1.48446206 -1.25584335
   0.54478061  1.52166547 -0.93712397 -0.50101638  1.24656759  0.72011436
  -0.50226886 -0.10604139 -0.46732671]
 [ 1.05400072 -1.19882756 -1.00482753  0.58546594 -1.82716043  0.19918664
  -0.42975109  0.69773612  0.03181737 -0.60601009  0.29956178  0.15151456
   0.9548263  -1.11543823 -0.6068349   0.19442498  1.48446206 -0.79894026
   0.36574474  1.85651356 -0.93712397 -0.33025321  1.24656759  0.57136474
  -0.50226886 -0.0044813  -0.46732671]
 [-0.13111883 -1.19882756 -1.00482753 -0.17521953  0.33138733  0.19918664
  -0.42975109  0.25649346  0.03181737 -0.09263358 -0.29451851 -0.2336839
  -1.61699796 -1.11543823 -0.58621643  0.19442498  1.48446206  0.19938187
   0.01202913 -0.82227114 -0.93712397  0.14788369  1.24656759  0.12511587
  -0.50226886 -0.08572937 -0.46732671]
 [ 0.19251359  0.39141854  0.60811975  0.29114993  0.41552104 -0.07074182
   1.418256   -0.5771127  -0.35892235 -0.02281709  0.61316668 -0.56307362
  -0.88534149  0.63644516 -1.21548802 -0.39724459  0.39392346 -0.32251956
   1.28538238 -0.52766198  1.7136061   0.36723684 -1.83085007  0.54668722
  -0.57669981 -0.91641628 -0.64114634]
 [-0.92558548  0.35855239  1.17568546 -1.01498375  1.33577586  0.65064404
   0.27462693  1.19351624 -0.10315102  0.4784463   0.61104535  0.47523984
   0.18948991 -0.62393559  0.83572652  0.66217958 -0.97224349 -0.48869941
  -0.14582493  0.01808612  0.47269372  0.22797344 -1.41534664 -0.82224856
   0.64363761  0.70966637 -0.50796889]
 [-1.23466446  0.25429038 -0.28374328  0.18917955 -0.88407395  1.00888674
  -0.12243455  0.44021791  1.30112143  0.39651381 -0.0064293   1.2826192
  -0.25148084 -1.05601971 -0.67951008 -2.15253158  0.01836824  1.91404419
   1.09436904 -0.83591757  0.92559419 -0.11554332  1.1991683   1.01863246
   0.40443141  0.14160517  2.47753061]
 [ 0.10148313 -1.08200386 -0.91167615  0.74874875 -1.60461367 -1.32273868
  -0.36663011 -0.78501788 -2.34132483 -0.7279474   0.74254667 -0.63586552
   0.47351769  0.5732309  -0.410374    1.79806137 -0.86209136  0.7832476
  -0.21317971  0.88261721  0.31106959 -0.93249711 -0.37188389  0.82386981
  -0.71516737  0.77240668  0.69458591]
 [ 1.05372689 -0.33504872  1.29352268  1.29583638  0.94435029  0.93888184
   1.57845164 -2.38755117 -0.95552942 -1.00253838  0.77034415  1.80508561
  -1.92627393  0.56871734 -0.05065792  0.8361328  -0.61331055 -0.03678032
   0.8452418  -1.07887014 -0.87242023  0.3797138  -0.39479592 -0.06650949
   0.22293066 -0.9044639  -0.95342802]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 1.05623095  0.15932454 -0.30184614  0.58552626 -0.74092937  0.84081955
  -0.96848935  0.84718181 -0.07706953 -0.65846396  0.71447376  0.71159854
   0.78671529 -0.55368563 -0.91045347  0.139718    0.22988409 -1.01019701
   0.57893294  1.06383446 -0.91846706 -0.2893344  -0.22279252  0.64936256
  -0.96849396 -0.04789087 -0.15368194]
 [ 0.19422727  0.43596888 -0.91487366  0.44574998  0.53919357 -1.3349191
   0.4635719   0.16387495  0.37602212  2.96670669 -0.28317468 -0.82488247
   0.58442628  0.84924875  1.49187097 -0.8873513  -1.20051516 -0.57917568
  -1.96348934 -0.76844771  1.79296413  0.42903564 -0.29833351 -2.01694172
   1.40824404  1.09056644 -1.22557379]
 [ 0.00685844  1.79623961  1.86252722 -2.29736739 -0.02257811 -0.92699353
  -1.31279469  0.61325059  1.8984172  -0.27769358 -1.64588363 -1.06352073
  -0.50152724  1.87612876  0.68697785  0.73194657 -1.28380185  1.91461927
  -1.85707915 -0.47932988  0.04267122  2.53843634 -0.32536702 -1.94806244
  -1.22503173  1.65033839  0.57695855]
 [-2.30316099  1.61774091  0.48676671 -1.37647544  1.18174011 -1.58750416
   1.36539706 -1.21915779  0.10426736  0.15244737 -2.41477434 -1.80617681
   1.23781971  1.07618472  2.12052261 -1.18955749 -0.16359958 -0.31913734
  -0.54690751 -0.83021841 -0.65633974 -1.92163533 -0.07950148  0.39861519
   2.31295572 -2.29955994  1.13470405]
 [ 0.93548876 -1.19882756 -1.00482753  0.72238932  0.33138733  1.40529183
  -1.47045264  0.75656847  0.09253431 -0.60601009  0.89364206  0.70114529
   0.9548263  -1.11543823 -0.67556313  0.06979669  1.48446206 -1.25584335
   0.54478061  1.52166547 -0.93712397 -0.50101638  1.24656759  0.72011436
  -0.50226886 -0.10604139 -0.46732671]
 [ 1.05400072 -1.19882756 -1.00482753  0.58546594 -1.82716043  0.19918664
  -0.42975109  0.69773612  0.03181737 -0.60601009  0.29956178  0.15151456
   0.9548263  -1.11543823 -0.6068349   0.19442498  1.48446206 -0.79894026
   0.36574474  1.85651356 -0.93712397 -0.33025321  1.24656759  0.57136474
  -0.50226886 -0.0044813  -0.46732671]
 [-0.13111883 -1.19882756 -1.00482753 -0.17521953  0.33138733  0.19918664
  -0.42975109  0.25649346  0.03181737 -0.09263358 -0.29451851 -0.2336839
  -1.61699796 -1.11543823 -0.58621643  0.19442498  1.48446206  0.19938187
   0.01202913 -0.82227114 -0.93712397  0.14788369  1.24656759  0.12511587
  -0.50226886 -0.08572937 -0.46732671]
 [ 0.19251359  0.39141854  0.60811975  0.29114993  0.41552104 -0.07074182
   1.418256   -0.5771127  -0.35892235 -0.02281709  0.61316668 -0.56307362
  -0.88534149  0.63644516 -1.21548802 -0.39724459  0.39392346 -0.32251956
   1.28538238 -0.52766198  1.7136061   0.36723684 -1.83085007  0.54668722
  -0.57669981 -0.91641628 -0.64114634]
 [-0.92558548  0.35855239  1.17568546 -1.01498375  1.33577586  0.65064404
   0.27462693  1.19351624 -0.10315102  0.4784463   0.61104535  0.47523984
   0.18948991 -0.62393559  0.83572652  0.66217958 -0.97224349 -0.48869941
  -0.14582493  0.01808612  0.47269372  0.22797344 -1.41534664 -0.82224856
   0.64363761  0.70966637 -0.50796889]
 [-1.23466446  0.25429038 -0.28374328  0.18917955 -0.88407395  1.00888674
  -0.12243455  0.44021791  1.30112143  0.39651381 -0.0064293   1.2826192
  -0.25148084 -1.05601971 -0.67951008 -2.15253158  0.01836824  1.91404419
   1.09436904 -0.83591757  0.92559419 -0.11554332  1.1991683   1.01863246
   0.40443141  0.14160517  2.47753061]
 [ 0.10148313 -1.08200386 -0.91167615  0.74874875 -1.60461367 -1.32273868
  -0.36663011 -0.78501788 -2.34132483 -0.7279474   0.74254667 -0.63586552
   0.47351769  0.5732309  -0.410374    1.79806137 -0.86209136  0.7832476
  -0.21317971  0.88261721  0.31106959 -0.93249711 -0.37188389  0.82386981
  -0.71516737  0.77240668  0.69458591]
 [ 1.05372689 -0.33504872  1.29352268  1.29583638  0.94435029  0.93888184
   1.57845164 -2.38755117 -0.95552942 -1.00253838  0.77034415  1.80508561
  -1.92627393  0.56871734 -0.05065792  0.8361328  -0.61331055 -0.03678032
   0.8452418  -1.07887014 -0.87242023  0.3797138  -0.39479592 -0.06650949
   0.22293066 -0.9044639  -0.95342802]]
upper = 
[10595.89588705  7347.01973499  7622.20417886 ...  6826.85993785
  5606.87159578  7694.50494261]
upper.argmax() = 0
all predict_target = 
[13183.14427884 25863.53345626 24888.76853912 ... 27769.40922926
 32558.08171343 24620.84454883]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
 1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
 8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
 8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
 6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
 6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
 1.53065596e+00 2.62862863e+02 2.14441758e+00]
probe说：以前见过你啦！params = {'spark.broadcast.blockSize': 63.01881867431135, 'spark.broadcast.checksum': 0.36814579525039026, 'spark.broadcast.compress': 0.16707522752633308, 'spark.default.parallelism': 450.0039648702609, 'spark.executor.cores': 1.5032230841169367, 'spark.executor.instances': 6.531987516727485, 'spark.executor.memory': 3.4823316476801978, 'spark.executor.memoryOverhead': 686.160782663697, 'spark.kryoserializer.buffer': 85.20664700646536, 'spark.kryoserializer.buffer.max': 49.87608307555112, 'spark.locality.wait': 9.698410635290028, 'spark.maxRemoteBlockSizeFetchToMem': 1913016667.1751738, 'spark.memory.fraction': 0.872156021708049, 'spark.memory.offHeap.enabled': 0.1524303648558728, 'spark.memory.offHeap.size': 186.82330780842335, 'spark.memory.storageFraction': 0.7156103953365842, 'spark.rdd.compress': 0.6550967523366862, 'spark.reducer.maxBlocksInFlightPerAddress': 1158524706.3942978, 'spark.reducer.maxReqsInFlight': 1905039520.2842817, 'spark.reducer.maxSizeInFlight': 66.63272023055234, 'spark.scheduler.mode': 0.006651740923130589, 'spark.scheduler.revive.interval': 659.5943467391934, 'spark.shuffle.compress': 0.5606029525119136, 'spark.shuffle.file.buffer': 38.52435644496572, 'spark.shuffle.io.numConnectionsPerPeer': 1.530655960938093, 'spark.shuffle.sort.bypassMergeThreshold': 262.862862953374, 'spark.storage.memoryMapThreshold': 2.1444175751264876} target = -220.801
x_probe = {'spark.broadcast.blockSize': 63.01881867431135, 'spark.broadcast.checksum': 0.36814579525039026, 'spark.broadcast.compress': 0.16707522752633308, 'spark.default.parallelism': 450.0039648702609, 'spark.executor.cores': 1.5032230841169367, 'spark.executor.instances': 6.531987516727485, 'spark.executor.memory': 3.4823316476801978, 'spark.executor.memoryOverhead': 686.160782663697, 'spark.kryoserializer.buffer': 85.20664700646536, 'spark.kryoserializer.buffer.max': 49.87608307555112, 'spark.locality.wait': 9.698410635290028, 'spark.maxRemoteBlockSizeFetchToMem': 1913016667.1751738, 'spark.memory.fraction': 0.872156021708049, 'spark.memory.offHeap.enabled': 0.1524303648558728, 'spark.memory.offHeap.size': 186.82330780842335, 'spark.memory.storageFraction': 0.7156103953365842, 'spark.rdd.compress': 0.6550967523366862, 'spark.reducer.maxBlocksInFlightPerAddress': 1158524706.3942978, 'spark.reducer.maxReqsInFlight': 1905039520.2842817, 'spark.reducer.maxSizeInFlight': 66.63272023055234, 'spark.scheduler.mode': 0.006651740923130589, 'spark.scheduler.revive.interval': 659.5943467391934, 'spark.shuffle.compress': 0.5606029525119136, 'spark.shuffle.file.buffer': 38.52435644496572, 'spark.shuffle.io.numConnectionsPerPeer': 1.530655960938093, 'spark.shuffle.sort.bypassMergeThreshold': 262.862862953374, 'spark.storage.memoryMapThreshold': 2.1444175751264876}
target = -220.801
1529s
{'maxIndex': 1, 'target': -220.801, 'params': {'spark.broadcast.blockSize': 63.01881867431135, 'spark.broadcast.checksum': 0.36814579525039026, 'spark.broadcast.compress': 0.16707522752633308, 'spark.default.parallelism': 450.0039648702609, 'spark.executor.cores': 1.5032230841169367, 'spark.executor.instances': 6.531987516727485, 'spark.executor.memory': 3.4823316476801978, 'spark.executor.memoryOverhead': 686.160782663697, 'spark.kryoserializer.buffer': 85.20664700646536, 'spark.kryoserializer.buffer.max': 49.87608307555112, 'spark.locality.wait': 9.698410635290028, 'spark.maxRemoteBlockSizeFetchToMem': 1913016667.1751738, 'spark.memory.fraction': 0.872156021708049, 'spark.memory.offHeap.enabled': 0.1524303648558728, 'spark.memory.offHeap.size': 186.82330780842335, 'spark.memory.storageFraction': 0.7156103953365842, 'spark.rdd.compress': 0.6550967523366862, 'spark.reducer.maxBlocksInFlightPerAddress': 1158524706.3942978, 'spark.reducer.maxReqsInFlight': 1905039520.2842817, 'spark.reducer.maxSizeInFlight': 66.63272023055234, 'spark.scheduler.mode': 0.006651740923130589, 'spark.scheduler.revive.interval': 659.5943467391934, 'spark.shuffle.compress': 0.5606029525119136, 'spark.shuffle.file.buffer': 38.52435644496572, 'spark.shuffle.io.numConnectionsPerPeer': 1.530655960938093, 'spark.shuffle.sort.bypassMergeThreshold': 262.862862953374, 'spark.storage.memoryMapThreshold': 2.1444175751264876}}
iterations = 2
iterations = 2
gan_random方法获取的参数:	 n = 6	 type = bo_result	 bo_res_df =        runtime  ...  spark.storage.memoryMapThreshold
1      220.801  ...                          2.144418
2      307.435  ...                          1.650866
3      316.038  ...                          2.480841
4   100000.000  ...                          2.737654
5      223.547  ...                          2.000000
6      379.414  ...                          2.000000
7   100000.000  ...                          2.000000
8      247.247  ...                          1.919965
9   100000.000  ...                          1.981286
10     335.557  ...                          3.355958
11     477.782  ...                          2.535002
12     231.466  ...                          1.776175
13     231.466  ...                          1.776175

[13 rows x 28 columns]	 iterations = 2
   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                  63.018819  ...                          2.144418

[1 rows x 27 columns]
   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                   0.938676  ...                         -0.237055

[1 rows x 27 columns]
traindata.shape:(1, 27)
traindata.count_value:14.372657225225923
0
2000
Epoch: 0 Loss D.: -0.036819398403167725
Epoch: 0 Loss G.: 13.923283259234326
tensor(13.8222, dtype=torch.float64, grad_fn=<DivBackward0>)
1
2000
Epoch: 1 Loss D.: -0.00573420524597168
Epoch: 1 Loss G.: 13.183277024646157
tensor(13.8705, dtype=torch.float64, grad_fn=<DivBackward0>)
2
2000
Epoch: 2 Loss D.: 0.002663731575012207
Epoch: 2 Loss G.: 13.98602828538152
tensor(13.7640, dtype=torch.float64, grad_fn=<DivBackward0>)
3
2000
Epoch: 3 Loss D.: 0.002920866012573242
Epoch: 3 Loss G.: 13.370204834305211
tensor(13.1026, dtype=torch.float64, grad_fn=<DivBackward0>)
4
2000
Epoch: 4 Loss D.: -0.0022430419921875
Epoch: 4 Loss G.: 13.939398278240914
tensor(13.1438, dtype=torch.float64, grad_fn=<DivBackward0>)
5
2000
Epoch: 5 Loss D.: -0.004642605781555176
Epoch: 5 Loss G.: 12.643407575928142
tensor(12.8510, dtype=torch.float64, grad_fn=<DivBackward0>)
6
2000
Epoch: 6 Loss D.: 0.0012882351875305176
Epoch: 6 Loss G.: 12.097513457444633
tensor(12.8980, dtype=torch.float64, grad_fn=<DivBackward0>)
7
2000
Epoch: 7 Loss D.: -0.0075190067291259766
Epoch: 7 Loss G.: 14.462162822626999
tensor(12.7184, dtype=torch.float64, grad_fn=<DivBackward0>)
8
2000
Epoch: 8 Loss D.: -0.0029923319816589355
Epoch: 8 Loss G.: 13.487897181567872
tensor(13.0825, dtype=torch.float64, grad_fn=<DivBackward0>)
9
2000
Epoch: 9 Loss D.: 0.002438962459564209
Epoch: 9 Loss G.: 12.736705071404769
tensor(12.6044, dtype=torch.float64, grad_fn=<DivBackward0>)
10
2000
Epoch: 10 Loss D.: -0.00904703140258789
Epoch: 10 Loss G.: 13.904437537372848
tensor(12.6548, dtype=torch.float64, grad_fn=<DivBackward0>)
11
2000
Epoch: 11 Loss D.: -0.0078582763671875
Epoch: 11 Loss G.: 11.515594185387117
tensor(11.9983, dtype=torch.float64, grad_fn=<DivBackward0>)
12
2000
Epoch: 12 Loss D.: -0.0024641752243041992
Epoch: 12 Loss G.: 11.634901653065592
tensor(12.1277, dtype=torch.float64, grad_fn=<DivBackward0>)
13
2000
Epoch: 13 Loss D.: -0.0053414106369018555
Epoch: 13 Loss G.: 11.264355067146615
tensor(12.2860, dtype=torch.float64, grad_fn=<DivBackward0>)
14
2000
Epoch: 14 Loss D.: 0.008012205362319946
Epoch: 14 Loss G.: 13.130119364244115
tensor(12.2520, dtype=torch.float64, grad_fn=<DivBackward0>)
15
2000
Epoch: 15 Loss D.: 0.003058135509490967
Epoch: 15 Loss G.: 12.222322116673729
tensor(11.5123, dtype=torch.float64, grad_fn=<DivBackward0>)
16
2000
Epoch: 16 Loss D.: -0.006551206111907959
Epoch: 16 Loss G.: 11.07441614320747
tensor(11.5555, dtype=torch.float64, grad_fn=<DivBackward0>)
17
2000
Epoch: 17 Loss D.: -0.010422229766845703
Epoch: 17 Loss G.: 12.270390770242669
tensor(10.9976, dtype=torch.float64, grad_fn=<DivBackward0>)
18
2000
Epoch: 18 Loss D.: -0.002506554126739502
Epoch: 18 Loss G.: 11.89386444240886
tensor(10.9849, dtype=torch.float64, grad_fn=<DivBackward0>)
19
2000
Epoch: 19 Loss D.: -0.005835413932800293
Epoch: 19 Loss G.: 10.272273939848722
tensor(10.9306, dtype=torch.float64, grad_fn=<DivBackward0>)
20
2000
Epoch: 20 Loss D.: -0.002218484878540039
Epoch: 20 Loss G.: 10.622978232336413
tensor(10.7941, dtype=torch.float64, grad_fn=<DivBackward0>)
21
2000
Epoch: 21 Loss D.: -0.00201261043548584
Epoch: 21 Loss G.: 9.912757638097782
tensor(10.2595, dtype=torch.float64, grad_fn=<DivBackward0>)
22
2000
Epoch: 22 Loss D.: 0.0009646415710449219
Epoch: 22 Loss G.: 9.901328920957342
tensor(10.9134, dtype=torch.float64, grad_fn=<DivBackward0>)
23
2000
Epoch: 23 Loss D.: 0.006855368614196777
Epoch: 23 Loss G.: 10.263967585564435
tensor(10.6082, dtype=torch.float64, grad_fn=<DivBackward0>)
24
2000
Epoch: 24 Loss D.: -0.0009672045707702637
Epoch: 24 Loss G.: 9.636276815345076
tensor(10.3982, dtype=torch.float64, grad_fn=<DivBackward0>)
25
2000
Epoch: 25 Loss D.: 0.003366529941558838
Epoch: 25 Loss G.: 10.09627563694796
tensor(9.7679, dtype=torch.float64, grad_fn=<DivBackward0>)
26
2000
Epoch: 26 Loss D.: 0.011928558349609375
Epoch: 26 Loss G.: 11.037914567385668
tensor(9.2661, dtype=torch.float64, grad_fn=<DivBackward0>)
27
2000
Epoch: 27 Loss D.: 0.0035284757614135742
Epoch: 27 Loss G.: 10.064898673762341
tensor(10.1261, dtype=torch.float64, grad_fn=<DivBackward0>)
28
2000
Epoch: 28 Loss D.: 0.005656003952026367
Epoch: 28 Loss G.: 10.096422605196588
tensor(9.5231, dtype=torch.float64, grad_fn=<DivBackward0>)
29
2000
Epoch: 29 Loss D.: 0.0053528547286987305
Epoch: 29 Loss G.: 9.04311203395819
tensor(9.3577, dtype=torch.float64, grad_fn=<DivBackward0>)
30
2000
Epoch: 30 Loss D.: -0.005493104457855225
Epoch: 30 Loss G.: 8.239079317899142
tensor(8.6795, dtype=torch.float64, grad_fn=<DivBackward0>)
31
2000
Epoch: 31 Loss D.: 0.0042517781257629395
Epoch: 31 Loss G.: 7.532489409678647
tensor(9.0900, dtype=torch.float64, grad_fn=<DivBackward0>)
32
2000
Epoch: 32 Loss D.: 0.003258645534515381
Epoch: 32 Loss G.: 8.036928256742353
tensor(8.0613, dtype=torch.float64, grad_fn=<DivBackward0>)
33
2000
Epoch: 33 Loss D.: 0.002135634422302246
Epoch: 33 Loss G.: 7.72329012026164
tensor(7.8014, dtype=torch.float64, grad_fn=<DivBackward0>)
34
2000
Epoch: 34 Loss D.: 0.006929218769073486
Epoch: 34 Loss G.: 8.581735520855242
tensor(7.8751, dtype=torch.float64, grad_fn=<DivBackward0>)
35
2000
Epoch: 35 Loss D.: 0.0018707513809204102
Epoch: 35 Loss G.: 5.509832104380943
tensor(7.0675, dtype=torch.float64, grad_fn=<DivBackward0>)
36
2000
Epoch: 36 Loss D.: -0.008939564228057861
Epoch: 36 Loss G.: 5.75147874280353
tensor(6.7177, dtype=torch.float64, grad_fn=<DivBackward0>)
37
2000
Epoch: 37 Loss D.: -0.0013641715049743652
Epoch: 37 Loss G.: 11.416948307995552
tensor(6.7055, dtype=torch.float64, grad_fn=<DivBackward0>)
38
2000
Epoch: 38 Loss D.: -0.006152808666229248
Epoch: 38 Loss G.: 8.062690973746887
tensor(6.4318, dtype=torch.float64, grad_fn=<DivBackward0>)
39
2000
Epoch: 39 Loss D.: 0.004609048366546631
Epoch: 39 Loss G.: 4.777232774903196
tensor(6.0318, dtype=torch.float64, grad_fn=<DivBackward0>)
40
2000
Epoch: 40 Loss D.: 0.004435539245605469
Epoch: 40 Loss G.: 5.483074560497722
tensor(7.1180, dtype=torch.float64, grad_fn=<DivBackward0>)
41
2000
Epoch: 41 Loss D.: -0.003293275833129883
Epoch: 41 Loss G.: 9.29879356485547
tensor(6.2624, dtype=torch.float64, grad_fn=<DivBackward0>)
42
2000
Epoch: 42 Loss D.: -0.02112746238708496
Epoch: 42 Loss G.: 8.24189661747357
tensor(6.0981, dtype=torch.float64, grad_fn=<DivBackward0>)
43
2000
Epoch: 43 Loss D.: 0.002736985683441162
Epoch: 43 Loss G.: 4.5247423355662475
tensor(5.0164, dtype=torch.float64, grad_fn=<DivBackward0>)
44
2000
Epoch: 44 Loss D.: 0.0003184080123901367
Epoch: 44 Loss G.: 4.261515165381742
tensor(4.6548, dtype=torch.float64, grad_fn=<DivBackward0>)
45
2000
Epoch: 45 Loss D.: -0.0034465789794921875
Epoch: 45 Loss G.: 3.939795226823474
tensor(4.7884, dtype=torch.float64, grad_fn=<DivBackward0>)
46
2000
Epoch: 46 Loss D.: -0.0016714930534362793
Epoch: 46 Loss G.: 4.001048409447195
tensor(4.4154, dtype=torch.float64, grad_fn=<DivBackward0>)
47
2000
Epoch: 47 Loss D.: 0.0022852420806884766
Epoch: 47 Loss G.: 7.757251971096443
tensor(3.6381, dtype=torch.float64, grad_fn=<DivBackward0>)
48
2000
Epoch: 48 Loss D.: 0.002375662326812744
Epoch: 48 Loss G.: 3.921192001384236
tensor(5.0604, dtype=torch.float64, grad_fn=<DivBackward0>)
49
2000
Epoch: 49 Loss D.: 0.00254899263381958
Epoch: 49 Loss G.: 3.2398363019325704
tensor(5.0772, dtype=torch.float64, grad_fn=<DivBackward0>)
50
2000
Epoch: 50 Loss D.: -0.0004642605781555176
Epoch: 50 Loss G.: 3.1495561297043038
tensor(3.7327, dtype=torch.float64, grad_fn=<DivBackward0>)
51
2000
Epoch: 51 Loss D.: 0.0054779052734375
Epoch: 51 Loss G.: 2.5948348955350897
tensor(4.2850, dtype=torch.float64, grad_fn=<DivBackward0>)
52
2000
Epoch: 52 Loss D.: -0.002104640007019043
Epoch: 52 Loss G.: 4.811874612509478
tensor(3.1378, dtype=torch.float64, grad_fn=<DivBackward0>)
53
2000
Epoch: 53 Loss D.: 0.0023220181465148926
Epoch: 53 Loss G.: 2.597483885094161
tensor(2.8795, dtype=torch.float64, grad_fn=<DivBackward0>)
54
2000
Epoch: 54 Loss D.: 0.0028467178344726562
Epoch: 54 Loss G.: 3.243677115026474
tensor(3.1809, dtype=torch.float64, grad_fn=<DivBackward0>)
55
2000
Epoch: 55 Loss D.: -0.0036190152168273926
Epoch: 55 Loss G.: 4.789866176523231
tensor(2.8637, dtype=torch.float64, grad_fn=<DivBackward0>)
56
2000
Epoch: 56 Loss D.: -0.004396677017211914
Epoch: 56 Loss G.: 1.9058866240938066
tensor(3.0929, dtype=torch.float64, grad_fn=<DivBackward0>)
57
2000
Epoch: 57 Loss D.: 0.0016391277313232422
Epoch: 57 Loss G.: 2.5564151850539556
tensor(2.4579, dtype=torch.float64, grad_fn=<DivBackward0>)
58
2000
Epoch: 58 Loss D.: -0.007254421710968018
Epoch: 58 Loss G.: 8.048493813612076
tensor(3.6828, dtype=torch.float64, grad_fn=<DivBackward0>)
59
2000
Epoch: 59 Loss D.: -0.0012364983558654785
Epoch: 59 Loss G.: 2.5178425100418593
tensor(3.0644, dtype=torch.float64, grad_fn=<DivBackward0>)
60
2000
Epoch: 60 Loss D.: -0.004871070384979248
Epoch: 60 Loss G.: 1.6158912603620093
tensor(3.5351, dtype=torch.float64, grad_fn=<DivBackward0>)
61
2000
Epoch: 61 Loss D.: -0.0003504157066345215
Epoch: 61 Loss G.: 5.24291832249263
tensor(3.2835, dtype=torch.float64, grad_fn=<DivBackward0>)
62
2000
Epoch: 62 Loss D.: 0.0013290047645568848
Epoch: 62 Loss G.: 3.4529646918069425
tensor(3.1435, dtype=torch.float64, grad_fn=<DivBackward0>)
63
2000
Epoch: 63 Loss D.: -0.012148916721343994
Epoch: 63 Loss G.: 1.9351057988679226
tensor(2.0068, dtype=torch.float64, grad_fn=<DivBackward0>)
64
2000
Epoch: 64 Loss D.: 0.007443428039550781
Epoch: 64 Loss G.: 2.2926572667382294
tensor(3.3467, dtype=torch.float64, grad_fn=<DivBackward0>)
65
2000
Epoch: 65 Loss D.: 0.0007210373878479004
Epoch: 65 Loss G.: 1.4178978353887057
tensor(3.3775, dtype=torch.float64, grad_fn=<DivBackward0>)
66
2000
Epoch: 66 Loss D.: -0.0007238388061523438
Epoch: 66 Loss G.: 2.9658014989862087
tensor(3.8799, dtype=torch.float64, grad_fn=<DivBackward0>)
67
2000
Epoch: 67 Loss D.: -0.005058228969573975
Epoch: 67 Loss G.: 2.619857426331652
tensor(3.5637, dtype=torch.float64, grad_fn=<DivBackward0>)
68
2000
Epoch: 68 Loss D.: 0.0010001659393310547
Epoch: 68 Loss G.: 1.8800691184290543
tensor(2.0605, dtype=torch.float64, grad_fn=<DivBackward0>)
69
2000
Epoch: 69 Loss D.: 0.0012352466583251953
Epoch: 69 Loss G.: 2.4480228780747098
tensor(2.6765, dtype=torch.float64, grad_fn=<DivBackward0>)
70
2000
Epoch: 70 Loss D.: 0.0010494589805603027
Epoch: 70 Loss G.: 2.2607714797654848
tensor(2.5765, dtype=torch.float64, grad_fn=<DivBackward0>)
71
2000
Epoch: 71 Loss D.: -0.00042068958282470703
Epoch: 71 Loss G.: 1.4125934817862924
tensor(2.8406, dtype=torch.float64, grad_fn=<DivBackward0>)
72
2000
Epoch: 72 Loss D.: 0.005175590515136719
Epoch: 72 Loss G.: 2.2979178670410145
tensor(2.2014, dtype=torch.float64, grad_fn=<DivBackward0>)
73
2000
Epoch: 73 Loss D.: -0.006886005401611328
Epoch: 73 Loss G.: 1.3243452497020871
tensor(1.6690, dtype=torch.float64, grad_fn=<DivBackward0>)
74
2000
Epoch: 74 Loss D.: 0.0007619857788085938
Epoch: 74 Loss G.: 2.419921675489913
tensor(2.2872, dtype=torch.float64, grad_fn=<DivBackward0>)
75
2000
Epoch: 75 Loss D.: -0.005278825759887695
Epoch: 75 Loss G.: 1.270517831597651
tensor(1.9646, dtype=torch.float64, grad_fn=<DivBackward0>)
76
2000
Epoch: 76 Loss D.: -0.001983821392059326
Epoch: 76 Loss G.: 1.9007208303938175
tensor(2.2377, dtype=torch.float64, grad_fn=<DivBackward0>)
在第76轮收敛
----------------第0轮的原数据---------------------
         range  dissimilarity_value  ...  Euclidean_distance   distance
0     3.947390             0.107128  ...            0.450211  20.633293
1     3.947390             0.114803  ...            0.523658  16.526146
2     3.947390             0.100298  ...            0.323829  30.705220
3     3.947390             0.108380  ...            0.500089  18.315027
4     3.947390             0.096653  ...            0.242653  42.551435
..         ...                  ...  ...                 ...        ...
195   9.079081             0.113519  ...            0.659370  13.297801
196   9.229925             0.111340  ...            0.579113  15.408158
197   9.398668             0.113951  ...            0.732577  11.898374
198   9.826469             0.113528  ...            0.816588  10.704463
199  12.237478             0.120886  ...            0.872013   9.461703

[200 rows x 5 columns]
-----------------按照dissimilarity_value排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    3.987                0.093         0.998               0.224    47.783
1    5.995                0.094         0.998               0.202    52.789
2    6.124                0.095         0.998               0.198    53.121
3    6.160                0.095         0.997               0.271    38.672
4    6.030                0.095         0.997               0.261    40.255
..     ...                  ...           ...                 ...       ...
195  4.357                0.135         0.979               1.108     6.534
196  4.429                0.135         0.980               1.199     6.053
197  4.466                0.135         0.982               1.104     6.603
198  4.680                0.136         0.986               1.274     5.682
199  4.694                0.137         0.978               1.176     6.063

[200 rows x 5 columns]
-----------------按照range排序----------
================= config21 =================
2022年 02月 22日 星期二 15:24:41 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (110959) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (199660) - 没有那个进程
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     3.947                0.108         0.990               0.523    17.489
1     3.947                0.108         0.995               0.399    23.024
2     3.947                0.108         0.995               0.512    17.951
3     3.947                0.108         0.993               0.500    18.315
4     3.947                0.107         0.992               0.465    19.948
..      ...                  ...           ...                 ...       ...
195   9.079                0.114         0.995               0.659    13.298
196   9.230                0.111         0.993               0.579    15.408
197   9.399                0.114         0.993               0.733    11.898
198   9.826                0.114         0.992               0.817    10.704
199  12.237                0.121         0.997               0.872     9.462

[200 rows x 5 columns]
-----------------按照cos_distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    4.485                0.133         0.967               1.120     6.491
1    4.694                0.137         0.978               1.176     6.063
2    4.357                0.135         0.979               1.108     6.534
3    4.429                0.135         0.980               1.199     6.053
4    3.987                0.124         0.982               0.852     9.306
..     ...                  ...           ...                 ...       ...
195  3.947                0.097         0.998               0.243    42.551
196  5.995                0.094         0.998               0.202    52.789
197  3.987                0.093         0.998               0.224    47.783
198  3.987                0.102         0.998               0.338    28.920
199  6.373                0.108         0.998               0.445    20.776

[200 rows x 5 columns]
-----------------按照Euclidean_distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    6.124                0.095         0.998               0.198    53.121
1    5.995                0.094         0.998               0.202    52.789
2    3.987                0.093         0.998               0.224    47.783
3    4.005                0.104         0.997               0.230    41.662
4    3.947                0.097         0.998               0.243    42.551
..     ...                  ...           ...                 ...       ...
195  4.357                0.135         0.979               1.108     6.534
196  4.485                0.133         0.967               1.120     6.491
197  4.694                0.137         0.978               1.176     6.063
198  4.429                0.135         0.980               1.199     6.053
199  4.680                0.136         0.986               1.274     5.682

[200 rows x 5 columns]
-----------------按照distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    6.124                0.095         0.998               0.198    53.121
1    5.995                0.094         0.998               0.202    52.789
2    3.987                0.093         0.998               0.224    47.783
3    3.947                0.097         0.998               0.243    42.551
4    4.005                0.104         0.997               0.230    41.662
..     ...                  ...           ...                 ...       ...
195  4.357                0.135         0.979               1.108     6.534
196  4.485                0.133         0.967               1.120     6.491
197  4.694                0.137         0.978               1.176     6.063
198  4.429                0.135         0.980               1.199     6.053
199  4.680                0.136         0.986               1.274     5.682

[200 rows x 5 columns]
   distance
0    53.121
1    52.789
2    47.783
3    23.926
4    23.723
5    23.655
6     6.063
7     6.053
8     5.682
   distance
0    53.121
1    23.926
2     5.682
3    52.789
4    23.723
5     6.053
6    47.783
7    23.655
8     6.063
sgan数据生成时间花费为：3.39
   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                       64.0  ...                               2.0
1                       64.0  ...                               2.0
2                       55.0  ...                               2.0
3                       64.0  ...                               2.0
4                       62.0  ...                               2.0
5                       57.0  ...                               2.0
6                       62.0  ...                               2.0
7                       63.0  ...                               2.0
8                       58.0  ...                               2.0

[9 rows x 27 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 64.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 452.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 7.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 685.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 85.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 48.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 10.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1859772416.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8799999952316284
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 202.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7200000286102295
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1142643328.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1915259904.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 68.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 658.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 39.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 263.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.0
configNum = 21	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 21 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       64.0  ...   337.51

[1 rows x 28 columns]
================= config22 =================
2022年 02月 22日 星期二 15:30:28 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (124272) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (214932) - 没有那个进程
================= config23 =================
2022年 02月 22日 星期二 15:34:13 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (134408) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (227108) - 没有那个进程
    spark.broadcast.blockSize  ...     runtime
0                   63.018819  ...     220.801
1                   62.000000  ...     223.547
2                   62.997690  ...     231.466
3                   62.997690  ...     231.466
4                   55.730800  ...     247.247
5                   55.745260  ...     307.435
6                   54.164248  ...     316.038
7                   43.688318  ...     335.557
8                   63.000000  ...     379.414
9                   54.962688  ...     477.782
10                  34.672379  ...  100000.000
11                  53.000000  ...  100000.000
12                  46.296316  ...  100000.000
13                  64.000000  ...     337.510

[14 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 64.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 426.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 7.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 679.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 87.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 54.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1839616256.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8399999737739563
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 198.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7200000286102295
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1127260160.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1890100480.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 64.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 676.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 259.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.0
configNum = 22	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 22 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       64.0  ...   217.34

[1 rows x 28 columns]
    spark.broadcast.blockSize  ...     runtime
0                   63.018819  ...     220.801
1                   62.000000  ...     223.547
2                   62.997690  ...     231.466
3                   62.997690  ...     231.466
4                   55.730800  ...     247.247
5                   55.745260  ...     307.435
6                   54.164248  ...     316.038
7                   43.688318  ...     335.557
8                   63.000000  ...     379.414
9                   54.962688  ...     477.782
10                  34.672379  ...  100000.000
11                  53.000000  ...  100000.000
12                  46.296316  ...  100000.000
13                  64.000000  ...     337.510
14                  64.000000  ...     217.340

[15 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 55.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 410.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 7.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 687.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 85.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 62.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1786627840.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7900000214576721
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 234.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7099999785423279
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1361473408.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1769032704.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 61.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 692.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 37.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 2.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 260.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.0
configNum = 23	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 23 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       55.0  ...  222.605

[1 rows x 28 columns]
    spark.broadcast.blockSize  ...     runtime
0                   63.018819  ...     220.801
1                   62.000000  ...     223.547
2                   62.997690  ...     231.466
3                   62.997690  ...     231.466
4                   55.730800  ...     247.247
5                   55.745260  ...     307.435
6                   54.164248  ...     316.038
7                   43.688318  ...     335.557
8                   63.000000  ...     379.414
9                   54.962688  ...     477.782
10                  34.672379  ...  100000.000
11                  53.000000  ...  100000.000
12                  46.296316  ...  100000.000
13                  64.000000  ...     337.510
14                  64.000000  ...     217.340
15                  55.000000  ...     222.605

[16 rows x 28 columns]
    spark.broadcast.blockSize  ...     runtime
0                   63.018819  ...     220.801
1                   62.000000  ...     223.547
2                   62.997690  ...     231.466
3                   62.997690  ...     231.466
4                   55.730800  ...     247.247
5                   55.745260  ...     307.435
6                   54.164248  ...     316.038
7                   43.688318  ...     335.557
8                   63.000000  ...     379.414
9                   54.962688  ...     477.782
10                  34.672379  ...  100000.000
11                  53.000000  ...  100000.000
12                  46.296316  ...  100000.000
13                  64.000000  ...     337.510
14                  64.000000  ...     217.340
15                  55.000000  ...     222.605

[16 rows x 28 columns]
选择50%rs和50%gan的所有样本作为bo算法的初始样本,样本个数为:16
------------使用ganrs生成初始样本点------------
Tmax = 137.5
self._queue.empty = True
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (16, 27)
before probe, target = (16,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [4.36883181e+01 3.93887592e-01 1.71377673e-01 4.23952021e+02
  1.43690786e+00 6.67133457e+00 4.29529748e+00 6.58491389e+02
  1.07905272e+02 7.24808481e+01 8.48493312e+00 2.00660456e+09
  8.23714321e-01 1.61230903e-02 2.20425715e+02 5.31682574e-01
  5.96947713e-01 1.61967190e+09 2.06608150e+09 6.09592459e+01
  6.64114333e-01 6.74860321e+02 9.85825731e-01 4.10068495e+01
  2.91276590e+00 2.72192121e+02 3.35595803e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.49626877e+01 3.16666694e-02 2.21389759e-02 4.60732610e+02
  1.10310023e+00 4.73814876e+00 4.06065234e+00 5.75187853e+02
  4.79146575e+01 4.83872774e+01 9.74566504e+00 1.69217295e+09
  8.57542382e-01 4.58216750e-01 2.59585183e+02 8.48674213e-01
  3.54895498e-01 1.44134746e+09 1.65755319e+09 6.60915278e+01
  4.45018063e-01 6.03098323e+02 5.16018707e-01 3.96975174e+01
  1.78567724e+00 3.03247703e+02 2.53500206e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
  2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
  8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
  8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
  3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
  5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
  3.15357234e+00 3.00158875e+02 1.98128633e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.52000000e+02
  1.00000000e+00 7.00000000e+00 4.00000000e+00 6.85000000e+02
  8.50000000e+01 4.80000000e+01 1.00000000e+01 1.85977242e+09
  8.79999995e-01 0.00000000e+00 2.02000000e+02 7.20000029e-01
  1.00000000e+00 1.14264333e+09 1.91525990e+09 6.80000000e+01
  0.00000000e+00 6.58000000e+02 1.00000000e+00 3.90000000e+01
  1.00000000e+00 2.63000000e+02 2.00000000e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.26000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.79000000e+02
  8.70000000e+01 5.40000000e+01 9.00000000e+00 1.83961626e+09
  8.39999974e-01 0.00000000e+00 1.98000000e+02 7.20000029e-01
  1.00000000e+00 1.12726016e+09 1.89010048e+09 6.40000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 3.80000000e+01
  1.00000000e+00 2.59000000e+02 2.00000000e+00]
 [5.50000000e+01 0.00000000e+00 0.00000000e+00 4.10000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.87000000e+02
  8.50000000e+01 6.20000000e+01 9.00000000e+00 1.78662784e+09
  7.90000021e-01 0.00000000e+00 2.34000000e+02 7.09999979e-01
  1.00000000e+00 1.36147341e+09 1.76903270e+09 6.10000000e+01
  0.00000000e+00 6.92000000e+02 1.00000000e+00 3.70000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]]
标准化后的train_x = 
[[ 8.61679322e-01  4.12088254e-01 -1.91220534e-01  4.88020346e-01
  -7.17229099e-01  5.01024904e-01 -1.01755181e+00  7.61430723e-01
  -9.07656739e-03 -5.60802510e-01  6.29659950e-01  5.77924476e-01
   8.65974407e-01 -3.85250799e-01 -8.40416350e-01  6.60578362e-02
  -9.52453758e-03 -9.24575190e-01  4.92439004e-01  1.06994691e+00
  -7.21769144e-01 -3.34110864e-01 -4.30260420e-01  6.09492326e-01
  -7.61535347e-01  2.90941414e-02 -7.11734699e-03]
 [ 7.37405182e-01 -9.69679645e-01 -8.83109708e-01  6.35231695e-01
   3.40417912e-01  1.04631786e+00 -1.53528155e+00  6.79724316e-01
   1.80146964e-01 -5.03601859e-01  8.26534838e-01  5.67172120e-01
   1.02733329e+00 -9.54637086e-01 -5.83431992e-01 -1.25016813e-02
   1.17116007e+00 -1.18259547e+00  4.54705751e-01  1.52513486e+00
  -7.41335246e-01 -5.75979520e-01  1.03369390e+00  6.88415432e-01
  -2.96864389e-01 -3.60219803e-02 -3.52200718e-01]
 [ 8.59102013e-01 -9.08812581e-02  1.37897523e+00  1.25203738e+00
   9.44995310e-01  5.95755295e-01  1.60938752e+00 -2.15534087e+00
  -9.89156332e-01 -9.36013742e-01  6.91051823e-01  1.70270070e+00
  -1.73804858e+00  7.52404557e-01  1.00252395e-01  8.48508911e-01
  -8.03055878e-01  9.78753700e-02  7.86670740e-01 -1.06038777e+00
  -6.73478341e-01  4.30346204e-01 -6.01631019e-01 -1.89057627e-01
   4.25917714e-01 -9.30084089e-01 -8.87027028e-01]
 [ 8.59102013e-01 -9.08812581e-02  1.37897523e+00  1.25203738e+00
   9.44995310e-01  5.95755295e-01  1.60938752e+00 -2.15534087e+00
  -9.89156332e-01 -9.36013742e-01  6.91051823e-01  1.70270070e+00
  -1.73804858e+00  7.52404557e-01  1.00252395e-01  8.48508911e-01
  -8.03055878e-01  9.78753700e-02  7.86670740e-01 -1.06038777e+00
  -6.73478341e-01  4.30346204e-01 -6.01631019e-01 -1.89057627e-01
   4.25917714e-01 -9.30084089e-01 -8.87027028e-01]
 [-2.73034700e-02  6.48217948e-01  7.04387156e-01  1.71386071e-01
   4.23400641e-01 -3.79563936e-01  1.44416019e+00 -5.22861306e-01
  -3.23534003e-01  1.32366844e-01  5.18341031e-01 -7.33221280e-01
  -7.38924815e-01  8.21052740e-01 -1.17414274e+00 -5.37242042e-01
   1.44853075e-01 -2.02257399e-01  1.27296073e+00 -5.12361754e-01
   2.03857121e+00  4.16089981e-01 -2.03240193e+00  4.94958741e-01
  -3.71047222e-01 -9.43468198e-01 -5.43443377e-01]
 [-2.55396649e-02  6.93542935e-01 -7.94575197e-01  3.37675517e-01
   5.45381288e-01 -1.60078770e+00  4.59489872e-01  1.45290205e-01
   4.96428528e-01  3.39242583e+00 -4.66582692e-01 -1.00252156e+00
   6.71810256e-01  1.03674812e+00  1.78787301e+00 -1.08789737e+00
  -1.35567473e+00 -4.71842045e-01 -2.31656007e+00 -7.51757414e-01
   2.12179655e+00  4.86701532e-01 -5.05523503e-01 -2.36475026e+00
   1.60727991e+00  1.30392236e+00 -1.18645168e+00]
 [-2.18389397e-01  2.07746631e+00  1.93900155e+00 -2.61285035e+00
  -8.70514892e-03 -1.20672239e+00 -1.37267164e+00  5.50494006e-01
   2.19493363e+00 -1.45574543e-01 -1.96396354e+00 -1.24798825e+00
  -3.70526328e-01  2.07758245e+00  9.07270883e-01  7.31451341e-01
  -1.43405592e+00  2.14757274e+00 -2.19899260e+00 -4.64308678e-01
   2.86207694e-01  2.89691097e+00 -5.32457556e-01 -2.28791595e+00
  -1.01721796e+00  1.93074699e+00  7.96759843e-01]
 [-1.49622929e+00  5.08705381e-01 -1.73403318e-01  6.17056635e-02
  -8.58415412e-01  6.63381609e-01 -1.44922795e-01  3.94469754e-01
   1.52854293e+00  5.89644852e-01 -1.62487515e-01  1.16528438e+00
  -1.30522953e-01 -8.94411117e-01 -5.87750206e-01 -2.50938021e+00
  -2.08582321e-01  2.14696869e+00  1.06191934e+00 -8.18837771e-01
   1.21215761e+00 -1.35536496e-01  9.86469002e-01  1.02141015e+00
   6.06813442e-01  2.41289102e-01  2.88783823e+00]
 [ 8.59383845e-01 -9.69679645e-01 -8.83109708e-01  4.87955465e-01
  -1.78860012e+00 -1.18806953e-01 -4.61892016e-01  6.26674947e-01
   1.12406320e-01 -5.03601859e-01  1.73743622e-01  1.81419938e-03
   1.02733329e+00 -9.54637086e-01 -5.08239122e-01  1.27523407e-01
   1.17116007e+00 -7.02676813e-01  2.56897700e-01  1.85804985e+00
  -7.41335246e-01 -3.80864849e-01  1.03369390e+00  5.22486334e-01
  -2.96864389e-01  7.77035503e-02 -3.52200718e-01]
 [-1.20996757e-01 -8.50824594e-01 -7.91428147e-01  6.63584176e-01
  -1.56909788e+00 -1.58902114e+00 -3.96788431e-01 -7.10330231e-01
  -2.53525997e+00 -6.36573816e-01  6.60507208e-01 -8.08096064e-01
   5.65356270e-01  7.56979457e-01 -2.93298926e-01  1.92927579e+00
  -1.03718375e+00  9.59210523e-01 -3.82727845e-01  8.89775845e-01
   5.67685753e-01 -1.06899107e+00 -5.78803291e-01  8.04153865e-01
  -5.09053214e-01  9.47651612e-01  9.26177730e-01]
 [-2.59598144e+00  1.89586384e+00  5.84948929e-01 -1.62232929e+00
   1.17913755e+00 -1.84479056e+00  1.38964098e+00 -1.10179592e+00
   1.93237288e-01  3.23491763e-01 -2.80884110e+00 -2.01189476e+00
   1.29896038e+00  1.26676794e+00  2.47565622e+00 -1.42743865e+00
  -3.79832429e-01 -1.98704800e-01 -7.51447510e-01 -8.13171513e-01
  -4.46867730e-01 -2.19918424e+00 -2.87496552e-01  3.29785498e-01
   2.50897579e+00 -2.49229270e+00  1.41041169e+00]
 [-3.60402780e-01 -9.69679645e-01 -8.83109708e-01 -3.30245813e-01
   3.40417912e-01 -1.18806953e-01 -4.61892016e-01  2.28804685e-01
   1.12406320e-01  5.62323607e-02 -4.79047593e-01 -3.94406374e-01
  -1.44119457e+00 -9.54637086e-01 -4.85681261e-01  1.27523407e-01
   1.17116007e+00  3.45933751e-01 -1.33905518e-01 -8.05270124e-01
  -7.41335246e-01  1.65456228e-01  1.03369390e+00  2.46990422e-02
  -2.96864389e-01 -1.32768742e-02 -3.52200718e-01]
 [-1.17810914e+00  6.14780313e-01  1.26299735e+00 -1.23350503e+00
   1.33106603e+00  3.17311081e-01  2.64610227e-01  1.07372185e+00
  -3.81751580e-02  6.78991780e-01  5.16010060e-01  3.34802587e-01
   2.92736366e-01 -4.56455388e-01  1.07001099e+00  6.53065213e-01
  -1.14084803e+00 -3.76808214e-01 -3.08310824e-01  3.02357267e-02
   7.37186218e-01  2.56967085e-01 -1.61842714e+00 -1.03207893e+00
   8.45222265e-01  8.77395904e-01 -3.96916720e-01]
 [ 9.81362508e-01 -9.69679645e-01 -8.83109708e-01  5.20683516e-01
  -1.78860012e+00  1.04631786e+00 -4.61892016e-01  7.46036026e-01
  -2.30749688e-02 -6.56283920e-01  8.26534838e-01  2.43762264e-01
   1.02733329e+00 -9.54637086e-01 -7.26298446e-01  1.27523407e-01
   1.17116007e+00 -1.03035562e+00  5.28580560e-01  1.52513486e+00
  -7.41335246e-01 -3.54849560e-01  1.03369390e+00  6.88415432e-01
  -1.28690777e+00  3.22133380e-02 -3.52200718e-01]
 [ 9.81362508e-01 -9.69679645e-01 -8.83109708e-01  9.52188512e-02
   3.40417912e-01  1.04631786e+00 -4.61892016e-01  6.66461973e-01
   1.12406320e-01 -3.50919799e-01  1.73743622e-01  1.17261716e-01
   2.04490263e-01 -9.54637086e-01 -7.56375594e-01  1.27523407e-01
   1.17116007e+00 -1.13281765e+00  4.39611227e-01  1.93474867e-01
  -7.41335246e-01 -1.20711955e-01  1.03369390e+00  5.22486334e-01
  -1.28690777e+00 -5.87670864e-02 -3.52200718e-01]
 [-1.16445455e-01 -9.69679645e-01 -8.83109708e-01 -1.66605558e-01
   3.40417912e-01  1.04631786e+00 -4.61892016e-01  7.72560710e-01
  -2.30749688e-02  5.62323607e-02  1.73743622e-01 -2.15294868e-01
  -8.24061993e-01 -9.54637086e-01 -4.85681261e-01 -1.25016813e-02
   1.17116007e+00  4.27196766e-01  1.14885800e-02 -8.05270124e-01
  -7.41335246e-01  8.74103600e-02  1.03369390e+00  3.56557237e-01
  -2.96864389e-01 -3.60219803e-02 -3.52200718e-01]]
train_y = 
[   -220.801    -223.547    -231.466    -231.466    -247.247    -307.435
    -316.038    -335.557    -379.414    -477.782 -100000.    -100000.
 -100000.       -337.51     -217.34     -222.605]
测试：每一列进行标准化，标准化后的train_x = 
[[ 8.61679322e-01  4.12088254e-01 -1.91220534e-01  4.88020346e-01
  -7.17229099e-01  5.01024904e-01 -1.01755181e+00  7.61430723e-01
  -9.07656739e-03 -5.60802510e-01  6.29659950e-01  5.77924476e-01
   8.65974407e-01 -3.85250799e-01 -8.40416350e-01  6.60578362e-02
  -9.52453758e-03 -9.24575190e-01  4.92439004e-01  1.06994691e+00
  -7.21769144e-01 -3.34110864e-01 -4.30260420e-01  6.09492326e-01
  -7.61535347e-01  2.90941414e-02 -7.11734699e-03]
 [ 7.37405182e-01 -9.69679645e-01 -8.83109708e-01  6.35231695e-01
   3.40417912e-01  1.04631786e+00 -1.53528155e+00  6.79724316e-01
   1.80146964e-01 -5.03601859e-01  8.26534838e-01  5.67172120e-01
   1.02733329e+00 -9.54637086e-01 -5.83431992e-01 -1.25016813e-02
   1.17116007e+00 -1.18259547e+00  4.54705751e-01  1.52513486e+00
  -7.41335246e-01 -5.75979520e-01  1.03369390e+00  6.88415432e-01
  -2.96864389e-01 -3.60219803e-02 -3.52200718e-01]
 [ 8.59102013e-01 -9.08812581e-02  1.37897523e+00  1.25203738e+00
   9.44995310e-01  5.95755295e-01  1.60938752e+00 -2.15534087e+00
  -9.89156332e-01 -9.36013742e-01  6.91051823e-01  1.70270070e+00
  -1.73804858e+00  7.52404557e-01  1.00252395e-01  8.48508911e-01
  -8.03055878e-01  9.78753700e-02  7.86670740e-01 -1.06038777e+00
  -6.73478341e-01  4.30346204e-01 -6.01631019e-01 -1.89057627e-01
   4.25917714e-01 -9.30084089e-01 -8.87027028e-01]
 [ 8.59102013e-01 -9.08812581e-02  1.37897523e+00  1.25203738e+00
   9.44995310e-01  5.95755295e-01  1.60938752e+00 -2.15534087e+00
  -9.89156332e-01 -9.36013742e-01  6.91051823e-01  1.70270070e+00
  -1.73804858e+00  7.52404557e-01  1.00252395e-01  8.48508911e-01
  -8.03055878e-01  9.78753700e-02  7.86670740e-01 -1.06038777e+00
  -6.73478341e-01  4.30346204e-01 -6.01631019e-01 -1.89057627e-01
   4.25917714e-01 -9.30084089e-01 -8.87027028e-01]
 [-2.73034700e-02  6.48217948e-01  7.04387156e-01  1.71386071e-01
   4.23400641e-01 -3.79563936e-01  1.44416019e+00 -5.22861306e-01
  -3.23534003e-01  1.32366844e-01  5.18341031e-01 -7.33221280e-01
  -7.38924815e-01  8.21052740e-01 -1.17414274e+00 -5.37242042e-01
   1.44853075e-01 -2.02257399e-01  1.27296073e+00 -5.12361754e-01
   2.03857121e+00  4.16089981e-01 -2.03240193e+00  4.94958741e-01
  -3.71047222e-01 -9.43468198e-01 -5.43443377e-01]
 [-2.55396649e-02  6.93542935e-01 -7.94575197e-01  3.37675517e-01
   5.45381288e-01 -1.60078770e+00  4.59489872e-01  1.45290205e-01
   4.96428528e-01  3.39242583e+00 -4.66582692e-01 -1.00252156e+00
   6.71810256e-01  1.03674812e+00  1.78787301e+00 -1.08789737e+00
  -1.35567473e+00 -4.71842045e-01 -2.31656007e+00 -7.51757414e-01
   2.12179655e+00  4.86701532e-01 -5.05523503e-01 -2.36475026e+00
   1.60727991e+00  1.30392236e+00 -1.18645168e+00]
 [-2.18389397e-01  2.07746631e+00  1.93900155e+00 -2.61285035e+00
  -8.70514892e-03 -1.20672239e+00 -1.37267164e+00  5.50494006e-01
   2.19493363e+00 -1.45574543e-01 -1.96396354e+00 -1.24798825e+00
  -3.70526328e-01  2.07758245e+00  9.07270883e-01  7.31451341e-01
  -1.43405592e+00  2.14757274e+00 -2.19899260e+00 -4.64308678e-01
   2.86207694e-01  2.89691097e+00 -5.32457556e-01 -2.28791595e+00
  -1.01721796e+00  1.93074699e+00  7.96759843e-01]
 [-1.49622929e+00  5.08705381e-01 -1.73403318e-01  6.17056635e-02
  -8.58415412e-01  6.63381609e-01 -1.44922795e-01  3.94469754e-01
   1.52854293e+00  5.89644852e-01 -1.62487515e-01  1.16528438e+00
  -1.30522953e-01 -8.94411117e-01 -5.87750206e-01 -2.50938021e+00
  -2.08582321e-01  2.14696869e+00  1.06191934e+00 -8.18837771e-01
   1.21215761e+00 -1.35536496e-01  9.86469002e-01  1.02141015e+00
   6.06813442e-01  2.41289102e-01  2.88783823e+00]
 [ 8.59383845e-01 -9.69679645e-01 -8.83109708e-01  4.87955465e-01
  -1.78860012e+00 -1.18806953e-01 -4.61892016e-01  6.26674947e-01
   1.12406320e-01 -5.03601859e-01  1.73743622e-01  1.81419938e-03
   1.02733329e+00 -9.54637086e-01 -5.08239122e-01  1.27523407e-01
   1.17116007e+00 -7.02676813e-01  2.56897700e-01  1.85804985e+00
  -7.41335246e-01 -3.80864849e-01  1.03369390e+00  5.22486334e-01
  -2.96864389e-01  7.77035503e-02 -3.52200718e-01]
 [-1.20996757e-01 -8.50824594e-01 -7.91428147e-01  6.63584176e-01
  -1.56909788e+00 -1.58902114e+00 -3.96788431e-01 -7.10330231e-01
  -2.53525997e+00 -6.36573816e-01  6.60507208e-01 -8.08096064e-01
   5.65356270e-01  7.56979457e-01 -2.93298926e-01  1.92927579e+00
  -1.03718375e+00  9.59210523e-01 -3.82727845e-01  8.89775845e-01
   5.67685753e-01 -1.06899107e+00 -5.78803291e-01  8.04153865e-01
  -5.09053214e-01  9.47651612e-01  9.26177730e-01]
 [-2.59598144e+00  1.89586384e+00  5.84948929e-01 -1.62232929e+00
   1.17913755e+00 -1.84479056e+00  1.38964098e+00 -1.10179592e+00
   1.93237288e-01  3.23491763e-01 -2.80884110e+00 -2.01189476e+00
   1.29896038e+00  1.26676794e+00  2.47565622e+00 -1.42743865e+00
  -3.79832429e-01 -1.98704800e-01 -7.51447510e-01 -8.13171513e-01
  -4.46867730e-01 -2.19918424e+00 -2.87496552e-01  3.29785498e-01
   2.50897579e+00 -2.49229270e+00  1.41041169e+00]
 [-3.60402780e-01 -9.69679645e-01 -8.83109708e-01 -3.30245813e-01
   3.40417912e-01 -1.18806953e-01 -4.61892016e-01  2.28804685e-01
   1.12406320e-01  5.62323607e-02 -4.79047593e-01 -3.94406374e-01
  -1.44119457e+00 -9.54637086e-01 -4.85681261e-01  1.27523407e-01
   1.17116007e+00  3.45933751e-01 -1.33905518e-01 -8.05270124e-01
  -7.41335246e-01  1.65456228e-01  1.03369390e+00  2.46990422e-02
  -2.96864389e-01 -1.32768742e-02 -3.52200718e-01]
 [-1.17810914e+00  6.14780313e-01  1.26299735e+00 -1.23350503e+00
   1.33106603e+00  3.17311081e-01  2.64610227e-01  1.07372185e+00
  -3.81751580e-02  6.78991780e-01  5.16010060e-01  3.34802587e-01
   2.92736366e-01 -4.56455388e-01  1.07001099e+00  6.53065213e-01
  -1.14084803e+00 -3.76808214e-01 -3.08310824e-01  3.02357267e-02
   7.37186218e-01  2.56967085e-01 -1.61842714e+00 -1.03207893e+00
   8.45222265e-01  8.77395904e-01 -3.96916720e-01]
 [ 9.81362508e-01 -9.69679645e-01 -8.83109708e-01  5.20683516e-01
  -1.78860012e+00  1.04631786e+00 -4.61892016e-01  7.46036026e-01
  -2.30749688e-02 -6.56283920e-01  8.26534838e-01  2.43762264e-01
   1.02733329e+00 -9.54637086e-01 -7.26298446e-01  1.27523407e-01
   1.17116007e+00 -1.03035562e+00  5.28580560e-01  1.52513486e+00
  -7.41335246e-01 -3.54849560e-01  1.03369390e+00  6.88415432e-01
  -1.28690777e+00  3.22133380e-02 -3.52200718e-01]
 [ 9.81362508e-01 -9.69679645e-01 -8.83109708e-01  9.52188512e-02
   3.40417912e-01  1.04631786e+00 -4.61892016e-01  6.66461973e-01
   1.12406320e-01 -3.50919799e-01  1.73743622e-01  1.17261716e-01
   2.04490263e-01 -9.54637086e-01 -7.56375594e-01  1.27523407e-01
   1.17116007e+00 -1.13281765e+00  4.39611227e-01  1.93474867e-01
  -7.41335246e-01 -1.20711955e-01  1.03369390e+00  5.22486334e-01
  -1.28690777e+00 -5.87670864e-02 -3.52200718e-01]
 [-1.16445455e-01 -9.69679645e-01 -8.83109708e-01 -1.66605558e-01
   3.40417912e-01  1.04631786e+00 -4.61892016e-01  7.72560710e-01
  -2.30749688e-02  5.62323607e-02  1.73743622e-01 -2.15294868e-01
  -8.24061993e-01 -9.54637086e-01 -4.85681261e-01 -1.25016813e-02
   1.17116007e+00  4.27196766e-01  1.14885800e-02 -8.05270124e-01
  -7.41335246e-01  8.74103600e-02  1.03369390e+00  3.56557237e-01
  -2.96864389e-01 -3.60219803e-02 -3.52200718e-01]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 8.61679322e-01  4.12088254e-01 -1.91220534e-01  4.88020346e-01
  -7.17229099e-01  5.01024904e-01 -1.01755181e+00  7.61430723e-01
  -9.07656739e-03 -5.60802510e-01  6.29659950e-01  5.77924476e-01
   8.65974407e-01 -3.85250799e-01 -8.40416350e-01  6.60578362e-02
  -9.52453758e-03 -9.24575190e-01  4.92439004e-01  1.06994691e+00
  -7.21769144e-01 -3.34110864e-01 -4.30260420e-01  6.09492326e-01
  -7.61535347e-01  2.90941414e-02 -7.11734699e-03]
 [ 7.37405182e-01 -9.69679645e-01 -8.83109708e-01  6.35231695e-01
   3.40417912e-01  1.04631786e+00 -1.53528155e+00  6.79724316e-01
   1.80146964e-01 -5.03601859e-01  8.26534838e-01  5.67172120e-01
   1.02733329e+00 -9.54637086e-01 -5.83431992e-01 -1.25016813e-02
   1.17116007e+00 -1.18259547e+00  4.54705751e-01  1.52513486e+00
  -7.41335246e-01 -5.75979520e-01  1.03369390e+00  6.88415432e-01
  -2.96864389e-01 -3.60219803e-02 -3.52200718e-01]
 [ 8.59102013e-01 -9.08812581e-02  1.37897523e+00  1.25203738e+00
   9.44995310e-01  5.95755295e-01  1.60938752e+00 -2.15534087e+00
  -9.89156332e-01 -9.36013742e-01  6.91051823e-01  1.70270070e+00
  -1.73804858e+00  7.52404557e-01  1.00252395e-01  8.48508911e-01
  -8.03055878e-01  9.78753700e-02  7.86670740e-01 -1.06038777e+00
  -6.73478341e-01  4.30346204e-01 -6.01631019e-01 -1.89057627e-01
   4.25917714e-01 -9.30084089e-01 -8.87027028e-01]
 [ 8.59102013e-01 -9.08812581e-02  1.37897523e+00  1.25203738e+00
   9.44995310e-01  5.95755295e-01  1.60938752e+00 -2.15534087e+00
  -9.89156332e-01 -9.36013742e-01  6.91051823e-01  1.70270070e+00
  -1.73804858e+00  7.52404557e-01  1.00252395e-01  8.48508911e-01
  -8.03055878e-01  9.78753700e-02  7.86670740e-01 -1.06038777e+00
  -6.73478341e-01  4.30346204e-01 -6.01631019e-01 -1.89057627e-01
   4.25917714e-01 -9.30084089e-01 -8.87027028e-01]
 [-2.73034700e-02  6.48217948e-01  7.04387156e-01  1.71386071e-01
   4.23400641e-01 -3.79563936e-01  1.44416019e+00 -5.22861306e-01
  -3.23534003e-01  1.32366844e-01  5.18341031e-01 -7.33221280e-01
  -7.38924815e-01  8.21052740e-01 -1.17414274e+00 -5.37242042e-01
   1.44853075e-01 -2.02257399e-01  1.27296073e+00 -5.12361754e-01
   2.03857121e+00  4.16089981e-01 -2.03240193e+00  4.94958741e-01
  -3.71047222e-01 -9.43468198e-01 -5.43443377e-01]
 [-2.55396649e-02  6.93542935e-01 -7.94575197e-01  3.37675517e-01
   5.45381288e-01 -1.60078770e+00  4.59489872e-01  1.45290205e-01
   4.96428528e-01  3.39242583e+00 -4.66582692e-01 -1.00252156e+00
   6.71810256e-01  1.03674812e+00  1.78787301e+00 -1.08789737e+00
  -1.35567473e+00 -4.71842045e-01 -2.31656007e+00 -7.51757414e-01
   2.12179655e+00  4.86701532e-01 -5.05523503e-01 -2.36475026e+00
   1.60727991e+00  1.30392236e+00 -1.18645168e+00]
 [-2.18389397e-01  2.07746631e+00  1.93900155e+00 -2.61285035e+00
  -8.70514892e-03 -1.20672239e+00 -1.37267164e+00  5.50494006e-01
   2.19493363e+00 -1.45574543e-01 -1.96396354e+00 -1.24798825e+00
  -3.70526328e-01  2.07758245e+00  9.07270883e-01  7.31451341e-01
  -1.43405592e+00  2.14757274e+00 -2.19899260e+00 -4.64308678e-01
   2.86207694e-01  2.89691097e+00 -5.32457556e-01 -2.28791595e+00
  -1.01721796e+00  1.93074699e+00  7.96759843e-01]
 [-1.49622929e+00  5.08705381e-01 -1.73403318e-01  6.17056635e-02
  -8.58415412e-01  6.63381609e-01 -1.44922795e-01  3.94469754e-01
   1.52854293e+00  5.89644852e-01 -1.62487515e-01  1.16528438e+00
  -1.30522953e-01 -8.94411117e-01 -5.87750206e-01 -2.50938021e+00
  -2.08582321e-01  2.14696869e+00  1.06191934e+00 -8.18837771e-01
   1.21215761e+00 -1.35536496e-01  9.86469002e-01  1.02141015e+00
   6.06813442e-01  2.41289102e-01  2.88783823e+00]
 [ 8.59383845e-01 -9.69679645e-01 -8.83109708e-01  4.87955465e-01
  -1.78860012e+00 -1.18806953e-01 -4.61892016e-01  6.26674947e-01
   1.12406320e-01 -5.03601859e-01  1.73743622e-01  1.81419938e-03
   1.02733329e+00 -9.54637086e-01 -5.08239122e-01  1.27523407e-01
   1.17116007e+00 -7.02676813e-01  2.56897700e-01  1.85804985e+00
  -7.41335246e-01 -3.80864849e-01  1.03369390e+00  5.22486334e-01
  -2.96864389e-01  7.77035503e-02 -3.52200718e-01]
 [-1.20996757e-01 -8.50824594e-01 -7.91428147e-01  6.63584176e-01
  -1.56909788e+00 -1.58902114e+00 -3.96788431e-01 -7.10330231e-01
  -2.53525997e+00 -6.36573816e-01  6.60507208e-01 -8.08096064e-01
   5.65356270e-01  7.56979457e-01 -2.93298926e-01  1.92927579e+00
  -1.03718375e+00  9.59210523e-01 -3.82727845e-01  8.89775845e-01
   5.67685753e-01 -1.06899107e+00 -5.78803291e-01  8.04153865e-01
  -5.09053214e-01  9.47651612e-01  9.26177730e-01]
 [-2.59598144e+00  1.89586384e+00  5.84948929e-01 -1.62232929e+00
   1.17913755e+00 -1.84479056e+00  1.38964098e+00 -1.10179592e+00
   1.93237288e-01  3.23491763e-01 -2.80884110e+00 -2.01189476e+00
   1.29896038e+00  1.26676794e+00  2.47565622e+00 -1.42743865e+00
  -3.79832429e-01 -1.98704800e-01 -7.51447510e-01 -8.13171513e-01
  -4.46867730e-01 -2.19918424e+00 -2.87496552e-01  3.29785498e-01
   2.50897579e+00 -2.49229270e+00  1.41041169e+00]
 [-3.60402780e-01 -9.69679645e-01 -8.83109708e-01 -3.30245813e-01
   3.40417912e-01 -1.18806953e-01 -4.61892016e-01  2.28804685e-01
   1.12406320e-01  5.62323607e-02 -4.79047593e-01 -3.94406374e-01
  -1.44119457e+00 -9.54637086e-01 -4.85681261e-01  1.27523407e-01
   1.17116007e+00  3.45933751e-01 -1.33905518e-01 -8.05270124e-01
  -7.41335246e-01  1.65456228e-01  1.03369390e+00  2.46990422e-02
  -2.96864389e-01 -1.32768742e-02 -3.52200718e-01]
 [-1.17810914e+00  6.14780313e-01  1.26299735e+00 -1.23350503e+00
   1.33106603e+00  3.17311081e-01  2.64610227e-01  1.07372185e+00
  -3.81751580e-02  6.78991780e-01  5.16010060e-01  3.34802587e-01
   2.92736366e-01 -4.56455388e-01  1.07001099e+00  6.53065213e-01
  -1.14084803e+00 -3.76808214e-01 -3.08310824e-01  3.02357267e-02
   7.37186218e-01  2.56967085e-01 -1.61842714e+00 -1.03207893e+00
   8.45222265e-01  8.77395904e-01 -3.96916720e-01]
 [ 9.81362508e-01 -9.69679645e-01 -8.83109708e-01  5.20683516e-01
  -1.78860012e+00  1.04631786e+00 -4.61892016e-01  7.46036026e-01
  -2.30749688e-02 -6.56283920e-01  8.26534838e-01  2.43762264e-01
   1.02733329e+00 -9.54637086e-01 -7.26298446e-01  1.27523407e-01
   1.17116007e+00 -1.03035562e+00  5.28580560e-01  1.52513486e+00
  -7.41335246e-01 -3.54849560e-01  1.03369390e+00  6.88415432e-01
  -1.28690777e+00  3.22133380e-02 -3.52200718e-01]
 [ 9.81362508e-01 -9.69679645e-01 -8.83109708e-01  9.52188512e-02
   3.40417912e-01  1.04631786e+00 -4.61892016e-01  6.66461973e-01
   1.12406320e-01 -3.50919799e-01  1.73743622e-01  1.17261716e-01
   2.04490263e-01 -9.54637086e-01 -7.56375594e-01  1.27523407e-01
   1.17116007e+00 -1.13281765e+00  4.39611227e-01  1.93474867e-01
  -7.41335246e-01 -1.20711955e-01  1.03369390e+00  5.22486334e-01
  -1.28690777e+00 -5.87670864e-02 -3.52200718e-01]
 [-1.16445455e-01 -9.69679645e-01 -8.83109708e-01 -1.66605558e-01
   3.40417912e-01  1.04631786e+00 -4.61892016e-01  7.72560710e-01
  -2.30749688e-02  5.62323607e-02  1.73743622e-01 -2.15294868e-01
  -8.24061993e-01 -9.54637086e-01 -4.85681261e-01 -1.25016813e-02
   1.17116007e+00  4.27196766e-01  1.14885800e-02 -8.05270124e-01
  -7.41335246e-01  8.74103600e-02  1.03369390e+00  3.56557237e-01
  -2.96864389e-01 -3.60219803e-02 -3.52200718e-01]]
upper = 
[7913.82176839 7913.82176839 7913.82176839 ... 7913.82176839 7913.82176839
 7913.82176839]
upper.argmax() = 0
all predict_target = 
[18984.263 18984.263 18984.263 ... 18984.263 18984.263 18984.263]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
 2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
 1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
 7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
 9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
 8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
 4.51257001e+00 1.69669367e+02 2.26332288e+00]
================= config24 =================
2022年 02月 22日 星期二 15:38:05 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (146518) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (240853) - 没有那个进程
black_box_function中schafferRun(i) 中的i为[34.95483503260153, 0.1862602113776709, 0.34556072704304774, 319.030242269201, 2.616450202010071, 5.676778057613179, 5.740878001587038, 484.7949591176381, 116.29927389353077, 34.62920894700091, 8.022805061070414, 1521819079.827609, 0.7234759313783007, 0.14038693859523377, 202.85592482291588, 0.8202978274702146, 0.9682615757193975, 1410278471.7424064, 1817117571.1452203, 66.06667931020984, 0.8946066635038473, 542.522105684889, 0.03905478323288236, 21.434573426066205, 4.512570013717653, 169.66936676661, 2.2633228750151564]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 34.95483503260153
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.1862602113776709
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.34556072704304774
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 319.030242269201
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.616450202010071
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.676778057613179
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.740878001587038
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 484.7949591176381
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 116.29927389353077
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 34.62920894700091
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.022805061070414
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1521819079.827609
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7234759313783007
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.14038693859523377
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 202.85592482291588
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.8202978274702146
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.9682615757193975
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1410278471.7424064
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1817117571.1452203
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 66.06667931020984
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.8946066635038473
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 542.522105684889
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.03905478323288236
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 21.434573426066205
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.512570013717653
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 169.66936676661
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.2633228750151564
configNum = 24	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 24 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 34.95483503260153, 'spark.broadcast.checksum': 0.1862602113776709, 'spark.broadcast.compress': 0.34556072704304774, 'spark.default.parallelism': 319.030242269201, 'spark.executor.cores': 2.616450202010071, 'spark.executor.instances': 5.676778057613179, 'spark.executor.memory': 5.740878001587038, 'spark.executor.memoryOverhead': 484.7949591176381, 'spark.kryoserializer.buffer': 116.29927389353077, 'spark.kryoserializer.buffer.max': 34.62920894700091, 'spark.locality.wait': 8.022805061070414, 'spark.maxRemoteBlockSizeFetchToMem': 1521819079.827609, 'spark.memory.fraction': 0.7234759313783007, 'spark.memory.offHeap.enabled': 0.14038693859523377, 'spark.memory.offHeap.size': 202.85592482291588, 'spark.memory.storageFraction': 0.8202978274702146, 'spark.rdd.compress': 0.9682615757193975, 'spark.reducer.maxBlocksInFlightPerAddress': 1410278471.7424064, 'spark.reducer.maxReqsInFlight': 1817117571.1452203, 'spark.reducer.maxSizeInFlight': 66.06667931020984, 'spark.scheduler.mode': 0.8946066635038473, 'spark.scheduler.revive.interval': 542.522105684889, 'spark.shuffle.compress': 0.03905478323288236, 'spark.shuffle.file.buffer': 21.434573426066205, 'spark.shuffle.io.numConnectionsPerPeer': 4.512570013717653, 'spark.shuffle.sort.bypassMergeThreshold': 169.66936676661, 'spark.storage.memoryMapThreshold': 2.2633228750151564} target = -202.403
x_probe = {'spark.broadcast.blockSize': 34.95483503260153, 'spark.broadcast.checksum': 0.1862602113776709, 'spark.broadcast.compress': 0.34556072704304774, 'spark.default.parallelism': 319.030242269201, 'spark.executor.cores': 2.616450202010071, 'spark.executor.instances': 5.676778057613179, 'spark.executor.memory': 5.740878001587038, 'spark.executor.memoryOverhead': 484.7949591176381, 'spark.kryoserializer.buffer': 116.29927389353077, 'spark.kryoserializer.buffer.max': 34.62920894700091, 'spark.locality.wait': 8.022805061070414, 'spark.maxRemoteBlockSizeFetchToMem': 1521819079.827609, 'spark.memory.fraction': 0.7234759313783007, 'spark.memory.offHeap.enabled': 0.14038693859523377, 'spark.memory.offHeap.size': 202.85592482291588, 'spark.memory.storageFraction': 0.8202978274702146, 'spark.rdd.compress': 0.9682615757193975, 'spark.reducer.maxBlocksInFlightPerAddress': 1410278471.7424064, 'spark.reducer.maxReqsInFlight': 1817117571.1452203, 'spark.reducer.maxSizeInFlight': 66.06667931020984, 'spark.scheduler.mode': 0.8946066635038473, 'spark.scheduler.revive.interval': 542.522105684889, 'spark.shuffle.compress': 0.03905478323288236, 'spark.shuffle.file.buffer': 21.434573426066205, 'spark.shuffle.io.numConnectionsPerPeer': 4.512570013717653, 'spark.shuffle.sort.bypassMergeThreshold': 169.66936676661, 'spark.storage.memoryMapThreshold': 2.2633228750151564}
target = -202.403
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (17, 27)
before probe, target = (17,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [4.36883181e+01 3.93887592e-01 1.71377673e-01 4.23952021e+02
  1.43690786e+00 6.67133457e+00 4.29529748e+00 6.58491389e+02
  1.07905272e+02 7.24808481e+01 8.48493312e+00 2.00660456e+09
  8.23714321e-01 1.61230903e-02 2.20425715e+02 5.31682574e-01
  5.96947713e-01 1.61967190e+09 2.06608150e+09 6.09592459e+01
  6.64114333e-01 6.74860321e+02 9.85825731e-01 4.10068495e+01
  2.91276590e+00 2.72192121e+02 3.35595803e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.49626877e+01 3.16666694e-02 2.21389759e-02 4.60732610e+02
  1.10310023e+00 4.73814876e+00 4.06065234e+00 5.75187853e+02
  4.79146575e+01 4.83872774e+01 9.74566504e+00 1.69217295e+09
  8.57542382e-01 4.58216750e-01 2.59585183e+02 8.48674213e-01
  3.54895498e-01 1.44134746e+09 1.65755319e+09 6.60915278e+01
  4.45018063e-01 6.03098323e+02 5.16018707e-01 3.96975174e+01
  1.78567724e+00 3.03247703e+02 2.53500206e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
  2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
  8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
  8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
  3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
  5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
  3.15357234e+00 3.00158875e+02 1.98128633e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.52000000e+02
  1.00000000e+00 7.00000000e+00 4.00000000e+00 6.85000000e+02
  8.50000000e+01 4.80000000e+01 1.00000000e+01 1.85977242e+09
  8.79999995e-01 0.00000000e+00 2.02000000e+02 7.20000029e-01
  1.00000000e+00 1.14264333e+09 1.91525990e+09 6.80000000e+01
  0.00000000e+00 6.58000000e+02 1.00000000e+00 3.90000000e+01
  1.00000000e+00 2.63000000e+02 2.00000000e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.26000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.79000000e+02
  8.70000000e+01 5.40000000e+01 9.00000000e+00 1.83961626e+09
  8.39999974e-01 0.00000000e+00 1.98000000e+02 7.20000029e-01
  1.00000000e+00 1.12726016e+09 1.89010048e+09 6.40000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 3.80000000e+01
  1.00000000e+00 2.59000000e+02 2.00000000e+00]
 [5.50000000e+01 0.00000000e+00 0.00000000e+00 4.10000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.87000000e+02
  8.50000000e+01 6.20000000e+01 9.00000000e+00 1.78662784e+09
  7.90000021e-01 0.00000000e+00 2.34000000e+02 7.09999979e-01
  1.00000000e+00 1.36147341e+09 1.76903270e+09 6.10000000e+01
  0.00000000e+00 6.92000000e+02 1.00000000e+00 3.70000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
  2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
  1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
  7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
  9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
  8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
  4.51257001e+00 1.69669367e+02 2.26332288e+00]]
标准化后的train_x = 
[[ 8.86384246e-01  4.40230547e-01 -2.28320954e-01  5.59964757e-01
  -7.79240871e-01  5.42580269e-01 -1.07340777e+00  8.17263447e-01
  -1.21679344e-01 -4.72780336e-01  6.72931805e-01  6.45754066e-01
   9.05500887e-01 -3.69016865e-01 -8.10374871e-01 -2.32439278e-02
  -7.18931578e-02 -9.82425340e-01  4.96107207e-01  1.02623515e+00
  -7.80485554e-01 -2.11353499e-01 -2.76200138e-01  6.71592153e-01
  -8.10502444e-01  1.39806064e-01 -2.40780023e-02]
 [ 7.77574219e-01 -9.81005950e-01 -9.35288845e-01  7.00782942e-01
   2.32676438e-01  1.10064157e+00 -1.57848299e+00  7.40837810e-01
   5.21714806e-02 -4.16693429e-01  8.74591974e-01  6.35667085e-01
   1.05235356e+00 -9.52757392e-01 -5.49428744e-01 -9.91510999e-02
   1.10662621e+00 -1.24406732e+00  4.57250300e-01  1.48506309e+00
  -7.98819160e-01 -4.38674994e-01  1.05943489e+00  7.43176294e-01
  -3.87527152e-01  7.99416224e-02 -3.78981749e-01]
 [ 8.84127646e-01 -7.71057059e-02  1.37609494e+00  1.29080170e+00
   8.11113598e-01  6.39528826e-01  1.48932304e+00 -1.91099418e+00
  -1.02213646e+00 -8.40685896e-01  7.35815881e-01  1.70092713e+00
  -1.46441955e+00  7.97318806e-01  1.44795581e-01  7.32789845e-01
  -8.63969254e-01  5.43768529e-02  7.99100824e-01 -1.12113515e+00
  -7.35236654e-01  5.07125394e-01 -4.32549670e-01 -5.27016040e-02
   2.70398562e-01 -7.42013487e-01 -9.29028136e-01]
 [ 8.84127646e-01 -7.71057059e-02  1.37609494e+00  1.29080170e+00
   8.11113598e-01  6.39528826e-01  1.48932304e+00 -1.91099418e+00
  -1.02213646e+00 -8.40685896e-01  7.35815881e-01  1.70092713e+00
  -1.46441955e+00  7.97318806e-01  1.44795581e-01  7.32789845e-01
  -8.63969254e-01  5.43768529e-02  7.99100824e-01 -1.12113515e+00
  -7.35236654e-01  5.07125394e-01 -4.32549670e-01 -5.27016040e-02
   2.70398562e-01 -7.42013487e-01 -9.29028136e-01]
 [ 1.08022457e-01  6.83105012e-01  6.86805201e-01  2.57081423e-01
   3.12071225e-01 -3.58628053e-01  1.32813426e+00 -3.84023459e-01
  -4.10589946e-01  2.06892439e-01  5.58907146e-01 -5.84255646e-01
  -5.55117348e-01  8.67697611e-01 -1.14924611e+00 -6.06175050e-01
   8.22013445e-02 -2.49968731e-01  1.29987196e+00 -5.68726745e-01
   1.80597719e+00  4.93726610e-01 -1.73790989e+00  5.67708908e-01
  -4.55053441e-01 -7.54318154e-01 -5.75666788e-01]
 [ 1.09566782e-01  7.29724655e-01 -8.44824853e-01  4.16149174e-01
   4.28777770e-01 -1.60844746e+00  3.67531574e-01  2.40944729e-01
   3.42758016e-01  3.40347539e+00 -4.49956331e-01 -8.36891139e-01
   7.28792159e-01  1.08883068e+00  1.85843320e+00 -1.13823902e+00
  -1.41557467e+00 -5.23337404e-01 -2.39654062e+00 -8.10036777e-01
   1.88396005e+00  5.60091238e-01 -3.44866220e-01 -2.02607921e+00
   1.34575525e+00  1.31181811e+00 -1.23697381e+00]
 [-5.92856006e-02  2.15317820e+00  1.94832621e+00 -2.40623987e+00
  -1.01351517e-01 -1.20515489e+00 -1.41984764e+00  6.19959789e-01
   1.90327488e+00 -6.56371998e-02 -1.98373282e+00 -1.06716791e+00
  -2.19838011e-01  2.15590446e+00  9.64255373e-01  6.19684401e-01
  -1.49381212e+00  2.13284481e+00 -2.27547213e+00 -5.20289404e-01
   1.63997445e-01  2.82533892e+00 -3.69439436e-01 -1.95638962e+00
  -1.04324225e+00  1.88808872e+00  8.02675909e-01]
 [-1.17811687e+00  5.39607430e-01 -2.10115438e-01  1.52164269e-01
  -9.14322682e-01  7.08738648e-01 -2.22107838e-01  4.74019546e-01
   1.29102242e+00  6.55266867e-01 -1.38469755e-01  1.19676709e+00
  -1.41102099e-03 -8.91013124e-01 -5.53813529e-01 -2.51172941e+00
  -2.70585892e-01  2.13223228e+00  1.08254601e+00 -8.77653555e-01
   1.03162051e+00 -2.47223613e-02  1.01634937e+00  1.04520624e+00
   4.35062228e-01  3.34887290e-01  2.95326216e+00]
 [ 8.84374408e-01 -9.81005950e-01 -9.35288845e-01  5.59902693e-01
  -1.80428880e+00 -9.17652996e-02 -5.31329593e-01  6.91217077e-01
  -1.00658466e-02 -4.16693429e-01  2.05933884e-01  1.05294524e-01
   1.05235356e+00 -9.52757392e-01 -4.73076672e-01  3.61464277e-02
   1.10662621e+00 -7.57412285e-01  2.53551754e-01  1.82064030e+00
  -7.98819160e-01 -2.55295471e-01  1.05943489e+00  5.92676743e-01
  -3.87527152e-01  1.84495076e-01 -3.78981749e-01]
 [ 2.59879394e-02 -8.58755943e-01 -8.41609217e-01  7.27904118e-01
  -1.59427722e+00 -1.59640538e+00 -4.67817291e-01 -5.59376073e-01
  -2.44263310e+00 -5.47076312e-01  7.04528842e-01 -6.54497045e-01
   6.31908423e-01  8.02009039e-01 -2.54822876e-01  1.77706761e+00
  -1.09766776e+00  9.27802141e-01 -4.05121101e-01  8.44623309e-01
   4.27744816e-01 -9.02034428e-01 -4.11722850e-01  8.48152350e-01
  -5.80675935e-01  9.84280960e-01  9.35776767e-01]
 [-2.14102083e+00  1.96638846e+00  5.64763991e-01 -1.45873563e+00
   1.03513218e+00 -1.85816378e+00  1.27494762e+00 -9.25540926e-01
   6.41983335e-02  3.94295998e-01 -2.84914615e+00 -1.78380253e+00
   1.29956127e+00  1.32464930e+00  2.55681953e+00 -1.46631662e+00
  -4.41521947e-01 -2.46366266e-01 -7.84820813e-01 -8.71941985e-01
  -5.22900555e-01 -1.96425227e+00 -1.45949884e-01  4.17894925e-01
   2.16654052e+00 -2.17822841e+00  1.43379104e+00]
 [-1.83627480e-01 -9.81005950e-01 -9.35288845e-01 -2.22765356e-01
   2.32676438e-01 -9.17652996e-02 -5.31329593e-01  3.19061581e-01
  -1.00658466e-02  1.32240357e-01 -4.62724207e-01 -2.66407212e-01
  -1.19425281e+00 -9.52757392e-01 -4.50171051e-01  3.61464277e-02
   1.10662621e+00  3.05917107e-01 -1.48889132e-01 -8.63977412e-01
  -7.98819160e-01  2.58167193e-01  1.05943489e+00  1.41178090e-01
  -3.87527152e-01  1.00852313e-01 -3.78981749e-01]
 [-8.99582154e-01  6.48712270e-01  1.25758949e+00 -1.08679741e+00
   1.18049170e+00  3.54564683e-01  1.77415241e-01  1.10937088e+00
  -1.48413936e-01  7.42874136e-01  5.56519518e-01  4.17676995e-01
   3.83797141e-01 -4.42016523e-01  1.12950435e+00  5.43944764e-01
  -1.20114193e+00 -4.26969630e-01 -3.28488027e-01 -2.17902824e-02
   5.86568215e-01  3.44174140e-01 -1.36022103e+00 -8.17331374e-01
   6.52078248e-01  9.19691445e-01 -4.24970278e-01]
 [ 9.91174597e-01 -9.81005950e-01 -9.35288845e-01  5.91209415e-01
  -1.80428880e+00  1.10064157e+00 -5.31329593e-01  8.02863726e-01
  -1.34540501e-01 -5.66402644e-01  8.74591974e-01  3.32270410e-01
   1.05235356e+00 -9.52757392e-01 -6.94497681e-01  3.61464277e-02
   1.10662621e+00 -1.08969056e+00  5.33325016e-01  1.48506309e+00
  -7.98819160e-01 -2.30844868e-01  1.05943489e+00  7.43176294e-01
  -1.28873236e+00  1.42673694e-01 -3.78981749e-01]
 [ 9.91174597e-01 -9.81005950e-01 -9.35288845e-01  1.84222030e-01
   2.32676438e-01  1.10064157e+00 -5.31329593e-01  7.28432627e-01
  -1.00658466e-02 -2.66984215e-01  2.05933884e-01  2.13597941e-01
   3.03484393e-01 -9.52757392e-01 -7.25038510e-01  3.61464277e-02
   1.10662621e+00 -1.19359080e+00  4.41706280e-01  1.42754230e-01
  -7.98819160e-01 -1.07894406e-02  1.05943489e+00  5.92676743e-01
  -1.28873236e+00  5.90309318e-02 -3.78981749e-01]
 [ 2.99728978e-02 -9.81005950e-01 -9.35288845e-01 -6.62317458e-02
   2.32676438e-01  1.10064157e+00 -5.31329593e-01  8.27674092e-01
  -1.34540501e-01  1.32240357e-01  2.05933884e-01 -9.83794463e-02
  -6.32600664e-01 -9.52757392e-01 -4.50171051e-01 -9.91510999e-02
   1.10662621e+00  3.88320771e-01  8.34633876e-04 -8.63977412e-01
  -7.98819160e-01  1.84815384e-01  1.05943489e+00  4.42177192e-01
  -3.87527152e-01  7.99416224e-02 -3.78981749e-01]
 [-2.11085451e+00 -2.61943519e-01  5.26928757e-01 -1.49021420e+00
   1.48836407e+00 -4.77177364e-01  1.29163671e+00 -1.68071648e+00
   1.81344265e+00 -1.23364619e+00 -4.47475418e-01 -1.65748144e+00
  -1.87804599e+00 -4.15137833e-01 -6.87962518e-01  1.39314405e+00
   9.98177395e-01  7.17957525e-01  1.75937004e-01  8.36284715e-01
   1.66690616e+00 -1.64259695e+00 -1.86154989e+00 -1.90041252e+00
   1.87681403e+00 -1.80893431e+00  2.68129760e-01]]
train_y = 
[   -220.801    -223.547    -231.466    -231.466    -247.247    -307.435
    -316.038    -335.557    -379.414    -477.782 -100000.    -100000.
 -100000.       -337.51     -217.34     -222.605    -202.403]
测试：每一列进行标准化，标准化后的train_x = 
[[ 8.86384246e-01  4.40230547e-01 -2.28320954e-01  5.59964757e-01
  -7.79240871e-01  5.42580269e-01 -1.07340777e+00  8.17263447e-01
  -1.21679344e-01 -4.72780336e-01  6.72931805e-01  6.45754066e-01
   9.05500887e-01 -3.69016865e-01 -8.10374871e-01 -2.32439278e-02
  -7.18931578e-02 -9.82425340e-01  4.96107207e-01  1.02623515e+00
  -7.80485554e-01 -2.11353499e-01 -2.76200138e-01  6.71592153e-01
  -8.10502444e-01  1.39806064e-01 -2.40780023e-02]
 [ 7.77574219e-01 -9.81005950e-01 -9.35288845e-01  7.00782942e-01
   2.32676438e-01  1.10064157e+00 -1.57848299e+00  7.40837810e-01
   5.21714806e-02 -4.16693429e-01  8.74591974e-01  6.35667085e-01
   1.05235356e+00 -9.52757392e-01 -5.49428744e-01 -9.91510999e-02
   1.10662621e+00 -1.24406732e+00  4.57250300e-01  1.48506309e+00
  -7.98819160e-01 -4.38674994e-01  1.05943489e+00  7.43176294e-01
  -3.87527152e-01  7.99416224e-02 -3.78981749e-01]
 [ 8.84127646e-01 -7.71057059e-02  1.37609494e+00  1.29080170e+00
   8.11113598e-01  6.39528826e-01  1.48932304e+00 -1.91099418e+00
  -1.02213646e+00 -8.40685896e-01  7.35815881e-01  1.70092713e+00
  -1.46441955e+00  7.97318806e-01  1.44795581e-01  7.32789845e-01
  -8.63969254e-01  5.43768529e-02  7.99100824e-01 -1.12113515e+00
  -7.35236654e-01  5.07125394e-01 -4.32549670e-01 -5.27016040e-02
   2.70398562e-01 -7.42013487e-01 -9.29028136e-01]
 [ 8.84127646e-01 -7.71057059e-02  1.37609494e+00  1.29080170e+00
   8.11113598e-01  6.39528826e-01  1.48932304e+00 -1.91099418e+00
  -1.02213646e+00 -8.40685896e-01  7.35815881e-01  1.70092713e+00
  -1.46441955e+00  7.97318806e-01  1.44795581e-01  7.32789845e-01
  -8.63969254e-01  5.43768529e-02  7.99100824e-01 -1.12113515e+00
  -7.35236654e-01  5.07125394e-01 -4.32549670e-01 -5.27016040e-02
   2.70398562e-01 -7.42013487e-01 -9.29028136e-01]
 [ 1.08022457e-01  6.83105012e-01  6.86805201e-01  2.57081423e-01
   3.12071225e-01 -3.58628053e-01  1.32813426e+00 -3.84023459e-01
  -4.10589946e-01  2.06892439e-01  5.58907146e-01 -5.84255646e-01
  -5.55117348e-01  8.67697611e-01 -1.14924611e+00 -6.06175050e-01
   8.22013445e-02 -2.49968731e-01  1.29987196e+00 -5.68726745e-01
   1.80597719e+00  4.93726610e-01 -1.73790989e+00  5.67708908e-01
  -4.55053441e-01 -7.54318154e-01 -5.75666788e-01]
 [ 1.09566782e-01  7.29724655e-01 -8.44824853e-01  4.16149174e-01
   4.28777770e-01 -1.60844746e+00  3.67531574e-01  2.40944729e-01
   3.42758016e-01  3.40347539e+00 -4.49956331e-01 -8.36891139e-01
   7.28792159e-01  1.08883068e+00  1.85843320e+00 -1.13823902e+00
  -1.41557467e+00 -5.23337404e-01 -2.39654062e+00 -8.10036777e-01
   1.88396005e+00  5.60091238e-01 -3.44866220e-01 -2.02607921e+00
   1.34575525e+00  1.31181811e+00 -1.23697381e+00]
 [-5.92856006e-02  2.15317820e+00  1.94832621e+00 -2.40623987e+00
  -1.01351517e-01 -1.20515489e+00 -1.41984764e+00  6.19959789e-01
   1.90327488e+00 -6.56371998e-02 -1.98373282e+00 -1.06716791e+00
  -2.19838011e-01  2.15590446e+00  9.64255373e-01  6.19684401e-01
  -1.49381212e+00  2.13284481e+00 -2.27547213e+00 -5.20289404e-01
   1.63997445e-01  2.82533892e+00 -3.69439436e-01 -1.95638962e+00
  -1.04324225e+00  1.88808872e+00  8.02675909e-01]
 [-1.17811687e+00  5.39607430e-01 -2.10115438e-01  1.52164269e-01
  -9.14322682e-01  7.08738648e-01 -2.22107838e-01  4.74019546e-01
   1.29102242e+00  6.55266867e-01 -1.38469755e-01  1.19676709e+00
  -1.41102099e-03 -8.91013124e-01 -5.53813529e-01 -2.51172941e+00
  -2.70585892e-01  2.13223228e+00  1.08254601e+00 -8.77653555e-01
   1.03162051e+00 -2.47223613e-02  1.01634937e+00  1.04520624e+00
   4.35062228e-01  3.34887290e-01  2.95326216e+00]
 [ 8.84374408e-01 -9.81005950e-01 -9.35288845e-01  5.59902693e-01
  -1.80428880e+00 -9.17652996e-02 -5.31329593e-01  6.91217077e-01
  -1.00658466e-02 -4.16693429e-01  2.05933884e-01  1.05294524e-01
   1.05235356e+00 -9.52757392e-01 -4.73076672e-01  3.61464277e-02
   1.10662621e+00 -7.57412285e-01  2.53551754e-01  1.82064030e+00
  -7.98819160e-01 -2.55295471e-01  1.05943489e+00  5.92676743e-01
  -3.87527152e-01  1.84495076e-01 -3.78981749e-01]
 [ 2.59879394e-02 -8.58755943e-01 -8.41609217e-01  7.27904118e-01
  -1.59427722e+00 -1.59640538e+00 -4.67817291e-01 -5.59376073e-01
  -2.44263310e+00 -5.47076312e-01  7.04528842e-01 -6.54497045e-01
   6.31908423e-01  8.02009039e-01 -2.54822876e-01  1.77706761e+00
  -1.09766776e+00  9.27802141e-01 -4.05121101e-01  8.44623309e-01
   4.27744816e-01 -9.02034428e-01 -4.11722850e-01  8.48152350e-01
  -5.80675935e-01  9.84280960e-01  9.35776767e-01]
 [-2.14102083e+00  1.96638846e+00  5.64763991e-01 -1.45873563e+00
   1.03513218e+00 -1.85816378e+00  1.27494762e+00 -9.25540926e-01
   6.41983335e-02  3.94295998e-01 -2.84914615e+00 -1.78380253e+00
   1.29956127e+00  1.32464930e+00  2.55681953e+00 -1.46631662e+00
  -4.41521947e-01 -2.46366266e-01 -7.84820813e-01 -8.71941985e-01
  -5.22900555e-01 -1.96425227e+00 -1.45949884e-01  4.17894925e-01
   2.16654052e+00 -2.17822841e+00  1.43379104e+00]
 [-1.83627480e-01 -9.81005950e-01 -9.35288845e-01 -2.22765356e-01
   2.32676438e-01 -9.17652996e-02 -5.31329593e-01  3.19061581e-01
  -1.00658466e-02  1.32240357e-01 -4.62724207e-01 -2.66407212e-01
  -1.19425281e+00 -9.52757392e-01 -4.50171051e-01  3.61464277e-02
   1.10662621e+00  3.05917107e-01 -1.48889132e-01 -8.63977412e-01
  -7.98819160e-01  2.58167193e-01  1.05943489e+00  1.41178090e-01
  -3.87527152e-01  1.00852313e-01 -3.78981749e-01]
 [-8.99582154e-01  6.48712270e-01  1.25758949e+00 -1.08679741e+00
   1.18049170e+00  3.54564683e-01  1.77415241e-01  1.10937088e+00
  -1.48413936e-01  7.42874136e-01  5.56519518e-01  4.17676995e-01
   3.83797141e-01 -4.42016523e-01  1.12950435e+00  5.43944764e-01
  -1.20114193e+00 -4.26969630e-01 -3.28488027e-01 -2.17902824e-02
   5.86568215e-01  3.44174140e-01 -1.36022103e+00 -8.17331374e-01
   6.52078248e-01  9.19691445e-01 -4.24970278e-01]
 [ 9.91174597e-01 -9.81005950e-01 -9.35288845e-01  5.91209415e-01
  -1.80428880e+00  1.10064157e+00 -5.31329593e-01  8.02863726e-01
  -1.34540501e-01 -5.66402644e-01  8.74591974e-01  3.32270410e-01
   1.05235356e+00 -9.52757392e-01 -6.94497681e-01  3.61464277e-02
   1.10662621e+00 -1.08969056e+00  5.33325016e-01  1.48506309e+00
  -7.98819160e-01 -2.30844868e-01  1.05943489e+00  7.43176294e-01
  -1.28873236e+00  1.42673694e-01 -3.78981749e-01]
 [ 9.91174597e-01 -9.81005950e-01 -9.35288845e-01  1.84222030e-01
   2.32676438e-01  1.10064157e+00 -5.31329593e-01  7.28432627e-01
  -1.00658466e-02 -2.66984215e-01  2.05933884e-01  2.13597941e-01
   3.03484393e-01 -9.52757392e-01 -7.25038510e-01  3.61464277e-02
   1.10662621e+00 -1.19359080e+00  4.41706280e-01  1.42754230e-01
  -7.98819160e-01 -1.07894406e-02  1.05943489e+00  5.92676743e-01
  -1.28873236e+00  5.90309318e-02 -3.78981749e-01]
 [ 2.99728978e-02 -9.81005950e-01 -9.35288845e-01 -6.62317458e-02
   2.32676438e-01  1.10064157e+00 -5.31329593e-01  8.27674092e-01
  -1.34540501e-01  1.32240357e-01  2.05933884e-01 -9.83794463e-02
  -6.32600664e-01 -9.52757392e-01 -4.50171051e-01 -9.91510999e-02
   1.10662621e+00  3.88320771e-01  8.34633876e-04 -8.63977412e-01
  -7.98819160e-01  1.84815384e-01  1.05943489e+00  4.42177192e-01
  -3.87527152e-01  7.99416224e-02 -3.78981749e-01]
 [-2.11085451e+00 -2.61943519e-01  5.26928757e-01 -1.49021420e+00
   1.48836407e+00 -4.77177364e-01  1.29163671e+00 -1.68071648e+00
   1.81344265e+00 -1.23364619e+00 -4.47475418e-01 -1.65748144e+00
  -1.87804599e+00 -4.15137833e-01 -6.87962518e-01  1.39314405e+00
   9.98177395e-01  7.17957525e-01  1.75937004e-01  8.36284715e-01
   1.66690616e+00 -1.64259695e+00 -1.86154989e+00 -1.90041252e+00
   1.87681403e+00 -1.80893431e+00  2.68129760e-01]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 8.86384246e-01  4.40230547e-01 -2.28320954e-01  5.59964757e-01
  -7.79240871e-01  5.42580269e-01 -1.07340777e+00  8.17263447e-01
  -1.21679344e-01 -4.72780336e-01  6.72931805e-01  6.45754066e-01
   9.05500887e-01 -3.69016865e-01 -8.10374871e-01 -2.32439278e-02
  -7.18931578e-02 -9.82425340e-01  4.96107207e-01  1.02623515e+00
  -7.80485554e-01 -2.11353499e-01 -2.76200138e-01  6.71592153e-01
  -8.10502444e-01  1.39806064e-01 -2.40780023e-02]
 [ 7.77574219e-01 -9.81005950e-01 -9.35288845e-01  7.00782942e-01
   2.32676438e-01  1.10064157e+00 -1.57848299e+00  7.40837810e-01
   5.21714806e-02 -4.16693429e-01  8.74591974e-01  6.35667085e-01
   1.05235356e+00 -9.52757392e-01 -5.49428744e-01 -9.91510999e-02
   1.10662621e+00 -1.24406732e+00  4.57250300e-01  1.48506309e+00
  -7.98819160e-01 -4.38674994e-01  1.05943489e+00  7.43176294e-01
  -3.87527152e-01  7.99416224e-02 -3.78981749e-01]
 [ 8.84127646e-01 -7.71057059e-02  1.37609494e+00  1.29080170e+00
   8.11113598e-01  6.39528826e-01  1.48932304e+00 -1.91099418e+00
  -1.02213646e+00 -8.40685896e-01  7.35815881e-01  1.70092713e+00
  -1.46441955e+00  7.97318806e-01  1.44795581e-01  7.32789845e-01
  -8.63969254e-01  5.43768529e-02  7.99100824e-01 -1.12113515e+00
  -7.35236654e-01  5.07125394e-01 -4.32549670e-01 -5.27016040e-02
   2.70398562e-01 -7.42013487e-01 -9.29028136e-01]
 [ 8.84127646e-01 -7.71057059e-02  1.37609494e+00  1.29080170e+00
   8.11113598e-01  6.39528826e-01  1.48932304e+00 -1.91099418e+00
  -1.02213646e+00 -8.40685896e-01  7.35815881e-01  1.70092713e+00
  -1.46441955e+00  7.97318806e-01  1.44795581e-01  7.32789845e-01
  -8.63969254e-01  5.43768529e-02  7.99100824e-01 -1.12113515e+00
  -7.35236654e-01  5.07125394e-01 -4.32549670e-01 -5.27016040e-02
   2.70398562e-01 -7.42013487e-01 -9.29028136e-01]
 [ 1.08022457e-01  6.83105012e-01  6.86805201e-01  2.57081423e-01
   3.12071225e-01 -3.58628053e-01  1.32813426e+00 -3.84023459e-01
  -4.10589946e-01  2.06892439e-01  5.58907146e-01 -5.84255646e-01
  -5.55117348e-01  8.67697611e-01 -1.14924611e+00 -6.06175050e-01
   8.22013445e-02 -2.49968731e-01  1.29987196e+00 -5.68726745e-01
   1.80597719e+00  4.93726610e-01 -1.73790989e+00  5.67708908e-01
  -4.55053441e-01 -7.54318154e-01 -5.75666788e-01]
 [ 1.09566782e-01  7.29724655e-01 -8.44824853e-01  4.16149174e-01
   4.28777770e-01 -1.60844746e+00  3.67531574e-01  2.40944729e-01
   3.42758016e-01  3.40347539e+00 -4.49956331e-01 -8.36891139e-01
   7.28792159e-01  1.08883068e+00  1.85843320e+00 -1.13823902e+00
  -1.41557467e+00 -5.23337404e-01 -2.39654062e+00 -8.10036777e-01
   1.88396005e+00  5.60091238e-01 -3.44866220e-01 -2.02607921e+00
   1.34575525e+00  1.31181811e+00 -1.23697381e+00]
 [-5.92856006e-02  2.15317820e+00  1.94832621e+00 -2.40623987e+00
  -1.01351517e-01 -1.20515489e+00 -1.41984764e+00  6.19959789e-01
   1.90327488e+00 -6.56371998e-02 -1.98373282e+00 -1.06716791e+00
  -2.19838011e-01  2.15590446e+00  9.64255373e-01  6.19684401e-01
  -1.49381212e+00  2.13284481e+00 -2.27547213e+00 -5.20289404e-01
   1.63997445e-01  2.82533892e+00 -3.69439436e-01 -1.95638962e+00
  -1.04324225e+00  1.88808872e+00  8.02675909e-01]
 [-1.17811687e+00  5.39607430e-01 -2.10115438e-01  1.52164269e-01
  -9.14322682e-01  7.08738648e-01 -2.22107838e-01  4.74019546e-01
   1.29102242e+00  6.55266867e-01 -1.38469755e-01  1.19676709e+00
  -1.41102099e-03 -8.91013124e-01 -5.53813529e-01 -2.51172941e+00
  -2.70585892e-01  2.13223228e+00  1.08254601e+00 -8.77653555e-01
   1.03162051e+00 -2.47223613e-02  1.01634937e+00  1.04520624e+00
   4.35062228e-01  3.34887290e-01  2.95326216e+00]
 [ 8.84374408e-01 -9.81005950e-01 -9.35288845e-01  5.59902693e-01
  -1.80428880e+00 -9.17652996e-02 -5.31329593e-01  6.91217077e-01
  -1.00658466e-02 -4.16693429e-01  2.05933884e-01  1.05294524e-01
   1.05235356e+00 -9.52757392e-01 -4.73076672e-01  3.61464277e-02
   1.10662621e+00 -7.57412285e-01  2.53551754e-01  1.82064030e+00
  -7.98819160e-01 -2.55295471e-01  1.05943489e+00  5.92676743e-01
  -3.87527152e-01  1.84495076e-01 -3.78981749e-01]
 [ 2.59879394e-02 -8.58755943e-01 -8.41609217e-01  7.27904118e-01
  -1.59427722e+00 -1.59640538e+00 -4.67817291e-01 -5.59376073e-01
  -2.44263310e+00 -5.47076312e-01  7.04528842e-01 -6.54497045e-01
   6.31908423e-01  8.02009039e-01 -2.54822876e-01  1.77706761e+00
  -1.09766776e+00  9.27802141e-01 -4.05121101e-01  8.44623309e-01
   4.27744816e-01 -9.02034428e-01 -4.11722850e-01  8.48152350e-01
  -5.80675935e-01  9.84280960e-01  9.35776767e-01]
 [-2.14102083e+00  1.96638846e+00  5.64763991e-01 -1.45873563e+00
   1.03513218e+00 -1.85816378e+00  1.27494762e+00 -9.25540926e-01
   6.41983335e-02  3.94295998e-01 -2.84914615e+00 -1.78380253e+00
   1.29956127e+00  1.32464930e+00  2.55681953e+00 -1.46631662e+00
  -4.41521947e-01 -2.46366266e-01 -7.84820813e-01 -8.71941985e-01
  -5.22900555e-01 -1.96425227e+00 -1.45949884e-01  4.17894925e-01
   2.16654052e+00 -2.17822841e+00  1.43379104e+00]
 [-1.83627480e-01 -9.81005950e-01 -9.35288845e-01 -2.22765356e-01
   2.32676438e-01 -9.17652996e-02 -5.31329593e-01  3.19061581e-01
  -1.00658466e-02  1.32240357e-01 -4.62724207e-01 -2.66407212e-01
  -1.19425281e+00 -9.52757392e-01 -4.50171051e-01  3.61464277e-02
   1.10662621e+00  3.05917107e-01 -1.48889132e-01 -8.63977412e-01
  -7.98819160e-01  2.58167193e-01  1.05943489e+00  1.41178090e-01
  -3.87527152e-01  1.00852313e-01 -3.78981749e-01]
 [-8.99582154e-01  6.48712270e-01  1.25758949e+00 -1.08679741e+00
   1.18049170e+00  3.54564683e-01  1.77415241e-01  1.10937088e+00
  -1.48413936e-01  7.42874136e-01  5.56519518e-01  4.17676995e-01
   3.83797141e-01 -4.42016523e-01  1.12950435e+00  5.43944764e-01
  -1.20114193e+00 -4.26969630e-01 -3.28488027e-01 -2.17902824e-02
   5.86568215e-01  3.44174140e-01 -1.36022103e+00 -8.17331374e-01
   6.52078248e-01  9.19691445e-01 -4.24970278e-01]
 [ 9.91174597e-01 -9.81005950e-01 -9.35288845e-01  5.91209415e-01
  -1.80428880e+00  1.10064157e+00 -5.31329593e-01  8.02863726e-01
  -1.34540501e-01 -5.66402644e-01  8.74591974e-01  3.32270410e-01
   1.05235356e+00 -9.52757392e-01 -6.94497681e-01  3.61464277e-02
   1.10662621e+00 -1.08969056e+00  5.33325016e-01  1.48506309e+00
  -7.98819160e-01 -2.30844868e-01  1.05943489e+00  7.43176294e-01
  -1.28873236e+00  1.42673694e-01 -3.78981749e-01]
 [ 9.91174597e-01 -9.81005950e-01 -9.35288845e-01  1.84222030e-01
   2.32676438e-01  1.10064157e+00 -5.31329593e-01  7.28432627e-01
  -1.00658466e-02 -2.66984215e-01  2.05933884e-01  2.13597941e-01
   3.03484393e-01 -9.52757392e-01 -7.25038510e-01  3.61464277e-02
   1.10662621e+00 -1.19359080e+00  4.41706280e-01  1.42754230e-01
  -7.98819160e-01 -1.07894406e-02  1.05943489e+00  5.92676743e-01
  -1.28873236e+00  5.90309318e-02 -3.78981749e-01]
 [ 2.99728978e-02 -9.81005950e-01 -9.35288845e-01 -6.62317458e-02
   2.32676438e-01  1.10064157e+00 -5.31329593e-01  8.27674092e-01
  -1.34540501e-01  1.32240357e-01  2.05933884e-01 -9.83794463e-02
  -6.32600664e-01 -9.52757392e-01 -4.50171051e-01 -9.91510999e-02
   1.10662621e+00  3.88320771e-01  8.34633876e-04 -8.63977412e-01
  -7.98819160e-01  1.84815384e-01  1.05943489e+00  4.42177192e-01
  -3.87527152e-01  7.99416224e-02 -3.78981749e-01]
 [-2.11085451e+00 -2.61943519e-01  5.26928757e-01 -1.49021420e+00
   1.48836407e+00 -4.77177364e-01  1.29163671e+00 -1.68071648e+00
   1.81344265e+00 -1.23364619e+00 -4.47475418e-01 -1.65748144e+00
  -1.87804599e+00 -4.15137833e-01 -6.87962518e-01  1.39314405e+00
   9.98177395e-01  7.17957525e-01  1.75937004e-01  8.36284715e-01
   1.66690616e+00 -1.64259695e+00 -1.86154989e+00 -1.90041252e+00
   1.87681403e+00 -1.80893431e+00  2.68129760e-01]]
upper = 
[7937.7939568 7937.7939568 7937.7939568 ... 7937.7939568 7937.7939568
 7937.7939568]
upper.argmax() = 0
all predict_target = 
[17879.44770588 17879.44770588 17879.44770588 ... 17879.44770588
 17879.44770588 17879.44770588]
upper.argmax() = 0, sortnumber[0] = 0
================= config25 =================
2022年 02月 22日 星期二 15:41:36 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (151130) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (251396) - 没有那个进程
x_max = [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
 3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
 4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
 6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
 3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
 4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
 4.42164767e+00 2.33945444e+02 3.31393482e+00]
black_box_function中schafferRun(i) 中的i为[36.61969812007611, 0.07364737247333608, 0.5584392401983372, 445.5545120170226, 3.9175448574934912, 5.117223993771585, 6.470380899387955, 464.70773323136996, 41.99019054568298, 61.91462898379683, 6.519626467122063, 2021013775.6453583, 0.6571814037404378, 0.11154263017507804, 788.905781564202, 0.595949187598856, 0.31619690734200423, 1249572407.3437846, 2018422509.4722152, 33.2523732448466, 0.4383135336681899, 748.5078024204117, 0.9892728972986514, 20.703578148097737, 4.421647669194604, 233.9454438300806, 3.3139348234884003]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 36.61969812007611
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07364737247333608
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.5584392401983372
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 445.5545120170226
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9175448574934912
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.117223993771585
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 6.470380899387955
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 464.70773323136996
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 41.99019054568298
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 61.91462898379683
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 6.519626467122063
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2021013775.6453583
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6571814037404378
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.11154263017507804
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 788.905781564202
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.595949187598856
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.31619690734200423
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1249572407.3437846
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 2018422509.4722152
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 33.2523732448466
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.4383135336681899
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 748.5078024204117
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9892728972986514
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 20.703578148097737
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.421647669194604
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 233.9454438300806
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.3139348234884003
configNum = 25	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 25 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 36.61969812007611, 'spark.broadcast.checksum': 0.07364737247333608, 'spark.broadcast.compress': 0.5584392401983372, 'spark.default.parallelism': 445.5545120170226, 'spark.executor.cores': 3.9175448574934912, 'spark.executor.instances': 5.117223993771585, 'spark.executor.memory': 6.470380899387955, 'spark.executor.memoryOverhead': 464.70773323136996, 'spark.kryoserializer.buffer': 41.99019054568298, 'spark.kryoserializer.buffer.max': 61.91462898379683, 'spark.locality.wait': 6.519626467122063, 'spark.maxRemoteBlockSizeFetchToMem': 2021013775.6453583, 'spark.memory.fraction': 0.6571814037404378, 'spark.memory.offHeap.enabled': 0.11154263017507804, 'spark.memory.offHeap.size': 788.905781564202, 'spark.memory.storageFraction': 0.595949187598856, 'spark.rdd.compress': 0.31619690734200423, 'spark.reducer.maxBlocksInFlightPerAddress': 1249572407.3437846, 'spark.reducer.maxReqsInFlight': 2018422509.4722152, 'spark.reducer.maxSizeInFlight': 33.2523732448466, 'spark.scheduler.mode': 0.4383135336681899, 'spark.scheduler.revive.interval': 748.5078024204117, 'spark.shuffle.compress': 0.9892728972986514, 'spark.shuffle.file.buffer': 20.703578148097737, 'spark.shuffle.io.numConnectionsPerPeer': 4.421647669194604, 'spark.shuffle.sort.bypassMergeThreshold': 233.9454438300806, 'spark.storage.memoryMapThreshold': 3.3139348234884003} target = -178.891
x_probe = {'spark.broadcast.blockSize': 36.61969812007611, 'spark.broadcast.checksum': 0.07364737247333608, 'spark.broadcast.compress': 0.5584392401983372, 'spark.default.parallelism': 445.5545120170226, 'spark.executor.cores': 3.9175448574934912, 'spark.executor.instances': 5.117223993771585, 'spark.executor.memory': 6.470380899387955, 'spark.executor.memoryOverhead': 464.70773323136996, 'spark.kryoserializer.buffer': 41.99019054568298, 'spark.kryoserializer.buffer.max': 61.91462898379683, 'spark.locality.wait': 6.519626467122063, 'spark.maxRemoteBlockSizeFetchToMem': 2021013775.6453583, 'spark.memory.fraction': 0.6571814037404378, 'spark.memory.offHeap.enabled': 0.11154263017507804, 'spark.memory.offHeap.size': 788.905781564202, 'spark.memory.storageFraction': 0.595949187598856, 'spark.rdd.compress': 0.31619690734200423, 'spark.reducer.maxBlocksInFlightPerAddress': 1249572407.3437846, 'spark.reducer.maxReqsInFlight': 2018422509.4722152, 'spark.reducer.maxSizeInFlight': 33.2523732448466, 'spark.scheduler.mode': 0.4383135336681899, 'spark.scheduler.revive.interval': 748.5078024204117, 'spark.shuffle.compress': 0.9892728972986514, 'spark.shuffle.file.buffer': 20.703578148097737, 'spark.shuffle.io.numConnectionsPerPeer': 4.421647669194604, 'spark.shuffle.sort.bypassMergeThreshold': 233.9454438300806, 'spark.storage.memoryMapThreshold': 3.3139348234884003}
target = -178.891
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (18, 27)
before probe, target = (18,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [4.36883181e+01 3.93887592e-01 1.71377673e-01 4.23952021e+02
  1.43690786e+00 6.67133457e+00 4.29529748e+00 6.58491389e+02
  1.07905272e+02 7.24808481e+01 8.48493312e+00 2.00660456e+09
  8.23714321e-01 1.61230903e-02 2.20425715e+02 5.31682574e-01
  5.96947713e-01 1.61967190e+09 2.06608150e+09 6.09592459e+01
  6.64114333e-01 6.74860321e+02 9.85825731e-01 4.10068495e+01
  2.91276590e+00 2.72192121e+02 3.35595803e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.49626877e+01 3.16666694e-02 2.21389759e-02 4.60732610e+02
  1.10310023e+00 4.73814876e+00 4.06065234e+00 5.75187853e+02
  4.79146575e+01 4.83872774e+01 9.74566504e+00 1.69217295e+09
  8.57542382e-01 4.58216750e-01 2.59585183e+02 8.48674213e-01
  3.54895498e-01 1.44134746e+09 1.65755319e+09 6.60915278e+01
  4.45018063e-01 6.03098323e+02 5.16018707e-01 3.96975174e+01
  1.78567724e+00 3.03247703e+02 2.53500206e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
  2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
  8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
  8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
  3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
  5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
  3.15357234e+00 3.00158875e+02 1.98128633e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.52000000e+02
  1.00000000e+00 7.00000000e+00 4.00000000e+00 6.85000000e+02
  8.50000000e+01 4.80000000e+01 1.00000000e+01 1.85977242e+09
  8.79999995e-01 0.00000000e+00 2.02000000e+02 7.20000029e-01
  1.00000000e+00 1.14264333e+09 1.91525990e+09 6.80000000e+01
  0.00000000e+00 6.58000000e+02 1.00000000e+00 3.90000000e+01
  1.00000000e+00 2.63000000e+02 2.00000000e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.26000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.79000000e+02
  8.70000000e+01 5.40000000e+01 9.00000000e+00 1.83961626e+09
  8.39999974e-01 0.00000000e+00 1.98000000e+02 7.20000029e-01
  1.00000000e+00 1.12726016e+09 1.89010048e+09 6.40000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 3.80000000e+01
  1.00000000e+00 2.59000000e+02 2.00000000e+00]
 [5.50000000e+01 0.00000000e+00 0.00000000e+00 4.10000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.87000000e+02
  8.50000000e+01 6.20000000e+01 9.00000000e+00 1.78662784e+09
  7.90000021e-01 0.00000000e+00 2.34000000e+02 7.09999979e-01
  1.00000000e+00 1.36147341e+09 1.76903270e+09 6.10000000e+01
  0.00000000e+00 6.92000000e+02 1.00000000e+00 3.70000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
  2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
  1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
  7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
  9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
  8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
  4.51257001e+00 1.69669367e+02 2.26332288e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]]
标准化后的train_x = 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
train_y = 
[   -220.801    -223.547    -231.466    -231.466    -247.247    -307.435
    -316.038    -335.557    -379.414    -477.782 -100000.    -100000.
 -100000.       -337.51     -217.34     -222.605    -202.403    -178.891]
测试：每一列进行标准化，标准化后的train_x = 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
upper = 
[7943.33944429 7943.33944429 7943.33944429 ... 7943.33944429 7943.33944429
 7943.33944429]
upper.argmax() = 0
all predict_target = 
[16896.08344444 16896.08344444 16896.08344444 ... 16896.08344444
 16896.08344444 16896.08344444]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
 2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
 9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
 8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
 2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
 9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
 3.92329382e+00 3.18911325e+02 1.65086553e+00]
probe说：以前见过你啦！params = {'spark.broadcast.blockSize': 55.745259772165355, 'spark.broadcast.checksum': 0.44313404559907554, 'spark.broadcast.compress': 0.02137903608233227, 'spark.default.parallelism': 440.8164438727832, 'spark.executor.cores': 2.0962713197806715, 'spark.executor.instances': 4.7280497967472135, 'spark.executor.memory': 4.858385383285416, 'spark.executor.memoryOverhead': 639.7028860084706, 'spark.kryoserializer.buffer': 92.66900730894112, 'spark.kryoserializer.buffer.max': 127.55177738996515, 'spark.locality.wait': 8.01909477576675, 'spark.maxRemoteBlockSizeFetchToMem': 1661193861.8035913, 'spark.memory.fraction': 0.8627173196467961, 'spark.memory.offHeap.enabled': 0.5331136009566859, 'spark.memory.offHeap.size': 536.3630124572771, 'spark.memory.storageFraction': 0.6331993788741832, 'spark.rdd.compress': 0.2618574637033285, 'spark.reducer.maxBlocksInFlightPerAddress': 1226495937.3311806, 'spark.reducer.maxReqsInFlight': 1110689413.5398045, 'spark.reducer.maxSizeInFlight': 61.16073986064795, 'spark.scheduler.mode': 0.9733574694681935, 'spark.scheduler.revive.interval': 722.6966542557261, 'spark.shuffle.compress': 0.538013192946581, 'spark.shuffle.file.buffer': 20.59957629896343, 'spark.shuffle.io.numConnectionsPerPeer': 3.923293815480439, 'spark.shuffle.sort.bypassMergeThreshold': 318.91132488380333, 'spark.storage.memoryMapThreshold': 1.6508655253289888} target = -307.435
x_probe = {'spark.broadcast.blockSize': 55.745259772165355, 'spark.broadcast.checksum': 0.44313404559907554, 'spark.broadcast.compress': 0.02137903608233227, 'spark.default.parallelism': 440.8164438727832, 'spark.executor.cores': 2.0962713197806715, 'spark.executor.instances': 4.7280497967472135, 'spark.executor.memory': 4.858385383285416, 'spark.executor.memoryOverhead': 639.7028860084706, 'spark.kryoserializer.buffer': 92.66900730894112, 'spark.kryoserializer.buffer.max': 127.55177738996515, 'spark.locality.wait': 8.01909477576675, 'spark.maxRemoteBlockSizeFetchToMem': 1661193861.8035913, 'spark.memory.fraction': 0.8627173196467961, 'spark.memory.offHeap.enabled': 0.5331136009566859, 'spark.memory.offHeap.size': 536.3630124572771, 'spark.memory.storageFraction': 0.6331993788741832, 'spark.rdd.compress': 0.2618574637033285, 'spark.reducer.maxBlocksInFlightPerAddress': 1226495937.3311806, 'spark.reducer.maxReqsInFlight': 1110689413.5398045, 'spark.reducer.maxSizeInFlight': 61.16073986064795, 'spark.scheduler.mode': 0.9733574694681935, 'spark.scheduler.revive.interval': 722.6966542557261, 'spark.shuffle.compress': 0.538013192946581, 'spark.shuffle.file.buffer': 20.59957629896343, 'spark.shuffle.io.numConnectionsPerPeer': 3.923293815480439, 'spark.shuffle.sort.bypassMergeThreshold': 318.91132488380333, 'spark.storage.memoryMapThreshold': 1.6508655253289888}
target = -307.435
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (18, 27)
before probe, target = (18,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [4.36883181e+01 3.93887592e-01 1.71377673e-01 4.23952021e+02
  1.43690786e+00 6.67133457e+00 4.29529748e+00 6.58491389e+02
  1.07905272e+02 7.24808481e+01 8.48493312e+00 2.00660456e+09
  8.23714321e-01 1.61230903e-02 2.20425715e+02 5.31682574e-01
  5.96947713e-01 1.61967190e+09 2.06608150e+09 6.09592459e+01
  6.64114333e-01 6.74860321e+02 9.85825731e-01 4.10068495e+01
  2.91276590e+00 2.72192121e+02 3.35595803e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.49626877e+01 3.16666694e-02 2.21389759e-02 4.60732610e+02
  1.10310023e+00 4.73814876e+00 4.06065234e+00 5.75187853e+02
  4.79146575e+01 4.83872774e+01 9.74566504e+00 1.69217295e+09
  8.57542382e-01 4.58216750e-01 2.59585183e+02 8.48674213e-01
  3.54895498e-01 1.44134746e+09 1.65755319e+09 6.60915278e+01
  4.45018063e-01 6.03098323e+02 5.16018707e-01 3.96975174e+01
  1.78567724e+00 3.03247703e+02 2.53500206e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
  2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
  8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
  8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
  3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
  5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
  3.15357234e+00 3.00158875e+02 1.98128633e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.52000000e+02
  1.00000000e+00 7.00000000e+00 4.00000000e+00 6.85000000e+02
  8.50000000e+01 4.80000000e+01 1.00000000e+01 1.85977242e+09
  8.79999995e-01 0.00000000e+00 2.02000000e+02 7.20000029e-01
  1.00000000e+00 1.14264333e+09 1.91525990e+09 6.80000000e+01
  0.00000000e+00 6.58000000e+02 1.00000000e+00 3.90000000e+01
  1.00000000e+00 2.63000000e+02 2.00000000e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.26000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.79000000e+02
  8.70000000e+01 5.40000000e+01 9.00000000e+00 1.83961626e+09
  8.39999974e-01 0.00000000e+00 1.98000000e+02 7.20000029e-01
  1.00000000e+00 1.12726016e+09 1.89010048e+09 6.40000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 3.80000000e+01
  1.00000000e+00 2.59000000e+02 2.00000000e+00]
 [5.50000000e+01 0.00000000e+00 0.00000000e+00 4.10000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.87000000e+02
  8.50000000e+01 6.20000000e+01 9.00000000e+00 1.78662784e+09
  7.90000021e-01 0.00000000e+00 2.34000000e+02 7.09999979e-01
  1.00000000e+00 1.36147341e+09 1.76903270e+09 6.10000000e+01
  0.00000000e+00 6.92000000e+02 1.00000000e+00 3.70000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
  2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
  1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
  7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
  9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
  8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
  4.51257001e+00 1.69669367e+02 2.26332288e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]]
标准化后的train_x = 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
train_y = 
[   -220.801    -223.547    -231.466    -231.466    -247.247    -307.435
    -316.038    -335.557    -379.414    -477.782 -100000.    -100000.
 -100000.       -337.51     -217.34     -222.605    -202.403    -178.891]
测试：每一列进行标准化，标准化后的train_x = 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
upper = 
[7943.33944429 7943.33944429 7943.33944429 ... 7943.33944429 7943.33944429
 7943.33944429]
upper.argmax() = 0
all predict_target = 
[16896.08344444 16896.08344444 16896.08344444 ... 16896.08344444
 16896.08344444 16896.08344444]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
 2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
 8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
 8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
 5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
 1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
 4.83405782e+00 1.52008826e+02 2.73765423e+00]
probe说：以前见过你啦！params = {'spark.broadcast.blockSize': 34.67237929724381, 'spark.broadcast.checksum': 0.7634696002969796, 'spark.broadcast.compress': 0.35450219459517185, 'spark.default.parallelism': 321.04122077612624, 'spark.executor.cores': 2.3939467033727153, 'spark.executor.instances': 4.5186277200035905, 'spark.executor.memory': 5.724940422326447, 'spark.executor.memoryOverhead': 545.6707675150069, 'spark.kryoserializer.buffer': 88.1932417958986, 'spark.kryoserializer.buffer.max': 67.25129282527449, 'spark.locality.wait': 4.431028096003187, 'spark.maxRemoteBlockSizeFetchToMem': 1500363825.8170424, 'spark.memory.fraction': 0.8932043231121947, 'spark.memory.offHeap.enabled': 0.5946921902029674, 'spark.memory.offHeap.size': 627.8322173121403, 'spark.memory.storageFraction': 0.6089506548339559, 'spark.rdd.compress': 0.5469218901471669, 'spark.reducer.maxBlocksInFlightPerAddress': 1267503482.3179002, 'spark.reducer.maxReqsInFlight': 1553283837.9463983, 'spark.reducer.maxSizeInFlight': 60.976266047481246, 'spark.scheduler.mode': 0.1001079156264395, 'spark.scheduler.revive.interval': 516.2114807486785, 'spark.shuffle.compress': 0.6034526651475726, 'spark.shuffle.file.buffer': 36.83865554831312, 'spark.shuffle.io.numConnectionsPerPeer': 4.834057821225401, 'spark.shuffle.sort.bypassMergeThreshold': 152.00882584458364, 'spark.storage.memoryMapThreshold': 2.737654233532858} target = -100000.0
x_probe = {'spark.broadcast.blockSize': 34.67237929724381, 'spark.broadcast.checksum': 0.7634696002969796, 'spark.broadcast.compress': 0.35450219459517185, 'spark.default.parallelism': 321.04122077612624, 'spark.executor.cores': 2.3939467033727153, 'spark.executor.instances': 4.5186277200035905, 'spark.executor.memory': 5.724940422326447, 'spark.executor.memoryOverhead': 545.6707675150069, 'spark.kryoserializer.buffer': 88.1932417958986, 'spark.kryoserializer.buffer.max': 67.25129282527449, 'spark.locality.wait': 4.431028096003187, 'spark.maxRemoteBlockSizeFetchToMem': 1500363825.8170424, 'spark.memory.fraction': 0.8932043231121947, 'spark.memory.offHeap.enabled': 0.5946921902029674, 'spark.memory.offHeap.size': 627.8322173121403, 'spark.memory.storageFraction': 0.6089506548339559, 'spark.rdd.compress': 0.5469218901471669, 'spark.reducer.maxBlocksInFlightPerAddress': 1267503482.3179002, 'spark.reducer.maxReqsInFlight': 1553283837.9463983, 'spark.reducer.maxSizeInFlight': 60.976266047481246, 'spark.scheduler.mode': 0.1001079156264395, 'spark.scheduler.revive.interval': 516.2114807486785, 'spark.shuffle.compress': 0.6034526651475726, 'spark.shuffle.file.buffer': 36.83865554831312, 'spark.shuffle.io.numConnectionsPerPeer': 4.834057821225401, 'spark.shuffle.sort.bypassMergeThreshold': 152.00882584458364, 'spark.storage.memoryMapThreshold': 2.737654233532858}
target = -100000.0
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (18, 27)
before probe, target = (18,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [4.36883181e+01 3.93887592e-01 1.71377673e-01 4.23952021e+02
  1.43690786e+00 6.67133457e+00 4.29529748e+00 6.58491389e+02
  1.07905272e+02 7.24808481e+01 8.48493312e+00 2.00660456e+09
  8.23714321e-01 1.61230903e-02 2.20425715e+02 5.31682574e-01
  5.96947713e-01 1.61967190e+09 2.06608150e+09 6.09592459e+01
  6.64114333e-01 6.74860321e+02 9.85825731e-01 4.10068495e+01
  2.91276590e+00 2.72192121e+02 3.35595803e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.49626877e+01 3.16666694e-02 2.21389759e-02 4.60732610e+02
  1.10310023e+00 4.73814876e+00 4.06065234e+00 5.75187853e+02
  4.79146575e+01 4.83872774e+01 9.74566504e+00 1.69217295e+09
  8.57542382e-01 4.58216750e-01 2.59585183e+02 8.48674213e-01
  3.54895498e-01 1.44134746e+09 1.65755319e+09 6.60915278e+01
  4.45018063e-01 6.03098323e+02 5.16018707e-01 3.96975174e+01
  1.78567724e+00 3.03247703e+02 2.53500206e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
  2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
  8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
  8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
  3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
  5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
  3.15357234e+00 3.00158875e+02 1.98128633e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.52000000e+02
  1.00000000e+00 7.00000000e+00 4.00000000e+00 6.85000000e+02
  8.50000000e+01 4.80000000e+01 1.00000000e+01 1.85977242e+09
  8.79999995e-01 0.00000000e+00 2.02000000e+02 7.20000029e-01
  1.00000000e+00 1.14264333e+09 1.91525990e+09 6.80000000e+01
  0.00000000e+00 6.58000000e+02 1.00000000e+00 3.90000000e+01
  1.00000000e+00 2.63000000e+02 2.00000000e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.26000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.79000000e+02
  8.70000000e+01 5.40000000e+01 9.00000000e+00 1.83961626e+09
  8.39999974e-01 0.00000000e+00 1.98000000e+02 7.20000029e-01
  1.00000000e+00 1.12726016e+09 1.89010048e+09 6.40000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 3.80000000e+01
  1.00000000e+00 2.59000000e+02 2.00000000e+00]
 [5.50000000e+01 0.00000000e+00 0.00000000e+00 4.10000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.87000000e+02
  8.50000000e+01 6.20000000e+01 9.00000000e+00 1.78662784e+09
  7.90000021e-01 0.00000000e+00 2.34000000e+02 7.09999979e-01
  1.00000000e+00 1.36147341e+09 1.76903270e+09 6.10000000e+01
  0.00000000e+00 6.92000000e+02 1.00000000e+00 3.70000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
  2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
  1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
  7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
  9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
  8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
  4.51257001e+00 1.69669367e+02 2.26332288e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]]
标准化后的train_x = 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
train_y = 
[   -220.801    -223.547    -231.466    -231.466    -247.247    -307.435
    -316.038    -335.557    -379.414    -477.782 -100000.    -100000.
 -100000.       -337.51     -217.34     -222.605    -202.403    -178.891]
测试：每一列进行标准化，标准化后的train_x = 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
upper = 
[7943.33944429 7943.33944429 7943.33944429 ... 7943.33944429 7943.33944429
 7943.33944429]
upper.argmax() = 0
all predict_target = 
[16896.08344444 16896.08344444 16896.08344444 ... 16896.08344444
 16896.08344444 16896.08344444]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
 1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
 1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
 8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
 2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
 3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
 1.27240201e+00 3.46469984e+02 2.48084061e+00]
probe说：以前见过你啦！params = {'spark.broadcast.blockSize': 54.16424774738462, 'spark.broadcast.checksum': 0.8118541264455323, 'spark.broadcast.compress': 0.6814745734261551, 'spark.default.parallelism': 260.51081801876865, 'spark.executor.cores': 1.8360168603040026, 'spark.executor.instances': 5.066267042338279, 'spark.executor.memory': 3.1514919852675307, 'spark.executor.memoryOverhead': 670.2558455338509, 'spark.kryoserializer.buffer': 117.74265573435449, 'spark.kryoserializer.buffer.max': 58.03476197397718, 'spark.locality.wait': 5.72528197697442, 'spark.maxRemoteBlockSizeFetchToMem': 1622082048.4161954, 'spark.memory.fraction': 0.8120472839611643, 'spark.memory.offHeap.enabled': 0.8117552902289551, 'spark.memory.offHeap.size': 419.250561812153, 'spark.memory.storageFraction': 0.7631302250942644, 'spark.rdd.compress': 0.238960640172461, 'spark.reducer.maxBlocksInFlightPerAddress': 1619762587.5562062, 'spark.reducer.maxReqsInFlight': 1143936034.705254, 'spark.reducer.maxSizeInFlight': 62.02416968034852, 'spark.scheduler.mode': 0.34932607611651456, 'spark.scheduler.revive.interval': 907.9884182674773, 'spark.shuffle.compress': 0.5299290994225245, 'spark.shuffle.file.buffer': 21.062631417436855, 'spark.shuffle.io.numConnectionsPerPeer': 1.2724020052767182, 'spark.shuffle.sort.bypassMergeThreshold': 346.46998436947644, 'spark.storage.memoryMapThreshold': 2.4808406090686295} target = -316.038
x_probe = {'spark.broadcast.blockSize': 54.16424774738462, 'spark.broadcast.checksum': 0.8118541264455323, 'spark.broadcast.compress': 0.6814745734261551, 'spark.default.parallelism': 260.51081801876865, 'spark.executor.cores': 1.8360168603040026, 'spark.executor.instances': 5.066267042338279, 'spark.executor.memory': 3.1514919852675307, 'spark.executor.memoryOverhead': 670.2558455338509, 'spark.kryoserializer.buffer': 117.74265573435449, 'spark.kryoserializer.buffer.max': 58.03476197397718, 'spark.locality.wait': 5.72528197697442, 'spark.maxRemoteBlockSizeFetchToMem': 1622082048.4161954, 'spark.memory.fraction': 0.8120472839611643, 'spark.memory.offHeap.enabled': 0.8117552902289551, 'spark.memory.offHeap.size': 419.250561812153, 'spark.memory.storageFraction': 0.7631302250942644, 'spark.rdd.compress': 0.238960640172461, 'spark.reducer.maxBlocksInFlightPerAddress': 1619762587.5562062, 'spark.reducer.maxReqsInFlight': 1143936034.705254, 'spark.reducer.maxSizeInFlight': 62.02416968034852, 'spark.scheduler.mode': 0.34932607611651456, 'spark.scheduler.revive.interval': 907.9884182674773, 'spark.shuffle.compress': 0.5299290994225245, 'spark.shuffle.file.buffer': 21.062631417436855, 'spark.shuffle.io.numConnectionsPerPeer': 1.2724020052767182, 'spark.shuffle.sort.bypassMergeThreshold': 346.46998436947644, 'spark.storage.memoryMapThreshold': 2.4808406090686295}
target = -316.038
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (18, 27)
before probe, target = (18,)
标准化前的train_x = 
[[6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
  1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
  8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
  8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
  6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
  6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
  1.53065596e+00 2.62862863e+02 2.14441758e+00]
 [6.20000000e+01 0.00000000e+00 0.00000000e+00 4.59000000e+02
  2.00000000e+00 7.00000000e+00 3.00000000e+00 6.80000000e+02
  8.80000000e+01 5.10000000e+01 1.00000000e+01 1.91130342e+09
  8.79999995e-01 0.00000000e+00 2.21000000e+02 7.09999979e-01
  1.00000000e+00 1.11978675e+09 1.89436902e+09 6.80000000e+01
  0.00000000e+00 6.41000000e+02 1.00000000e+00 3.90000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [6.29976895e+01 2.34139128e-01 5.46241176e-01 4.96692784e+02
  2.28397007e+00 6.61329245e+00 5.92966250e+00 4.66231936e+02
  7.07385271e+01 4.25036800e+01 9.79245582e+00 2.09223462e+09
  7.45569332e-01 4.56992004e-01 3.11924098e+02 7.71490024e-01
  4.23289261e-01 1.31203064e+09 1.98824461e+09 6.02336853e+01
  2.30688037e-02 7.18364177e+02 5.09167102e-01 3.37117590e+01
  2.73005095e+00 2.20692111e+02 1.77617490e+00]
 [5.57307998e+01 4.31058064e-01 3.83343763e-01 4.30654553e+02
  2.03897700e+00 5.77619824e+00 5.77573206e+00 5.89323284e+02
  8.05645678e+01 6.34959416e+01 9.52788304e+00 1.70410324e+09
  7.94138707e-01 4.75369805e-01 1.42440591e+02 6.72525052e-01
  7.00193758e-01 1.26697011e+09 2.12576138e+09 6.18798293e+01
  9.45063974e-01 7.17268189e+02 7.97298558e-02 3.78341003e+01
  1.92507113e+00 2.20103672e+02 1.91996484e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [5.41642477e+01 8.11854126e-01 6.81474573e-01 2.60510818e+02
  1.83601686e+00 5.06626704e+00 3.15149199e+00 6.70255846e+02
  1.17742656e+02 5.80347620e+01 5.72528198e+00 1.62208205e+09
  8.12047284e-01 8.11755290e-01 4.19250562e+02 7.63130225e-01
  2.38960640e-01 1.61976259e+09 1.14393603e+09 6.20241697e+01
  3.49326076e-01 9.07988418e+02 5.29929099e-01 2.10626314e+01
  1.27240201e+00 3.46469984e+02 2.48084061e+00]
 [4.36883181e+01 3.93887592e-01 1.71377673e-01 4.23952021e+02
  1.43690786e+00 6.67133457e+00 4.29529748e+00 6.58491389e+02
  1.07905272e+02 7.24808481e+01 8.48493312e+00 2.00660456e+09
  8.23714321e-01 1.61230903e-02 2.20425715e+02 5.31682574e-01
  5.96947713e-01 1.61967190e+09 2.06608150e+09 6.09592459e+01
  6.64114333e-01 6.74860321e+02 9.85825731e-01 4.10068495e+01
  2.91276590e+00 2.72192121e+02 3.35595803e+00]
 [6.30000000e+01 0.00000000e+00 0.00000000e+00 4.50000000e+02
  1.00000000e+00 6.00000000e+00 4.00000000e+00 6.76000000e+02
  8.70000000e+01 5.10000000e+01 9.00000000e+00 1.82122125e+09
  8.79999995e-01 0.00000000e+00 2.31000000e+02 7.20000029e-01
  1.00000000e+00 1.19183949e+09 1.83843136e+09 6.90000000e+01
  0.00000000e+00 6.56000000e+02 1.00000000e+00 3.80000000e+01
  2.00000000e+00 2.65000000e+02 2.00000000e+00]
 [5.49626877e+01 3.16666694e-02 2.21389759e-02 4.60732610e+02
  1.10310023e+00 4.73814876e+00 4.06065234e+00 5.75187853e+02
  4.79146575e+01 4.83872774e+01 9.74566504e+00 1.69217295e+09
  8.57542382e-01 4.58216750e-01 2.59585183e+02 8.48674213e-01
  3.54895498e-01 1.44134746e+09 1.65755319e+09 6.60915278e+01
  4.45018063e-01 6.03098323e+02 5.16018707e-01 3.96975174e+01
  1.78567724e+00 3.03247703e+02 2.53500206e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [5.30000000e+01 0.00000000e+00 0.00000000e+00 4.00000000e+02
  2.00000000e+00 6.00000000e+00 4.00000000e+00 6.46000000e+02
  8.70000000e+01 6.20000000e+01 8.00000000e+00 1.75808883e+09
  7.59999990e-01 0.00000000e+00 2.34000000e+02 7.20000029e-01
  1.00000000e+00 1.34927296e+09 1.72791706e+09 6.10000000e+01
  0.00000000e+00 6.98000000e+02 1.00000000e+00 3.50000000e+01
  2.00000000e+00 2.61000000e+02 2.00000000e+00]
 [4.62963164e+01 4.22149242e-01 5.18235199e-01 3.44802138e+02
  2.46530753e+00 6.37431014e+00 4.67683000e+00 7.09707991e+02
  8.47770882e+01 7.42363967e+01 9.52431226e+00 1.87427847e+09
  8.44289791e-01 1.33368189e-01 4.40893586e+02 7.57532191e-01
  3.24612942e-01 1.24076387e+09 1.67859740e+09 6.35096672e+01
  5.02641867e-01 7.05035160e+02 2.03981890e-01 2.86311473e+01
  3.15357234e+00 3.00158875e+02 1.98128633e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.52000000e+02
  1.00000000e+00 7.00000000e+00 4.00000000e+00 6.85000000e+02
  8.50000000e+01 4.80000000e+01 1.00000000e+01 1.85977242e+09
  8.79999995e-01 0.00000000e+00 2.02000000e+02 7.20000029e-01
  1.00000000e+00 1.14264333e+09 1.91525990e+09 6.80000000e+01
  0.00000000e+00 6.58000000e+02 1.00000000e+00 3.90000000e+01
  1.00000000e+00 2.63000000e+02 2.00000000e+00]
 [6.40000000e+01 0.00000000e+00 0.00000000e+00 4.26000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.79000000e+02
  8.70000000e+01 5.40000000e+01 9.00000000e+00 1.83961626e+09
  8.39999974e-01 0.00000000e+00 1.98000000e+02 7.20000029e-01
  1.00000000e+00 1.12726016e+09 1.89010048e+09 6.40000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 3.80000000e+01
  1.00000000e+00 2.59000000e+02 2.00000000e+00]
 [5.50000000e+01 0.00000000e+00 0.00000000e+00 4.10000000e+02
  2.00000000e+00 7.00000000e+00 4.00000000e+00 6.87000000e+02
  8.50000000e+01 6.20000000e+01 9.00000000e+00 1.78662784e+09
  7.90000021e-01 0.00000000e+00 2.34000000e+02 7.09999979e-01
  1.00000000e+00 1.36147341e+09 1.76903270e+09 6.10000000e+01
  0.00000000e+00 6.92000000e+02 1.00000000e+00 3.70000000e+01
  2.00000000e+00 2.60000000e+02 2.00000000e+00]
 [3.49548350e+01 1.86260211e-01 3.45560727e-01 3.19030242e+02
  2.61645020e+00 5.67677806e+00 5.74087800e+00 4.84794959e+02
  1.16299274e+02 3.46292089e+01 8.02280506e+00 1.52181908e+09
  7.23475931e-01 1.40386939e-01 2.02855925e+02 8.20297827e-01
  9.68261576e-01 1.41027847e+09 1.81711757e+09 6.60666793e+01
  8.94606664e-01 5.42522106e+02 3.90547832e-02 2.14345734e+01
  4.51257001e+00 1.69669367e+02 2.26332288e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]]
标准化后的train_x = 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
train_y = 
[   -220.801    -223.547    -231.466    -231.466    -247.247    -307.435
    -316.038    -335.557    -379.414    -477.782 -100000.    -100000.
 -100000.       -337.51     -217.34     -222.605    -202.403    -178.891]
测试：每一列进行标准化，标准化后的train_x = 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[ 9.30550458e-01  4.86307430e-01 -3.00024860e-01  5.44545054e-01
  -7.43329389e-01  6.02208126e-01 -1.09975670e+00  8.65905615e-01
   2.95988939e-02 -4.93578574e-01  7.33669922e-01  5.65952957e-01
   8.94364875e-01 -3.47015978e-01 -7.83616596e-01  6.52446097e-02
  -3.52372030e-03 -9.86207748e-01  4.48351262e-01  6.30239817e-01
  -8.22690277e-01 -2.62015636e-01 -3.33285019e-01  7.28354483e-01
  -8.62590198e-01  1.69420501e-01 -1.55808706e-01]
 [ 8.28663064e-01 -9.56805334e-01 -9.89496940e-01  6.88487704e-01
   2.02670404e-03  1.15663325e+00 -1.56747128e+00  7.94322269e-01
   1.78721576e-01 -4.35891863e-01  9.29988776e-01  5.56016976e-01
   1.01611233e+00 -9.43123082e-01 -5.83290503e-01 -7.59678702e-03
   1.16120992e+00 -1.25443088e+00  4.09255101e-01  8.11933034e-01
  -8.41468236e-01 -4.91099269e-01  1.00250590e+00  7.94918753e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 9.28437426e-01 -3.89918794e-02  1.26468547e+00  1.29159776e+00
   4.28090827e-01  6.98524992e-01  1.27340774e+00 -1.68949093e+00
  -7.42779263e-01 -8.71978151e-01  7.94888406e-01  1.60533037e+00
  -1.07040560e+00  8.44028582e-01 -5.03404711e-02  7.90743328e-01
  -7.86334509e-01  7.66734239e-02  7.53210508e-01 -2.20106445e-01
  -7.76344678e-01  4.62032719e-01 -4.89652801e-01  5.48521674e-02
   1.61752252e-01 -7.32565795e-01 -9.28784258e-01]
 [ 2.01709037e-01  7.32920319e-01  5.92454050e-01  2.34941365e-01
   6.05071626e-02 -2.93128169e-01  1.12414217e+00 -2.59268333e-01
  -2.18217726e-01  2.05480963e-01  6.22665402e-01 -6.45643849e-01
  -3.16553240e-01  9.15898366e-01 -1.04376513e+00 -4.94142810e-01
   1.48768262e-01 -2.35327451e-01  1.25706506e+00 -1.35589989e-03
   1.82646067e+00  4.48530070e-01 -1.79516539e+00  6.31756100e-01
  -5.25740199e-01 -7.45151862e-01 -6.26955823e-01]
 [ 2.03155110e-01  7.80257551e-01 -9.01271721e-01  3.97538500e-01
   1.46470643e-01 -1.53480409e+00  2.34595704e-01  3.26102172e-01
   4.27975748e-01  3.49324219e+00 -3.59476595e-01 -8.94497459e-01
   7.47865403e-01  1.14171615e+00  1.26520436e+00 -1.00471753e+00
  -1.33148752e+00 -5.15572244e-01 -2.46210753e+00 -9.69132818e-02
   1.90633361e+00  5.15409140e-01 -4.01959116e-01 -1.78014140e+00
   1.18084049e+00  1.36823584e+00 -1.19182027e+00]
 [ 4.50453311e-02  2.22562148e+00  1.82275535e+00 -2.48747353e+00
  -2.44010961e-01 -1.13413927e+00 -1.42057026e+00  6.81103021e-01
   1.76652827e+00 -7.48222215e-02 -1.85262838e+00 -1.12132705e+00
  -3.85916120e-02  2.23139596e+00  5.78751749e-01  6.82206041e-01
  -1.40880979e+00  2.20742167e+00 -2.34029358e+00  1.78250078e-02
   1.44684197e-01  2.79821644e+00 -4.26535200e-01 -1.71533883e+00
  -1.08315181e+00  1.95768545e+00  5.50374472e-01]
 [-1.00260446e+00  5.87213963e-01 -2.82269889e-01  1.27696315e-01
  -8.42827688e-01  7.67283862e-01 -3.11427813e-01  5.44409481e-01
   1.24136120e+00  6.66644675e-01 -5.62402759e-02  1.10871747e+00
   1.42494173e-01 -8.80070759e-01 -5.86656664e-01 -2.32273473e+00
  -1.99892247e-01  2.20679373e+00  1.03840096e+00 -1.23689136e-01
   1.03333588e+00 -7.39377829e-02  9.59415353e-01  1.07576871e+00
   3.17799828e-01  3.68963130e-01  2.38732718e+00]
 [ 9.28668489e-01 -9.56805334e-01 -9.89496940e-01  5.44481613e-01
  -1.49835721e+00 -2.80042199e-02 -5.97776294e-01  7.47845482e-01
   1.25336743e-01 -4.35891863e-01  2.79041242e-01  3.35839451e-02
   1.01611233e+00 -9.43123082e-01 -5.24675675e-01  1.22236279e-01
   1.16120992e+00 -7.55534876e-01  2.04302317e-01  9.44819677e-01
  -8.41468236e-01 -3.06298236e-01  1.00250590e+00  6.54973054e-01
  -4.61747249e-01  2.15131526e-01 -4.58954602e-01]
 [ 1.24893660e-01 -8.32673603e-01 -8.98135665e-01  7.16210643e-01
  -1.34366729e+00 -1.52284047e+00 -5.38962026e-01 -4.23510690e-01
  -1.96122772e+00 -5.69993745e-01  7.64430058e-01 -7.14833754e-01
   6.67544434e-01  8.48818178e-01 -3.57124117e-01  1.79284431e+00
  -1.01729933e+00  9.72068226e-01 -4.58426199e-01  5.58322574e-01
   4.14824024e-01 -9.58050545e-01 -4.68823549e-01  8.92533314e-01
  -6.44789449e-01  1.03320809e+00  6.64064393e-01]
 [-1.90424725e+00  2.03595661e+00  4.73433077e-01 -1.51894612e+00
   5.93098000e-01 -1.78289333e+00  1.07488978e+00 -7.66475515e-01
   1.89037756e-01  3.98229959e-01 -2.69511975e+00 -1.82723384e+00
   1.22105863e+00  1.38253060e+00  1.80134953e+00 -1.31954457e+00
  -3.68828778e-01 -2.31634372e-01 -8.40463844e-01 -1.21427387e-01
  -5.58862180e-01 -2.02850242e+00 -2.03019562e-01  4.92447893e-01
   1.95867785e+00 -2.20162619e+00  1.08945011e+00]
 [-7.13857594e-02 -9.56805334e-01 -9.89496940e-01 -2.55552223e-01
   2.02670404e-03 -2.80042199e-02 -5.97776294e-01  3.99269579e-01
   1.25336743e-01  1.28699529e-01 -3.71906292e-01 -3.32553519e-01
  -8.46425246e-01 -9.43123082e-01 -5.07091227e-01  1.22236279e-01
   1.16120992e+00  3.34540741e-01 -2.00616527e-01 -1.18273462e-01
  -8.41468236e-01  2.11144658e-01  1.00250590e+00  2.35135957e-01
  -4.61747249e-01  1.29575898e-01 -4.58954602e-01]
 [-7.41790486e-01  6.97998190e-01  1.14911275e+00 -1.13875536e+00
   7.00166636e-01  4.15417598e-01  5.85423633e-02  1.13950526e+00
   6.66696877e-03  7.56750825e-01  6.20341014e-01  3.41290137e-01
   4.61849039e-01 -4.21562139e-01  7.05611962e-01  6.09525413e-01
  -1.11956311e+00 -4.16780503e-01 -3.81321270e-01  2.15227786e-01
   5.77496833e-01  2.97818309e-01 -1.41743244e+00 -6.56157580e-01
   5.23460403e-01  9.67141445e-01 -4.98236335e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  5.76482967e-01
  -1.49835721e+00  1.15663325e+00 -5.97776294e-01  8.52418253e-01
   1.85670781e-02 -5.89871334e-01  9.29988776e-01  2.57162065e-01
   1.01611233e+00 -9.43123082e-01 -6.94658676e-01  1.22236279e-01
   1.16120992e+00 -1.09617104e+00  4.85798233e-01  8.11933034e-01
  -8.41468236e-01 -2.81658098e-01  1.00250590e+00  7.94918753e-01
  -1.31579655e+00  1.72353712e-01 -4.58954602e-01]
 [ 1.02867391e+00 -9.56805334e-01 -9.89496940e-01  1.60465372e-01
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  7.82703072e-01
   1.25336743e-01 -2.81912393e-01  2.79041242e-01  1.40266090e-01
   3.95266164e-01 -9.43123082e-01 -7.18104607e-01  1.22236279e-01
   1.16120992e+00 -1.20268471e+00  3.93615370e-01  2.80386465e-01
  -8.41468236e-01 -5.98968578e-02  1.00250590e+00  6.54973054e-01
  -1.31579655e+00  8.67980841e-02 -4.58954602e-01]
 [ 1.28625090e-01 -9.56805334e-01 -9.89496940e-01 -9.55454560e-02
   2.02670404e-03  1.15663325e+00 -5.97776294e-01  8.75656646e-01
   1.85670781e-02  1.28699529e-01  2.79041242e-01 -1.67041082e-01
  -3.80790389e-01 -9.43123082e-01 -5.07091227e-01 -7.59678702e-03
   1.16120992e+00  4.19017128e-01 -4.99708637e-02 -1.18273462e-01
  -8.41468236e-01  1.37224245e-01  1.00250590e+00  5.15027355e-01
  -4.61747249e-01  1.08186991e-01 -4.58954602e-01]
 [-1.87600015e+00 -2.26674794e-01  4.36534176e-01 -1.55112314e+00
   9.26938670e-01 -4.10905044e-01  1.09034437e+00 -1.47380351e+00
   1.68947357e+00 -1.27614711e+00 -3.57061394e-01 -1.70280375e+00
  -1.41332050e+00 -3.94114022e-01 -6.89641687e-01  1.42442683e+00
   1.05402969e+00  7.56945329e-01  1.26209668e-01  5.55020539e-01
   1.68401897e+00 -1.70435371e+00 -1.91881982e+00 -1.66328715e+00
   1.68411142e+00 -1.82388652e+00  9.37845560e-02]
 [-1.70950481e+00 -6.68111386e-01  1.31502342e+00  4.73350797e-01
   2.87908016e+00 -1.07377375e+00  1.79773967e+00 -1.70720094e+00
  -2.27750439e+00  1.24317735e-01 -1.33555179e+00  1.19228393e+00
  -2.44228753e+00 -5.06915019e-01  2.74547945e+00 -1.48834576e+00
  -1.14798395e+00 -3.55789848e-01  8.63780824e-01 -3.80556242e+00
   3.95897042e-01  8.33404264e-01  9.69894927e-01 -1.76558679e+00
   1.60645925e+00 -4.49091488e-01  2.29911656e+00]]
upper = 
[7943.33944429 7943.33944429 7943.33944429 ... 7943.33944429 7943.33944429
 7943.33944429]
upper.argmax() = 0
all predict_target = 
[16896.08344444 16896.08344444 16896.08344444 ... 16896.08344444
 16896.08344444 16896.08344444]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [6.30188187e+01 3.68145795e-01 1.67075228e-01 4.50003965e+02
 1.50322308e+00 6.53198752e+00 3.48233165e+00 6.86160783e+02
 8.52066470e+01 4.98760831e+01 9.69841064e+00 1.91301667e+09
 8.72156022e-01 1.52430365e-01 1.86823308e+02 7.15610395e-01
 6.55096752e-01 1.15852471e+09 1.90503952e+09 6.66327202e+01
 6.65174092e-03 6.59594347e+02 5.60602953e-01 3.85243564e+01
 1.53065596e+00 2.62862863e+02 2.14441758e+00]
probe说：以前见过你啦！params = {'spark.broadcast.blockSize': 63.01881867431135, 'spark.broadcast.checksum': 0.36814579525039026, 'spark.broadcast.compress': 0.16707522752633308, 'spark.default.parallelism': 450.0039648702609, 'spark.executor.cores': 1.5032230841169367, 'spark.executor.instances': 6.531987516727485, 'spark.executor.memory': 3.4823316476801978, 'spark.executor.memoryOverhead': 686.160782663697, 'spark.kryoserializer.buffer': 85.20664700646536, 'spark.kryoserializer.buffer.max': 49.87608307555112, 'spark.locality.wait': 9.698410635290028, 'spark.maxRemoteBlockSizeFetchToMem': 1913016667.1751738, 'spark.memory.fraction': 0.872156021708049, 'spark.memory.offHeap.enabled': 0.1524303648558728, 'spark.memory.offHeap.size': 186.82330780842335, 'spark.memory.storageFraction': 0.7156103953365842, 'spark.rdd.compress': 0.6550967523366862, 'spark.reducer.maxBlocksInFlightPerAddress': 1158524706.3942978, 'spark.reducer.maxReqsInFlight': 1905039520.2842817, 'spark.reducer.maxSizeInFlight': 66.63272023055234, 'spark.scheduler.mode': 0.006651740923130589, 'spark.scheduler.revive.interval': 659.5943467391934, 'spark.shuffle.compress': 0.5606029525119136, 'spark.shuffle.file.buffer': 38.52435644496572, 'spark.shuffle.io.numConnectionsPerPeer': 1.530655960938093, 'spark.shuffle.sort.bypassMergeThreshold': 262.862862953374, 'spark.storage.memoryMapThreshold': 2.1444175751264876} target = -220.801
x_probe = {'spark.broadcast.blockSize': 63.01881867431135, 'spark.broadcast.checksum': 0.36814579525039026, 'spark.broadcast.compress': 0.16707522752633308, 'spark.default.parallelism': 450.0039648702609, 'spark.executor.cores': 1.5032230841169367, 'spark.executor.instances': 6.531987516727485, 'spark.executor.memory': 3.4823316476801978, 'spark.executor.memoryOverhead': 686.160782663697, 'spark.kryoserializer.buffer': 85.20664700646536, 'spark.kryoserializer.buffer.max': 49.87608307555112, 'spark.locality.wait': 9.698410635290028, 'spark.maxRemoteBlockSizeFetchToMem': 1913016667.1751738, 'spark.memory.fraction': 0.872156021708049, 'spark.memory.offHeap.enabled': 0.1524303648558728, 'spark.memory.offHeap.size': 186.82330780842335, 'spark.memory.storageFraction': 0.7156103953365842, 'spark.rdd.compress': 0.6550967523366862, 'spark.reducer.maxBlocksInFlightPerAddress': 1158524706.3942978, 'spark.reducer.maxReqsInFlight': 1905039520.2842817, 'spark.reducer.maxSizeInFlight': 66.63272023055234, 'spark.scheduler.mode': 0.006651740923130589, 'spark.scheduler.revive.interval': 659.5943467391934, 'spark.shuffle.compress': 0.5606029525119136, 'spark.shuffle.file.buffer': 38.52435644496572, 'spark.shuffle.io.numConnectionsPerPeer': 1.530655960938093, 'spark.shuffle.sort.bypassMergeThreshold': 262.862862953374, 'spark.storage.memoryMapThreshold': 2.1444175751264876}
target = -220.801
398s
{'maxIndex': 18, 'target': -178.891, 'params': {'spark.broadcast.blockSize': 36.61969812007611, 'spark.broadcast.checksum': 0.07364737247333608, 'spark.broadcast.compress': 0.5584392401983372, 'spark.default.parallelism': 445.5545120170226, 'spark.executor.cores': 3.9175448574934912, 'spark.executor.instances': 5.117223993771585, 'spark.executor.memory': 6.470380899387955, 'spark.executor.memoryOverhead': 464.70773323136996, 'spark.kryoserializer.buffer': 41.99019054568298, 'spark.kryoserializer.buffer.max': 61.91462898379683, 'spark.locality.wait': 6.519626467122063, 'spark.maxRemoteBlockSizeFetchToMem': 2021013775.6453583, 'spark.memory.fraction': 0.6571814037404378, 'spark.memory.offHeap.enabled': 0.11154263017507804, 'spark.memory.offHeap.size': 788.905781564202, 'spark.memory.storageFraction': 0.595949187598856, 'spark.rdd.compress': 0.31619690734200423, 'spark.reducer.maxBlocksInFlightPerAddress': 1249572407.3437846, 'spark.reducer.maxReqsInFlight': 2018422509.4722152, 'spark.reducer.maxSizeInFlight': 33.2523732448466, 'spark.scheduler.mode': 0.4383135336681899, 'spark.scheduler.revive.interval': 748.5078024204117, 'spark.shuffle.compress': 0.9892728972986514, 'spark.shuffle.file.buffer': 20.703578148097737, 'spark.shuffle.io.numConnectionsPerPeer': 4.421647669194604, 'spark.shuffle.sort.bypassMergeThreshold': 233.9454438300806, 'spark.storage.memoryMapThreshold': 3.3139348234884003}}
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/logs*.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/general_data.csv" 的文件状态(stat): 没有那个文件或目录
=============== finish wordcount-100G ===============
2022年 02月 22日 星期二 15:44:44 CST
=============== finish wordcount-100G ===============
