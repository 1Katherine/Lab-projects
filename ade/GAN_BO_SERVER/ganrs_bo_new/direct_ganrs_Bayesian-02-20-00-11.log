nohup: 忽略输入
/usr/local/home/yyq/bo/ganrs_bo_new
=============== start wordcount-100G ===============
2022年 02月 19日 星期六 20:15:52 CST
=============== start wordcount-100G ===============
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/logs.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/dataset.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 02月 19日 星期六 20:15:54 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (16678) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (20351) - 没有那个进程
sys.path = ['/usr/local/home/yyq/bo/ganrs_bo_new', '/usr/local/home/python3/python3/lib/python38.zip', '/usr/local/home/python3/python3/lib/python3.8', '/usr/local/home/python3/python3/lib/python3.8/lib-dynload', '/usr/local/home/python3/python3/lib/python3.8/site-packages', '/usr/local/home/yyq/bo/ganrs_bo_new', '/usr/local/home/yyq/bo/ganrs_bo_new/bayes_scode']
benchmark = wordcount-100G	 gan+rs生成的样本数：initpoints = 6	 bo迭代搜索次数：--niters = 44
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
vital_params_name = ['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
vital_params_list = ['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold', 'runtime']
np.matrix([config])中的config:
[62, 1, 0, 418, 1, 6, 3, 820, 38, 116, 4, 1938268315, 0.68, 1, 83, 0.65, 1, 1735223372, 1075117171, 30, 1, 708, 0, 16, 1, 348, 3]
np.matrix([config]):
[[6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 62
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 1
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 418
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 1
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 3
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 820
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 38
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 116
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 4
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1938268315
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.68
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 1
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 83
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.65
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1735223372
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1075117171
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 30
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 708
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 16
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 348
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3
configNum = 1	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 1 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
y = np.matrix([config])[0]中的 y = 366.089
[62, 1, 0, 418, 1, 6, 3, 820, 38, 116, 4, 1938268315, 0.68, 1, 83, 0.65, 1, 1735223372, 1075117171, 30, 1, 708, 0, 16, 1, 348, 3, 366.089]
   spark.broadcast.blockSize  ...  runtime
0                         62  ...  366.089

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...  runtime
0                        62  ...  366.089

[1 rows x 28 columns]
np.matrix([config])中的config:
[51, 0, 1, 221, 4, 5, 5, 533, 108, 95, 8, 2066297949, 0.61, 0, 63, 0.53, 0, 2049634449, 1261406683, 67, 1, 672, 1, 35, 4, 335, 4]
np.matrix([config]):
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 221
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4
================= config2 =================
2022年 02月 19日 星期六 20:22:09 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (24241) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (38998) - 没有那个进程
================= config3 =================
2022年 02月 19日 星期六 20:25:10 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (29749) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (51433) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 533
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 108
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2066297949
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.61
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 63
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.53
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2049634449
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1261406683
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 67
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 672
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 35
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 335
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4
configNum = 2	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 2 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
y = np.matrix([config])[0]中的 y = 172.458
[51, 0, 1, 221, 4, 5, 5, 533, 108, 95, 8, 2066297949, 0.61, 0, 63, 0.53, 0, 2049634449, 1261406683, 67, 1, 672, 1, 35, 4, 335, 4, 172.458]
   spark.broadcast.blockSize  ...  runtime
0                         51  ...  172.458

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...  runtime
0                        62  ...  366.089
1                        51  ...  172.458

[2 rows x 28 columns]
np.matrix([config])中的config:
[47, 0, 0, 405, 2, 8, 6, 399, 80, 97, 8, 1567387014, 0.54, 1, 290, 0.54, 1, 1104132623, 1519094072, 56, 0, 995, 0, 45, 3, 153, 3]
np.matrix([config]):
[[4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 47
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 405
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 8
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 6
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 399
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 80
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 97
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1567387014
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.54
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 1
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 290
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.54
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1104132623
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1519094072
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 56
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 995
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 45
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 153
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3
configNum = 3	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 3 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
y = np.matrix([config])[0]中的 y = 224.205
[47, 0, 0, 405, 2, 8, 6, 399, 80, 97, 8, 1567387014, 0.54, 1, 290, 0.54, 1, 1104132623, 1519094072, 56, 0, 995, 0, 45, 3, 153, 3, 224.205]
   spark.broadcast.blockSize  ...  runtime
0                         47  ...  224.205

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...  runtime
0                        62  ...  366.089
1                        51  ...  172.458
2                        47  ...  224.205

[3 rows x 28 columns]
  spark.broadcast.blockSize  ... spark.storage.memoryMapThreshold
0                        51  ...                                4

[1 rows x 27 columns]
  spark.broadcast.blockSize  ... spark.storage.memoryMapThreshold
0                    0.1875  ...                              1.0

[1 rows x 27 columns]
traindata.shape:(1, 27)
traindata.count_value:18.30729337957157
0
2000
Epoch: 0 Loss D.: -0.011906087398529053
Epoch: 0 Loss G.: 18.644279179986846
tensor(18.1790, dtype=torch.float64, grad_fn=<DivBackward0>)
1
2000
Epoch: 1 Loss D.: -0.0012337565422058105
Epoch: 1 Loss G.: 18.230983324241173
tensor(18.2360, dtype=torch.float64, grad_fn=<DivBackward0>)
2
2000
Epoch: 2 Loss D.: 0.00276339054107666
Epoch: 2 Loss G.: 18.258795026582014
tensor(18.1186, dtype=torch.float64, grad_fn=<DivBackward0>)
3
2000
Epoch: 3 Loss D.: 0.007090449333190918
Epoch: 3 Loss G.: 17.694108033445012
tensor(17.7111, dtype=torch.float64, grad_fn=<DivBackward0>)
4
2000
Epoch: 4 Loss D.: -0.0030590295791625977
Epoch: 4 Loss G.: 18.441607525464427
tensor(18.1389, dtype=torch.float64, grad_fn=<DivBackward0>)
5
2000
Epoch: 5 Loss D.: 0.006313979625701904
Epoch: 5 Loss G.: 18.060036284741294
tensor(17.4409, dtype=torch.float64, grad_fn=<DivBackward0>)
6
2000
Epoch: 6 Loss D.: 0.012467026710510254
Epoch: 6 Loss G.: 17.695029469099175
tensor(16.9919, dtype=torch.float64, grad_fn=<DivBackward0>)
7
2000
Epoch: 7 Loss D.: 0.007408261299133301
Epoch: 7 Loss G.: 17.838954314481747
tensor(17.1299, dtype=torch.float64, grad_fn=<DivBackward0>)
8
2000
Epoch: 8 Loss D.: 0.005505800247192383
Epoch: 8 Loss G.: 18.033265259009134
tensor(17.4560, dtype=torch.float64, grad_fn=<DivBackward0>)
9
2000
Epoch: 9 Loss D.: 0.015078246593475342
Epoch: 9 Loss G.: 16.054153624814283
tensor(17.1299, dtype=torch.float64, grad_fn=<DivBackward0>)
10
2000
Epoch: 10 Loss D.: -0.002723217010498047
Epoch: 10 Loss G.: 15.906047377627623
tensor(16.4618, dtype=torch.float64, grad_fn=<DivBackward0>)
11
2000
Epoch: 11 Loss D.: -0.00016224384307861328
Epoch: 11 Loss G.: 15.72398105741879
tensor(16.0876, dtype=torch.float64, grad_fn=<DivBackward0>)
12
2000
Epoch: 12 Loss D.: 0.013699352741241455
Epoch: 12 Loss G.: 17.049736770693492
tensor(15.9428, dtype=torch.float64, grad_fn=<DivBackward0>)
13
2000
Epoch: 13 Loss D.: 0.008681297302246094
Epoch: 13 Loss G.: 16.34822663095249
tensor(16.0478, dtype=torch.float64, grad_fn=<DivBackward0>)
14
2000
Epoch: 14 Loss D.: 0.004842996597290039
Epoch: 14 Loss G.: 16.48150387861235
tensor(16.2366, dtype=torch.float64, grad_fn=<DivBackward0>)
15
2000
Epoch: 15 Loss D.: 0.005818068981170654
Epoch: 15 Loss G.: 13.925568053391109
tensor(14.8971, dtype=torch.float64, grad_fn=<DivBackward0>)
16
2000
Epoch: 16 Loss D.: 0.0035188794136047363
Epoch: 16 Loss G.: 14.748143140118849
tensor(14.5326, dtype=torch.float64, grad_fn=<DivBackward0>)
17
2000
Epoch: 17 Loss D.: -0.0024483203887939453
Epoch: 17 Loss G.: 14.08890800726069
tensor(14.9674, dtype=torch.float64, grad_fn=<DivBackward0>)
18
2000
Epoch: 18 Loss D.: -0.0035809874534606934
Epoch: 18 Loss G.: 14.000021299239526
tensor(15.1861, dtype=torch.float64, grad_fn=<DivBackward0>)
19
2000
Epoch: 19 Loss D.: 0.012743055820465088
Epoch: 19 Loss G.: 13.397898124423156
tensor(14.2485, dtype=torch.float64, grad_fn=<DivBackward0>)
20
2000
Epoch: 20 Loss D.: -0.004597365856170654
Epoch: 20 Loss G.: 13.234609203305373
tensor(13.8035, dtype=torch.float64, grad_fn=<DivBackward0>)
21
2000
Epoch: 21 Loss D.: 0.002712845802307129
Epoch: 21 Loss G.: 12.86689669069303
tensor(14.5156, dtype=torch.float64, grad_fn=<DivBackward0>)
22
2000
Epoch: 22 Loss D.: 0.00045102834701538086
Epoch: 22 Loss G.: 13.153714012246857
tensor(13.3099, dtype=torch.float64, grad_fn=<DivBackward0>)
23
2000
Epoch: 23 Loss D.: 0.019077986478805542
Epoch: 23 Loss G.: 12.893744381036887
tensor(12.5280, dtype=torch.float64, grad_fn=<DivBackward0>)
24
2000
Epoch: 24 Loss D.: 0.01257556676864624
Epoch: 24 Loss G.: 13.577443065945337
tensor(13.7910, dtype=torch.float64, grad_fn=<DivBackward0>)
25
2000
Epoch: 25 Loss D.: 0.010830581188201904
Epoch: 25 Loss G.: 15.199256585803163
tensor(12.6166, dtype=torch.float64, grad_fn=<DivBackward0>)
26
2000
Epoch: 26 Loss D.: 0.007381081581115723
Epoch: 26 Loss G.: 12.13522244792832
tensor(10.2060, dtype=torch.float64, grad_fn=<DivBackward0>)
27
2000
Epoch: 27 Loss D.: 0.012331932783126831
Epoch: 27 Loss G.: 13.512843463462124
tensor(11.9551, dtype=torch.float64, grad_fn=<DivBackward0>)
28
2000
Epoch: 28 Loss D.: -0.003361821174621582
Epoch: 28 Loss G.: 8.266930184986723
tensor(10.6484, dtype=torch.float64, grad_fn=<DivBackward0>)
29
2000
Epoch: 29 Loss D.: 0.007556498050689697
Epoch: 29 Loss G.: 6.522105665034585
tensor(11.5096, dtype=torch.float64, grad_fn=<DivBackward0>)
30
2000
Epoch: 30 Loss D.: 0.0022635459899902344
Epoch: 30 Loss G.: 6.705130780464941
tensor(9.8951, dtype=torch.float64, grad_fn=<DivBackward0>)
31
2000
Epoch: 31 Loss D.: 0.003965914249420166
Epoch: 31 Loss G.: 11.980497242775094
tensor(9.8020, dtype=torch.float64, grad_fn=<DivBackward0>)
32
2000
Epoch: 32 Loss D.: 0.01738181710243225
Epoch: 32 Loss G.: 9.50917621674789
tensor(8.1310, dtype=torch.float64, grad_fn=<DivBackward0>)
33
2000
Epoch: 33 Loss D.: 0.006260931491851807
Epoch: 33 Loss G.: 19.552406057607662
tensor(10.9537, dtype=torch.float64, grad_fn=<DivBackward0>)
34
2000
Epoch: 34 Loss D.: 0.001652359962463379
Epoch: 34 Loss G.: 4.619046271987992
tensor(7.5422, dtype=torch.float64, grad_fn=<DivBackward0>)
35
2000
Epoch: 35 Loss D.: 0.0039827823638916016
Epoch: 35 Loss G.: 8.896062738921772
tensor(6.6888, dtype=torch.float64, grad_fn=<DivBackward0>)
36
2000
Epoch: 36 Loss D.: 0.001970231533050537
Epoch: 36 Loss G.: 10.362917372849118
tensor(6.4734, dtype=torch.float64, grad_fn=<DivBackward0>)
37
2000
Epoch: 37 Loss D.: -0.002362549304962158
Epoch: 37 Loss G.: 9.845307210352551
tensor(6.2131, dtype=torch.float64, grad_fn=<DivBackward0>)
38
2000
Epoch: 38 Loss D.: 0.0015309453010559082
Epoch: 38 Loss G.: 5.755180667108828
tensor(5.4480, dtype=torch.float64, grad_fn=<DivBackward0>)
39
2000
Epoch: 39 Loss D.: 0.0064591169357299805
Epoch: 39 Loss G.: 4.446918692338702
tensor(4.7823, dtype=torch.float64, grad_fn=<DivBackward0>)
40
2000
Epoch: 40 Loss D.: 0.004744529724121094
Epoch: 40 Loss G.: 5.689298959341182
tensor(4.9950, dtype=torch.float64, grad_fn=<DivBackward0>)
41
2000
Epoch: 41 Loss D.: 0.002218186855316162
Epoch: 41 Loss G.: 4.1250217030709315
tensor(7.3012, dtype=torch.float64, grad_fn=<DivBackward0>)
42
2000
Epoch: 42 Loss D.: 0.0056383609771728516
Epoch: 42 Loss G.: 4.089647441632085
tensor(4.1988, dtype=torch.float64, grad_fn=<DivBackward0>)
43
2000
Epoch: 43 Loss D.: -0.0018784403800964355
Epoch: 43 Loss G.: 3.3698301252208522
tensor(5.4123, dtype=torch.float64, grad_fn=<DivBackward0>)
44
2000
Epoch: 44 Loss D.: 0.0006448626518249512
Epoch: 44 Loss G.: 3.4401400680606895
tensor(4.5151, dtype=torch.float64, grad_fn=<DivBackward0>)
45
2000
Epoch: 45 Loss D.: 0.0066994428634643555
Epoch: 45 Loss G.: 3.900517051153846
tensor(4.8999, dtype=torch.float64, grad_fn=<DivBackward0>)
46
2000
Epoch: 46 Loss D.: 0.0009410977363586426
Epoch: 46 Loss G.: 5.746742084014652
tensor(3.6135, dtype=torch.float64, grad_fn=<DivBackward0>)
47
2000
Epoch: 47 Loss D.: 0.0032494068145751953
Epoch: 47 Loss G.: 2.4306717204386663
tensor(4.2821, dtype=torch.float64, grad_fn=<DivBackward0>)
48
2000
Epoch: 48 Loss D.: -0.0007876157760620117
Epoch: 48 Loss G.: 8.16715959284054
tensor(4.4836, dtype=torch.float64, grad_fn=<DivBackward0>)
49
2000
Epoch: 49 Loss D.: 0.006280779838562012
Epoch: 49 Loss G.: 3.3926684337521915
tensor(3.8043, dtype=torch.float64, grad_fn=<DivBackward0>)
50
2000
Epoch: 50 Loss D.: 0.01244574785232544
Epoch: 50 Loss G.: 3.9295922719175285
tensor(4.6406, dtype=torch.float64, grad_fn=<DivBackward0>)
51
2000
Epoch: 51 Loss D.: 0.0004500746726989746
Epoch: 51 Loss G.: 7.8867633027170765
tensor(4.9827, dtype=torch.float64, grad_fn=<DivBackward0>)
52
2000
Epoch: 52 Loss D.: -0.0008414387702941895
Epoch: 52 Loss G.: 2.5154325289263992
tensor(4.1268, dtype=torch.float64, grad_fn=<DivBackward0>)
53
2000
Epoch: 53 Loss D.: 0.0028508901596069336
Epoch: 53 Loss G.: 5.891752846810686
tensor(3.1918, dtype=torch.float64, grad_fn=<DivBackward0>)
54
2000
Epoch: 54 Loss D.: 0.00897747278213501
Epoch: 54 Loss G.: 3.1180111461398625
tensor(3.2904, dtype=torch.float64, grad_fn=<DivBackward0>)
55
2000
Epoch: 55 Loss D.: 0.0029847025871276855
Epoch: 55 Loss G.: 4.377701336410178
tensor(4.2085, dtype=torch.float64, grad_fn=<DivBackward0>)
56
2000
Epoch: 56 Loss D.: -0.009887993335723877
Epoch: 56 Loss G.: 3.0428846356605166
tensor(2.6151, dtype=torch.float64, grad_fn=<DivBackward0>)
57
2000
Epoch: 57 Loss D.: 0.002637505531311035
Epoch: 57 Loss G.: 4.106506176564562
tensor(3.3815, dtype=torch.float64, grad_fn=<DivBackward0>)
58
2000
Epoch: 58 Loss D.: 0.005332827568054199
Epoch: 58 Loss G.: 1.7107638175025253
tensor(3.5438, dtype=torch.float64, grad_fn=<DivBackward0>)
59
2000
Epoch: 59 Loss D.: 0.0067702531814575195
Epoch: 59 Loss G.: 2.0113891629114415
tensor(3.2972, dtype=torch.float64, grad_fn=<DivBackward0>)
60
2000
Epoch: 60 Loss D.: -0.0015530586242675781
Epoch: 60 Loss G.: 1.687144968344238
tensor(3.0995, dtype=torch.float64, grad_fn=<DivBackward0>)
61
2000
Epoch: 61 Loss D.: 0.004689812660217285
Epoch: 61 Loss G.: 3.5324363800550826
tensor(2.5218, dtype=torch.float64, grad_fn=<DivBackward0>)
62
2000
Epoch: 62 Loss D.: -0.0016987919807434082
Epoch: 62 Loss G.: 3.1105393313882375
tensor(2.6253, dtype=torch.float64, grad_fn=<DivBackward0>)
63
2000
Epoch: 63 Loss D.: 0.004553794860839844
Epoch: 63 Loss G.: 1.7697362405325303
tensor(3.7822, dtype=torch.float64, grad_fn=<DivBackward0>)
64
2000
Epoch: 64 Loss D.: -0.005295753479003906
Epoch: 64 Loss G.: 1.6665078384794425
tensor(3.3772, dtype=torch.float64, grad_fn=<DivBackward0>)
65
2000
Epoch: 65 Loss D.: 0.014062643051147461
Epoch: 65 Loss G.: 2.9773537662957783
tensor(2.9479, dtype=torch.float64, grad_fn=<DivBackward0>)
66
2000
Epoch: 66 Loss D.: 0.009008586406707764
Epoch: 66 Loss G.: 2.495750928274555
tensor(2.5421, dtype=torch.float64, grad_fn=<DivBackward0>)
67
2000
Epoch: 67 Loss D.: 0.0031669139862060547
Epoch: 67 Loss G.: 2.8303980010415435
tensor(3.3294, dtype=torch.float64, grad_fn=<DivBackward0>)
68
2000
Epoch: 68 Loss D.: 0.0012848973274230957
Epoch: 68 Loss G.: 1.4304709060472613
tensor(2.2529, dtype=torch.float64, grad_fn=<DivBackward0>)
69
2000
Epoch: 69 Loss D.: -0.0022245049476623535
Epoch: 69 Loss G.: 3.30341209646715
tensor(2.9162, dtype=torch.float64, grad_fn=<DivBackward0>)
70
2000
Epoch: 70 Loss D.: 0.0020101070404052734
Epoch: 70 Loss G.: 1.486528464132018
tensor(3.5421, dtype=torch.float64, grad_fn=<DivBackward0>)
71
2000
Epoch: 71 Loss D.: 0.012998133897781372
Epoch: 71 Loss G.: 1.9256750947353871
tensor(2.2263, dtype=torch.float64, grad_fn=<DivBackward0>)
72
2000
Epoch: 72 Loss D.: 0.0008485317230224609
Epoch: 72 Loss G.: 1.3284884090885845
tensor(2.5631, dtype=torch.float64, grad_fn=<DivBackward0>)
73
2000
Epoch: 73 Loss D.: 0.005406439304351807
Epoch: 73 Loss G.: 1.629882511522902
tensor(2.9077, dtype=torch.float64, grad_fn=<DivBackward0>)
74
2000
Epoch: 74 Loss D.: 2.9802322387695312e-05
Epoch: 74 Loss G.: 1.8489563855196365
tensor(2.6237, dtype=torch.float64, grad_fn=<DivBackward0>)
75
2000
Epoch: 75 Loss D.: 0.0020027756690979004
Epoch: 75 Loss G.: 2.898064108457697
tensor(2.1871, dtype=torch.float64, grad_fn=<DivBackward0>)
76
2000
Epoch: 76 Loss D.: 0.007565557956695557
Epoch: 76 Loss G.: 4.732954079177512
tensor(3.3362, dtype=torch.float64, grad_fn=<DivBackward0>)
77
2000
Epoch: 77 Loss D.: -0.0024059414863586426
Epoch: 77 Loss G.: 1.8583060947324164
tensor(2.8052, dtype=torch.float64, grad_fn=<DivBackward0>)
78
2000
Epoch: 78 Loss D.: -0.0008153319358825684
Epoch: 78 Loss G.: 9.653496069941388
tensor(3.0723, dtype=torch.float64, grad_fn=<DivBackward0>)
79
2000
Epoch: 79 Loss D.: 0.0008791089057922363
Epoch: 79 Loss G.: 1.23039281456494
tensor(3.4361, dtype=torch.float64, grad_fn=<DivBackward0>)
80
2000
Epoch: 80 Loss D.: 0.0010418891906738281
Epoch: 80 Loss G.: 2.5773578641151063
tensor(3.6450, dtype=torch.float64, grad_fn=<DivBackward0>)
81
2000
Epoch: 81 Loss D.: 0.0034561753273010254
Epoch: 81 Loss G.: 3.519263224568499
tensor(4.0034, dtype=torch.float64, grad_fn=<DivBackward0>)
82
2000
Epoch: 82 Loss D.: 0.006778120994567871
Epoch: 82 Loss G.: 1.516351878417996
tensor(4.9290, dtype=torch.float64, grad_fn=<DivBackward0>)
83
2000
Epoch: 83 Loss D.: 0.0020248889923095703
Epoch: 83 Loss G.: 4.045404905345572
tensor(4.1847, dtype=torch.float64, grad_fn=<DivBackward0>)
84
2000
Epoch: 84 Loss D.: 0.004114687442779541
Epoch: 84 Loss G.: 5.861074952516423
tensor(3.4413, dtype=torch.float64, grad_fn=<DivBackward0>)
85
2000
Epoch: 85 Loss D.: -0.0022177696228027344
Epoch: 85 Loss G.: 3.803744210038053
tensor(4.3294, dtype=torch.float64, grad_fn=<DivBackward0>)
86
2000
Epoch: 86 Loss D.: 0.006109952926635742
Epoch: 86 Loss G.: 1.2484258581084382
tensor(4.2427, dtype=torch.float64, grad_fn=<DivBackward0>)
87
2000
Epoch: 87 Loss D.: 0.005578875541687012
Epoch: 87 Loss G.: 1.5735702114567487
tensor(2.8827, dtype=torch.float64, grad_fn=<DivBackward0>)
88
2000
Epoch: 88 Loss D.: 0.0008931159973144531
Epoch: 88 Loss G.: 7.133896416160928
tensor(3.8695, dtype=torch.float64, grad_fn=<DivBackward0>)
89
2000
Epoch: 89 Loss D.: 0.002442002296447754
Epoch: 89 Loss G.: 1.2902362740519018
tensor(3.2314, dtype=torch.float64, grad_fn=<DivBackward0>)
90
2000
Epoch: 90 Loss D.: 0.003266274929046631
Epoch: 90 Loss G.: 2.157916118093567
tensor(4.5219, dtype=torch.float64, grad_fn=<DivBackward0>)
91
2000
Epoch: 91 Loss D.: 0.0014420747756958008
Epoch: 91 Loss G.: 2.7813321282729837
tensor(2.8423, dtype=torch.float64, grad_fn=<DivBackward0>)
92
2000
Epoch: 92 Loss D.: 0.01020514965057373
Epoch: 92 Loss G.: 2.667967980835306
tensor(3.1639, dtype=torch.float64, grad_fn=<DivBackward0>)
93
2000
Epoch: 93 Loss D.: 0.004686534404754639
Epoch: 93 Loss G.: 4.2100041302706135
tensor(3.6524, dtype=torch.float64, grad_fn=<DivBackward0>)
94
2000
Epoch: 94 Loss D.: -0.002330183982849121
Epoch: 94 Loss G.: 2.454982360811793
tensor(2.1722, dtype=torch.float64, grad_fn=<DivBackward0>)
在第94轮收敛
----------------第0轮的原数据---------------------
         range  dissimilarity_value  ...  Euclidean_distance    distance
0     0.069221             0.019324  ...            0.342063  150.775851
1     0.116464             0.019965  ...            0.436134  114.232093
2     0.182883             0.019843  ...            0.435013  115.178643
3     0.334572             0.021850  ...            0.512004   88.923696
4     0.509595             0.020326  ...            0.524520   93.400360
..         ...                  ...  ...                 ...         ...
195  17.121236             0.046782  ...            1.300970   16.392300
196  17.226272             0.040425  ...            1.294335   19.058446
197  17.417856             0.043186  ...            1.344218   17.198922
198  17.868458             0.053849  ...            1.469849   12.602131
199  17.876526             0.042102  ...            1.442631   16.424568

[200 rows x 5 columns]
-----------------按照dissimilarity_value排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     2.397                0.009         0.998               0.294   370.155
1     4.330                0.009         0.998               0.296   395.182
2     4.096                0.010         0.997               0.294   326.377
3     4.604                0.010         0.997               0.344   300.960
4     4.339                0.010         0.998               0.261   379.906
..      ...                  ...           ...                 ...       ...
195  17.868                0.054         0.997               1.470    12.602
196   2.627                0.055         0.993               1.177    15.242
197   2.161                0.056         0.993               1.175    15.031
198   2.012                0.057         0.995               1.241    14.186
199   2.540                0.058         0.992               1.298    13.200

[200 rows x 5 columns]
-----------------按照range排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     0.069                0.019         0.997               0.342   150.776
1     0.116                0.020         0.995               0.436   114.232
2     0.183                0.020         0.994               0.435   115.179
3     0.335                0.022         0.995               0.512    88.924
4     0.510                0.020         0.996               0.525    93.400
..      ...                  ...           ...                 ...       ...
195  17.121                0.047         0.998               1.301    16.392
196  17.226                0.040         0.997               1.294    19.058
197  17.418                0.043         0.998               1.344    17.199
198  17.868                0.054         0.997               1.470    12.602
199  17.877                0.042         0.998               1.443    16.425

[200 rows x 5 columns]
-----------------按照cos_distance排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     1.505                0.052         0.989               0.900    21.317
1     4.630                0.032         0.992               0.567    54.312
2     2.540                0.058         0.992               1.298    13.200
3     1.567                0.033         0.992               0.752    40.329
4     2.627                0.055         0.993               1.177    15.242
..      ...                  ...           ...                 ...       ...
195  12.732                0.029         0.999               0.656    51.672
196  16.935                0.043         0.999               1.207    19.270
197   6.250                0.010         0.999               0.214   483.322
198  15.950                0.033         0.999               0.940    32.303
199  10.071                0.025         0.999               0.531    75.716

[200 rows x 5 columns]
-----------------按照Euclidean_distance排序----------
================= config4 =================
2022年 02月 19日 星期六 20:29:07 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (32301) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (65254) - 没有那个进程
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     6.250                0.010         0.999               0.214   483.322
1     4.162                0.014         0.998               0.231   298.263
2     0.528                0.015         0.998               0.236   279.177
3     4.339                0.015         0.998               0.236   273.940
4     4.776                0.014         0.998               0.242   287.990
..      ...                  ...           ...                 ...       ...
195   2.540                0.058         0.992               1.298    13.200
196  17.121                0.047         0.998               1.301    16.392
197  17.418                0.043         0.998               1.344    17.199
198  17.877                0.042         0.998               1.443    16.425
199  17.868                0.054         0.997               1.470    12.602

[200 rows x 5 columns]
-----------------按照distance排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     6.250                0.010         0.999               0.214   483.322
1     4.330                0.009         0.998               0.296   395.182
2     4.339                0.010         0.998               0.261   379.906
3     2.397                0.009         0.998               0.294   370.155
4     4.096                0.010         0.997               0.294   326.377
..      ...                  ...           ...                 ...       ...
195   2.627                0.055         0.993               1.177    15.242
196   2.161                0.056         0.993               1.175    15.031
197   2.012                0.057         0.995               1.241    14.186
198   2.540                0.058         0.992               1.298    13.200
199  17.868                0.054         0.997               1.470    12.602

[200 rows x 5 columns]
   distance
0   483.322
1   395.182
2   379.906
3   123.823
4   122.819
5   121.905
6    14.186
7    13.200
8    12.602
   distance
0   483.322
1   123.823
2    12.602
3   395.182
4   122.819
5    13.200
6   379.906
7   121.905
8    14.186
sgan数据生成时间花费为：792.52
   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                       51.0  ...                               4.0
1                       51.0  ...                               4.0
2                       51.0  ...                               4.0
3                       51.0  ...                               4.0
4                       50.0  ...                               4.0
5                       50.0  ...                               3.0
6                       50.0  ...                               4.0
7                       52.0  ...                               4.0
8                       49.0  ...                               4.0

[9 rows x 27 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 223.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 530.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 110.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 93.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2077775104.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6000000238418579
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 66.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5199999809265137
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2068097280.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1299375616.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 68.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 671.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 37.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 337.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4.0
configNum = 4	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 4 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       51.0  ...  223.146

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...  runtime
0                        51  ...  172.458
1                        47  ...  224.205
2                        62  ...  366.089
3                      51.0  ...  223.146

[4 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 218.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 532.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 113.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 88.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2082377216.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6000000238418579
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 47.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5199999809265137
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2097264128.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1275115264.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 69.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 672.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 36.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.0
================= config5 =================
2022年 02月 19日 星期六 20:32:58 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (38446) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (70724) - 没有那个进程
================= config6 =================
2022年 02月 19日 星期六 20:36:02 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (159268) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (261560) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 346.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4.0
configNum = 5	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 5 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       51.0  ...  175.051

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...  runtime
0                        51  ...  172.458
1                        47  ...  224.205
2                        62  ...  366.089
3                      51.0  ...  223.146
4                      51.0  ...  175.051

[5 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 200.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 505.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 124.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2147483136.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.5799999833106995
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 47.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2147483648.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1103282560.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 72.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 634.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 36.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 350.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4.0
configNum = 6	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 6 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...   runtime
0                       51.0  ...  100000.0

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...     runtime
0                        51  ...     172.458
1                        47  ...     224.205
2                        62  ...     366.089
3                      51.0  ...     223.146
4                      51.0  ...     175.051
5                      51.0  ...  100000.000

[6 rows x 28 columns]
  spark.broadcast.blockSize  ... spark.storage.memoryMapThreshold
0                        51  ...                                4

[1 rows x 27 columns]
  spark.broadcast.blockSize  ... spark.storage.memoryMapThreshold
0                    0.1875  ...                              1.0

[1 rows x 27 columns]
traindata.shape:(1, 27)
traindata.count_value:18.30729337957157
0
2000
Epoch: 0 Loss D.: 0.0363520085811615
Epoch: 0 Loss G.: 18.54688220274104
tensor(18.2430, dtype=torch.float64, grad_fn=<DivBackward0>)
1
2000
Epoch: 1 Loss D.: 0.005436360836029053
Epoch: 1 Loss G.: 18.424764821198117
tensor(18.1161, dtype=torch.float64, grad_fn=<DivBackward0>)
2
2000
Epoch: 2 Loss D.: 0.0009122490882873535
Epoch: 2 Loss G.: 18.70500248473538
tensor(17.7901, dtype=torch.float64, grad_fn=<DivBackward0>)
3
2000
Epoch: 3 Loss D.: 0.006540179252624512
Epoch: 3 Loss G.: 17.6916077182482
tensor(17.9014, dtype=torch.float64, grad_fn=<DivBackward0>)
4
2000
Epoch: 4 Loss D.: 0.007074832916259766
Epoch: 4 Loss G.: 17.999681269642245
tensor(17.4575, dtype=torch.float64, grad_fn=<DivBackward0>)
5
2000
Epoch: 5 Loss D.: 0.005631685256958008
Epoch: 5 Loss G.: 17.941533394050133
tensor(17.4576, dtype=torch.float64, grad_fn=<DivBackward0>)
6
2000
Epoch: 6 Loss D.: 0.0045462846755981445
Epoch: 6 Loss G.: 17.01245229494227
tensor(17.4391, dtype=torch.float64, grad_fn=<DivBackward0>)
7
2000
Epoch: 7 Loss D.: 0.004593074321746826
Epoch: 7 Loss G.: 17.22030577425314
tensor(16.9843, dtype=torch.float64, grad_fn=<DivBackward0>)
8
2000
Epoch: 8 Loss D.: 0.0015107393264770508
Epoch: 8 Loss G.: 17.76270989504112
tensor(16.9004, dtype=torch.float64, grad_fn=<DivBackward0>)
9
2000
Epoch: 9 Loss D.: 0.0005165934562683105
Epoch: 9 Loss G.: 16.892020709704887
tensor(16.7817, dtype=torch.float64, grad_fn=<DivBackward0>)
10
2000
Epoch: 10 Loss D.: 0.012579202651977539
Epoch: 10 Loss G.: 16.215550610687863
tensor(16.9988, dtype=torch.float64, grad_fn=<DivBackward0>)
11
2000
Epoch: 11 Loss D.: 0.005662381649017334
Epoch: 11 Loss G.: 16.926660437029135
tensor(16.6696, dtype=torch.float64, grad_fn=<DivBackward0>)
12
2000
Epoch: 12 Loss D.: -0.004854857921600342
Epoch: 12 Loss G.: 17.549425457496476
tensor(16.2821, dtype=torch.float64, grad_fn=<DivBackward0>)
13
2000
Epoch: 13 Loss D.: 0.008738934993743896
Epoch: 13 Loss G.: 18.150935081657302
tensor(16.3357, dtype=torch.float64, grad_fn=<DivBackward0>)
14
2000
Epoch: 14 Loss D.: 0.004385948181152344
Epoch: 14 Loss G.: 15.885322932046185
tensor(16.0625, dtype=torch.float64, grad_fn=<DivBackward0>)
15
2000
Epoch: 15 Loss D.: 0.0012802481651306152
Epoch: 15 Loss G.: 17.715827258196008
tensor(15.8748, dtype=torch.float64, grad_fn=<DivBackward0>)
16
2000
Epoch: 16 Loss D.: 0.0002644658088684082
Epoch: 16 Loss G.: 16.62035017356677
tensor(15.6369, dtype=torch.float64, grad_fn=<DivBackward0>)
17
2000
Epoch: 17 Loss D.: 0.0030655860900878906
Epoch: 17 Loss G.: 15.287708917524945
tensor(15.3149, dtype=torch.float64, grad_fn=<DivBackward0>)
18
2000
Epoch: 18 Loss D.: -0.0026851892471313477
Epoch: 18 Loss G.: 15.462217675414216
tensor(15.4785, dtype=torch.float64, grad_fn=<DivBackward0>)
19
2000
Epoch: 19 Loss D.: -7.742643356323242e-05
Epoch: 19 Loss G.: 16.150135418292415
tensor(15.2308, dtype=torch.float64, grad_fn=<DivBackward0>)
20
2000
Epoch: 20 Loss D.: -0.012082159519195557
Epoch: 20 Loss G.: 13.882733460364973
tensor(14.8069, dtype=torch.float64, grad_fn=<DivBackward0>)
21
2000
Epoch: 21 Loss D.: 0.005589127540588379
Epoch: 21 Loss G.: 13.336531197380554
tensor(14.5074, dtype=torch.float64, grad_fn=<DivBackward0>)
22
2000
Epoch: 22 Loss D.: 0.003451406955718994
Epoch: 22 Loss G.: 14.94465385925425
tensor(15.4217, dtype=torch.float64, grad_fn=<DivBackward0>)
23
2000
Epoch: 23 Loss D.: 0.009030163288116455
Epoch: 23 Loss G.: 13.148404798828343
tensor(14.1946, dtype=torch.float64, grad_fn=<DivBackward0>)
24
2000
Epoch: 24 Loss D.: 8.26120376586914e-05
Epoch: 24 Loss G.: 14.123375167962442
tensor(13.5772, dtype=torch.float64, grad_fn=<DivBackward0>)
25
2000
Epoch: 25 Loss D.: -0.00513613224029541
Epoch: 25 Loss G.: 13.715483951274583
tensor(13.3311, dtype=torch.float64, grad_fn=<DivBackward0>)
26
2000
Epoch: 26 Loss D.: 0.011149108409881592
Epoch: 26 Loss G.: 16.115217095133197
tensor(13.8948, dtype=torch.float64, grad_fn=<DivBackward0>)
27
2000
Epoch: 27 Loss D.: 0.008328676223754883
Epoch: 27 Loss G.: 15.258815436516237
tensor(12.6554, dtype=torch.float64, grad_fn=<DivBackward0>)
28
2000
Epoch: 28 Loss D.: 0.004883289337158203
Epoch: 28 Loss G.: 12.832003005672524
tensor(12.8598, dtype=torch.float64, grad_fn=<DivBackward0>)
29
2000
Epoch: 29 Loss D.: 0.00038123130798339844
Epoch: 29 Loss G.: 11.540923192480689
tensor(12.8160, dtype=torch.float64, grad_fn=<DivBackward0>)
30
2000
Epoch: 30 Loss D.: 0.009153962135314941
Epoch: 30 Loss G.: 13.349467835591765
tensor(12.5653, dtype=torch.float64, grad_fn=<DivBackward0>)
31
2000
Epoch: 31 Loss D.: 0.009801506996154785
Epoch: 31 Loss G.: 11.599967257943284
tensor(11.6661, dtype=torch.float64, grad_fn=<DivBackward0>)
32
2000
Epoch: 32 Loss D.: 0.004398941993713379
Epoch: 32 Loss G.: 12.675987966250906
tensor(11.9452, dtype=torch.float64, grad_fn=<DivBackward0>)
33
2000
Epoch: 33 Loss D.: 0.006594955921173096
Epoch: 33 Loss G.: 10.056678534086283
tensor(11.1145, dtype=torch.float64, grad_fn=<DivBackward0>)
34
2000
Epoch: 34 Loss D.: -0.0018912553787231445
Epoch: 34 Loss G.: 11.761030567702186
tensor(10.6540, dtype=torch.float64, grad_fn=<DivBackward0>)
35
2000
Epoch: 35 Loss D.: -0.00040984153747558594
Epoch: 35 Loss G.: 9.92857806369487
tensor(10.0439, dtype=torch.float64, grad_fn=<DivBackward0>)
36
2000
Epoch: 36 Loss D.: 0.0028380751609802246
Epoch: 36 Loss G.: 9.521253366865947
tensor(10.5798, dtype=torch.float64, grad_fn=<DivBackward0>)
37
2000
Epoch: 37 Loss D.: 0.005789756774902344
Epoch: 37 Loss G.: 9.403612883836763
tensor(10.1109, dtype=torch.float64, grad_fn=<DivBackward0>)
38
2000
Epoch: 38 Loss D.: 0.010211646556854248
Epoch: 38 Loss G.: 8.21513304347618
tensor(9.3904, dtype=torch.float64, grad_fn=<DivBackward0>)
39
2000
Epoch: 39 Loss D.: 0.007293403148651123
Epoch: 39 Loss G.: 9.583021931735908
tensor(9.8093, dtype=torch.float64, grad_fn=<DivBackward0>)
40
2000
Epoch: 40 Loss D.: 0.0005816221237182617
Epoch: 40 Loss G.: 9.678569281322991
tensor(8.8004, dtype=torch.float64, grad_fn=<DivBackward0>)
41
2000
Epoch: 41 Loss D.: 0.0036957263946533203
Epoch: 41 Loss G.: 7.812909081963934
tensor(9.1802, dtype=torch.float64, grad_fn=<DivBackward0>)
42
2000
Epoch: 42 Loss D.: -0.0029311180114746094
Epoch: 42 Loss G.: 6.593768099234239
tensor(8.2803, dtype=torch.float64, grad_fn=<DivBackward0>)
43
2000
Epoch: 43 Loss D.: 0.009037673473358154
Epoch: 43 Loss G.: 7.65784806051675
tensor(7.1171, dtype=torch.float64, grad_fn=<DivBackward0>)
44
2000
Epoch: 44 Loss D.: -0.0030527114868164062
Epoch: 44 Loss G.: 7.215352947898941
tensor(7.0515, dtype=torch.float64, grad_fn=<DivBackward0>)
45
2000
Epoch: 45 Loss D.: 0.00493544340133667
Epoch: 45 Loss G.: 7.78914173894697
tensor(6.7141, dtype=torch.float64, grad_fn=<DivBackward0>)
46
2000
Epoch: 46 Loss D.: 0.002161383628845215
Epoch: 46 Loss G.: 6.448229539367793
tensor(5.3785, dtype=torch.float64, grad_fn=<DivBackward0>)
47
2000
Epoch: 47 Loss D.: 0.002362668514251709
Epoch: 47 Loss G.: 5.0110204749785225
tensor(5.2924, dtype=torch.float64, grad_fn=<DivBackward0>)
48
2000
Epoch: 48 Loss D.: 0.01104205846786499
Epoch: 48 Loss G.: 3.7916838567748536
tensor(4.7463, dtype=torch.float64, grad_fn=<DivBackward0>)
49
2000
Epoch: 49 Loss D.: -0.0017928481101989746
Epoch: 49 Loss G.: 3.8329350646816063
tensor(5.2204, dtype=torch.float64, grad_fn=<DivBackward0>)
50
2000
Epoch: 50 Loss D.: -0.001837015151977539
Epoch: 50 Loss G.: 5.149226806969182
tensor(3.6318, dtype=torch.float64, grad_fn=<DivBackward0>)
51
2000
Epoch: 51 Loss D.: -0.004716634750366211
Epoch: 51 Loss G.: 2.899120905273395
tensor(6.0531, dtype=torch.float64, grad_fn=<DivBackward0>)
52
2000
Epoch: 52 Loss D.: 0.002721071243286133
Epoch: 52 Loss G.: 4.096740853273339
tensor(4.3227, dtype=torch.float64, grad_fn=<DivBackward0>)
53
2000
Epoch: 53 Loss D.: 0.007980167865753174
Epoch: 53 Loss G.: 8.444257782664431
tensor(3.7794, dtype=torch.float64, grad_fn=<DivBackward0>)
54
2000
Epoch: 54 Loss D.: 0.0019028186798095703
Epoch: 54 Loss G.: 5.148559798525307
tensor(3.8634, dtype=torch.float64, grad_fn=<DivBackward0>)
55
2000
Epoch: 55 Loss D.: 0.0012668967247009277
Epoch: 55 Loss G.: 2.7096914007993904
tensor(3.4150, dtype=torch.float64, grad_fn=<DivBackward0>)
56
2000
Epoch: 56 Loss D.: 0.0052986741065979
Epoch: 56 Loss G.: 2.2144901637966106
tensor(3.8634, dtype=torch.float64, grad_fn=<DivBackward0>)
57
2000
Epoch: 57 Loss D.: 0.005394577980041504
Epoch: 57 Loss G.: 4.354561293346919
tensor(3.0416, dtype=torch.float64, grad_fn=<DivBackward0>)
58
2000
Epoch: 58 Loss D.: 0.0067757368087768555
Epoch: 58 Loss G.: 2.3199223269043
tensor(3.8106, dtype=torch.float64, grad_fn=<DivBackward0>)
59
2000
Epoch: 59 Loss D.: 0.0008614063262939453
Epoch: 59 Loss G.: 2.4376147203278906
tensor(3.5659, dtype=torch.float64, grad_fn=<DivBackward0>)
60
2000
Epoch: 60 Loss D.: -0.005352377891540527
Epoch: 60 Loss G.: 3.520060950668418
tensor(3.3023, dtype=torch.float64, grad_fn=<DivBackward0>)
61
2000
Epoch: 61 Loss D.: -0.001527249813079834
Epoch: 61 Loss G.: 2.2557861337083214
tensor(3.4645, dtype=torch.float64, grad_fn=<DivBackward0>)
62
2000
Epoch: 62 Loss D.: 0.0036600828170776367
Epoch: 62 Loss G.: 2.6400787470698033
tensor(5.1791, dtype=torch.float64, grad_fn=<DivBackward0>)
63
2000
Epoch: 63 Loss D.: 0.008717060089111328
Epoch: 63 Loss G.: 3.186700646562842
tensor(4.0324, dtype=torch.float64, grad_fn=<DivBackward0>)
64
2000
Epoch: 64 Loss D.: 0.008154511451721191
Epoch: 64 Loss G.: 1.8035614060503868
tensor(2.6111, dtype=torch.float64, grad_fn=<DivBackward0>)
65
2000
Epoch: 65 Loss D.: 0.0018811225891113281
Epoch: 65 Loss G.: 5.0161360668803585
tensor(3.3157, dtype=torch.float64, grad_fn=<DivBackward0>)
66
2000
Epoch: 66 Loss D.: 0.0052283406257629395
Epoch: 66 Loss G.: 6.834371184822453
tensor(3.1216, dtype=torch.float64, grad_fn=<DivBackward0>)
67
2000
Epoch: 67 Loss D.: 0.005921006202697754
Epoch: 67 Loss G.: 5.495114689369263
tensor(2.9562, dtype=torch.float64, grad_fn=<DivBackward0>)
68
2000
Epoch: 68 Loss D.: -0.003686249256134033
Epoch: 68 Loss G.: 2.2602191312727964
tensor(3.0092, dtype=torch.float64, grad_fn=<DivBackward0>)
69
2000
Epoch: 69 Loss D.: -0.002832949161529541
Epoch: 69 Loss G.: 2.0872787135506994
tensor(3.3579, dtype=torch.float64, grad_fn=<DivBackward0>)
70
2000
Epoch: 70 Loss D.: 0.012533605098724365
Epoch: 70 Loss G.: 1.5128094371674092
tensor(2.4067, dtype=torch.float64, grad_fn=<DivBackward0>)
71
2000
Epoch: 71 Loss D.: 0.0027069449424743652
Epoch: 71 Loss G.: 1.4727560026961197
tensor(2.3630, dtype=torch.float64, grad_fn=<DivBackward0>)
72
2000
Epoch: 72 Loss D.: 0.00792008638381958
Epoch: 72 Loss G.: 3.4403935369593532
tensor(2.7454, dtype=torch.float64, grad_fn=<DivBackward0>)
73
2000
Epoch: 73 Loss D.: 0.0019101500511169434
Epoch: 73 Loss G.: 2.125561803764863
tensor(4.1509, dtype=torch.float64, grad_fn=<DivBackward0>)
74
2000
Epoch: 74 Loss D.: -0.002505779266357422
Epoch: 74 Loss G.: 2.303273852332466
tensor(3.0800, dtype=torch.float64, grad_fn=<DivBackward0>)
75
2000
Epoch: 75 Loss D.: 0.0031245946884155273
Epoch: 75 Loss G.: 1.9563197643970778
tensor(2.8636, dtype=torch.float64, grad_fn=<DivBackward0>)
76
2000
Epoch: 76 Loss D.: 0.0053980350494384766
Epoch: 76 Loss G.: 6.9006023443157805
tensor(2.3297, dtype=torch.float64, grad_fn=<DivBackward0>)
77
2000
Epoch: 77 Loss D.: 0.0028574466705322266
Epoch: 77 Loss G.: 2.5583693750366896
tensor(3.2957, dtype=torch.float64, grad_fn=<DivBackward0>)
78
2000
Epoch: 78 Loss D.: 0.007696866989135742
Epoch: 78 Loss G.: 5.403287349376546
tensor(2.9929, dtype=torch.float64, grad_fn=<DivBackward0>)
79
2000
Epoch: 79 Loss D.: 0.0013318657875061035
Epoch: 79 Loss G.: 2.976526597413885
tensor(3.4330, dtype=torch.float64, grad_fn=<DivBackward0>)
80
2000
Epoch: 80 Loss D.: -0.011529743671417236
Epoch: 80 Loss G.: 1.0666032871362932
tensor(3.1091, dtype=torch.float64, grad_fn=<DivBackward0>)
81
2000
Epoch: 81 Loss D.: 0.00505673885345459
Epoch: 81 Loss G.: 1.964931081258721
tensor(2.1644, dtype=torch.float64, grad_fn=<DivBackward0>)
82
2000
Epoch: 82 Loss D.: 0.0002028942108154297
Epoch: 82 Loss G.: 6.513634325828685
tensor(2.2091, dtype=torch.float64, grad_fn=<DivBackward0>)
83
2000
Epoch: 83 Loss D.: 0.012015819549560547
Epoch: 83 Loss G.: 2.0442831434473723
tensor(3.3785, dtype=torch.float64, grad_fn=<DivBackward0>)
84
2000
Epoch: 84 Loss D.: 0.0031083226203918457
Epoch: 84 Loss G.: 1.1595055275326303
tensor(2.8860, dtype=torch.float64, grad_fn=<DivBackward0>)
85
2000
Epoch: 85 Loss D.: 0.01703202724456787
Epoch: 85 Loss G.: 1.2298234974699582
tensor(3.0486, dtype=torch.float64, grad_fn=<DivBackward0>)
86
2000
Epoch: 86 Loss D.: 0.005217909812927246
Epoch: 86 Loss G.: 4.898034391689535
tensor(2.7012, dtype=torch.float64, grad_fn=<DivBackward0>)
87
2000
Epoch: 87 Loss D.: -0.0006003379821777344
Epoch: 87 Loss G.: 2.1494090708757763
tensor(2.6439, dtype=torch.float64, grad_fn=<DivBackward0>)
88
2000
Epoch: 88 Loss D.: 0.00920015573501587
Epoch: 88 Loss G.: 3.8038439459934508
tensor(2.6828, dtype=torch.float64, grad_fn=<DivBackward0>)
89
2000
Epoch: 89 Loss D.: -0.0033184289932250977
Epoch: 89 Loss G.: 4.722737765720225
tensor(2.9923, dtype=torch.float64, grad_fn=<DivBackward0>)
90
2000
Epoch: 90 Loss D.: 0.005600094795227051
Epoch: 90 Loss G.: 1.7802643469681017
tensor(2.0641, dtype=torch.float64, grad_fn=<DivBackward0>)
91
2000
Epoch: 91 Loss D.: 0.010995090007781982
Epoch: 91 Loss G.: 1.9066803327681994
tensor(3.3308, dtype=torch.float64, grad_fn=<DivBackward0>)
92
2000
Epoch: 92 Loss D.: -0.006578981876373291
Epoch: 92 Loss G.: 3.284176314357387
tensor(2.8917, dtype=torch.float64, grad_fn=<DivBackward0>)
93
2000
Epoch: 93 Loss D.: 0.0024292469024658203
Epoch: 93 Loss G.: 3.785187673552302
tensor(2.0646, dtype=torch.float64, grad_fn=<DivBackward0>)
在第93轮收敛
----------------第0轮的原数据---------------------
         range  dissimilarity_value  ...  Euclidean_distance    distance
0     0.003666             0.015115  ...            0.284538  232.125455
1     0.028794             0.022307  ...            0.639172   69.478560
2     0.029807             0.013088  ...            0.616220  123.120282
3     0.043204             0.018151  ...            0.554243   98.768128
4     0.054254             0.019147  ...            0.553398   93.969198
..         ...                  ...  ...                 ...         ...
195  15.886307             0.032667  ...            0.942058   32.420547
196  15.894875             0.039903  ...            0.939004   26.620848
197  15.900711             0.033469  ...            0.950105   31.373080
198  16.020188             0.048673  ...            1.057260   19.368543
199  16.111014             0.034838  ...            1.000203   28.623206

[200 rows x 5 columns]
-----------------按照dissimilarity_value排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    0.094                0.007         0.995               0.404   356.041
1    4.275                0.009         0.998               0.261   402.417
2    0.055                0.010         0.995               0.450   231.096
3    2.258                0.010         0.997               0.292   326.817
4    6.641                0.011         0.998               0.394   223.178
..     ...                  ...           ...                 ...       ...
195  2.253                0.065         0.985               1.569     9.661
196  2.097                0.068         0.981               1.607     8.974
197  2.066                0.069         0.984               1.560     9.191
198  2.356                0.078         0.982               1.812     6.984
199  2.951                0.090         0.961               2.150     4.981

[200 rows x 5 columns]
-----------------按照range排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     0.004                0.015         0.998               0.285   232.125
1     0.029                0.022         0.991               0.639    69.479
2     0.030                0.013         0.993               0.616   123.120
3     0.043                0.018         0.994               0.554    98.768
4     0.054                0.019         0.996               0.553    93.969
..      ...                  ...           ...                 ...       ...
195  15.886                0.033         0.998               0.942    32.421
196  15.895                0.040         0.997               0.939    26.621
197  15.901                0.033         0.998               0.950    31.373
198  16.020                0.049         0.997               1.057    19.369
199  16.111                0.035         0.997               1.000    28.623

[200 rows x 5 columns]
-----------------按照cos_distance排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     2.951                0.090         0.961               2.150     4.981
1     2.128                0.060         0.980               1.462    11.240
2     2.097                0.068         0.981               1.607     8.974
3     1.648                0.059         0.982               1.381    12.031
4     2.356                0.078         0.982               1.812     6.984
..      ...                  ...           ...                 ...       ...
195   6.309                0.016         0.999               0.267   234.017
196   4.686                0.017         0.999               0.291   200.337
197   9.404                0.026         0.999               0.532    70.992
198  10.096                0.028         0.999               0.598    59.254
199   6.618                0.023         0.999               0.349   124.797

[200 rows x 5 columns]
-----------------按照Euclidean_distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    4.518                0.014         0.998               0.220   327.493
1    4.317                0.012         0.998               0.254   339.518
2    4.275                0.009         0.998               0.261   402.417
3    2.707                0.013         0.998               0.263   286.226
4    4.592                0.016         0.998               0.267   235.187
..     ...                  ...           ...                 ...       ...
195  2.066                0.069         0.984               1.560     9.191
196  2.253                0.065         0.985               1.569     9.661
197  2.097                0.068         0.981               1.607     8.974
198  2.356                0.078         0.982               1.812     6.984
199  2.951                0.090         0.961               2.150     4.981

[200 rows x 5 columns]
-----------------按照distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    4.275                0.009         0.998               0.261   402.417
1    0.094                0.007         0.995               0.404   356.041
2    4.317                0.012         0.998               0.254   339.518
3    4.259                0.011         0.998               0.276   333.102
4    4.518                0.014         0.998               0.220   327.493
..     ...                  ...           ...                 ...       ...
195  2.253                0.065         0.985               1.569     9.661
196  2.066                0.069         0.984               1.560     9.191
197  2.097                0.068         0.981               1.607     8.974
198  2.356                0.078         0.982               1.812     6.984
199  2.951                0.090         0.961               2.150     4.981

[200 rows x 5 columns]
   distance
0   402.417
1   356.041
2   339.518
3   122.821
4   121.468
5   119.509
6     8.974
7     6.984
8     4.981
   distance
0   402.417
1   122.821
2     4.981
3   356.041
4   121.468
5     6.984
6   339.518
7   119.509
8     8.974
sgan数据生成时间花费为：3643.32
================= config7 =================
2022年 02月 19日 星期六 21:16:37 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (167746) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (289194) - 没有那个进程
================= config8 =================
2022年 02月 19日 星期六 21:20:36 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (177853) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (308566) - 没有那个进程
   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                       50.0  ...                               4.0
1                       51.0  ...                               4.0
2                       50.0  ...                               3.0
3                       51.0  ...                               4.0
4                       50.0  ...                               4.0
5                       49.0  ...                               3.0
6                       50.0  ...                               4.0
7                       51.0  ...                               4.0
8                       51.0  ...                               3.0

[9 rows x 27 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 219.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 535.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 113.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2082964480.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6100000143051147
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 58.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5199999809265137
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2071998592.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1271692288.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 69.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 670.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 35.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 332.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4.0
configNum = 7	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 7 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 231.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 520.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 104.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1993291520.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6299999952316284
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 79.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5199999809265137
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2041296256.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1278027264.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 63.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 681.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 35.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 322.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4.0
configNum = 8	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 8 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 276.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 553.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 94.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 85.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1917294336.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6499999761581421
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 79.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6499999761581421
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1817828352.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1389643392.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 54.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 675.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 35.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.0
================= config9 =================
2022年 02月 19日 星期六 21:24:29 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (189446) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (19486) - 没有那个进程
================= config10 =================
2022年 02月 19日 星期六 21:28:09 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (201687) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (49722) - 没有那个进程
================= config11 =================
2022年 02月 19日 星期六 21:34:36 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (213189) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (69300) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 284.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.0
configNum = 9	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 9 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
[36, 0, 0, 495, 1, 6, 5, 635, 87, 47, 4, 1979189443, 0.75, 1, 974, 0.53, 1, 1281336765, 1759321716, 63, 1, 906, 1, 30, 2, 311, 1]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 36
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 495
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 1
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 635
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 87
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 47
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 4
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1979189443
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.75
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 1
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 974
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.53
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1281336765
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1759321716
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 63
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 906
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 30
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 2
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 311
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 1
configNum = 10	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 10 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
[36, 0, 0, 495, 1, 6, 5, 635, 87, 47, 4, 1979189443, 0.75, 1, 974, 0.53, 1, 1281336765, 1759321716, 63, 1, 906, 1, 30, 2, 311, 1, 378.424]
[43, 0, 1, 444, 3, 6, 7, 730, 37, 95, 6, 1406045214, 0.74, 0, 968, 0.62, 0, 1535873421, 1665737558, 37, 1, 613, 0, 18, 1, 291, 3]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 43
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 444
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 7
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 730
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 37
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 6
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1406045214
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.74
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 968
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.62
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1535873421
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1665737558
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 37
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 1
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 613
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 18
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 291
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3
configNum = 11	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 11 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
[43, 0, 1, 444, 3, 6, 7, 730, 37, 95, 6, 1406045214, 0.74, 0, 968, 0.62, 0, 1535873421, 1665737558, 37, 1, 613, 0, 18, 1, 291, 3, 204.288]
[39, 1, 1, 493, 4, 4, 4, 856, 96, 57, 6, 1486204388, 0.81, 0, 640, 0.62, 0, 1372307375, 1843720180, 30, 0, 669, 1, 18, 3, 341, 2]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 39
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 1
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 493
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 856
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 96
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 57
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 6
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1486204388
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.81
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 640
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.62
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1372307375
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1843720180
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 30
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 669
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 18
================= config12 =================
2022年 02月 19日 星期六 21:38:09 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (225489) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (91966) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 341
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2
configNum = 12	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 12 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
[39, 1, 1, 493, 4, 4, 4, 856, 96, 57, 6, 1486204388, 0.81, 0, 640, 0.62, 0, 1372307375, 1843720180, 30, 0, 669, 1, 18, 3, 341, 2, 229.653]
   spark.broadcast.blockSize  ...     runtime
0                         51  ...     172.458
1                         47  ...     224.205
2                         62  ...     366.089
3                       51.0  ...     223.146
4                       51.0  ...     175.051
5                       51.0  ...  100000.000
6                       50.0  ...     223.982
7                       51.0  ...     224.470
8                       50.0  ...     211.682
9                       36.0  ...     378.424
10                      43.0  ...     204.288
11                      39.0  ...     229.653

[12 rows x 28 columns]
选择50%rs和50%gan的所有样本作为bo算法的初始样本,样本个数为:12
------------使用ganrs生成初始样本点------------
Tmax = 137.5
self._queue.empty = True
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (12, 27)
before probe, target = (12,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]]
标准化后的train_x = 
[[ 3.88465484e-01 -4.47213595e-01  5.77350269e-01 -8.68172892e-01
   7.29324957e-01 -5.22232968e-01  0.00000000e+00 -4.75863215e-01
   5.92186568e-01  3.73913432e-01  5.71091545e-01  6.93169210e-01
  -5.22976391e-01 -5.77350269e-01 -6.31337197e-01 -5.50790888e-01
  -5.77350269e-01  7.76803415e-01 -5.61542199e-01  7.03789816e-01
   4.47213595e-01 -3.81342282e-01  5.77350269e-01  4.21366258e-01
   6.08163641e-01  4.29742391e-01  8.11502671e-01]
 [-2.33079291e-01 -4.47213595e-01 -1.73205081e+00  7.41336550e-01
  -1.02105494e+00  2.61116484e+00  1.09544512e+00 -1.49340051e+00
  -4.44139926e-01  4.86087462e-01  5.71091545e-01 -1.33021543e+00
  -1.43818504e+00  1.73205081e+00  2.05818798e-02 -3.67193874e-01
   1.73205081e+00 -1.91591254e+00  5.20578049e-01 -3.35138008e-02
  -2.23606798e+00  2.56304554e+00 -1.73205081e+00  1.57054696e+00
  -2.02721214e-01 -3.04639606e+00 -2.70500890e-01]
 [ 2.09771362e+00  2.23606798e+00 -1.73205081e+00  8.55051891e-01
  -1.89624489e+00  5.22232968e-01 -2.19089023e+00  1.70348906e+00
  -1.99862967e+00  1.55174074e+00 -1.92094429e+00  1.73931853e-01
   3.92232262e-01  1.73205081e+00 -5.73899393e-01  1.65237328e+00
   1.73205081e+00 -1.18614976e-01 -1.34383758e+00 -1.77623144e+00
   4.47213595e-01 -5.31752186e-02 -1.73205081e+00 -1.76207708e+00
  -1.82449092e+00  6.78037995e-01 -2.70500890e-01]
 [ 3.88465484e-01 -4.47213595e-01  5.77350269e-01 -8.50678224e-01
   7.29324957e-01 -5.22232968e-01  0.00000000e+00 -4.98643901e-01
   6.66209889e-01  2.61739403e-01  5.71091545e-01  7.39715994e-01
  -6.53720173e-01 -5.77350269e-01 -6.22721526e-01 -7.34388252e-01
  -5.77350269e-01  8.29384127e-01 -4.02097256e-01  7.70817417e-01
   4.47213595e-01 -3.90458034e-01  5.77350269e-01  6.51202398e-01
   6.08163641e-01  4.67941715e-01  8.11502671e-01]
 [ 3.88465484e-01 -4.47213595e-01  5.77350269e-01 -8.94414893e-01
   7.29324957e-01 -5.22232968e-01  0.00000000e+00 -4.83456777e-01
   7.77244871e-01 -1.86956716e-02  5.71091545e-01  7.58380333e-01
  -6.53720173e-01 -5.77350269e-01 -6.77287440e-01 -7.34388252e-01
  -5.77350269e-01  9.12449051e-01 -5.03975032e-01  8.37845019e-01
   4.47213595e-01 -3.81342282e-01  5.77350269e-01  5.36284328e-01
   6.08163641e-01  6.39838671e-01  8.11502671e-01]
 [ 3.88465484e-01 -4.47213595e-01  5.77350269e-01 -1.05186690e+00
   7.29324957e-01 -5.22232968e-01  0.00000000e+00 -6.88482949e-01
   1.18437314e+00  4.30000447e-01  1.19410050e+00  1.02242409e+00
  -9.15208889e-01 -5.77350269e-01 -6.77287440e-01 -1.10158193e+00
  -5.77350269e-01  1.05547035e+00 -1.22556117e+00  1.03892782e+00
   4.47213595e-01 -7.27740849e-01  5.77350269e-01  5.36284328e-01
   1.41904849e+00  7.16237318e-01  8.11502671e-01]
 [ 2.33079291e-01 -4.47213595e-01  5.77350269e-01 -8.85667560e-01
   7.29324957e-01 -5.22232968e-01  0.00000000e+00 -4.60676091e-01
   7.77244871e-01  4.30000447e-01  5.71091545e-01  7.60762042e-01
  -5.22976204e-01 -5.77350269e-01 -6.45696648e-01 -7.34388252e-01
  -5.77350269e-01  8.40494761e-01 -5.18349316e-01  8.37845019e-01
   4.47213595e-01 -3.99573786e-01  5.77350269e-01  4.21366258e-01
   6.08163641e-01  3.72443405e-01  8.11502671e-01]
 [ 3.88465484e-01 -4.47213595e-01  5.77350269e-01 -7.80699553e-01
   7.29324957e-01 -5.22232968e-01  0.00000000e+00 -5.74579520e-01
   4.44139926e-01  3.73913432e-01  5.71091545e-01  3.97084124e-01
  -2.61488267e-01 -5.77350269e-01 -5.85386953e-01 -7.34388252e-01
  -5.77350269e-01  7.53056887e-01 -4.91746517e-01  4.35679410e-01
   4.47213595e-01 -2.99300516e-01  5.77350269e-01  4.21366258e-01
   6.08163641e-01  1.81446787e-01  8.11502671e-01]
 [ 2.33079291e-01 -4.47213595e-01  5.77350269e-01 -3.87069526e-01
  -1.45864991e-01  5.22232968e-01  0.00000000e+00 -3.23991976e-01
   7.40233210e-02 -1.86956716e-01  5.71091545e-01  8.88697227e-02
  -3.29901772e-07 -5.77350269e-01 -5.85386953e-01  1.65237284e+00
  -5.77350269e-01  1.16637608e-01 -2.30310213e-02 -1.67569004e-01
   4.47213595e-01 -3.53995027e-01  5.77350269e-01  4.21366258e-01
   6.08163641e-01 -5.44340362e-01 -2.70500890e-01]
 [-1.94232742e+00 -4.47213595e-01 -1.73205081e+00  1.52859660e+00
  -1.89624489e+00  5.22232968e-01  0.00000000e+00  2.98680103e-01
  -1.85058303e-01 -2.31826328e+00 -1.92094429e+00  3.39891699e-01
   1.30744091e+00  1.73205081e+00  1.98495478e+00 -5.50790888e-01
   1.73205081e+00 -1.41124887e+00  1.52937867e+00  4.35679410e-01
   4.47213595e-01  1.75174363e+00  5.77350269e-01 -1.53224094e-01
  -1.01360607e+00 -2.86494927e-02 -2.43450801e+00]
 [-8.54624066e-01 -4.47213595e-01  5.77350269e-01  1.08248257e+00
  -1.45864991e-01  5.22232968e-01  2.19089023e+00  1.02006849e+00
  -2.03564133e+00  3.73913432e-01 -6.74926371e-01 -1.98455371e+00
   1.17669682e+00 -5.77350269e-01  1.96772344e+00  1.10158224e+00
  -5.77350269e-01 -6.86348193e-01  1.13638578e+00 -1.30703823e+00
   4.47213595e-01 -9.19171636e-01 -1.73205081e+00 -1.53224094e+00
  -1.82449092e+00 -4.10642729e-01 -2.70500890e-01]
 [-1.47616884e+00  2.23606798e+00  5.77350269e-01  1.51110193e+00
   7.29324957e-01 -1.56669890e+00 -1.09544512e+00  1.97685729e+00
   1.48046642e-01 -1.75739313e+00 -6.74926371e-01 -1.65945993e+00
   2.09190547e+00 -5.77350269e-01  1.02574345e+00  1.10158224e+00
  -5.77350269e-01 -1.15217162e+00  1.88379759e+00 -1.77623144e+00
  -2.23606798e+00 -4.08689538e-01  5.77350269e-01 -1.53224094e+00
  -2.02721214e-01  5.44340362e-01 -1.35250445e+00]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653]
upper = 
[7316.5832985  7311.20112547 7321.59513946 ... 7314.59112679 7314.24381911
 7313.41119103]
upper.argmax() = 807
all predict_target = 
[8545.58896095 8559.73647887 8532.20893091 ... 8550.83251272 8551.74509502
 8553.92726942]
upper.argmax() = 807, sortnumber[0] = 807
x_max = [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
 2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
 6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
 6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
 4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
 6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
 2.45101694e+00 2.32513524e+02 2.75066182e+00]
black_box_function中schafferRun(i) 中的i为[41.61023237552793, 0.3334779529633184, 0.5935894412688699, 341.24802052013837, 2.771041151377635, 6.058637382139876, 5.64034187456625, 659.9201590132398, 65.87205323229813, 67.18449606946342, 7.551483869343676, 2119847783.1022735, 0.6162548854396342, 0.24444972308921586, 78.8330880881482, 0.6637137687688482, 0.04379435710099622, 1600672124.0132568, 2011344951.4356527, 61.37944400358094, 0.6163844307306727, 568.5238345593191, 0.3503685712255744, 31.34493259895357, 2.4510169445244934, 232.5135242271842, 2.750661818868573]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 41.61023237552793
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.3334779529633184
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.5935894412688699
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 341.24802052013837
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.771041151377635
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.058637382139876
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.64034187456625
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 659.9201590132398
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 65.87205323229813
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 67.18449606946342
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.551483869343676
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2119847783.1022735
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6162548854396342
================= config13 =================
2022年 02月 19日 星期六 21:42:07 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (237008) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (108278) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.24444972308921586
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 78.8330880881482
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6637137687688482
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04379435710099622
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1600672124.0132568
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 2011344951.4356527
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 61.37944400358094
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.6163844307306727
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 568.5238345593191
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.3503685712255744
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 31.34493259895357
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 2.4510169445244934
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 232.5135242271842
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.750661818868573
configNum = 13	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 13 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 41.61023237552793, 'spark.broadcast.checksum': 0.3334779529633184, 'spark.broadcast.compress': 0.5935894412688699, 'spark.default.parallelism': 341.24802052013837, 'spark.executor.cores': 2.771041151377635, 'spark.executor.instances': 6.058637382139876, 'spark.executor.memory': 5.64034187456625, 'spark.executor.memoryOverhead': 659.9201590132398, 'spark.kryoserializer.buffer': 65.87205323229813, 'spark.kryoserializer.buffer.max': 67.18449606946342, 'spark.locality.wait': 7.551483869343676, 'spark.maxRemoteBlockSizeFetchToMem': 2119847783.1022735, 'spark.memory.fraction': 0.6162548854396342, 'spark.memory.offHeap.enabled': 0.24444972308921586, 'spark.memory.offHeap.size': 78.8330880881482, 'spark.memory.storageFraction': 0.6637137687688482, 'spark.rdd.compress': 0.04379435710099622, 'spark.reducer.maxBlocksInFlightPerAddress': 1600672124.0132568, 'spark.reducer.maxReqsInFlight': 2011344951.4356527, 'spark.reducer.maxSizeInFlight': 61.37944400358094, 'spark.scheduler.mode': 0.6163844307306727, 'spark.scheduler.revive.interval': 568.5238345593191, 'spark.shuffle.compress': 0.3503685712255744, 'spark.shuffle.file.buffer': 31.34493259895357, 'spark.shuffle.io.numConnectionsPerPeer': 2.4510169445244934, 'spark.shuffle.sort.bypassMergeThreshold': 232.5135242271842, 'spark.storage.memoryMapThreshold': 2.750661818868573} target = -195.389
x_probe = {'spark.broadcast.blockSize': 41.61023237552793, 'spark.broadcast.checksum': 0.3334779529633184, 'spark.broadcast.compress': 0.5935894412688699, 'spark.default.parallelism': 341.24802052013837, 'spark.executor.cores': 2.771041151377635, 'spark.executor.instances': 6.058637382139876, 'spark.executor.memory': 5.64034187456625, 'spark.executor.memoryOverhead': 659.9201590132398, 'spark.kryoserializer.buffer': 65.87205323229813, 'spark.kryoserializer.buffer.max': 67.18449606946342, 'spark.locality.wait': 7.551483869343676, 'spark.maxRemoteBlockSizeFetchToMem': 2119847783.1022735, 'spark.memory.fraction': 0.6162548854396342, 'spark.memory.offHeap.enabled': 0.24444972308921586, 'spark.memory.offHeap.size': 78.8330880881482, 'spark.memory.storageFraction': 0.6637137687688482, 'spark.rdd.compress': 0.04379435710099622, 'spark.reducer.maxBlocksInFlightPerAddress': 1600672124.0132568, 'spark.reducer.maxReqsInFlight': 2011344951.4356527, 'spark.reducer.maxSizeInFlight': 61.37944400358094, 'spark.scheduler.mode': 0.6163844307306727, 'spark.scheduler.revive.interval': 568.5238345593191, 'spark.shuffle.compress': 0.3503685712255744, 'spark.shuffle.file.buffer': 31.34493259895357, 'spark.shuffle.io.numConnectionsPerPeer': 2.4510169445244934, 'spark.shuffle.sort.bypassMergeThreshold': 232.5135242271842, 'spark.storage.memoryMapThreshold': 2.750661818868573}
target = -195.389
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.81900000e+01 6.38100000e+01]
 [0.00000000e+00 3.80000000e-01]
 [6.20000000e-01 1.00000000e+00]
 [2.00000000e+02 3.36050000e+02]
 [2.86000000e+00 4.00000000e+00]
 [4.00000000e+00 6.57000000e+00]
 [3.38000000e+00 6.62000000e+00]
 [3.84000000e+02 7.27790000e+02]
 [7.05200000e+01 1.28000000e+02]
 [5.68700000e+01 1.28000000e+02]
 [5.62000000e+00 1.00000000e+01]
 [1.65421689e+09 2.14748314e+09]
 [5.00000000e-01 7.67500000e-01]
 [0.00000000e+00 3.80000000e-01]
 [0.00000000e+00 4.55270000e+02]
 [5.00000000e-01 6.83500000e-01]
 [0.00000000e+00 3.80000000e-01]
 [1.63672010e+09 2.14748365e+09]
 [1.07374182e+09 1.67881182e+09]
 [4.85100000e+01 7.20000000e+01]
 [6.20000000e-01 1.00000000e+00]
 [5.00000000e+02 8.70600000e+02]
 [6.20000000e-01 1.00000000e+00]
 [2.21900000e+01 4.78100000e+01]
 [2.43000000e+00 5.00000000e+00]
 [2.58250000e+02 3.50000000e+02]
 [2.86000000e+00 4.00000000e+00]]
before probe, param.shape = (13, 27)
before probe, target = (13,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]]
标准化后的train_x = 
[[ 4.69771209e-01 -4.97492628e-01  6.26708370e-01 -9.17139608e-01
   7.83224269e-01 -5.82692396e-01 -5.51280979e-02 -5.29531971e-01
   6.70108557e-01  4.59902710e-01  5.69200009e-01  6.28852824e-01
  -5.05238485e-01 -5.99895175e-01 -6.02310142e-01 -6.41739592e-01
  -5.57952240e-01  8.40597173e-01 -6.43154767e-01  7.03453964e-01
   5.05536057e-01 -2.73018925e-01  6.53740283e-01  4.38465153e-01
   6.74072956e-01  5.24468103e-01  8.78092397e-01]
 [-1.50392462e-01 -4.97492628e-01 -1.76502001e+00  7.55921405e-01
  -1.03028589e+00  2.63676799e+00  1.06406354e+00 -1.57905244e+00
  -3.71712884e-01  5.70809491e-01  5.69200009e-01 -1.41307332e+00
  -1.45076524e+00  1.80379049e+00  6.74445750e-02 -4.72762810e-01
   1.82505340e+00 -1.93531471e+00  2.71877431e-01 -6.08181217e-02
  -2.25160684e+00  2.60361321e+00 -1.67488491e+00  1.63457027e+00
  -1.56618342e-01 -2.80690528e+00 -2.35657677e-01]
 [ 2.17522130e+00  2.27408023e+00 -1.76502001e+00  8.74126803e-01
  -1.93704098e+00  4.90461067e-01 -2.29351138e+00  1.71832156e+00
  -1.93444504e+00  1.62442391e+00 -2.01614818e+00  1.04857379e-01
   4.40288273e-01  1.80379049e+00 -5.43300916e-01  1.38598179e+00
   1.82505340e+00 -8.24866556e-02 -1.30465746e+00 -1.86727942e+00
   5.05536057e-01  4.75964205e-02 -1.67488491e+00 -1.83413457e+00
  -1.81800094e+00  7.62423344e-01 -2.35657677e-01]
 [ 4.69771209e-01 -4.97492628e-01  6.26708370e-01 -8.98954162e-01
   7.83224269e-01 -5.82692396e-01 -5.51280979e-02 -5.53028698e-01
   7.44524374e-01  3.48995929e-01  5.69200009e-01  6.75826144e-01
  -6.40313414e-01 -5.99895175e-01 -5.93458758e-01 -8.10716697e-01
  -5.57952240e-01  8.94802454e-01 -5.08329402e-01  7.72933245e-01
   5.05536057e-01 -2.81924907e-01  6.53740283e-01  6.77686177e-01
   6.74072956e-01  5.61076601e-01  8.78092397e-01]
 [ 4.69771209e-01 -4.97492628e-01  6.26708370e-01 -9.44417776e-01
   7.83224269e-01 -5.82692396e-01 -5.51280979e-02 -5.37364214e-01
   8.56148100e-01  7.17289772e-02  5.69200009e-01  6.94661515e-01
  -6.40313414e-01 -5.99895175e-01 -6.49517523e-01 -8.10716697e-01
  -5.57952240e-01  9.80433806e-01 -5.94476432e-01  8.42412525e-01
   5.05536057e-01 -2.73018925e-01  6.53740283e-01  5.58075665e-01
   6.74072956e-01  7.25814846e-01  8.78092397e-01]
 [ 4.69771209e-01 -4.97492628e-01  6.26708370e-01 -1.10808679e+00
   7.83224269e-01 -5.82692396e-01 -5.51280979e-02 -7.48834755e-01
   1.26543509e+00  5.15356100e-01  1.21553706e+00  9.61124868e-01
  -9.10464464e-01 -5.99895175e-01 -6.49517523e-01 -1.14866994e+00
  -5.57952240e-01  1.12787399e+00 -1.20464388e+00  1.05085037e+00
   5.05536057e-01 -6.11446235e-01  6.53740283e-01  5.58075665e-01
   1.50476425e+00  7.99031843e-01  8.78092397e-01]
 [ 3.14730292e-01 -4.97492628e-01  6.26708370e-01 -9.35325054e-01
   7.83224269e-01 -5.82692396e-01 -5.51280979e-02 -5.13867487e-01
   8.56148100e-01  5.15356100e-01  5.69200009e-01  6.97065050e-01
  -5.05238292e-01 -5.99895175e-01 -6.17062448e-01 -8.10716697e-01
  -5.57952240e-01  9.06256370e-01 -6.06631211e-01  8.42412525e-01
   5.05536057e-01 -2.90830889e-01  6.53740283e-01  4.38465153e-01
   6.74072956e-01  4.69555355e-01  8.78092397e-01]
 [ 4.69771209e-01 -4.97492628e-01  6.26708370e-01 -8.26212379e-01
   7.83224269e-01 -5.82692396e-01 -5.51280979e-02 -6.31351121e-01
   5.21276923e-01  4.59902710e-01  5.69200009e-01  3.30054530e-01
  -2.35088047e-01 -5.99895175e-01 -5.55102761e-01 -8.10716697e-01
  -5.57952240e-01  8.16116957e-01 -5.84136098e-01  4.25536842e-01
   5.05536057e-01 -1.92865089e-01  6.53740283e-01  4.38465153e-01
   6.74072956e-01  2.86512861e-01  8.78092397e-01]
 [ 3.14730292e-01 -4.97492628e-01  6.26708370e-01 -4.17039848e-01
  -1.23530813e-01  4.90461067e-01 -5.51280979e-02 -3.72887126e-01
   1.49197837e-01 -9.46311940e-02  5.69200009e-01  1.90157725e-02
   3.50621977e-02 -5.99895175e-01 -5.55102761e-01  1.38598139e+00
  -5.57952240e-01  1.60034448e-01 -1.87794036e-01 -1.99776683e-01
   5.05536057e-01 -2.46300980e-01  6.53740283e-01  4.38465153e-01
   6.74072956e-01 -4.09048615e-01 -2.35657677e-01]
 [-1.85584256e+00 -4.97492628e-01 -1.76502001e+00  1.57426647e+00
  -1.93704098e+00  4.90461067e-01 -5.51280979e-02  2.69356741e-01
  -1.11257523e-01 -2.20186003e+00 -2.01614818e+00  2.72338016e-01
   1.38581503e+00  1.80379049e+00  2.08556011e+00 -6.41739592e-01
   1.82505340e+00 -1.41505862e+00  1.12491114e+00  4.25536842e-01
   5.05536057e-01  1.81098082e+00  6.53740283e-01 -1.59587405e-01
  -9.87309641e-01  8.51661181e-02 -2.46315783e+00]
 [-7.70556132e-01 -4.97492628e-01  6.26708370e-01  1.11053760e+00
  -1.23530813e-01  4.90461067e-01  2.18325518e+00  1.01341976e+00
  -1.97165295e+00  4.59902710e-01 -7.23474086e-01 -2.07340770e+00
   1.25073978e+00 -5.99895175e-01  2.06785734e+00  8.79051447e-01
  -5.57952240e-01 -6.67760933e-01  7.92599505e-01 -1.38092445e+00
   5.05536057e-01 -7.98471853e-01 -1.67488491e+00 -1.59491354e+00
  -1.81800094e+00 -2.80918869e-01 -2.35657677e-01]
 [-1.39071980e+00  2.27408023e+00  6.26708370e-01  1.55608102e+00
   7.83224269e-01 -1.65584586e+00 -1.17431974e+00  2.00028228e+00
   2.23613654e-01 -1.64732613e+00 -7.23474086e-01 -1.74533489e+00
   2.19626654e+00 -5.99895175e-01  1.10010603e+00  8.79051447e-01
  -5.57952240e-01 -1.14797675e+00  1.42460494e+00 -1.86727942e+00
  -2.25160684e+00 -2.99736871e-01  6.53740283e-01 -1.59491354e+00
  -1.56618342e-01  6.34293599e-01 -1.34940775e+00]
 [-9.86026980e-01  4.26765816e-01 -3.45315298e-01  1.76242322e-01
  -3.31140412e-01  5.53387976e-01  6.61537175e-01  4.64537464e-01
  -8.97384236e-01 -1.08256129e+00  2.79307417e-01  8.48019811e-01
  -4.20750463e-01 -1.23148809e-02 -5.55595228e-01  1.61771264e+00
  -4.53590040e-01 -4.77517525e-01  2.01983028e+00  3.12941777e-01
  -5.52146886e-01 -1.19457577e+00 -8.59007826e-01  1.28067147e-03
  -6.12653789e-01 -1.35146991e+00 -5.13358095e-01]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389]
upper = 
[7184.0966239  7185.42624045 7186.63476903 ... 7184.4360506  7186.83993134
 7190.98726276]
upper.argmax() = 667
all predict_target = 
[7906.80520695 7903.35275581 7900.21731362 ... 7905.92434961 7899.6379303
 7888.89483581]
upper.argmax() = 667, sortnumber[0] = 667
x_max = [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
 3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
 1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
 6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
 6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
 8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
 4.20727348e+00 2.71769479e+02 3.61506238e+00]
black_box_function中schafferRun(i) 中的i为[55.522883659491576, 0.024412264984330544, 0.9180283732813987, 242.71125946209796, 3.4748737947655797, 6.278333966662391, 5.185460921617805, 523.5058394973503, 104.43184499894545, 73.85345468348744, 9.03889178547266, 1886452513.7924807, 0.654124783944005, 0.19667352710920277, 224.02820499384762, 0.5449524763825302, 0.06311955023380703, 1982305253.2458086, 1378699231.581141, 66.86202366431485, 0.8641386577652147, 755.5884437473841, 0.8005905389112187, 40.35813973091906, 4.207273477296989, 271.7694785073951, 3.6150623777102395]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 55.522883659491576
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.024412264984330544
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9180283732813987
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 242.71125946209796
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.4748737947655797
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.278333966662391
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.185460921617805
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 523.5058394973503
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 104.43184499894545
================= config14 =================
2022年 02月 19日 星期六 21:45:31 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (247369) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (120201) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 73.85345468348744
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 9.03889178547266
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1886452513.7924807
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.654124783944005
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.19667352710920277
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 224.02820499384762
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5449524763825302
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.06311955023380703
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1982305253.2458086
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1378699231.581141
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 66.86202366431485
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.8641386577652147
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 755.5884437473841
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.8005905389112187
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 40.35813973091906
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.207273477296989
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 271.7694785073951
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.6150623777102395
configNum = 14	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 14 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 55.522883659491576, 'spark.broadcast.checksum': 0.024412264984330544, 'spark.broadcast.compress': 0.9180283732813987, 'spark.default.parallelism': 242.71125946209796, 'spark.executor.cores': 3.4748737947655797, 'spark.executor.instances': 6.278333966662391, 'spark.executor.memory': 5.185460921617805, 'spark.executor.memoryOverhead': 523.5058394973503, 'spark.kryoserializer.buffer': 104.43184499894545, 'spark.kryoserializer.buffer.max': 73.85345468348744, 'spark.locality.wait': 9.03889178547266, 'spark.maxRemoteBlockSizeFetchToMem': 1886452513.7924807, 'spark.memory.fraction': 0.654124783944005, 'spark.memory.offHeap.enabled': 0.19667352710920277, 'spark.memory.offHeap.size': 224.02820499384762, 'spark.memory.storageFraction': 0.5449524763825302, 'spark.rdd.compress': 0.06311955023380703, 'spark.reducer.maxBlocksInFlightPerAddress': 1982305253.2458086, 'spark.reducer.maxReqsInFlight': 1378699231.581141, 'spark.reducer.maxSizeInFlight': 66.86202366431485, 'spark.scheduler.mode': 0.8641386577652147, 'spark.scheduler.revive.interval': 755.5884437473841, 'spark.shuffle.compress': 0.8005905389112187, 'spark.shuffle.file.buffer': 40.35813973091906, 'spark.shuffle.io.numConnectionsPerPeer': 4.207273477296989, 'spark.shuffle.sort.bypassMergeThreshold': 271.7694785073951, 'spark.storage.memoryMapThreshold': 3.6150623777102395} target = -219.319
x_probe = {'spark.broadcast.blockSize': 55.522883659491576, 'spark.broadcast.checksum': 0.024412264984330544, 'spark.broadcast.compress': 0.9180283732813987, 'spark.default.parallelism': 242.71125946209796, 'spark.executor.cores': 3.4748737947655797, 'spark.executor.instances': 6.278333966662391, 'spark.executor.memory': 5.185460921617805, 'spark.executor.memoryOverhead': 523.5058394973503, 'spark.kryoserializer.buffer': 104.43184499894545, 'spark.kryoserializer.buffer.max': 73.85345468348744, 'spark.locality.wait': 9.03889178547266, 'spark.maxRemoteBlockSizeFetchToMem': 1886452513.7924807, 'spark.memory.fraction': 0.654124783944005, 'spark.memory.offHeap.enabled': 0.19667352710920277, 'spark.memory.offHeap.size': 224.02820499384762, 'spark.memory.storageFraction': 0.5449524763825302, 'spark.rdd.compress': 0.06311955023380703, 'spark.reducer.maxBlocksInFlightPerAddress': 1982305253.2458086, 'spark.reducer.maxReqsInFlight': 1378699231.581141, 'spark.reducer.maxSizeInFlight': 66.86202366431485, 'spark.scheduler.mode': 0.8641386577652147, 'spark.scheduler.revive.interval': 755.5884437473841, 'spark.shuffle.compress': 0.8005905389112187, 'spark.shuffle.file.buffer': 40.35813973091906, 'spark.shuffle.io.numConnectionsPerPeer': 4.207273477296989, 'spark.shuffle.sort.bypassMergeThreshold': 271.7694785073951, 'spark.storage.memoryMapThreshold': 3.6150623777102395}
target = -219.319
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.94710000e+01 6.25290000e+01]
 [0.00000000e+00 3.42000000e-01]
 [6.58000000e-01 1.00000000e+00]
 [2.00000000e+02 3.24545000e+02]
 [2.97400000e+00 4.00000000e+00]
 [4.00000000e+00 6.41300000e+00]
 [3.54200000e+00 6.45800000e+00]
 [3.84000000e+02 7.08311000e+02]
 [7.42680000e+01 1.28000000e+02]
 [6.06830000e+01 1.28000000e+02]
 [5.85800000e+00 1.00000000e+01]
 [1.69542500e+09 2.14748314e+09]
 [5.00000000e-01 7.51750000e-01]
 [0.00000000e+00 3.42000000e-01]
 [0.00000000e+00 4.16043000e+02]
 [5.00000000e-01 6.68150000e-01]
 [0.00000000e+00 3.42000000e-01]
 [1.67801153e+09 2.14748365e+09]
 [1.07374182e+09 1.63707131e+09]
 [5.03590000e+01 7.20000000e+01]
 [6.58000000e-01 1.00000000e+00]
 [5.00000000e+02 8.50740000e+02]
 [6.58000000e-01 1.00000000e+00]
 [2.34710000e+01 4.65290000e+01]
 [2.58700000e+00 5.00000000e+00]
 [2.65925000e+02 3.50000000e+02]
 [2.97400000e+00 4.00000000e+00]]
before probe, param.shape = (14, 27)
before probe, target = (14,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]]
标准化后的train_x = 
[[ 0.3824135  -0.48124616  0.61438765 -0.88223788  0.78738218 -0.64890882
  -0.06845182 -0.4983093   0.6489163   0.52073228  0.47337693  0.66026755
  -0.53088346 -0.61276165 -0.61526244 -0.6337074  -0.54557902  0.81276102
  -0.64944191  0.66720045  0.51459809 -0.31577256  0.66353035  0.36031736
   0.62110253  0.58290081  0.87166635]
 [-0.23178409 -0.48124616 -1.85134766  0.82272402 -1.0882807   2.62016449
   1.09202555 -1.57353391 -0.4212535   0.6337927   0.47337693 -1.45787
  -1.51181429  1.88022173  0.07937358 -0.45929234  1.91284321 -2.02633147
   0.29839443 -0.11262661 -2.34487373  2.64603446 -1.74990851  1.5529437
  -0.21970966 -2.82580546 -0.27588042]
 [ 2.07145687  2.37615837 -1.85134766  0.94318328 -2.02611214  0.44078228
  -2.38940655  1.80459716 -2.02650819  1.70786672 -2.0732191   0.11671487
   0.45004738  1.88022173 -0.55406103  1.45927331  1.91284321 -0.13133248
  -1.33465964 -1.95585421  0.51459809  0.01433596 -1.74990851 -1.90567269
  -1.90133403  0.82637983 -0.27588042]
 [ 0.3824135  -0.48124616  0.61438765 -0.86370569  0.78738218 -0.64890882
  -0.06845182 -0.52238149  0.725357    0.40767186  0.47337693  0.70899407
  -0.6710161  -0.61276165 -0.60608223 -0.80812279 -0.54557902  0.86820003
  -0.50978302  0.73809382  0.51459809 -0.32494224  0.66353035  0.59884263
   0.62110253  0.62035912  0.87166635]
 [ 0.3824135  -0.48124616  0.61438765 -0.91003618  0.78738218 -0.64890882
  -0.06845182 -0.50633336  0.84001805  0.1250208   0.47337693  0.72853244
  -0.6710161  -0.61276165 -0.66422357 -0.80812279 -0.54557902  0.95578038
  -0.59901844  0.80898719  0.51459809 -0.31577256  0.66353035  0.47957999
   0.62110253  0.78892152  0.87166635]
 [ 0.3824135  -0.48124616  0.61438765 -1.07682593  0.78738218 -0.64890882
  -0.06845182 -0.7229831   1.2604419   0.57726249  1.11002594  1.00494108
  -0.95128262 -0.61276165 -0.66422357 -1.15695257 -0.54557902  1.10657635
  -1.23106055  1.02166729  0.51459809 -0.66422045  0.66353035  0.47957999
   1.46191472  0.86383814  0.87166635]
 [ 0.2288641  -0.48124616  0.61438765 -0.90077008  0.78738218 -0.64890882
  -0.06845182 -0.48226117  0.84001805  0.57726249  0.47337693  0.73102568
  -0.53088326 -0.61276165 -0.6305628  -0.80812279 -0.54557902  0.87991464
  -0.61160897  0.80898719  0.51459809 -0.33411193  0.66353035  0.36031736
   0.62110253  0.52671334  0.87166635]
 [ 0.3824135  -0.48124616  0.61438765 -0.78957691  0.78738218 -0.64890882
  -0.06845182 -0.60262213  0.4960349   0.52073228  0.47337693  0.35031712
  -0.25061757 -0.61276165 -0.56630131 -0.80812279 -0.54557902  0.78772363
  -0.5883074   0.38362697  0.51459809 -0.23324543  0.66353035  0.36031736
   0.62110253  0.33942179  0.87166635]
 [ 0.2288641  -0.48124616  0.61438765 -0.37260253 -0.15044926  0.44078228
  -0.06845182 -0.33782801  0.1138314  -0.04456984  0.47337693  0.02766937
   0.02964811 -0.61276165 -0.56630131  1.45927289 -0.54557902  0.11670848
  -0.17775638 -0.25441335  0.51459809 -0.28826352  0.66353035  0.36031736
   0.62110253 -0.37228611 -0.27588042]
 [-1.92082746 -0.48124616 -1.85134766  1.65667277 -2.02611214  0.44078228
  -0.06845182  0.32014527 -0.15371105 -2.19271787 -2.0732191   0.29044643
   1.43097821  1.88022173  2.17246185 -0.6337074   1.91284321 -1.49423419
   1.18200962  0.38362697  0.51459809  1.82993284  0.66353035 -0.23599581
  -1.06052184  0.13340108 -2.57097397]
 [-0.84598168 -0.48124616  0.61438765  1.18410181 -0.15044926  0.44078228
   2.25250291  1.08243138 -2.06472854  0.52073228 -0.79992109 -2.14285023
   1.29084523 -0.61276165  2.15410142  0.93602813 -0.54557902 -0.72992778
   0.83778453 -1.45960063  0.51459809 -0.85678375 -1.74990851 -1.66714742
  -1.90133403 -0.24118203 -0.27588042]
 [-1.46017927  2.37615837  0.61438765  1.63814058  0.78738218 -1.73859992
  -1.22892918  2.09346348  0.1902721  -1.62741576 -0.79992109 -1.80253266
   2.27177607 -0.61276165  1.15039828  0.93602813 -0.54557902 -1.22107345
   1.49244752 -1.95585421 -2.34487373 -0.34328161  0.66353035 -1.66714742
  -0.21970966  0.69527574 -1.4234272 ]
 [-1.05937966  0.47163526 -0.38771321  0.23199197 -0.36517407  0.50467891
   0.67465043  0.52010622 -0.96122857 -1.05168404  0.18782958  0.88761457
  -0.44323189 -0.00335255 -0.56681208  1.69846209 -0.43791399 -0.53535437
   2.10901184  0.2687403  -0.58233982 -1.26461601 -0.90431539 -0.07559561
  -0.6813013  -1.33658431 -0.56200765]
 [ 1.07689956 -0.41149044  0.41226732 -0.68105924  0.29490231  0.74408033
   0.14677138 -0.57449105  0.51254017 -0.6746864   1.13478635 -0.10327028
   0.08745027 -0.12245781 -0.12250477 -0.37291369 -0.39040451  0.61058921
  -0.21801164  0.65741884  0.12610641  0.45070682  0.1822678   0.99934322
   0.7953806  -0.60135345  0.42993242]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319]
upper = 
[7053.74762129 7061.00936879 7055.88412884 ... 7056.75431232 7055.89560036
 7055.61051932]
upper.argmax() = 6597
all predict_target = 
[7363.13479112 7344.49237802 7357.65051943 ... 7355.42238937 7357.62697917
 7358.35870047]
upper.argmax() = 6597, sortnumber[0] = 6597
x_max = [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
 3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
 9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
 7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
 4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
 9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
 4.62735024e+00 3.11235915e+02 3.67813674e+00]
black_box_function中schafferRun(i) 中的i为[55.83576633077796, 0.2231355262272191, 0.9085841181518495, 249.94829639465797, 3.482102482609869, 5.579323074976381, 5.7819312133198535, 527.9661523769253, 98.38904816530227, 71.2997164109964, 8.27711103522067, 1851315598.7408981, 0.7290677359150632, 0.19215581984517832, 106.59847680730138, 0.5120074682328422, 0.043948028690169685, 2058861742.0228791, 1278894482.392554, 60.57101220207886, 0.9100074333784284, 675.023304765119, 0.864312128319468, 41.59430674452539, 4.627350235304796, 311.235915358708, 3.678136741603755]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 55.83576633077796
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.2231355262272191
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9085841181518495
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 249.94829639465797
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.482102482609869
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.579323074976381
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.7819312133198535
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 527.9661523769253
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 98.38904816530227
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 71.2997164109964
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.27711103522067
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1851315598.7408981
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7290677359150632
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.19215581984517832
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 106.59847680730138
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5120074682328422
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.043948028690169685
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2058861742.0228791
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1278894482.392554
================= config15 =================
2022年 02月 19日 星期六 21:49:19 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (260134) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (133747) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 60.57101220207886
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9100074333784284
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 675.023304765119
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.864312128319468
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 41.59430674452539
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.627350235304796
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 311.235915358708
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.678136741603755
configNum = 15	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 15 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 55.83576633077796, 'spark.broadcast.checksum': 0.2231355262272191, 'spark.broadcast.compress': 0.9085841181518495, 'spark.default.parallelism': 249.94829639465797, 'spark.executor.cores': 3.482102482609869, 'spark.executor.instances': 5.579323074976381, 'spark.executor.memory': 5.7819312133198535, 'spark.executor.memoryOverhead': 527.9661523769253, 'spark.kryoserializer.buffer': 98.38904816530227, 'spark.kryoserializer.buffer.max': 71.2997164109964, 'spark.locality.wait': 8.27711103522067, 'spark.maxRemoteBlockSizeFetchToMem': 1851315598.7408981, 'spark.memory.fraction': 0.7290677359150632, 'spark.memory.offHeap.enabled': 0.19215581984517832, 'spark.memory.offHeap.size': 106.59847680730138, 'spark.memory.storageFraction': 0.5120074682328422, 'spark.rdd.compress': 0.043948028690169685, 'spark.reducer.maxBlocksInFlightPerAddress': 2058861742.0228791, 'spark.reducer.maxReqsInFlight': 1278894482.392554, 'spark.reducer.maxSizeInFlight': 60.57101220207886, 'spark.scheduler.mode': 0.9100074333784284, 'spark.scheduler.revive.interval': 675.023304765119, 'spark.shuffle.compress': 0.864312128319468, 'spark.shuffle.file.buffer': 41.59430674452539, 'spark.shuffle.io.numConnectionsPerPeer': 4.627350235304796, 'spark.shuffle.sort.bypassMergeThreshold': 311.235915358708, 'spark.storage.memoryMapThreshold': 3.678136741603755} target = -198.909
x_probe = {'spark.broadcast.blockSize': 55.83576633077796, 'spark.broadcast.checksum': 0.2231355262272191, 'spark.broadcast.compress': 0.9085841181518495, 'spark.default.parallelism': 249.94829639465797, 'spark.executor.cores': 3.482102482609869, 'spark.executor.instances': 5.579323074976381, 'spark.executor.memory': 5.7819312133198535, 'spark.executor.memoryOverhead': 527.9661523769253, 'spark.kryoserializer.buffer': 98.38904816530227, 'spark.kryoserializer.buffer.max': 71.2997164109964, 'spark.locality.wait': 8.27711103522067, 'spark.maxRemoteBlockSizeFetchToMem': 1851315598.7408981, 'spark.memory.fraction': 0.7290677359150632, 'spark.memory.offHeap.enabled': 0.19215581984517832, 'spark.memory.offHeap.size': 106.59847680730138, 'spark.memory.storageFraction': 0.5120074682328422, 'spark.rdd.compress': 0.043948028690169685, 'spark.reducer.maxBlocksInFlightPerAddress': 2058861742.0228791, 'spark.reducer.maxReqsInFlight': 1278894482.392554, 'spark.reducer.maxSizeInFlight': 60.57101220207886, 'spark.scheduler.mode': 0.9100074333784284, 'spark.scheduler.revive.interval': 675.023304765119, 'spark.shuffle.compress': 0.864312128319468, 'spark.shuffle.file.buffer': 41.59430674452539, 'spark.shuffle.io.numConnectionsPerPeer': 4.627350235304796, 'spark.shuffle.sort.bypassMergeThreshold': 311.235915358708, 'spark.storage.memoryMapThreshold': 3.678136741603755}
target = -198.909
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.06239000e+01 6.13761000e+01]
 [0.00000000e+00 3.07800000e-01]
 [6.92200000e-01 1.00000000e+00]
 [2.00000000e+02 3.14190500e+02]
 [3.07660000e+00 4.00000000e+00]
 [4.00000000e+00 6.27170000e+00]
 [3.68780000e+00 6.31220000e+00]
 [3.84000000e+02 6.90779900e+02]
 [7.76412000e+01 1.28000000e+02]
 [6.41147000e+01 1.25885300e+02]
 [6.07220000e+00 9.92780000e+00]
 [1.73251229e+09 2.14748314e+09]
 [5.00000000e-01 7.37575000e-01]
 [0.00000000e+00 3.07800000e-01]
 [0.00000000e+00 3.80738700e+02]
 [5.00000000e-01 6.54335000e-01]
 [0.00000000e+00 3.07800000e-01]
 [1.71517382e+09 2.14748365e+09]
 [1.07374182e+09 1.59950484e+09]
 [5.20231000e+01 7.20000000e+01]
 [6.92200000e-01 1.00000000e+00]
 [5.11134000e+02 8.32866000e+02]
 [6.92200000e-01 1.00000000e+00]
 [2.46239000e+01 4.53761000e+01]
 [2.72830000e+00 5.00000000e+00]
 [2.72832500e+02 3.50000000e+02]
 [3.07660000e+00 4.00000000e+00]]
before probe, param.shape = (15, 27)
before probe, target = (15,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]]
标准化后的train_x = 
[[ 0.3055779  -0.50851159  0.60606044 -0.86009163  0.7918015  -0.67046122
  -0.12582985 -0.47406144  0.65054406  0.58264271  0.43901516  0.69937809
  -0.60256406 -0.62466877 -0.59898854 -0.5736462  -0.53115636  0.76547312
  -0.62476959  0.67502309  0.51377428 -0.30613281  0.66114491  0.28173824
   0.54037972  0.59347357  0.86039124]
 [-0.30494463 -0.50851159 -1.93344218  0.88294361 -1.14383073  2.71331609
   1.0481503  -1.57641237 -0.45427079  0.69713906  0.43901516 -1.48845991
  -1.57676497  1.9542775   0.11452718 -0.3982813   1.99746774 -2.10642243
   0.34532588 -0.13097451 -2.43955177  2.75118459 -1.82765026  1.46542547
  -0.29402382 -2.9326408  -0.31756648]
 [ 1.98451487  2.4467762  -1.93344218  1.00609284 -2.11164685  0.45746455
  -2.47379015  1.88694391 -2.11149307  1.78485447 -2.16062706  0.137939
   0.37163684  1.9542775  -0.53612372  1.53073262  1.99746774 -0.1895285
  -1.32607908 -2.03605976  0.51377428  0.03462083 -1.82765026 -1.96726749
  -1.96283089  0.84533888 -0.31756648]
 [ 0.3055779  -0.50851159  0.60606044 -0.84114559  0.7918015  -0.67046122
  -0.12582985 -0.49874094  0.72945941  0.46814635  0.43901516  0.74970803
  -0.74173529 -0.62466877 -0.58955882 -0.74901144 -0.53115636  0.82155267
  -0.48183093  0.7482956   0.51377428 -0.31559819  0.66114491  0.51847569
   0.54037972  0.63222208  0.86039124]
 [ 0.3055779  -0.50851159  0.60606044 -0.88851068  0.7918015  -0.67046122
  -0.12582985 -0.48228794  0.84783243  0.18190545  0.43901516  0.76988934
  -0.74173529 -0.62466877 -0.6492804  -0.74901144 -0.53115636  0.91014493
  -0.57316197  0.82156811  0.51377428 -0.30613281  0.66114491  0.40010697
   0.54037972  0.80659037  0.86039124]
 [ 0.3055779  -0.50851159  0.60606044 -1.059025    0.7918015  -0.67046122
  -0.12582985 -0.70440342  1.28186683  0.63989089  1.08892571  1.05539361
  -1.02007897 -0.62466877 -0.6492804  -1.0997409  -0.53115636  1.0626832
  -1.22004705  1.04138564  0.51377428 -0.66581721  0.66114491  0.40010697
   1.37478326  0.88408739  0.86039124]
 [ 0.15294727 -0.50851159  0.60606044 -0.87903766  0.7918015  -0.67046122
  -0.12582985 -0.45760844  0.84783243  0.63989089  0.43901516  0.77246462
  -0.60256386 -0.62466877 -0.61470474 -0.74901144 -0.53115636  0.83340263
  -0.58604818  0.82156811  0.51377428 -0.32506357  0.66114491  0.28173824
   0.54037972  0.53535081  0.86039124]
 [ 0.3055779  -0.50851159  0.60606044 -0.76536145  0.7918015  -0.67046122
  -0.12582985 -0.58100593  0.49271337  0.58264271  0.43901516  0.37922828
  -0.32422101 -0.62466877 -0.54869668 -0.74901144 -0.53115636  0.74014644
  -0.5621994   0.38193305  0.51377428 -0.2209444   0.66114491  0.28173824
   0.54037972  0.34160826  0.86039124]
 [ 0.15294727 -0.50851159  0.60606044 -0.33907566 -0.17601462  0.45746455
  -0.12582985 -0.30953145  0.09813664  0.01016091  0.43901516  0.04596333
  -0.04587816 -0.62466877 -0.54869668  1.5307322  -0.53115636  0.06137834
  -0.14200693 -0.27751953  0.51377428 -0.27773667  0.66114491  0.28173824
   0.54037972 -0.39461342 -0.31756648]
 [-1.9838816  -0.50851159 -1.93344218  1.73551519 -2.11164685  0.45746455
  -0.12582985  0.36504151 -0.17806708 -2.1652699  -2.16062706  0.31738747
   1.34583775  1.9542775   2.26450405 -0.5736462   1.99746774 -1.56817726
   1.24969201  0.38193305  0.51377428  1.90876586  0.66114491 -0.31010537
  -1.12842736  0.12849146 -2.67348193]
 [-0.91546717 -0.50851159  0.60606044  1.25239129 -0.17601462  0.45746455
   2.22213045  1.14655896 -2.15095074  0.58264271 -0.86080595 -2.19598043
   1.20666619 -0.62466877  2.24564461  1.00463791 -0.53115636 -0.79504001
   0.89738309 -1.5231522   0.51377428 -0.86459017 -1.82765026 -1.73053005
  -1.96283089 -0.25899364 -0.31756648]
 [-1.5259897   2.4467762   0.60606044  1.71656915  0.7918015  -1.79838699
  -1.29981     2.18309789  0.17705198 -1.5927881  -0.86080595 -1.84446421
   2.18086709 -0.62466877  1.21466155  1.00463791 -0.53115636 -1.29186041
   1.56742028 -2.03605976 -2.43955177 -0.33452895  0.66114491 -1.73053005
  -0.29402382  0.7097191  -1.4955242 ]
 [-1.12758828  0.47701173 -0.42602024  0.27901998 -0.39760468  0.52360317
   0.6259188   0.57004718 -1.0117267  -1.00974425  0.14751979  0.9342063
  -0.51551385  0.00575393 -0.54922133  1.77122399 -0.4204169  -0.59821849
   2.19846409  0.26319085 -0.61916757 -1.28557393 -0.95565465 -0.15090742
  -0.75209722 -1.39212552 -0.61127632]
 [ 0.9959085  -0.43636632  0.39789328 -0.65442049  0.2835759   0.77140461
   0.09189759 -0.55216514  0.50975297 -0.62795851  1.11420189 -0.08928508
   0.01152743 -0.11745831 -0.09283807 -0.31143224 -0.37155075  0.5609654
  -0.18320755  0.66491322  0.11253144  0.48506349  0.16485561  0.9159744
   0.71332944 -0.63157066  0.406951  ]
 [ 1.04366398  0.15091811  0.37390957 -0.58586391  0.29057194 -0.01702779
   0.79214187 -0.51547238  0.27131826 -0.77415538  0.61911254 -0.24336845
   1.05452017 -0.12910923 -0.46194802 -0.88917206 -0.42002832  0.79350037
  -0.55893465  0.20395502  0.24799689 -0.27751608  0.32344559  1.06229791
   1.06384298  0.13306214  0.48124993]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909]
upper = 
[6934.15405692 6932.40063129 6943.22617161 ... 6932.53662711 6932.55744907
 6931.65088263]
upper.argmax() = 2500
all predict_target = 
[6877.03974973 6881.49650251 6853.94983613 ... 6881.1508924  6881.09799812
 6883.40081474]
upper.argmax() = 2500, sortnumber[0] = 2500
x_max = [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
 3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
 1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
 6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
 7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
 9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
 3.98541068e+00 2.97374188e+02 3.58144122e+00]
black_box_function中schafferRun(i) 中的i为[49.6840546055561, 0.01296741707414902, 0.8808458630879447, 249.6975597949391, 3.672726720924037, 5.848171362528645, 4.7099744608942995, 501.49234059590503, 114.49085334709895, 100.06997602232283, 7.360500873750892, 1904579212.0294871, 0.6427080709867633, 0.11335359096839814, 261.81332307219793, 0.5493915136024746, 0.07463357090275662, 1876103692.8371854, 1519191395.0139523, 69.0241607257949, 0.9563686406674594, 723.153391619218, 0.8899285947621551, 35.381209922779995, 3.9854106848723223, 297.3741880716091, 3.581441224709252]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 49.6840546055561
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.01296741707414902
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.8808458630879447
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 249.6975597949391
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.672726720924037
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.848171362528645
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.7099744608942995
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 501.49234059590503
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 114.49085334709895
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 100.06997602232283
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.360500873750892
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1904579212.0294871
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6427080709867633
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.11335359096839814
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 261.81332307219793
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5493915136024746
================= config16 =================
2022年 02月 19日 星期六 21:52:46 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (275060) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (148703) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.07463357090275662
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1876103692.8371854
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1519191395.0139523
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 69.0241607257949
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9563686406674594
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 723.153391619218
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.8899285947621551
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 35.381209922779995
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.9854106848723223
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 297.3741880716091
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.581441224709252
configNum = 16	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 16 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 49.6840546055561, 'spark.broadcast.checksum': 0.01296741707414902, 'spark.broadcast.compress': 0.8808458630879447, 'spark.default.parallelism': 249.6975597949391, 'spark.executor.cores': 3.672726720924037, 'spark.executor.instances': 5.848171362528645, 'spark.executor.memory': 4.7099744608942995, 'spark.executor.memoryOverhead': 501.49234059590503, 'spark.kryoserializer.buffer': 114.49085334709895, 'spark.kryoserializer.buffer.max': 100.06997602232283, 'spark.locality.wait': 7.360500873750892, 'spark.maxRemoteBlockSizeFetchToMem': 1904579212.0294871, 'spark.memory.fraction': 0.6427080709867633, 'spark.memory.offHeap.enabled': 0.11335359096839814, 'spark.memory.offHeap.size': 261.81332307219793, 'spark.memory.storageFraction': 0.5493915136024746, 'spark.rdd.compress': 0.07463357090275662, 'spark.reducer.maxBlocksInFlightPerAddress': 1876103692.8371854, 'spark.reducer.maxReqsInFlight': 1519191395.0139523, 'spark.reducer.maxSizeInFlight': 69.0241607257949, 'spark.scheduler.mode': 0.9563686406674594, 'spark.scheduler.revive.interval': 723.153391619218, 'spark.shuffle.compress': 0.8899285947621551, 'spark.shuffle.file.buffer': 35.381209922779995, 'spark.shuffle.io.numConnectionsPerPeer': 3.9854106848723223, 'spark.shuffle.sort.bypassMergeThreshold': 297.3741880716091, 'spark.storage.memoryMapThreshold': 3.581441224709252} target = -181.096
x_probe = {'spark.broadcast.blockSize': 49.6840546055561, 'spark.broadcast.checksum': 0.01296741707414902, 'spark.broadcast.compress': 0.8808458630879447, 'spark.default.parallelism': 249.6975597949391, 'spark.executor.cores': 3.672726720924037, 'spark.executor.instances': 5.848171362528645, 'spark.executor.memory': 4.7099744608942995, 'spark.executor.memoryOverhead': 501.49234059590503, 'spark.kryoserializer.buffer': 114.49085334709895, 'spark.kryoserializer.buffer.max': 100.06997602232283, 'spark.locality.wait': 7.360500873750892, 'spark.maxRemoteBlockSizeFetchToMem': 1904579212.0294871, 'spark.memory.fraction': 0.6427080709867633, 'spark.memory.offHeap.enabled': 0.11335359096839814, 'spark.memory.offHeap.size': 261.81332307219793, 'spark.memory.storageFraction': 0.5493915136024746, 'spark.rdd.compress': 0.07463357090275662, 'spark.reducer.maxBlocksInFlightPerAddress': 1876103692.8371854, 'spark.reducer.maxReqsInFlight': 1519191395.0139523, 'spark.reducer.maxSizeInFlight': 69.0241607257949, 'spark.scheduler.mode': 0.9563686406674594, 'spark.scheduler.revive.interval': 723.153391619218, 'spark.shuffle.compress': 0.8899285947621551, 'spark.shuffle.file.buffer': 35.381209922779995, 'spark.shuffle.io.numConnectionsPerPeer': 3.9854106848723223, 'spark.shuffle.sort.bypassMergeThreshold': 297.3741880716091, 'spark.storage.memoryMapThreshold': 3.581441224709252}
target = -181.096
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.16615100e+01 6.03384900e+01]
 [0.00000000e+00 2.77020000e-01]
 [7.22980000e-01 1.00000000e+00]
 [2.00000000e+02 3.04871450e+02]
 [3.16894000e+00 4.00000000e+00]
 [4.00000000e+00 6.14453000e+00]
 [3.81902000e+00 6.18098000e+00]
 [3.90998090e+02 6.75001910e+02]
 [8.06770800e+01 1.28000000e+02]
 [6.72032300e+01 1.22796770e+02]
 [6.26498000e+00 9.73502000e+00]
 [1.76589086e+09 2.14748314e+09]
 [5.00000000e-01 7.24817500e-01]
 [0.00000000e+00 2.77020000e-01]
 [0.00000000e+00 3.48964830e+02]
 [5.00000000e-01 6.41901500e-01]
 [0.00000000e+00 2.77020000e-01]
 [1.74861989e+09 2.14748365e+09]
 [1.07374182e+09 1.56569503e+09]
 [5.35207900e+01 7.20000000e+01]
 [7.22980000e-01 1.00000000e+00]
 [5.27220600e+02 8.16779400e+02]
 [7.22980000e-01 1.00000000e+00]
 [2.56615100e+01 4.43384900e+01]
 [2.85547000e+00 5.00000000e+00]
 [2.79049250e+02 3.50000000e+02]
 [3.16894000e+00 4.00000000e+00]]
before probe, param.shape = (16, 27)
before probe, target = (16,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]]
标准化后的train_x = 
[[ 0.30873378 -0.49145428  0.60461023 -0.8412798   0.78161092 -0.70911138
  -0.09918436 -0.43502786  0.59818064  0.53286577  0.45189484  0.72294471
  -0.61239796 -0.62156132 -0.62029342 -0.57639929 -0.52455309  0.77381653
  -0.66509444  0.63079057  0.50345191 -0.32734176  0.65477336  0.26898262
   0.51949639  0.62132688  0.86127178]
 [-0.32159519 -0.49145428 -2.0106611   0.93976333 -1.20354994  2.77672667
   1.10514102 -1.5548707  -0.51463871  0.64839821  0.45189484 -1.53663789
  -1.61786625  2.03281717  0.11660696 -0.39559123  2.07748104 -2.18701106
   0.33309507 -0.18454728 -2.53270503  2.82711843 -1.90368452  1.48742828
  -0.33485515 -3.01834074 -0.35021961]
 [ 2.04213845  2.53988313 -2.0106611   1.0655979  -2.19613037  0.45283463
  -2.50783512  1.9634415  -2.18386774  1.74595636 -2.23295816  0.14309465
   0.39307033  2.03281717 -0.55536828  1.59329743  2.07748104 -0.21075797
  -1.38671391 -2.11170946  0.50345191  0.02423894 -1.90368452 -2.04606412
  -2.04355821  0.88130314 -0.35021961]
 [ 0.30873378 -0.49145428  0.60461023 -0.82192063  0.78161092 -0.70911138
  -0.09918436 -0.46009897  0.67766774  0.41733333  0.45189484  0.77492509
  -0.75603595 -0.62156132 -0.61055465 -0.75720769 -0.52455309  0.83163267
  -0.51801627  0.70491219  0.50345191 -0.33710789  0.65477336  0.51267175
   0.51949639  0.66132322  0.86127178]
 [ 0.30873378 -0.49145428  0.60461023 -0.87031854  0.78161092 -0.70911138
  -0.09918436 -0.4433849   0.79689839  0.12850224  0.45189484  0.79576819
  -0.75603595 -0.62156132 -0.67223354 -0.75720769 -0.52455309  0.9229683
  -0.61199226  0.77903382  0.50345191 -0.32734176  0.65477336  0.39082719
   0.51949639  0.84130679  0.86127178]
 [ 0.30873378 -0.49145428  0.60461023 -1.04455102  0.78161092 -0.70911138
  -0.09918436 -0.66902487  1.23407742  0.59063199  1.12310809  1.09063486
  -1.04331318 -0.62156132 -0.67223354 -1.11882346 -0.52455309  1.08023012
  -1.27761119  1.00139868  0.50345191 -0.69845473  0.65477336  0.39082719
   1.37384792  0.92129948  0.86127178]
 [ 0.15115154 -0.49145428  0.60461023 -0.86063896  0.78161092 -0.70911138
  -0.09918436 -0.41831379  0.79689839  0.59063199  0.45189484  0.79842793
  -0.61239776 -0.62156132 -0.63652471 -0.75720769 -0.52455309  0.84384958
  -0.62525166  0.77903382  0.50345191 -0.34687402  0.65477336  0.26898262
   0.51949639  0.56133236  0.86127178]
 [ 0.30873378 -0.49145428  0.60461023 -0.74448398  0.78161092 -0.70911138
  -0.09918436 -0.54366933  0.43920645  0.53286577  0.45189484  0.3922964
  -0.32512138 -0.62156132 -0.56835331 -0.75720769 -0.52455309  0.74770558
  -0.60071221  0.33430408  0.50345191 -0.23944659  0.65477336  0.26898262
   0.51949639  0.36135062  0.86127178]
 [ 0.15115154 -0.49145428  0.60461023 -0.30890278 -0.21096951  0.45283463
  -0.09918436 -0.26788714  0.04177097 -0.04479641  0.45189484  0.04810287
  -0.037845   -0.62156132 -0.56835331  1.593297   -0.52455309  0.04791853
  -0.16835093 -0.33279052  0.50345191 -0.29804337  0.65477336  0.26898262
   0.51949639 -0.39857998 -0.35021961]
 [-2.05499986 -0.49145428 -2.0106611   1.81092573 -2.19613037  0.45283463
  -0.09918436  0.41738982 -0.23643387 -2.23991272 -2.23295816  0.32842767
   1.39853862  2.03281717  2.33704688 -0.57639929  2.07748104 -1.63209842
   1.26365173  0.33430408  0.50345191  1.95793281  0.65477336 -0.3402402
  -1.18920668  0.14137071 -2.77320238]
 [-0.95192416 -0.49145428  0.60461023  1.31726704 -0.21096951  0.45283463
   2.3094664   1.21130825 -2.22361129  0.53286577 -0.89053166 -2.26735975
   1.25490029 -0.62156132  2.31756933  1.05087325 -0.52455309 -0.83501994
   0.9011399  -1.5928581   0.50345191 -0.90354347 -1.90368452 -1.80237499
  -2.04355821 -0.25859277 -0.35021961]
 [-1.58225313  2.53988313  0.60461023  1.79156657  0.78161092 -1.8710574
  -1.30350974  2.2642948   0.12125806 -1.66225053 -0.89053166 -1.90431644
   2.26036858 -0.62156132  1.25279698  1.05087325 -0.52455309 -1.34722505
   1.59058143 -2.11170946 -2.53270503 -0.35664015  0.65477336 -1.80237499
  -0.33485515  0.74131592 -1.561711  ]
 [-1.17092686  0.51942991 -0.45826365  0.3226708  -0.43822958  0.52096811
   0.67199561  0.62564849 -1.07613345 -1.07393071  0.15084487  0.96547351
  -0.52255383  0.02730077 -0.56889515  1.84125342 -0.41059867 -0.63210359
   2.23990032  0.21418584 -0.66126516 -1.33790351 -1.00728129 -0.17636748
  -0.80387966 -1.42821547 -0.65229067]
 [ 1.02145993 -0.41745247  0.39023218 -0.63112388  0.26038093  0.77624368
   0.12417094 -0.5143709   0.4563695  -0.68869019  1.14921278 -0.09158067
   0.02140305 -0.09951534 -0.09755445 -0.30604646 -0.36031386  0.56297597
  -0.21074473  0.62056354  0.09095555  0.4889939   0.14459265  0.92184283
   0.6965808  -0.64316808  0.39492316]
 [ 1.07076468  0.18494479  0.36553289 -0.56107238  0.26755598 -0.03596924
   0.84251525 -0.47709591  0.21620732 -0.83620999  0.63789544 -0.25071681
   1.09787108 -0.11150705 -0.47876155 -0.90171876 -0.41019882  0.80271169
  -0.59735291  0.15426356  0.23022035 -0.29781577  0.30762166  1.07246306
   1.05547402  0.14608858  0.47133721]
 [ 0.10136415 -0.45214567  0.29298983 -0.56349941  0.45676587  0.27641795
  -0.44846948 -0.69833851  0.85615019  0.82573911  0.02265456 -0.00948431
  -0.1425847  -0.32067799  0.02510576 -0.22578509 -0.33035399  0.23040706
   0.33347207  0.78082465  0.37098025  0.17222894  0.37316031  0.31543098
   0.50703198 -0.13112065  0.35419143]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096]
upper = 
[6818.03249333 6824.18656181 6817.14267756 ... 6818.31923121 6837.43922583
 6814.66045633]
upper.argmax() = 2512
all predict_target = 
[6454.19611815 6438.65896666 6456.42572865 ... 6453.4732883  6405.00238274
 6462.68790653]
upper.argmax() = 2512, sortnumber[0] = 2512
x_max = [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
 3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
 1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
 5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
 1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
 9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
 3.93048949e+00 3.03647770e+02 3.50930541e+00]
black_box_function中schafferRun(i) 中的i为[48.438320439439124, 0.061624939188783985, 0.9542093092866556, 222.13153905696657, 3.7140292799375088, 5.5431065682923535, 5.512495874457688, 459.16020849857136, 108.87250892752698, 95.7181229438711, 7.553006038241897, 2021924582.41454, 0.5865332982579679, 0.10182204609323896, 163.3456126726975, 0.5500297817661387, 0.10339102306603988, 2120024804.1633987, 1557215060.9456325, 68.41835497994704, 0.9352689215452371, 620.7843559038881, 0.9568782694856875, 36.224465394107135, 3.93048948754127, 303.64777035692674, 3.509305409616576]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 48.438320439439124
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.061624939188783985
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9542093092866556
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 222.13153905696657
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.7140292799375088
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.5431065682923535
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.512495874457688
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 459.16020849857136
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 108.87250892752698
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.7181229438711
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.553006038241897
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2021924582.41454
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.5865332982579679
================= config17 =================
2022年 02月 19日 星期六 21:56:03 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (285922) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (160541) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.10182204609323896
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 163.3456126726975
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5500297817661387
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.10339102306603988
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2120024804.1633987
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1557215060.9456325
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 68.41835497994704
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9352689215452371
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 620.7843559038881
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9568782694856875
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 36.224465394107135
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.93048948754127
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 303.64777035692674
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.509305409616576
configNum = 17	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 17 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 48.438320439439124, 'spark.broadcast.checksum': 0.061624939188783985, 'spark.broadcast.compress': 0.9542093092866556, 'spark.default.parallelism': 222.13153905696657, 'spark.executor.cores': 3.7140292799375088, 'spark.executor.instances': 5.5431065682923535, 'spark.executor.memory': 5.512495874457688, 'spark.executor.memoryOverhead': 459.16020849857136, 'spark.kryoserializer.buffer': 108.87250892752698, 'spark.kryoserializer.buffer.max': 95.7181229438711, 'spark.locality.wait': 7.553006038241897, 'spark.maxRemoteBlockSizeFetchToMem': 2021924582.41454, 'spark.memory.fraction': 0.5865332982579679, 'spark.memory.offHeap.enabled': 0.10182204609323896, 'spark.memory.offHeap.size': 163.3456126726975, 'spark.memory.storageFraction': 0.5500297817661387, 'spark.rdd.compress': 0.10339102306603988, 'spark.reducer.maxBlocksInFlightPerAddress': 2120024804.1633987, 'spark.reducer.maxReqsInFlight': 1557215060.9456325, 'spark.reducer.maxSizeInFlight': 68.41835497994704, 'spark.scheduler.mode': 0.9352689215452371, 'spark.scheduler.revive.interval': 620.7843559038881, 'spark.shuffle.compress': 0.9568782694856875, 'spark.shuffle.file.buffer': 36.224465394107135, 'spark.shuffle.io.numConnectionsPerPeer': 3.93048948754127, 'spark.shuffle.sort.bypassMergeThreshold': 303.64777035692674, 'spark.storage.memoryMapThreshold': 3.509305409616576} target = -179.602
x_probe = {'spark.broadcast.blockSize': 48.438320439439124, 'spark.broadcast.checksum': 0.061624939188783985, 'spark.broadcast.compress': 0.9542093092866556, 'spark.default.parallelism': 222.13153905696657, 'spark.executor.cores': 3.7140292799375088, 'spark.executor.instances': 5.5431065682923535, 'spark.executor.memory': 5.512495874457688, 'spark.executor.memoryOverhead': 459.16020849857136, 'spark.kryoserializer.buffer': 108.87250892752698, 'spark.kryoserializer.buffer.max': 95.7181229438711, 'spark.locality.wait': 7.553006038241897, 'spark.maxRemoteBlockSizeFetchToMem': 2021924582.41454, 'spark.memory.fraction': 0.5865332982579679, 'spark.memory.offHeap.enabled': 0.10182204609323896, 'spark.memory.offHeap.size': 163.3456126726975, 'spark.memory.storageFraction': 0.5500297817661387, 'spark.rdd.compress': 0.10339102306603988, 'spark.reducer.maxBlocksInFlightPerAddress': 2120024804.1633987, 'spark.reducer.maxReqsInFlight': 1557215060.9456325, 'spark.reducer.maxSizeInFlight': 68.41835497994704, 'spark.scheduler.mode': 0.9352689215452371, 'spark.scheduler.revive.interval': 620.7843559038881, 'spark.shuffle.compress': 0.9568782694856875, 'spark.shuffle.file.buffer': 36.224465394107135, 'spark.shuffle.io.numConnectionsPerPeer': 3.93048948754127, 'spark.shuffle.sort.bypassMergeThreshold': 303.64777035692674, 'spark.storage.memoryMapThreshold': 3.509305409616576}
target = -179.602
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.25953590e+01 5.94046410e+01]
 [0.00000000e+00 2.49318000e-01]
 [7.50682000e-01 1.00000000e+00]
 [2.00000000e+02 2.96484305e+02]
 [3.25204600e+00 4.00000000e+00]
 [4.00000000e+00 6.03007700e+00]
 [3.93711800e+00 6.06288200e+00]
 [4.05198281e+02 6.60801719e+02]
 [8.34093720e+01 1.28000000e+02]
 [6.99829070e+01 1.20017093e+02]
 [6.43848200e+00 9.56151800e+00]
 [1.79593157e+09 2.14748314e+09]
 [5.06664250e-01 7.13335750e-01]
 [0.00000000e+00 2.49318000e-01]
 [0.00000000e+00 3.20368347e+02]
 [5.00000000e-01 6.30711350e-01]
 [0.00000000e+00 2.49318000e-01]
 [1.77872134e+09 2.14748365e+09]
 [1.07374182e+09 1.53526619e+09]
 [5.48687110e+01 7.20000000e+01]
 [7.50682000e-01 1.00000000e+00]
 [5.41698540e+02 8.02301460e+02]
 [7.50682000e-01 1.00000000e+00]
 [2.65953590e+01 4.34046410e+01]
 [2.96992300e+00 5.00000000e+00]
 [2.84644325e+02 3.50000000e+02]
 [3.25204600e+00 4.00000000e+00]]
before probe, param.shape = (17, 27)
before probe, target = (17,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]]
标准化后的train_x = 
[[ 0.32390631 -0.4867805   0.58975558 -0.80074939  0.76989471 -0.72607267
  -0.13260441 -0.37268093  0.57152472  0.50952069  0.45628487  0.70789471
  -0.55904401 -0.61715493 -0.61994448 -0.58036531 -0.52419769  0.7168011
  -0.70990451  0.59616056  0.49895622 -0.28162421  0.63638863  0.25061952
   0.50445508  0.6407917   0.86978247]
 [-0.32564974 -0.4867805  -2.08755636  0.99897619 -1.26161169  2.86640332
   1.09910233 -1.49114887 -0.56226531  0.62746993  0.45628487 -1.60278666
  -1.5690238   2.10903899  0.13770423 -0.39424373  2.15278174 -2.25010869
   0.31208167 -0.23119497 -2.62200786  2.90634433 -1.97811376  1.50015427
  -0.37075767 -3.11088828 -0.37638803]
 [ 2.11018544  2.62935598 -2.08755636  1.12613071 -2.27736489  0.47141933
  -2.59601789  2.02284368 -2.26295036  1.74798765 -2.30932288  0.11493178
   0.45093578  2.10903899 -0.55319129  1.65309368  2.15278174 -0.26979594
  -1.44872727 -2.18676259  0.49895622  0.07369117 -1.97811376 -2.1234965
  -2.12118316  0.90876884 -0.37638803]
 [ 0.32390631 -0.4867805   0.58975558 -0.78118716  0.76989471 -0.72607267
  -0.13260441 -0.39772126  0.65250972  0.39157146  0.45628487  0.76105058
  -0.70332649 -0.61715493 -0.6099315  -0.76648725 -0.52419769  0.774736
  -0.55932001  0.6713747   0.49895622 -0.29149408  0.63638863  0.50052647
   0.50445508  0.68201895  0.86978247]
 [ 0.32390631 -0.4867805   0.58975558 -0.83009274  0.76989471 -0.72607267
  -0.13260441 -0.38102771  0.77398722  0.09669837  0.45628487  0.78236504
  -0.70332649 -0.61715493 -0.67334703 -0.76648725 -0.52419769  0.86625925
  -0.65553638  0.74658884  0.49895622 -0.28162421  0.63638863  0.37557299
   0.50445508  0.86754159  0.86978247]
 [ 0.32390631 -0.4867805   0.58975558 -1.00615285  0.76989471 -0.72607267
  -0.13260441 -0.60639065  1.21940473  0.56849531  1.14768681  1.08389989
  -0.99189273 -0.61715493 -0.67334703 -1.13873006 -0.52419769  1.02384413
  -1.33702355  0.97223126  0.49895622 -0.65667933  0.63638863  0.37557299
   1.37966783  0.94999609  0.86978247]
 [ 0.16151729 -0.4867805   0.58975558 -0.82031162  0.76989471 -0.72607267
  -0.13260441 -0.35598738  0.77398722  0.56849531  0.45628487  0.78508492
  -0.5590438  -0.61715493 -0.63663277 -0.76648725 -0.52419769  0.786978
  -0.66911188  0.74658884  0.49895622 -0.30136395  0.63638863  0.25061952
   0.50445508  0.57895082  0.86978247]
 [ 0.32390631 -0.4867805   0.58975558 -0.70293822  0.76989471 -0.72607267
  -0.13260441 -0.48118901  0.40955471  0.50952069  0.45628487  0.36976903
  -0.27047842 -0.61715493 -0.56654192 -0.76648725 -0.52419769  0.69063651
  -0.64398741  0.295304    0.49895622 -0.19279536  0.63638863  0.25061952
   0.50445508  0.37281456  0.86978247]
 [ 0.16151729 -0.4867805   0.58975558 -0.26278794 -0.24585849  0.47141933
  -0.13260441 -0.20574542  0.0046297  -0.08022548  0.45628487  0.01779183
   0.01808696 -0.61715493 -0.56654192  1.65309324 -0.52419769 -0.01058806
  -0.20131872 -0.38162325  0.49895622 -0.25201459  0.63638863  0.25061952
   0.50445508 -0.41050324 -0.37638803]
 [-2.11192887 -0.4867805  -2.08755636  1.87927674 -2.27736489  0.47141933
  -0.13260441  0.47869019 -0.27881781 -2.32126094 -2.30932288  0.30445596
   1.46091558  2.10903899  2.42066334 -0.58036531  2.15278174 -1.69405614
   1.26482264  0.295304    0.49895622  2.02792576  0.63638863 -0.37414785
  -1.24597041  0.14606467 -2.86872902]
 [-0.97520579 -0.4867805   0.58975558  1.38043976 -0.24585849  0.47141933
   2.33080906  1.27163387 -2.30344286  0.50952069 -0.92651901 -2.35003324
   1.31663275 -0.61715493  2.40063738  1.09472893 -0.52419769 -0.89534029
   0.8936686  -1.66026362  0.49895622 -0.86394663 -1.97811376 -1.87358955
  -2.12118316 -0.26620786 -0.37638803]
 [-1.62476184  2.62935598  0.58975558  1.85971451  0.76989471 -1.92356467
  -1.36431115  2.32332761  0.0856147  -1.73151477 -0.92651901 -1.97877998
   2.32661254 -0.61715493  1.30588506  1.09472893 -0.52419769 -1.40859758
   1.5995463  -2.18676259 -2.62200786 -0.31123382  0.63638863 -1.87358955
  -0.37075767  0.76447345 -1.62255852]
 [-1.20088878  0.55238232 -0.49833226  0.3754106  -0.47842417  0.54163712
   0.65610899  0.68669316 -1.13434121 -1.13088801  0.14617995  0.95590812
  -0.46879675  0.04926242 -0.56709902  1.90833651 -0.4069611  -0.69200709
   2.26434484  0.17341528 -0.69829419 -1.30292068 -1.06207429 -0.20609385
  -0.85123463 -1.47182621 -0.68710591]
 [ 1.05837291 -0.41070855  0.37029196 -0.58838901  0.23649609  0.80472202
   0.09582905 -0.45192656  0.4270412  -0.73758873  1.17457666 -0.12505055
   0.07760085 -0.08098476 -0.08248716 -0.30206746 -0.35522796  0.50552742
  -0.24472317  0.58578279  0.07493785  0.543383    0.11503212  0.9201377
   0.68586347 -0.66261864  0.39008456]
 [ 1.10918162  0.20854026  0.34500675 -0.51760271  0.24383865 -0.03233792
   0.83050553 -0.41469733  0.18235324 -0.88819446  0.64787998 -0.28778544
   1.15889895 -0.0933009  -0.47442761 -0.91524516 -0.40654972  0.74575561
  -0.64054803  0.11260978  0.21809265 -0.25178458  0.28163236  1.07460106
   1.05352     0.15092774  0.46868597]
 [ 0.11021123 -0.44637225  0.27074279 -0.52005519  0.43746583  0.28960575
  -0.48983082 -0.6356683   0.8343556   0.80852059  0.01413393 -0.04109764
  -0.08712271 -0.30813106  0.0436267  -0.21944739 -0.32440516  0.17227534
   0.31246766  0.74840607  0.36278432  0.2232532   0.34860668  0.29825302
   0.49168633 -0.13481273  0.34818687]
 [-0.09208231 -0.29474877  0.46715962 -0.78968167  0.47941904 -0.0757069
   0.49864021 -0.9890051   0.60685478  0.55187172  0.14723238  0.50238165
  -0.89762821 -0.33956829 -0.28502499 -0.20756785 -0.24742205  0.93768045
   0.46326922  0.70284091  0.29693285 -0.78711604  0.52364676  0.40362073
   0.44361859 -0.00549145  0.25829335]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602]
upper = 
[6703.65971671 6704.6006251  6707.01516711 ... 6732.5447346  6708.03735339
 6705.17008492]
upper.argmax() = 2928
all predict_target = 
[6088.18074026 6085.82714073 6079.78745144 ... 6014.94914619 6077.17791163
 6084.4060125 ]
upper.argmax() = 2928, sortnumber[0] = 2928
x_max = [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
 3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
 1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
 5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
 1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
 9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
 3.56074001e+00 3.22940122e+02 3.72255945e+00]
black_box_function中schafferRun(i) 中的i为[56.588753142964, 0.12414407697144811, 0.9632043521115091, 247.55715957420182, 3.8509383018847014, 4.537707369663413, 5.066085656131569, 413.87602929851937, 111.39223512588904, 109.39617234951686, 6.891003280038859, 2015921163.0359344, 0.5957114204363266, 0.10870550260166648, 138.3293191382578, 0.5144640924096425, 0.1399484135254525, 2113333601.3793473, 1405661754.5523634, 63.08258967087843, 0.9814765818342771, 671.6309480813409, 0.9165816342739521, 32.819743360052335, 3.560740008334521, 322.9401221649149, 3.7225594468980407]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 56.588753142964
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.12414407697144811
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9632043521115091
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 247.55715957420182
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.8509383018847014
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.537707369663413
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.066085656131569
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 413.87602929851937
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 111.39223512588904
================= config18 =================
2022年 02月 19日 星期六 21:59:11 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (299479) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (172512) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 109.39617234951686
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 6.891003280038859
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2015921163.0359344
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.5957114204363266
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.10870550260166648
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 138.3293191382578
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5144640924096425
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.1399484135254525
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2113333601.3793473
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1405661754.5523634
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 63.08258967087843
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9814765818342771
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 671.6309480813409
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9165816342739521
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 32.819743360052335
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.560740008334521
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 322.9401221649149
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.7225594468980407
configNum = 18	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 18 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 56.588753142964, 'spark.broadcast.checksum': 0.12414407697144811, 'spark.broadcast.compress': 0.9632043521115091, 'spark.default.parallelism': 247.55715957420182, 'spark.executor.cores': 3.8509383018847014, 'spark.executor.instances': 4.537707369663413, 'spark.executor.memory': 5.066085656131569, 'spark.executor.memoryOverhead': 413.87602929851937, 'spark.kryoserializer.buffer': 111.39223512588904, 'spark.kryoserializer.buffer.max': 109.39617234951686, 'spark.locality.wait': 6.891003280038859, 'spark.maxRemoteBlockSizeFetchToMem': 2015921163.0359344, 'spark.memory.fraction': 0.5957114204363266, 'spark.memory.offHeap.enabled': 0.10870550260166648, 'spark.memory.offHeap.size': 138.3293191382578, 'spark.memory.storageFraction': 0.5144640924096425, 'spark.rdd.compress': 0.1399484135254525, 'spark.reducer.maxBlocksInFlightPerAddress': 2113333601.3793473, 'spark.reducer.maxReqsInFlight': 1405661754.5523634, 'spark.reducer.maxSizeInFlight': 63.08258967087843, 'spark.scheduler.mode': 0.9814765818342771, 'spark.scheduler.revive.interval': 671.6309480813409, 'spark.shuffle.compress': 0.9165816342739521, 'spark.shuffle.file.buffer': 32.819743360052335, 'spark.shuffle.io.numConnectionsPerPeer': 3.560740008334521, 'spark.shuffle.sort.bypassMergeThreshold': 322.9401221649149, 'spark.storage.memoryMapThreshold': 3.7225594468980407} target = -223.174
x_probe = {'spark.broadcast.blockSize': 56.588753142964, 'spark.broadcast.checksum': 0.12414407697144811, 'spark.broadcast.compress': 0.9632043521115091, 'spark.default.parallelism': 247.55715957420182, 'spark.executor.cores': 3.8509383018847014, 'spark.executor.instances': 4.537707369663413, 'spark.executor.memory': 5.066085656131569, 'spark.executor.memoryOverhead': 413.87602929851937, 'spark.kryoserializer.buffer': 111.39223512588904, 'spark.kryoserializer.buffer.max': 109.39617234951686, 'spark.locality.wait': 6.891003280038859, 'spark.maxRemoteBlockSizeFetchToMem': 2015921163.0359344, 'spark.memory.fraction': 0.5957114204363266, 'spark.memory.offHeap.enabled': 0.10870550260166648, 'spark.memory.offHeap.size': 138.3293191382578, 'spark.memory.storageFraction': 0.5144640924096425, 'spark.rdd.compress': 0.1399484135254525, 'spark.reducer.maxBlocksInFlightPerAddress': 2113333601.3793473, 'spark.reducer.maxReqsInFlight': 1405661754.5523634, 'spark.reducer.maxSizeInFlight': 63.08258967087843, 'spark.scheduler.mode': 0.9814765818342771, 'spark.scheduler.revive.interval': 671.6309480813409, 'spark.shuffle.compress': 0.9165816342739521, 'spark.shuffle.file.buffer': 32.819743360052335, 'spark.shuffle.io.numConnectionsPerPeer': 3.560740008334521, 'spark.shuffle.sort.bypassMergeThreshold': 322.9401221649149, 'spark.storage.memoryMapThreshold': 3.7225594468980407}
target = -223.174
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.34358231e+01 5.85641769e+01]
 [0.00000000e+00 2.24386200e-01]
 [7.75613800e-01 1.00000000e+00]
 [2.00000000e+02 2.88935875e+02]
 [3.32684140e+00 4.00000000e+00]
 [4.07293070e+00 5.92706930e+00]
 [4.04340620e+00 5.95659380e+00]
 [4.17978453e+02 6.48021547e+02]
 [8.58684348e+01 1.28000000e+02]
 [7.24846163e+01 1.17515384e+02]
 [6.59463380e+00 9.40536620e+00]
 [1.82296821e+09 2.14748314e+09]
 [5.16997825e-01 7.03002175e-01]
 [0.00000000e+00 2.24386200e-01]
 [0.00000000e+00 2.94631512e+02]
 [5.00000000e-01 6.20640215e-01]
 [0.00000000e+00 2.24386200e-01]
 [1.80581265e+09 2.14748365e+09]
 [1.07374182e+09 1.50788024e+09]
 [5.60818399e+01 7.20000000e+01]
 [7.75613800e-01 1.00000000e+00]
 [5.54728686e+02 7.89271314e+02]
 [7.75613800e-01 1.00000000e+00]
 [2.74358231e+01 4.25641769e+01]
 [3.07293070e+00 4.92706930e+00]
 [2.89679892e+02 3.50000000e+02]
 [3.32684140e+00 4.00000000e+00]]
before probe, param.shape = (18, 27)
before probe, target = (18,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]]
标准化后的train_x = 
[[ 0.25247851 -0.49504304  0.57492994 -0.78666832  0.74894254 -0.64525691
  -0.13351182 -0.29062729  0.54008281  0.42535593  0.48596257  0.69694122
  -0.52306818 -0.61495264 -0.61453673 -0.53633551 -0.53051575  0.66972455
  -0.72222798  0.5947077   0.48558519 -0.2728652   0.62788213  0.25912879
   0.51201473  0.63424483  0.85851684]
 [-0.38941624 -0.49504304 -2.16171781  1.05035967 -1.31959628  2.89388818
   1.13381165 -1.38606457 -0.61062554  0.54094347  0.48596257 -1.66599324
  -1.54582687  2.18229259  0.16215286 -0.34871778  2.22236345 -2.31434107
   0.32883295 -0.25449231 -2.7086394   3.00013717 -2.04943777  1.54487245
  -0.38821168 -3.20981257 -0.41411066]
 [ 2.01768905  2.71054585 -2.16171781  1.18014969 -2.35386569  0.53445812
  -2.66815877  2.05557046 -2.33668806  1.63902513 -2.35223471  0.0905692
   0.4996905   2.18229259 -0.54610592  1.71507724  2.22236345 -0.32257738
  -1.4820697  -2.26169234  0.48558519  0.09192764 -2.04943777 -2.18378416
  -2.1886645   0.90882036 -0.41411066]
 [ 0.25247851 -0.49504304  0.57492994 -0.76670062  0.74894254 -0.64525691
  -0.13351182 -0.315152    0.62227626  0.30976839  0.48596257  0.75129915
  -0.66917622 -0.61495264 -0.60427211 -0.72395359 -0.53051575  0.72799445
  -0.56735947  0.6719077   0.48558519 -0.28299833  0.62788213  0.51627752
   0.51201473  0.67648722  0.85851684]
 [ 0.25247851 -0.49504304  0.57492994 -0.81661986  0.74894254 -0.64525691
  -0.13351182 -0.29880219  0.74556644  0.02079953  0.48596257  0.7730956
  -0.66917622 -0.61495264 -0.66928137 -0.72395359 -0.53051575  0.82004693
  -0.66631313  0.7491077   0.48558519 -0.2728652   0.62788213  0.38770316
   0.51201473  0.86657797  0.85851684]
 [ 0.25247851 -0.49504304  0.57492994 -0.99632912  0.74894254 -0.64525691
  -0.13351182 -0.51952463  1.19763044  0.4831497   1.19551189  1.08144928
  -0.96139358 -0.61495264 -0.66928137 -1.09918869 -0.53051575  0.97854303
  -1.3671881   0.9807077   0.48558519 -0.6579243   0.62788213  0.38770316
   1.41224114  0.95106275  0.85851684]
 [ 0.09200482 -0.49504304  0.57492994 -0.80663601  0.74894254 -0.64525691
  -0.13351182 -0.27427748  0.74556644  0.4831497   0.48596257  0.775877
  -0.52306798 -0.61495264 -0.63164443 -0.72395359 -0.53051575  0.74030725
  -0.68027484  0.7491077   0.48558519 -0.29313147  0.62788213  0.25912879
   0.51201473  0.57088125  0.85851684]
 [ 0.25247851 -0.49504304  0.57492994 -0.68682984  0.74894254 -0.64525691
  -0.13351182 -0.39690105  0.3756959   0.42535593  0.48596257  0.35116927
  -0.23085149 -0.61495264 -0.55979209 -0.72395359 -0.53051575  0.64340867
  -0.6544356   0.28590769  0.48558519 -0.18166699  0.62788213  0.25912879
   0.51201473  0.3596693   0.85851684]
 [ 0.09200482 -0.49504304  0.57492994 -0.23755669 -0.28532687  0.53445812
  -0.13351182 -0.12712919 -0.03527137 -0.15258178  0.48596257 -0.00876745
   0.061365   -0.61495264 -0.55979209  1.71507679 -0.53051575 -0.06187065
  -0.1991733  -0.40889232  0.48558519 -0.24246579  0.62788213  0.25912879
   0.51201473 -0.44293609 -0.41411066]
 [-2.15462679 -0.49504304 -2.16171781  1.94890596 -2.35386569  0.53445812
  -0.13351182  0.54321303 -0.32294845 -2.34874509 -2.35223471  0.28437923
   1.52244918  2.18229259  2.50248624 -0.53633551  2.22236345 -1.7550732
   1.30867869  0.28590769  0.48558519  2.09828822  0.62788213 -0.38374304
  -1.28843809  0.12733616 -2.95936566]
 [-1.03131098 -0.49504304  0.57492994  1.43972973 -0.28532687  0.53445812
   2.40113513  1.31982901 -2.37778479  0.42535593 -0.93313607 -2.43013784
   1.3763408  -0.61495264  2.481957    1.15222405 -0.53051575 -0.95173886
   0.92696559 -1.72129233  0.48558519 -0.87072012 -2.04943777 -1.92663543
  -2.1886645  -0.29508773 -0.41411066]
 [-1.67320573  2.71054585  0.57492994  1.92893827  0.74894254 -1.82497194
  -1.4008353   2.34986704  0.04692209 -1.77080737 -0.93313607 -2.05048917
   2.39909948 -0.61495264  1.35969187  1.15222405 -0.53051575 -1.467964
   1.65292498 -2.26169234 -2.7086394  -0.3032646   0.62788213 -1.92663543
  -0.38821168  0.760972   -1.68673816]
 [-1.25433212  0.57395018 -0.5372726   0.41386961 -0.52213201  0.60363352
   0.67800847  0.74693296 -1.19123791 -1.18220694  0.16771825  0.95056314
  -0.43167906  0.06883318 -0.56036318  1.97237186 -0.40995518 -0.74722992
   2.33663655  0.16080077 -0.73976909 -1.32140307 -1.11138902 -0.21081918
  -0.88242073 -1.53039196 -0.73142528]
 [ 0.97828232 -0.41678736  0.35060247 -0.56990641  0.20582056  0.86281288
   0.10152716 -0.36824115  0.39344332 -0.79678267  1.22310753 -0.15484002
   0.1216319  -0.06480855 -0.06357228 -0.25580054 -0.35675526  0.45722921
  -0.24381258  0.58405592  0.05161355  0.57414773  0.09399921  0.94804821
   0.69860779 -0.70125931  0.36863464]
 [ 1.02849175  0.22023772  0.32475687 -0.49765293  0.21329698  0.03817922
   0.85744796 -0.33177852  0.14510415 -0.94437284  0.68258651 -0.32125495
   1.21661126 -0.07744569 -0.46536279 -0.8739073  -0.40953214  0.69884649
  -0.65089837  0.09838983  0.19812873 -0.24222964  0.26460229  1.1069876
   1.07677198  0.13231898  0.44890481]
 [ 0.0413039  -0.45347483  0.24884704 -0.50015625  0.41045379  0.35534359
  -0.501068   -0.54819941  0.80683564  0.71836897  0.0322064  -0.06898863
  -0.04517585 -0.29787485  0.06571102 -0.17251633 -0.32505855  0.12205013
   0.32922991  0.75097291  0.34621683  0.24547899  0.33318576  0.30814262
   0.49888105 -0.16045726  0.32584744]
 [-0.15860366 -0.29749882  0.44961695 -0.7753712   0.45317177 -0.00454593
   0.51598623 -0.89426057  0.57594007  0.46685897  0.16879831  0.48678075
  -0.86593637 -0.33013141 -0.2712002  -0.16054129 -0.24589276  0.89188112
   0.48432167  0.7042047   0.27881959 -0.79184019  0.51243146  0.41656365
   0.44943953 -0.02795171  0.23404541]
 [ 1.14932632 -0.09708817  0.47423322 -0.52152568  0.59477258 -1.19063048
  -0.04975992 -1.26445444  0.67949257  1.25736502 -0.3009253   0.45834745
  -0.73183631 -0.31087669 -0.35679445 -0.82781668 -0.14525468  0.87076324
  -0.13383726  0.29228362  0.42641724 -0.27660485  0.40454448 -0.02119632
   0.11658129  0.37952581  0.50543837]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174]
upper = 
[6605.51287265 6602.1578784  6603.42048616 ... 6594.02222705 6598.80525671
 6598.33131612]
upper.argmax() = 6906
all predict_target = 
[5733.87237567 5742.25200528 5739.14852492 ... 5762.49575937 5750.6108018
 5751.78373673]
upper.argmax() = 6906, sortnumber[0] = 6906
x_max = [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
 3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
 1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
 5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
 7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
 9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
 3.38869707e+00 3.29676843e+02 3.61259197e+00]
black_box_function中schafferRun(i) 中的i为[48.85803370789378, 0.1253495502461229, 0.8974356944617721, 238.38686327154912, 3.7456089775777386, 5.44124181609571, 4.480319876412344, 581.3044185484022, 119.67538045781146, 101.17055887276254, 8.426000482639031, 2092891031.405312, 0.5564496919454757, 0.12093254906049707, 151.18090617379295, 0.5279069913107358, 0.07169433337914521, 1964759299.909178, 1368889513.4555829, 64.61710973904316, 0.9538203332414724, 690.35036157389, 0.9139550206405839, 40.701069644359485, 3.388697070779583, 329.6768426070112, 3.612591968606447]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 48.85803370789378
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.1253495502461229
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.8974356944617721
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 238.38686327154912
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.7456089775777386
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.44124181609571
================= config19 =================
2022年 02月 19日 星期六 22:03:03 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (542) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (186970) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.480319876412344
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 581.3044185484022
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 119.67538045781146
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 101.17055887276254
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.426000482639031
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2092891031.405312
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.5564496919454757
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.12093254906049707
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 151.18090617379295
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5279069913107358
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.07169433337914521
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1964759299.909178
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1368889513.4555829
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 64.61710973904316
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9538203332414724
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 690.35036157389
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9139550206405839
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 40.701069644359485
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.388697070779583
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 329.6768426070112
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.612591968606447
configNum = 19	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 19 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 48.85803370789378, 'spark.broadcast.checksum': 0.1253495502461229, 'spark.broadcast.compress': 0.8974356944617721, 'spark.default.parallelism': 238.38686327154912, 'spark.executor.cores': 3.7456089775777386, 'spark.executor.instances': 5.44124181609571, 'spark.executor.memory': 4.480319876412344, 'spark.executor.memoryOverhead': 581.3044185484022, 'spark.kryoserializer.buffer': 119.67538045781146, 'spark.kryoserializer.buffer.max': 101.17055887276254, 'spark.locality.wait': 8.426000482639031, 'spark.maxRemoteBlockSizeFetchToMem': 2092891031.405312, 'spark.memory.fraction': 0.5564496919454757, 'spark.memory.offHeap.enabled': 0.12093254906049707, 'spark.memory.offHeap.size': 151.18090617379295, 'spark.memory.storageFraction': 0.5279069913107358, 'spark.rdd.compress': 0.07169433337914521, 'spark.reducer.maxBlocksInFlightPerAddress': 1964759299.909178, 'spark.reducer.maxReqsInFlight': 1368889513.4555829, 'spark.reducer.maxSizeInFlight': 64.61710973904316, 'spark.scheduler.mode': 0.9538203332414724, 'spark.scheduler.revive.interval': 690.35036157389, 'spark.shuffle.compress': 0.9139550206405839, 'spark.shuffle.file.buffer': 40.701069644359485, 'spark.shuffle.io.numConnectionsPerPeer': 3.388697070779583, 'spark.shuffle.sort.bypassMergeThreshold': 329.6768426070112, 'spark.storage.memoryMapThreshold': 3.612591968606447} target = -217.516
x_probe = {'spark.broadcast.blockSize': 48.85803370789378, 'spark.broadcast.checksum': 0.1253495502461229, 'spark.broadcast.compress': 0.8974356944617721, 'spark.default.parallelism': 238.38686327154912, 'spark.executor.cores': 3.7456089775777386, 'spark.executor.instances': 5.44124181609571, 'spark.executor.memory': 4.480319876412344, 'spark.executor.memoryOverhead': 581.3044185484022, 'spark.kryoserializer.buffer': 119.67538045781146, 'spark.kryoserializer.buffer.max': 101.17055887276254, 'spark.locality.wait': 8.426000482639031, 'spark.maxRemoteBlockSizeFetchToMem': 2092891031.405312, 'spark.memory.fraction': 0.5564496919454757, 'spark.memory.offHeap.enabled': 0.12093254906049707, 'spark.memory.offHeap.size': 151.18090617379295, 'spark.memory.storageFraction': 0.5279069913107358, 'spark.rdd.compress': 0.07169433337914521, 'spark.reducer.maxBlocksInFlightPerAddress': 1964759299.909178, 'spark.reducer.maxReqsInFlight': 1368889513.4555829, 'spark.reducer.maxSizeInFlight': 64.61710973904316, 'spark.scheduler.mode': 0.9538203332414724, 'spark.scheduler.revive.interval': 690.35036157389, 'spark.shuffle.compress': 0.9139550206405839, 'spark.shuffle.file.buffer': 40.701069644359485, 'spark.shuffle.io.numConnectionsPerPeer': 3.388697070779583, 'spark.shuffle.sort.bypassMergeThreshold': 329.6768426070112, 'spark.storage.memoryMapThreshold': 3.612591968606447}
target = -217.516
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.41922408e+01 5.78077592e+01]
 [0.00000000e+00 2.01947580e-01]
 [7.98052420e-01 1.00000000e+00]
 [2.00000000e+02 2.82142287e+02]
 [3.39415726e+00 4.00000000e+00]
 [4.16563763e+00 5.83436237e+00]
 [4.13906558e+00 5.86093442e+00]
 [4.29480608e+02 6.36519392e+02]
 [8.80815913e+01 1.27918409e+02]
 [7.47361547e+01 1.15263845e+02]
 [6.73517042e+00 9.26482958e+00]
 [1.84730118e+09 2.14748314e+09]
 [5.26298042e-01 6.93701958e-01]
 [0.00000000e+00 2.01947580e-01]
 [0.00000000e+00 2.71468361e+02]
 [5.00000000e-01 6.11576194e-01]
 [0.00000000e+00 2.01947580e-01]
 [1.83019483e+09 2.14748365e+09]
 [1.07374182e+09 1.48323289e+09]
 [5.71736559e+01 7.20000000e+01]
 [7.98052420e-01 1.00000000e+00]
 [5.66455817e+02 7.77544183e+02]
 [7.98052420e-01 1.00000000e+00]
 [2.81922408e+01 4.18077592e+01]
 [3.16563763e+00 4.83436237e+00]
 [2.94211903e+02 3.50000000e+02]
 [3.39415726e+00 4.00000000e+00]]
before probe, param.shape = (19, 27)
before probe, target = (19,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]]
标准化后的train_x = 
[[ 2.64273378e-01 -5.03452277e-01  5.73468137e-01 -7.67518722e-01
   7.38620702e-01 -6.55926087e-01 -9.28175749e-02 -3.04141730e-01
   4.86590013e-01  3.88524739e-01  4.49368266e-01  6.59886145e-01
  -4.47183656e-01 -6.15604072e-01 -6.12884701e-01 -5.15432640e-01
  -5.25505799e-01  6.63533042e-01 -7.25135643e-01  5.86196464e-01
   4.79171168e-01 -2.75587540e-01  6.21015534e-01  2.07279219e-01
   5.28095577e-01  6.18988596e-01  8.59263409e-01]
 [-3.95066320e-01 -5.03452277e-01 -2.23178575e+00  1.10145218e+00
  -1.37352198e+00  2.97871239e+00  1.18825265e+00 -1.42927476e+00
  -6.64559064e-01  5.05413600e-01  4.49368266e-01 -1.72566060e+00
  -1.45379169e+00  2.25252033e+00  1.83040953e-01 -3.24332737e-01
   2.29458391e+00 -2.38935674e+00  3.52444858e-01 -2.82425579e-01
  -2.79275612e+00  3.08643439e+00 -2.11830182e+00  1.49531169e+00
  -3.96763445e-01 -3.30240613e+00 -4.43664823e-01]
 [ 2.07745755e+00  2.78922427e+00 -2.23178575e+00  1.23349904e+00
  -2.42959331e+00  5.55620071e-01 -2.65495802e+00  2.10565812e+00
  -2.39128268e+00  1.61585778e+00 -2.42006382e+00  4.77113955e-02
   5.59424382e-01  2.25252033e+00 -5.42759093e-01  1.77776620e+00
   2.29458391e+00 -3.51655230e-01 -1.50414911e+00 -2.33553223e+00
   4.79171168e-01  9.91269786e-02 -2.11830182e+00 -2.23998247e+00
  -2.24648149e+00  8.99088219e-01 -4.43664823e-01]
 [ 2.64273378e-01 -5.03452277e-01  5.73468137e-01 -7.47203821e-01
   7.38620702e-01 -6.55926087e-01 -9.28175749e-02 -3.29331276e-01
   5.68814948e-01  2.71635878e-01  4.49368266e-01  7.14764256e-01
  -5.90984461e-01 -6.15604072e-01 -6.02365860e-01 -7.06532908e-01
  -5.25505799e-01  7.23146875e-01 -5.66359608e-01  6.65162105e-01
   4.79171168e-01 -2.85996277e-01  6.21015534e-01  4.64885712e-01
   5.28095577e-01  6.62080846e-01  8.59263409e-01]
 [ 2.64273378e-01 -5.03452277e-01  5.73468137e-01 -7.97991073e-01
   7.38620702e-01 -6.55926087e-01 -9.28175749e-02 -3.12538245e-01
   6.92152349e-01 -2.05862734e-02  4.49368266e-01  7.36769292e-01
  -5.90984461e-01 -6.15604072e-01 -6.68985188e-01 -7.06532908e-01
  -5.25505799e-01  8.17322444e-01 -6.67809983e-01  7.44127745e-01
   4.79171168e-01 -2.75587540e-01  6.21015534e-01  3.36082465e-01
   5.28095577e-01  8.55995970e-01  8.59263409e-01]
 [ 2.64273378e-01 -5.03452277e-01  5.73468137e-01 -9.80825183e-01
   7.38620702e-01 -6.55926087e-01 -9.28175749e-02 -5.39244154e-01
   1.14438949e+00  4.46969170e-01  1.16672629e+00  1.04807378e+00
  -8.78587341e-01 -6.15604072e-01 -6.68985188e-01 -1.08873235e+00
  -5.25505799e-01  9.79474071e-01 -1.38636890e+00  9.81024666e-01
   4.79171168e-01 -6.71119532e-01  6.21015534e-01  3.36082465e-01
   1.45295460e+00  9.42180469e-01  8.59263409e-01]
 [ 9.94384531e-02 -5.03452277e-01  5.73468137e-01 -7.87833623e-01
   7.38620702e-01 -6.55926087e-01 -9.28175749e-02 -2.87348700e-01
   6.92152349e-01  4.46969170e-01  4.49368266e-01  7.39577300e-01
  -4.47183450e-01 -6.15604072e-01 -6.30416103e-01 -7.06532908e-01
  -5.25505799e-01  7.35743652e-01 -6.82123963e-01  7.44127745e-01
   4.79171168e-01 -2.96405013e-01  6.21015534e-01  2.07279219e-01
   5.28095577e-01  5.54350221e-01  8.59263409e-01]
 [ 2.64273378e-01 -5.03452277e-01  5.73468137e-01 -6.65944216e-01
   7.38620702e-01 -6.55926087e-01 -9.28175749e-02 -4.13296427e-01
   3.22140145e-01  3.88524739e-01  4.49368266e-01  3.10805303e-01
  -1.59581428e-01 -6.15604072e-01 -5.56784215e-01 -7.06532908e-01
  -5.25505799e-01  6.36610213e-01 -6.55632769e-01  2.70333903e-01
   4.79171168e-01 -1.81908910e-01  6.21015534e-01  2.07279219e-01
   5.28095577e-01  3.38888972e-01  8.59263409e-01]
 [ 9.94384531e-02 -5.03452277e-01  5.73468137e-01 -2.08858941e-01
  -3.17450637e-01  5.55620071e-01 -9.28175749e-02 -1.36211427e-01
  -8.89845253e-02 -1.95919565e-01  4.49368266e-01 -5.25758578e-02
   1.28020594e-01 -6.15604072e-01 -5.56784215e-01  1.77776575e+00
  -5.25505799e-01 -8.49355973e-02 -1.88883645e-01 -4.40356860e-01
   4.79171168e-01 -2.44361330e-01  6.21015534e-01  2.07279219e-01
   5.28095577e-01 -4.79863773e-01 -4.43664823e-01]
 [-2.20825049e+00 -5.03452277e-01 -2.23178575e+00  2.01562273e+00
  -2.42959331e+00  5.55620071e-01 -9.28175749e-02  5.52302814e-01
  -3.76771795e-01 -2.41680792e+00 -2.42006382e+00  2.43376106e-01
   1.56603242e+00  2.25252033e+00  2.58133676e+00 -5.15432640e-01
   2.29458391e+00 -1.81718998e+00  1.35701332e+00  2.70333903e-01
   4.79171168e-01  2.16005683e+00  6.21015534e-01 -4.36737015e-01
  -1.32162247e+00  1.01881599e-01 -3.04952129e+00]
 [-1.05440602e+00 -5.03452277e-01  5.73468137e-01  1.49759275e+00
  -3.17450637e-01  5.55620071e-01  2.46932287e+00  1.34997175e+00
  -2.43239515e+00  3.88524739e-01 -9.85347775e-01 -2.49711774e+00
   1.42223127e+00 -6.15604072e-01  2.56029907e+00  1.20446649e+00
  -5.25505799e-01 -9.95327629e-01  9.65669128e-01 -1.78277274e+00
   4.79171168e-01 -8.89703001e-01 -2.11830182e+00 -1.98237598e+00
  -2.24648149e+00 -3.29040899e-01 -4.43664823e-01]
 [-1.71374572e+00  2.78922427e+00  5.73468137e-01  1.99530783e+00
   7.38620702e-01 -1.86747225e+00 -1.37388780e+00  2.40793266e+00
  -6.75959121e-03 -1.83236361e+00 -9.85347775e-01 -2.11383599e+00
   2.42883931e+00 -6.15604072e-01  1.41023910e+00  1.20446649e+00
  -5.25505799e-01 -1.52345893e+00  1.70994538e+00 -2.33553223e+00
  -2.79275612e+00 -3.06813750e-01  6.21015534e-01 -1.98237598e+00
  -3.96763445e-01  7.48265345e-01 -1.74659306e+00]
 [-1.28348826e+00  5.94582759e-01 -5.66616662e-01  4.53894602e-01
  -5.59247515e-01  6.26661966e-01  7.27505333e-01  7.61545307e-01
  -1.24539381e+00 -1.23713654e+00  1.27621622e-01  9.15935117e-01
  -3.57237685e-01  8.55081446e-02 -5.57369455e-01  2.03983619e+00
  -4.02001783e-01 -7.86101911e-01  2.41090783e+00  1.42365661e-01
  -7.75991081e-01 -1.35264369e+00 -1.15853111e+00 -2.63505330e-01
  -9.04495377e-01 -1.58919781e+00 -7.68534579e-01]
 [ 1.00980256e+00 -4.23070585e-01  3.43516913e-01 -5.46987677e-01
   1.84049967e-01  8.92834519e-01  1.44770889e-01 -3.83859593e-01
   3.39894359e-01 -8.47373056e-01  1.19462562e+00 -2.00046285e-01
   1.87335804e-01 -5.15199290e-02 -4.82746599e-02 -2.29690961e-01
  -3.47503005e-01  4.46136726e-01 -2.34649229e-01  5.75301075e-01
   3.46427353e-02  5.94462556e-01  7.47697367e-02  8.97425013e-01
   7.19794323e-01 -7.43384117e-01  3.57717313e-01]
 [ 1.06137656e+00  2.31260838e-01  3.17023379e-01 -4.73477832e-01
   1.91683977e-01  4.59505588e-02  9.08891219e-01 -3.46408508e-01
   9.14600728e-02 -9.96624835e-01  6.48156089e-01 -3.68053733e-01
   1.26502406e+00 -6.44772755e-02 -4.60016216e-01 -8.59269749e-01
  -4.01568416e-01  6.93326648e-01 -6.52006291e-01  7.85273264e-02
   1.84722034e-01 -2.44118757e-01  2.49323392e-01  1.05664734e+00
   1.10830610e+00  1.06964660e-01  4.39898683e-01]
 [ 4.73596178e-02 -4.60754767e-01  2.39210532e-01 -4.76024677e-01
   3.92996772e-01  3.71672669e-01 -4.64360657e-01 -5.68696270e-01
   7.53445008e-01  6.84836600e-01 -9.38156150e-03 -1.13373328e-01
   2.31621608e-02 -2.90491871e-01  8.42105595e-02 -1.44861003e-01
  -3.15032434e-01  1.03227120e-01  3.52851837e-01  7.46035612e-01
   3.36412533e-01  2.56854641e-01  3.19495024e-01  2.56380294e-01
   5.14602518e-01 -1.91701847e-01  3.13911364e-01]
 [-1.57980879e-01 -3.00541285e-01  4.45013624e-01 -7.56025170e-01
   4.36615220e-01  2.07258928e-03  5.63725629e-01 -9.24138658e-01
   5.22461008e-01  4.30495026e-01  1.28713562e-01  4.47714527e-01
  -7.84637522e-01 -3.23565777e-01 -2.61044845e-01 -1.32663704e-01
  -2.33933839e-01  8.90813403e-01  5.11856750e-01  6.98197773e-01
   2.67375786e-01 -8.08677691e-01  5.02891429e-01  3.64994337e-01
   4.63808153e-01 -5.65304596e-02  2.19923574e-01]
 [ 1.18549508e+00 -9.46859859e-02  4.70247003e-01 -4.97765686e-01
   5.81200914e-01 -1.21601495e+00 -8.15720864e-03 -1.30436795e+00
   6.26053168e-01  1.22990083e+00 -3.46179426e-01  4.19009128e-01
  -6.52655071e-01 -3.03823167e-01 -3.48758985e-01 -8.12323684e-01
  -1.30838718e-01  8.69208469e-01 -1.21899090e-01  2.76855649e-01
   4.18563891e-01 -2.79428904e-01  3.92506157e-01 -7.35449155e-02
   1.21842011e-01  3.59144962e-01  4.97778280e-01]
 [-8.87974744e-02 -9.07167523e-02  2.85749220e-01 -5.90912518e-01
   4.69965634e-01 -1.21341260e-01 -7.58564307e-01  1.01447052e-01
   9.66593708e-01  7.49159538e-01  7.54963129e-01  7.87041187e-01
  -1.21724323e+00 -2.68754477e-01 -3.03697717e-01 -5.55430016e-01
  -3.23321347e-01  3.89483359e-01 -2.75670876e-01  3.98030009e-01
   3.28074657e-01 -8.45834593e-02  3.85311029e-01  9.41595499e-01
  -3.72734524e-02  5.04295182e-01  3.54498547e-01]]================= config20 =================
2022年 02月 19日 星期六 22:06:49 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (13161) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (197267) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516]
upper = 
[6495.94988124 6493.97350707 6488.77704374 ... 6489.09410422 6490.30624908
 6499.78766833]
upper.argmax() = 8377
all predict_target = 
[5454.20369707 5459.10414428 5471.92227298 ... 5471.14086523 5468.14915626
 5444.15948918]
upper.argmax() = 8377, sortnumber[0] = 8377
x_max = [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
 3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
 1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
 6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
 7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
 8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
 3.75009882e+00 3.11706847e+02 3.55188771e+00]
black_box_function中schafferRun(i) 中的i为[52.80254633051234, 0.12175327575040974, 0.9123917511771302, 227.13107494745194, 3.7028283017534713, 5.07049387118597, 4.667036697910371, 508.08175029373126, 121.76643450284644, 104.82750021880474, 7.394606324479789, 1945577254.1105433, 0.608929623301693, 0.05715217618682253, 48.171547072874475, 0.5284602500521489, 0.07757026514570974, 2014583761.7500443, 1285122417.6845818, 71.73500591707571, 0.8882480152804628, 710.2535371832022, 0.8636643199210794, 37.238291378945036, 3.7500988152880645, 311.7068471080667, 3.551887705186714]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 52.80254633051234
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.12175327575040974
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9123917511771302
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 227.13107494745194
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.7028283017534713
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.07049387118597
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.667036697910371
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 508.08175029373126
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 121.76643450284644
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 104.82750021880474
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.394606324479789
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1945577254.1105433
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.608929623301693
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.05715217618682253
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 48.171547072874475
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5284602500521489
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.07757026514570974
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2014583761.7500443
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1285122417.6845818
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.73500591707571
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.8882480152804628
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 710.2535371832022
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.8636643199210794
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 37.238291378945036
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.7500988152880645
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 311.7068471080667
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.551887705186714
configNum = 20	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 20 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 52.80254633051234, 'spark.broadcast.checksum': 0.12175327575040974, 'spark.broadcast.compress': 0.9123917511771302, 'spark.default.parallelism': 227.13107494745194, 'spark.executor.cores': 3.7028283017534713, 'spark.executor.instances': 5.07049387118597, 'spark.executor.memory': 4.667036697910371, 'spark.executor.memoryOverhead': 508.08175029373126, 'spark.kryoserializer.buffer': 121.76643450284644, 'spark.kryoserializer.buffer.max': 104.82750021880474, 'spark.locality.wait': 7.394606324479789, 'spark.maxRemoteBlockSizeFetchToMem': 1945577254.1105433, 'spark.memory.fraction': 0.608929623301693, 'spark.memory.offHeap.enabled': 0.05715217618682253, 'spark.memory.offHeap.size': 48.171547072874475, 'spark.memory.storageFraction': 0.5284602500521489, 'spark.rdd.compress': 0.07757026514570974, 'spark.reducer.maxBlocksInFlightPerAddress': 2014583761.7500443, 'spark.reducer.maxReqsInFlight': 1285122417.6845818, 'spark.reducer.maxSizeInFlight': 71.73500591707571, 'spark.scheduler.mode': 0.8882480152804628, 'spark.scheduler.revive.interval': 710.2535371832022, 'spark.shuffle.compress': 0.8636643199210794, 'spark.shuffle.file.buffer': 37.238291378945036, 'spark.shuffle.io.numConnectionsPerPeer': 3.7500988152880645, 'spark.shuffle.sort.bypassMergeThreshold': 311.7068471080667, 'spark.storage.memoryMapThreshold': 3.551887705186714} target = -177.162
x_probe = {'spark.broadcast.blockSize': 52.80254633051234, 'spark.broadcast.checksum': 0.12175327575040974, 'spark.broadcast.compress': 0.9123917511771302, 'spark.default.parallelism': 227.13107494745194, 'spark.executor.cores': 3.7028283017534713, 'spark.executor.instances': 5.07049387118597, 'spark.executor.memory': 4.667036697910371, 'spark.executor.memoryOverhead': 508.08175029373126, 'spark.kryoserializer.buffer': 121.76643450284644, 'spark.kryoserializer.buffer.max': 104.82750021880474, 'spark.locality.wait': 7.394606324479789, 'spark.maxRemoteBlockSizeFetchToMem': 1945577254.1105433, 'spark.memory.fraction': 0.608929623301693, 'spark.memory.offHeap.enabled': 0.05715217618682253, 'spark.memory.offHeap.size': 48.171547072874475, 'spark.memory.storageFraction': 0.5284602500521489, 'spark.rdd.compress': 0.07757026514570974, 'spark.reducer.maxBlocksInFlightPerAddress': 2014583761.7500443, 'spark.reducer.maxReqsInFlight': 1285122417.6845818, 'spark.reducer.maxSizeInFlight': 71.73500591707571, 'spark.scheduler.mode': 0.8882480152804628, 'spark.scheduler.revive.interval': 710.2535371832022, 'spark.shuffle.compress': 0.8636643199210794, 'spark.shuffle.file.buffer': 37.238291378945036, 'spark.shuffle.io.numConnectionsPerPeer': 3.7500988152880645, 'spark.shuffle.sort.bypassMergeThreshold': 311.7068471080667, 'spark.storage.memoryMapThreshold': 3.551887705186714}
target = -177.162
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.48730167e+01 5.71269833e+01]
 [0.00000000e+00 1.81752822e-01]
 [8.18247178e-01 1.00000000e+00]
 [2.00000000e+02 2.76028058e+02]
 [3.45474153e+00 4.00000000e+00]
 [4.24907387e+00 5.75092613e+00]
 [4.22515902e+00 5.77484098e+00]
 [4.39832547e+02 6.26167453e+02]
 [9.00734322e+01 1.25926568e+02]
 [7.67625392e+01 1.13237461e+02]
 [6.86165338e+00 9.13834662e+00]
 [1.86920086e+09 2.14748314e+09]
 [5.34668238e-01 6.85331762e-01]
 [0.00000000e+00 1.81752822e-01]
 [0.00000000e+00 2.50621525e+02]
 [5.00000000e-01 6.03418574e-01]
 [0.00000000e+00 1.81752822e-01]
 [1.85213879e+09 2.14748365e+09]
 [1.07374182e+09 1.46105027e+09]
 [5.81562903e+01 7.20000000e+01]
 [8.18247178e-01 1.00000000e+00]
 [5.77010236e+02 7.66989764e+02]
 [8.18247178e-01 1.00000000e+00]
 [2.88730167e+01 4.11269833e+01]
 [3.24907387e+00 4.75092613e+00]
 [2.98290713e+02 3.50000000e+02]
 [3.45474153e+00 4.00000000e+00]]
before probe, param.shape = (20, 27)
before probe, target = (20,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]]
标准化后的train_x = 
[[ 0.24045261 -0.51113563  0.57002666 -0.74210856  0.73271984 -0.63852403
  -0.06812797 -0.28384357  0.43339353  0.34139931  0.46026569  0.67267368
  -0.43276225 -0.60534581 -0.58823358 -0.49719568 -0.52219463  0.64765185
  -0.70498987  0.53987175  0.48563899 -0.28892673  0.62349504  0.18610218
   0.52542309  0.62884563  0.86581745]
 [-0.43074784 -0.51113563 -2.30040699  1.15200797 -1.4245829   3.06055726
   1.23744761 -1.43067434 -0.71624784  0.45863808  0.46026569 -1.77442767
  -1.4600396   2.32239278  0.21949109 -0.30257045  2.36437397 -2.4610948
   0.38991107 -0.33146216 -2.87020647  3.15913991 -2.18268945  1.49955568
  -0.42137702 -3.3930417  -0.4684311 ]
 [ 2.08625384  2.86619127 -2.30040699  1.28583142 -2.50323428  0.59450307
  -2.67927915  2.1724283  -2.4407099   1.5724064  -2.48369276  0.0447029
   0.5945151   2.32239278 -0.51706841  1.83830705  2.36437397 -0.3861107
  -1.49652476 -2.39097867  0.48563899  0.09537791 -2.18268945 -2.30945946
  -2.31497725  0.9161233  -0.4684311 ]
 [ 0.24045261 -0.51113563  0.57002666 -0.72152034  0.73271984 -0.63852403
  -0.06812797 -0.30951888  0.51551077  0.22416054  0.46026569  0.72896782
  -0.57951581 -0.60534581 -0.57755881 -0.69182128 -0.52219463  0.70835641
  -0.54366175  0.61908393  0.48563899 -0.29960186  0.62349504  0.44879288
   0.52542309  0.67304219  0.86581745]
 [ 0.24045261 -0.51113563  0.57002666 -0.7729909   0.73271984 -0.63852403
  -0.06812797 -0.29240201  0.63868663 -0.06893639  0.46026569  0.75154066
  -0.57951581 -0.60534581 -0.64516572 -0.69182128 -0.52219463  0.80425505
  -0.64674279  0.6982961   0.48563899 -0.28892673  0.62349504  0.31744753
   0.52542309  0.87192673  0.86581745]
 [ 0.24045261 -0.51113563  0.57002666 -0.95828491  0.73271984 -0.63852403
  -0.06812797 -0.52347985  1.09033146  0.40001869  1.1962553   1.07087779
  -0.87302422 -0.60534581 -0.64516572 -1.08107137 -0.52219463  0.96937347
  -1.37685142  0.93593262  0.48563899 -0.69458163  0.62349504  0.31744753
   1.47222321  0.96031986  0.86581745]
 [ 0.07265249 -0.51113563  0.57002666 -0.76269679  0.73271984 -0.63852403
  -0.06812797 -0.26672669  0.63868663  0.40001869  0.46026569  0.75442112
  -0.43276204 -0.60534581 -0.60602487 -0.69182128 -0.52219463  0.72118366
  -0.66128684  0.6982961   0.48563899 -0.31027699  0.62349504  0.18610218
   0.52542309  0.56255078  0.86581745]
 [ 0.24045261 -0.51113563  0.57002666 -0.63916745  0.73271984 -0.63852403
  -0.06812797 -0.39510327  0.26915905  0.34139931  0.46026569  0.31458546
  -0.13925451 -0.60534581 -0.53130145 -0.69182128 -0.52219463  0.62023643
  -0.63436984  0.22302306  0.48563899 -0.19285057  0.62349504  0.18610218
   0.52542309  0.34156796  0.86581745]
 [ 0.07265249 -0.51113563  0.57002666 -0.17593243 -0.34593153  0.59450307
  -0.06812797 -0.1126748  -0.14142715 -0.24479455  0.46026569 -0.05817208
   0.15425303 -0.60534581 -0.53130145  1.83830659 -0.52219463 -0.11451106
  -0.16011845 -0.4898865   0.48563899 -0.25690134  0.62349504  0.18610218
   0.52542309 -0.49816675 -0.4684311 ]
 [-2.27654908 -0.51113563 -2.30040699  2.07847801 -2.50323428  0.59450307
  -0.06812797  0.58911717 -0.4288375  -2.47233119 -2.48369276  0.24541637
   1.62179245  2.32239278  2.65333987 -0.49719568  2.36437397 -1.87845946
   1.41062641  0.22302306  0.48563899  2.20905344  0.62349504 -0.47062457
  -1.36817714  0.09848686 -3.1369282 ]
 [-1.10194829 -0.51113563  0.57002666  1.55347832 -0.34593153  0.59450307
   2.5430232   1.40216883 -2.48176852  0.34139931 -1.01171354 -2.56579084
   1.47503854 -0.60534581  2.63199032  1.25443137 -0.52219463 -1.04155999
   1.01299196 -1.83649346  0.48563899 -0.91875933 -2.18268945 -2.04676876
  -2.31497725 -0.34347878 -0.4684311 ]
 [-1.77314874  2.86619127  0.57002666  2.05788979  0.73271984 -1.87155113
  -1.37370356  2.48053209 -0.05930991 -1.88613733 -1.01171354 -2.17261921
   2.50231589 -0.60534581  1.46488155  1.25443137 -0.52219463 -1.57935419
   1.76923129 -2.39097867 -2.87020647 -0.32095212  0.62349504 -2.04676876
  -0.42137702  0.76143532 -1.80267965]
 [-1.33515146  0.61512843 -0.59654788  0.49573798 -0.59289831  0.66680455
   0.76788674  0.80239482 -1.29632185 -1.28912843  0.13016248  0.93532952
  -0.34096936  0.11033908 -0.53189536  2.10521159 -0.39577921 -0.82850619
   2.48146063  0.0946553  -0.80171557 -1.39354813 -1.1994906  -0.29397392
  -0.94115424 -1.63592941 -0.8011102 ]
 [ 0.99939299 -0.42868743  0.33473254 -0.51861044  0.16629174  0.93769639
   0.17400528 -0.36509876  0.28689001 -0.89819818  1.22487925 -0.20944771
   0.21478619 -0.02953713 -0.01525361 -0.20618277 -0.33999571  0.42627797
  -0.20661965  0.52894235  0.02970932  0.60339068  0.0639153   0.88986892
   0.72166964 -0.76844026  0.35221499]
 [ 1.05189474  0.24246598  0.30762344 -0.44411157  0.17408897  0.07579702
   0.95274233 -0.32692544  0.03878111 -1.04789675  0.66421653 -0.38179028
   1.3146033  -0.0427638  -0.43309893 -0.84737574 -0.39533563  0.67799058
  -0.63068507  0.03061766  0.18363785 -0.25665256  0.24272984  1.05223371
   1.11939837  0.10370019  0.43637187]
 [ 0.01963682 -0.46734042  0.22800261 -0.44669268  0.37970607  0.40729424
  -0.44677824 -0.55349993  0.69989902  0.63859818 -0.01039903 -0.12053832
   0.04724147 -0.27347613  0.11919561 -0.11978791 -0.3067597   0.07709435
   0.39032459  0.70020993  0.33921889  0.25714232  0.31461437  0.23617233
   0.51160993 -0.20262017  0.30735602]
 [-0.18939751 -0.30300806  0.43858752 -0.73046038  0.42425713  0.03114108
   0.60097413 -0.91579689  0.46921755  0.38349523  0.13128278  0.45502737
  -0.77714527 -0.30723748 -0.23117796 -0.1073656  -0.22374935  0.87909063
   0.55188526  0.65222274  0.2684115  -0.83566033  0.50248751  0.34693002
   0.45961053 -0.06398478  0.21110891]
 [ 1.17824601 -0.0918605   0.46440719 -0.4687262   0.57193424 -1.20854337
   0.01815184 -1.30335875  0.57267403  1.18529408 -0.35594438  0.42558128
  -0.64245274 -0.28708451 -0.3201924  -0.79956364 -0.11822393  0.8570904
  -0.09205722  0.22956517  0.42347726 -0.29286641  0.38940771 -0.10026439
   0.10953168  0.36234305  0.4956428 ]
 [-0.11896958 -0.08778922  0.27562263 -0.56312625  0.45832062 -0.09446092
  -0.74660966  0.12956683  0.91276855  0.70311367  0.77379762  0.80310973
  -1.21863394 -0.25128692 -0.27446313 -0.53793091 -0.31524401  0.36858805
  -0.24830065  0.35111784  0.33066717 -0.09303425  0.38203695  0.93491117
  -0.05335859  0.511213    0.34891885]
 [ 0.54292008 -0.09993502  0.31855299 -0.67899459  0.41217518 -0.55160318
  -0.50283673 -0.49710488  0.99862434  0.91748133  0.01470223  0.08055241
  -0.44847045 -0.43801918 -0.64099705 -0.5271631  -0.29828273  0.53240754
  -0.60422289  0.91494187  0.1106166   0.11943471  0.24091197  0.48009135
   0.28881662  0.11410697  0.26792427]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162]
upper = 
[6389.50969741 6391.88350971 6398.59543299 ... 6404.16356324 6398.92204975
 6425.64134343]
upper.argmax() = 2750
all predict_target = 
[5207.25736877 5201.4657413  5184.98174999 ... 5171.30274747 5184.21062102
 5117.96117771]
upper.argmax() = 2750, sortnumber[0] = 2750
x_max = [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
 3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
 1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
 6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
 8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
 9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
 3.62579013e+00 3.22342263e+02 3.78770466e+00]
================= config21 =================
2022年 02月 19日 星期六 22:09:55 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (29120) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (213095) - 没有那个进程
black_box_function中schafferRun(i) 中的i为[51.74185032155509, 0.10990458391380963, 0.9329270131787306, 226.88039614081106, 3.800685192591614, 4.909693574119018, 5.265161649852478, 488.5873586867303, 110.1946652928579, 111.49601012093314, 8.427680471082198, 1956369336.9564338, 0.6006061058969835, 0.1479658817896387, 13.17334340435499, 0.5908439282109669, 0.08117828215112981, 2001640971.1753006, 1345492151.2451131, 68.02614736603405, 0.9135066211767106, 684.4228512146321, 0.9102989731089097, 36.57580087684891, 3.6257901286799075, 322.3422625339565, 3.787704658139463]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.74185032155509
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.10990458391380963
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9329270131787306
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 226.88039614081106
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.800685192591614
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.909693574119018
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.265161649852478
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 488.5873586867303
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 110.1946652928579
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 111.49601012093314
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.427680471082198
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1956369336.9564338
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6006061058969835
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.1479658817896387
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 13.17334340435499
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5908439282109669
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.08117828215112981
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2001640971.1753006
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1345492151.2451131
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 68.02614736603405
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9135066211767106
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 684.4228512146321
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9102989731089097
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 36.57580087684891
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.6257901286799075
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 322.3422625339565
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.787704658139463
configNum = 21	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 21 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.74185032155509, 'spark.broadcast.checksum': 0.10990458391380963, 'spark.broadcast.compress': 0.9329270131787306, 'spark.default.parallelism': 226.88039614081106, 'spark.executor.cores': 3.800685192591614, 'spark.executor.instances': 4.909693574119018, 'spark.executor.memory': 5.265161649852478, 'spark.executor.memoryOverhead': 488.5873586867303, 'spark.kryoserializer.buffer': 110.1946652928579, 'spark.kryoserializer.buffer.max': 111.49601012093314, 'spark.locality.wait': 8.427680471082198, 'spark.maxRemoteBlockSizeFetchToMem': 1956369336.9564338, 'spark.memory.fraction': 0.6006061058969835, 'spark.memory.offHeap.enabled': 0.1479658817896387, 'spark.memory.offHeap.size': 13.17334340435499, 'spark.memory.storageFraction': 0.5908439282109669, 'spark.rdd.compress': 0.08117828215112981, 'spark.reducer.maxBlocksInFlightPerAddress': 2001640971.1753006, 'spark.reducer.maxReqsInFlight': 1345492151.2451131, 'spark.reducer.maxSizeInFlight': 68.02614736603405, 'spark.scheduler.mode': 0.9135066211767106, 'spark.scheduler.revive.interval': 684.4228512146321, 'spark.shuffle.compress': 0.9102989731089097, 'spark.shuffle.file.buffer': 36.57580087684891, 'spark.shuffle.io.numConnectionsPerPeer': 3.6257901286799075, 'spark.shuffle.sort.bypassMergeThreshold': 322.3422625339565, 'spark.storage.memoryMapThreshold': 3.787704658139463} target = -214.714
x_probe = {'spark.broadcast.blockSize': 51.74185032155509, 'spark.broadcast.checksum': 0.10990458391380963, 'spark.broadcast.compress': 0.9329270131787306, 'spark.default.parallelism': 226.88039614081106, 'spark.executor.cores': 3.800685192591614, 'spark.executor.instances': 4.909693574119018, 'spark.executor.memory': 5.265161649852478, 'spark.executor.memoryOverhead': 488.5873586867303, 'spark.kryoserializer.buffer': 110.1946652928579, 'spark.kryoserializer.buffer.max': 111.49601012093314, 'spark.locality.wait': 8.427680471082198, 'spark.maxRemoteBlockSizeFetchToMem': 1956369336.9564338, 'spark.memory.fraction': 0.6006061058969835, 'spark.memory.offHeap.enabled': 0.1479658817896387, 'spark.memory.offHeap.size': 13.17334340435499, 'spark.memory.storageFraction': 0.5908439282109669, 'spark.rdd.compress': 0.08117828215112981, 'spark.reducer.maxBlocksInFlightPerAddress': 2001640971.1753006, 'spark.reducer.maxReqsInFlight': 1345492151.2451131, 'spark.reducer.maxSizeInFlight': 68.02614736603405, 'spark.scheduler.mode': 0.9135066211767106, 'spark.scheduler.revive.interval': 684.4228512146321, 'spark.shuffle.compress': 0.9102989731089097, 'spark.shuffle.file.buffer': 36.57580087684891, 'spark.shuffle.io.numConnectionsPerPeer': 3.6257901286799075, 'spark.shuffle.sort.bypassMergeThreshold': 322.3422625339565, 'spark.storage.memoryMapThreshold': 3.787704658139463}
target = -214.714
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.54857150e+01 5.65142850e+01]
 [0.00000000e+00 1.63577540e-01]
 [8.36422460e-01 1.00000000e+00]
 [2.00000000e+02 2.70525253e+02]
 [3.50926738e+00 4.00000000e+00]
 [4.32416648e+00 5.67583352e+00]
 [4.30264312e+00 5.69735688e+00]
 [4.49149292e+02 6.16850708e+02]
 [9.18660890e+01 1.24133911e+02]
 [7.85862853e+01 1.11413715e+02]
 [6.97548804e+00 9.02451196e+00]
 [1.88891057e+09 2.14748314e+09]
 [5.42201414e-01 6.77798586e-01]
 [0.00000000e+00 1.63577540e-01]
 [0.00000000e+00 2.31859372e+02]
 [5.00000000e-01 5.96076717e-01]
 [0.00000000e+00 1.63577540e-01]
 [1.87188836e+09 2.14748365e+09]
 [1.08172746e+09 1.44108591e+09]
 [5.90406613e+01 7.20000000e+01]
 [8.36422460e-01 1.00000000e+00]
 [5.86509212e+02 7.57490788e+02]
 [8.36422460e-01 1.00000000e+00]
 [2.94857150e+01 4.05142850e+01]
 [3.32416648e+00 4.67583352e+00]
 [3.01961642e+02 3.50000000e+02]
 [3.50926738e+00 4.00000000e+00]]
before probe, param.shape = (21, 27)
before probe, target = (21,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]]
标准化后的train_x = 
[[ 2.27862202e-01 -5.16688309e-01  5.63773855e-01 -7.19265550e-01
   7.20965249e-01 -6.09594749e-01 -8.32252997e-02 -2.55785103e-01
   4.15847200e-01  2.74998465e-01  4.27739853e-01  6.82482460e-01
  -4.12420847e-01 -6.11464024e-01 -5.57678162e-01 -5.36994656e-01
  -5.20018734e-01  6.36119341e-01 -7.03410889e-01  5.18156277e-01
   4.87655262e-01 -2.88266943e-01  6.18718603e-01  1.70890315e-01
   5.29679434e-01  6.25526374e-01  8.51916447e-01]
 [-4.57743045e-01 -5.16688309e-01 -2.36761607e+00  1.20050866e+00
  -1.47563803e+00  3.13108488e+00  1.25213557e+00 -1.41879360e+00
  -7.54572261e-01  3.90516312e-01  4.27739853e-01 -1.82398710e+00
  -1.45699985e+00  2.38646091e+00  2.58680864e-01 -3.39767022e-01
   2.43201513e+00 -2.53135297e+00  4.15312851e-01 -3.66604417e-01
  -2.94794188e+00  3.24289633e+00 -2.24734831e+00  1.51185557e+00
  -4.39826278e-01 -3.48377298e+00 -5.04366012e-01]
 [ 2.11327663e+00  2.94242916e+00 -2.36761607e+00  1.33614488e+00
  -2.57393968e+00  6.37298462e-01 -2.75394705e+00  2.23513608e+00
  -2.51020145e+00  1.48793586e+00 -2.54668009e+00  3.92767137e-02
   6.32158155e-01  2.38646091e+00 -4.85752256e-01  1.82973695e+00
   2.43201513e+00 -4.17171466e-01 -1.51216797e+00 -2.45785697e+00
   4.87655262e-01  1.05299243e-01 -2.24734831e+00 -2.37694366e+00
  -2.37883770e+00  9.19047757e-01 -5.04366012e-01]
 [ 2.27862202e-01 -5.16688309e-01  5.63773855e-01 -6.98398439e-01
   7.20965249e-01 -6.09594749e-01 -8.32252997e-02 -2.81822607e-01
   4.99448590e-01  1.59480618e-01  4.27739853e-01  7.40142330e-01
  -5.61646063e-01 -6.11464024e-01 -5.46889276e-01 -7.34222666e-01
  -5.20018734e-01  6.97970629e-01 -5.38572606e-01  5.98589068e-01
   4.87655262e-01 -2.99199337e-01  6.18718603e-01  4.39083365e-01
   5.29679434e-01  6.70683510e-01  8.51916447e-01]
 [ 2.27862202e-01 -5.16688309e-01  5.63773855e-01 -7.50566216e-01
   7.20965249e-01 -6.09594749e-01 -8.32252997e-02 -2.64464271e-01
   6.24850675e-01 -1.29314000e-01  4.27739853e-01  7.63262797e-01
  -5.61646063e-01 -6.11464024e-01 -6.15218886e-01 -7.34222666e-01
  -5.20018734e-01  7.95680841e-01 -6.43896471e-01  6.79021858e-01
   4.87655262e-01 -2.88266943e-01  6.18718603e-01  3.04986840e-01
   5.29679434e-01  8.73890621e-01  8.51916447e-01]
 [ 2.27862202e-01 -5.16688309e-01  5.63773855e-01 -9.38370215e-01
   7.20965249e-01 -6.09594749e-01 -8.32252997e-02 -4.98801805e-01
   1.08465832e+00  3.32757388e-01  1.17134484e+00  1.09034724e+00
  -8.60097811e-01 -6.11464024e-01 -6.15218886e-01 -1.12867756e+00
  -5.20018734e-01  9.63918421e-01 -1.38989078e+00  9.20320230e-01
   4.87655262e-01 -7.03697916e-01  6.18718603e-01  3.04986840e-01
   1.49918515e+00  9.64204893e-01  8.51916447e-01]
 [ 5.64608906e-02 -5.16688309e-01  5.63773855e-01 -7.40132661e-01
   7.20965249e-01 -6.09594749e-01 -8.32252997e-02 -2.38426767e-01
   6.24850675e-01  3.32757388e-01  4.27739853e-01  7.66213142e-01
  -4.12420633e-01 -6.11464024e-01 -5.75659638e-01 -7.34222666e-01
  -5.20018734e-01  7.11040194e-01 -6.58756975e-01  6.79021858e-01
   4.87655262e-01 -3.10131731e-01  6.18718603e-01  1.70890315e-01
   5.29679434e-01  5.57790671e-01  8.51916447e-01]
 [ 2.27862202e-01 -5.16688309e-01  5.63773855e-01 -6.14929995e-01
   7.20965249e-01 -6.09594749e-01 -8.32252997e-02 -3.68614286e-01
   2.48644420e-01  2.74998465e-01  4.27739853e-01  3.15706791e-01
  -1.13969775e-01 -6.11464024e-01 -5.00137438e-01 -7.34222666e-01
  -5.20018734e-01  6.08186031e-01 -6.31254318e-01  1.96425116e-01
   4.87655262e-01 -1.89875396e-01  6.18718603e-01  1.70890315e-01
   5.29679434e-01  3.32004992e-01  8.51916447e-01]
 [ 5.64608906e-02 -5.16688309e-01  5.63773855e-01 -1.45419999e-01
  -3.77336393e-01  6.37298462e-01 -8.32252997e-02 -8.22017452e-02
  -1.69362531e-01 -3.02590770e-01  4.27739853e-01 -6.60940775e-02
   1.84481084e-01 -6.11464024e-01 -5.00137438e-01  1.82973648e+00
  -5.20018734e-01 -1.40441184e-01 -1.46684185e-01 -5.27469998e-01
   4.87655262e-01 -2.55469761e-01  6.18718603e-01  1.70890315e-01
   5.29679434e-01 -5.25980589e-01 -5.04366012e-01]
 [-2.34315748e+00 -5.16688309e-01 -2.36761607e+00  2.13952865e+00
  -2.57393968e+00  6.37298462e-01 -8.32252997e-02  6.29490023e-01
  -4.61967396e-01 -2.49742986e+00 -2.54668009e+00  2.44859623e-01
   1.67673716e+00  2.38646091e+00  2.71854683e+00 -5.36994656e-01
   2.43201513e+00 -1.93771137e+00  1.45823687e+00  1.96425116e-01
   4.87655262e-01  2.26991326e+00  6.18718603e-01 -4.99592310e-01
  -1.40933199e+00  8.36407448e-02 -3.21693093e+00]
 [-1.14334829e+00 -5.16688309e-01  5.63773855e-01  1.60741732e+00
  -3.77336393e-01  6.37298462e-01  2.58749645e+00  1.45401097e+00
  -2.55200215e+00  2.74998465e-01 -1.05947012e+00 -2.63454923e+00
   1.52751159e+00 -6.11464024e-01  2.69696906e+00  1.23805405e+00
  -5.20018734e-01 -1.08500249e+00  1.05195072e+00 -1.89482744e+00
   4.87655262e-01 -9.33278191e-01 -2.24734831e+00 -2.10875061e+00
  -2.37883770e+00 -3.67930613e-01 -5.04366012e-01]
 [-1.82895354e+00  2.94242916e+00  5.63773855e-01  2.11866154e+00
   7.20965249e-01 -1.85648796e+00 -1.41858617e+00  2.54758613e+00
  -8.57611405e-02 -1.91984063e+00 -1.05947012e+00 -2.23183902e+00
   2.57209059e+00 -6.11464024e-01  1.51738421e+00  1.23805405e+00
  -5.20018734e-01 -1.63295587e+00  1.82464427e+00 -2.45785697e+00
  -2.94794188e+00 -3.21064125e-01  6.18718603e-01 -2.10875061e+00
  -4.39826278e-01  7.60997782e-01 -1.86064847e+00]
 [-1.38155629e+00  6.36851105e-01 -6.27573960e-01  5.35348842e-01
  -6.28802272e-01  7.10413016e-01  7.71862185e-01  8.45776267e-01
  -1.34513025e+00 -1.33159510e+00  9.42210225e-02  9.51510497e-01
  -3.19081961e-01  1.21377896e-01 -5.00737702e-01  2.10021036e+00
  -3.90736309e-01 -8.67924009e-01  2.55237026e+00  6.60792748e-02
  -8.30293292e-01 -1.41950916e+00 -1.24316854e+00 -3.19241522e-01
  -9.72068486e-01 -1.68847148e+00 -8.42539014e-01]
 [ 1.00309040e+00 -4.32243417e-01  3.23483055e-01 -4.92739920e-01
   1.44218276e-01  9.84351196e-01  1.64431959e-01 -3.38186516e-01
   2.66695841e-01 -9.46403228e-01  1.20026496e+00 -2.21039746e-01
   2.46033764e-01 -2.18515533e-02  2.14268100e-02 -2.42090502e-01
  -3.33687684e-01  4.10563602e-01 -1.94197151e-01  5.07058456e-01
   2.08904229e-02  6.25554862e-01  4.71977439e-02  8.89398234e-01
   7.30632255e-01 -8.02128248e-01  3.29832302e-01]
 [ 1.05671890e+00  2.55163689e-01  2.95798260e-01 -4.17231894e-01
   1.52157555e-01  1.12759260e-01  9.60935048e-01 -2.99474712e-01
   1.41027333e-02 -1.09390440e+00  6.33801000e-01 -3.97563454e-01
   1.36437425e+00 -3.53953005e-02 -4.00885166e-01 -8.91857102e-01
  -3.90282665e-01  6.67031175e-01 -6.27489377e-01  1.05484914e-03
   1.78477057e-01 -2.55214984e-01  2.29828083e-01  1.05516393e+00
   1.13789907e+00  8.89673757e-02  4.15378955e-01]
 [ 2.30743550e-03 -4.71832490e-01  2.14486619e-01 -4.19847968e-01
   3.61520469e-01  4.47984365e-01 -4.70514057e-01 -5.29245369e-01
   6.87169381e-01  5.67834822e-01 -4.77948850e-02 -1.29973357e-01
   7.56672123e-02 -2.71638467e-01  1.57313251e-01 -1.54540422e-01
  -2.99697905e-01  5.47837471e-02  4.15735369e-01  6.80965173e-01
   3.37755489e-01  2.70962091e-01  3.03246590e-01  2.22009241e-01
   5.15535010e-01 -2.24010575e-01  2.84232522e-01]
 [-2.11213035e-01 -3.03520405e-01  4.29543486e-01 -7.07459574e-01
   4.06883138e-01  6.76011437e-02  6.01141639e-01 -8.96653052e-01
   4.52318679e-01  3.16476473e-01  9.53529149e-02  4.59555912e-01
  -7.62604045e-01 -3.06209173e-01 -1.96805710e-01 -1.41952010e-01
  -2.14804933e-01  8.71930098e-01  5.80811269e-01  6.32238526e-01
   2.65265354e-01 -8.48176545e-01  4.95128838e-01  3.35086869e-01
   4.62288595e-01 -8.23620714e-02  1.86395981e-01]
 [ 1.18578182e+00 -8.72593631e-02  4.55911464e-01 -4.42179952e-01
   5.57250541e-01 -1.18602429e+00  5.02289974e-03 -1.28968205e+00
   5.57644986e-01  1.10650588e+00 -3.96915636e-01  4.29395443e-01
  -6.25642992e-01 -2.85573087e-01 -2.86771688e-01 -8.43405685e-01
  -1.06886278e-01  8.49514277e-01 -7.71420843e-02  2.03068033e-01
   4.24016260e-01 -2.92301564e-01  3.79635985e-01 -1.21474524e-01
   1.03814363e-01  3.53231604e-01  4.75628691e-01]
 [-1.39273630e-01 -8.30894895e-02  2.63117884e-01 -5.37858747e-01
   4.41567171e-01 -5.94133243e-02 -7.77185803e-01  1.63457056e-01
   9.03886217e-01  6.31403303e-01  7.44515936e-01  8.16082963e-01
  -1.21152838e+00 -2.48917320e-01 -2.40553586e-01 -5.78274571e-01
  -3.08374634e-01  3.51783894e-01 -2.36785050e-01  3.26493764e-01
   3.29000531e-01 -8.76535592e-02  3.72107935e-01  9.35383944e-01
  -6.29822473e-02  5.05337104e-01  3.26481730e-01]
 [ 5.36821008e-01 -9.55294254e-02  3.06959917e-01 -6.55296639e-01
   3.94581085e-01 -5.21696420e-01 -5.27851466e-01 -4.72054776e-01
   9.91293730e-01  8.42624298e-01 -2.24339019e-02  7.59959597e-02
  -4.28393604e-01 -4.40126090e-01 -6.11005657e-01 -5.67362780e-01
  -2.91028685e-01  5.18698012e-01 -6.00451426e-01  8.99006016e-01
   1.03720463e-01  1.29935799e-01  2.27971421e-01  4.71037411e-01
   2.87398808e-01  9.96003402e-02  2.44149602e-01]
 [ 3.55016321e-01 -1.36515442e-01  3.67156777e-01 -6.57912111e-01
   5.02057469e-01 -7.22197219e-01  2.70861193e-01 -6.41249874e-01
   5.07585734e-01  1.22779025e+00  7.45765183e-01  1.30214108e-01
  -5.52601769e-01 -1.67873418e-01 -7.36869531e-01  6.63015742e-01
  -2.80377696e-01  4.75339099e-01 -3.38362332e-01  6.00692173e-01
   1.90498857e-01 -1.52455438e-01  3.61629458e-01  3.82199737e-01
   1.66880827e-01  3.39732790e-01  5.63983999e-01]]================= config22 =================
2022年 02月 19日 星期六 22:13:38 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (39214) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (221884) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714]
upper = 
[6298.58457979 6295.84869524 6300.12643006 ... 6304.01828749 6300.50285648
 6297.4553571 ]
upper.argmax() = 6486
all predict_target = 
[4957.28063755 4963.96111552 4953.53258387 ... 4944.01196542 4952.61855364
 4960.03419435]
upper.argmax() = 6486, sortnumber[0] = 6486
x_max = [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
 3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
 1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
 5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
 4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
 9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
 3.95600676e+00 3.30279974e+02 3.79292020e+00]
black_box_function中schafferRun(i) 中的i为[49.31589087750569, 0.07204564852268, 0.89170648151395, 224.12658278443163, 3.816078175681426, 5.101302104043539, 5.147743375630296, 531.1919229352285, 114.70357239818327, 95.33110087789672, 7.9122979774534326, 2069245782.3862324, 0.5893041462140823, 0.03961478737913707, 134.35510804821357, 0.5353644285720981, 0.04762673541151988, 2141681872.4533393, 1268753076.1895938, 71.72752748377363, 0.9330194305474554, 663.7331717424645, 0.94501995287943, 39.595912284363806, 3.956006764756828, 330.2799739827465, 3.7929202047500326]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 49.31589087750569
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07204564852268
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.89170648151395
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 224.12658278443163
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.816078175681426
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.101302104043539
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.147743375630296
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 531.1919229352285
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 114.70357239818327
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.33110087789672
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.9122979774534326
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2069245782.3862324
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.5893041462140823
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.03961478737913707
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 134.35510804821357
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5353644285720981
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04762673541151988
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2141681872.4533393
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1268753076.1895938
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.72752748377363
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9330194305474554
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 663.7331717424645
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.94501995287943
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 39.595912284363806
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.956006764756828
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 330.2799739827465
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.7929202047500326
configNum = 22	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 22 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 49.31589087750569, 'spark.broadcast.checksum': 0.07204564852268, 'spark.broadcast.compress': 0.89170648151395, 'spark.default.parallelism': 224.12658278443163, 'spark.executor.cores': 3.816078175681426, 'spark.executor.instances': 5.101302104043539, 'spark.executor.memory': 5.147743375630296, 'spark.executor.memoryOverhead': 531.1919229352285, 'spark.kryoserializer.buffer': 114.70357239818327, 'spark.kryoserializer.buffer.max': 95.33110087789672, 'spark.locality.wait': 7.9122979774534326, 'spark.maxRemoteBlockSizeFetchToMem': 2069245782.3862324, 'spark.memory.fraction': 0.5893041462140823, 'spark.memory.offHeap.enabled': 0.03961478737913707, 'spark.memory.offHeap.size': 134.35510804821357, 'spark.memory.storageFraction': 0.5353644285720981, 'spark.rdd.compress': 0.04762673541151988, 'spark.reducer.maxBlocksInFlightPerAddress': 2141681872.4533393, 'spark.reducer.maxReqsInFlight': 1268753076.1895938, 'spark.reducer.maxSizeInFlight': 71.72752748377363, 'spark.scheduler.mode': 0.9330194305474554, 'spark.scheduler.revive.interval': 663.7331717424645, 'spark.shuffle.compress': 0.94501995287943, 'spark.shuffle.file.buffer': 39.595912284363806, 'spark.shuffle.io.numConnectionsPerPeer': 3.956006764756828, 'spark.shuffle.sort.bypassMergeThreshold': 330.2799739827465, 'spark.storage.memoryMapThreshold': 3.7929202047500326} target = -175.236
x_probe = {'spark.broadcast.blockSize': 49.31589087750569, 'spark.broadcast.checksum': 0.07204564852268, 'spark.broadcast.compress': 0.89170648151395, 'spark.default.parallelism': 224.12658278443163, 'spark.executor.cores': 3.816078175681426, 'spark.executor.instances': 5.101302104043539, 'spark.executor.memory': 5.147743375630296, 'spark.executor.memoryOverhead': 531.1919229352285, 'spark.kryoserializer.buffer': 114.70357239818327, 'spark.kryoserializer.buffer.max': 95.33110087789672, 'spark.locality.wait': 7.9122979774534326, 'spark.maxRemoteBlockSizeFetchToMem': 2069245782.3862324, 'spark.memory.fraction': 0.5893041462140823, 'spark.memory.offHeap.enabled': 0.03961478737913707, 'spark.memory.offHeap.size': 134.35510804821357, 'spark.memory.storageFraction': 0.5353644285720981, 'spark.rdd.compress': 0.04762673541151988, 'spark.reducer.maxBlocksInFlightPerAddress': 2141681872.4533393, 'spark.reducer.maxReqsInFlight': 1268753076.1895938, 'spark.reducer.maxSizeInFlight': 71.72752748377363, 'spark.scheduler.mode': 0.9330194305474554, 'spark.scheduler.revive.interval': 663.7331717424645, 'spark.shuffle.compress': 0.94501995287943, 'spark.shuffle.file.buffer': 39.595912284363806, 'spark.shuffle.io.numConnectionsPerPeer': 3.956006764756828, 'spark.shuffle.sort.bypassMergeThreshold': 330.2799739827465, 'spark.storage.memoryMapThreshold': 3.7929202047500326}
target = -175.236
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.60371435e+01 5.59628565e+01]
 [0.00000000e+00 1.47219786e-01]
 [8.52780214e-01 1.00000000e+00]
 [2.00000000e+02 2.65572727e+02]
 [3.55834064e+00 4.00000000e+00]
 [4.39174983e+00 5.60825017e+00]
 [4.37237881e+00 5.62762119e+00]
 [4.57534363e+02 6.08465637e+02]
 [9.34794801e+01 1.22520520e+02]
 [8.02276568e+01 1.09772343e+02]
 [7.07793924e+00 8.92206076e+00]
 [1.90664931e+09 2.14748314e+09]
 [5.48981273e-01 6.71018727e-01]
 [0.00000000e+00 1.47219786e-01]
 [0.00000000e+00 2.14973435e+02]
 [5.00000000e-01 5.89469045e-01]
 [0.00000000e+00 1.47219786e-01]
 [1.88966297e+09 2.14748365e+09]
 [1.09969538e+09 1.42311798e+09]
 [5.98365952e+01 7.20000000e+01]
 [8.52780214e-01 1.00000000e+00]
 [5.95058291e+02 7.48941709e+02]
 [8.52780214e-01 1.00000000e+00]
 [3.00371435e+01 3.99628565e+01]
 [3.39174983e+00 4.60825017e+00]
 [3.05265477e+02 3.50000000e+02]
 [3.55834064e+00 4.00000000e+00]]
before probe, param.shape = (22, 27)
before probe, target = (22,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]]
标准化后的train_x = 
[[ 2.36033073e-01 -5.15565721e-01  5.64802623e-01 -6.96819028e-01
   7.09457718e-01 -5.98288355e-01 -9.04638674e-02 -2.48757792e-01
   3.88989493e-01  2.67261141e-01  4.19687845e-01  6.58861237e-01
  -3.84056183e-01 -5.99631627e-01 -5.55651565e-01 -5.27346941e-01
  -5.12928295e-01  5.95200546e-01 -6.81770483e-01  4.79829644e-01
   4.86416698e-01 -2.76534943e-01  6.08888725e-01  1.36381247e-01
   5.16707595e-01  6.12365932e-01  8.39199407e-01]
 [-4.65647328e-01 -5.15565721e-01 -2.43144170e+00  1.24740965e+00
  -1.52520072e+00  3.21025613e+00  1.27591758e+00 -1.43714605e+00
  -7.95995742e-01  3.85265647e-01  4.19687845e-01 -1.87870436e+00
  -1.44079608e+00  2.45205193e+00  2.78202571e-01 -3.26325676e-01
   2.49873702e+00 -2.58301648e+00  4.51722060e-01 -4.09583471e-01
  -3.02474037e+00  3.32600635e+00 -2.31054858e+00  1.48997238e+00
  -4.70306588e-01 -3.56812602e+00 -5.38824265e-01]
 [ 2.16565418e+00  3.01921114e+00 -2.43144170e+00  1.38477363e+00
  -2.64252995e+00  6.71226472e-01 -2.82322676e+00  2.29652154e+00
  -2.57347360e+00  1.50630845e+00 -2.61567518e+00  7.67568147e-03
   6.72683718e-01  2.45205193e+00 -4.82184240e-01  1.88490824e+00
   2.49873702e+00 -4.61663237e-01 -1.50120435e+00 -2.51183265e+00
   4.86416698e-01  1.24986687e-01 -2.31054858e+00 -2.43544191e+00
  -2.44433495e+00  9.10972500e-01 -5.38824265e-01]
 [ 2.36033073e-01 -5.15565721e-01  5.64802623e-01 -6.75686108e-01
   7.09457718e-01 -5.98288355e-01 -9.04638674e-02 -2.75363499e-01
   4.73631295e-01  1.49256635e-01  4.19687845e-01  7.17236453e-01
  -5.35018666e-01 -5.99631627e-01 -5.44631466e-01 -7.28368589e-01
  -5.12928295e-01  6.57261647e-01 -5.14756091e-01  5.60685382e-01
   4.86416698e-01 -2.87688322e-01  6.08888725e-01  4.07099474e-01
   5.16707595e-01  6.58305404e-01  8.39199407e-01]
 [ 2.36033073e-01 -5.15565721e-01  5.64802623e-01 -7.28518409e-01
   7.09457718e-01 -5.98288355e-01 -9.04638674e-02 -2.57626361e-01
   6.00593999e-01 -1.45754629e-01  4.19687845e-01  7.40643760e-01
  -5.35018666e-01 -5.99631627e-01 -6.14425425e-01 -7.28368589e-01
  -5.12928295e-01  7.55303311e-01 -6.21470386e-01  6.41541120e-01
   4.86416698e-01 -2.76534943e-01  6.08888725e-01  2.71740361e-01
   5.16707595e-01  8.65033028e-01  8.39199407e-01]
 [ 2.36033073e-01 -5.15565721e-01  5.64802623e-01 -9.18714693e-01
   7.09457718e-01 -5.98288355e-01 -9.04638674e-02 -4.97077727e-01
   1.06612391e+00  3.26263394e-01  1.17852860e+00  1.07178612e+00
  -8.36944964e-01 -5.99631627e-01 -6.14425425e-01 -1.13041074e+00
  -5.12928295e-01  9.24111588e-01 -1.37731292e+00  8.84108333e-01
   4.86416698e-01 -7.00363331e-01  6.08888725e-01  2.71740361e-01
   1.50372178e+00  9.56911972e-01  8.39199407e-01]
 [ 6.06129727e-02 -5.15565721e-01  5.64802623e-01 -7.17951949e-01
   7.09457718e-01 -5.98288355e-01 -9.04638674e-02 -2.31020654e-01
   6.00593999e-01  3.26263394e-01  4.19687845e-01  7.43630707e-01
  -3.84055967e-01 -5.99631627e-01 -5.74018396e-01 -7.28368589e-01
  -5.12928295e-01  6.70375547e-01 -6.36527071e-01  6.41541120e-01
   4.86416698e-01 -2.98841701e-01  6.08888725e-01  1.36381247e-01
   5.16707595e-01  5.43456724e-01  8.39199407e-01]
 [ 2.36033073e-01 -5.15565721e-01  5.64802623e-01 -5.91154426e-01
   7.09457718e-01 -5.98288355e-01 -9.04638674e-02 -3.64049190e-01
   2.19705888e-01  2.67261141e-01  4.19687845e-01  2.87535236e-01
  -8.21305689e-02 -5.99631627e-01 -4.96877705e-01 -7.28368589e-01
  -5.12928295e-01  5.67172481e-01 -6.08661338e-01  1.56406693e-01
   4.86416698e-01 -1.76154536e-01  6.08888725e-01  1.36381247e-01
   5.16707595e-01  3.13759364e-01  8.39199407e-01]
 [ 6.06129727e-02 -5.15565721e-01  5.64802623e-01 -1.15663716e-01
  -4.07871503e-01  6.71226472e-01 -9.04638674e-02 -7.13864101e-02
  -2.03503125e-01 -3.22761388e-01  4.19687845e-01 -9.90023722e-02
   2.19794829e-01 -5.99631627e-01 -4.96877705e-01  1.88490776e+00
  -5.12928295e-01 -1.83994229e-01 -1.17694165e-01 -5.71294947e-01
   4.86416698e-01 -2.43074807e-01  6.08888725e-01  1.36381247e-01
   5.16707595e-01 -5.59090605e-01 -5.38824265e-01]
 [-2.39526843e+00 -5.15565721e-01 -2.43144170e+00  2.19839107e+00
  -2.64252995e+00  6.71226472e-01 -9.04638674e-02  6.55836256e-01
  -4.99749434e-01 -2.56484700e+00 -2.61567518e+00  2.15809116e-01
   1.72942362e+00  2.45205193e+00  2.79078508e+00 -5.27346941e-01
   2.49873702e+00 -1.98736113e+00  1.50841422e+00  1.56406693e-01
   4.86416698e-01  2.33335565e+00  6.08888725e-01 -5.40414319e-01
  -1.45732077e+00  6.10922676e-02 -3.29487161e+00]
 [-1.16732773e+00 -5.15565721e-01  5.64802623e-01  1.65950160e+00
  -4.07871503e-01  6.71226472e-01  2.64229902e+00  1.49835032e+00
  -2.61579450e+00  2.67261141e-01 -1.09799367e+00 -2.69932257e+00
   1.57846078e+00 -5.99631627e-01  2.76874488e+00  1.28184444e+00
  -5.12928295e-01 -1.13175968e+00  1.09676448e+00 -1.94584249e+00
   4.86416698e-01 -9.34584282e-01 -2.31054858e+00 -2.16472368e+00
  -2.44433495e+00 -3.98302453e-01 -5.38824265e-01]
 [-1.86900813e+00  3.01921114e+00  5.64802623e-01  2.17725815e+00
   7.09457718e-01 -1.86780318e+00 -1.45684531e+00  2.61579003e+00
  -1.18861322e-01 -1.97482447e+00 -1.09799367e+00 -2.29161621e+00
   2.63520068e+00 -5.99631627e-01  1.56388075e+00  1.28184444e+00
  -5.12928295e-01 -1.68157183e+00  1.87965873e+00 -2.51183265e+00
  -3.02474037e+00 -3.09995079e-01  6.08888725e-01 -2.16472368e+00
  -4.70306588e-01  7.50184348e-01 -1.91684794e+00]
 [-1.41112091e+00  6.63204432e-01 -6.52902705e-01  5.73776897e-01
  -6.63693915e-01  7.45667498e-01  7.84487389e-01  8.76842408e-01
  -1.39390318e+00 -1.37391626e+00  7.93355245e-02  9.31226918e-01
  -2.89630654e-01  1.46351572e-01 -4.97490834e-01  2.16058415e+00
  -3.81034349e-01 -9.13944824e-01  2.61699178e+00  2.53754425e-02
  -8.60517821e-01 -1.43064380e+00 -1.28766950e+00 -3.58365435e-01
  -1.01216065e+00 -1.74172136e+00 -8.82418181e-01]
 [ 1.02943778e+00 -4.29273811e-01  3.19195602e-01 -4.67407869e-01
   1.22718864e-01  1.02457557e+00  1.62946495e-01 -3.32957411e-01
   2.37981957e-01 -9.80432674e-01  1.20804127e+00 -2.55870345e-01
   2.82064100e-01  5.53740781e-04  3.58640063e-02 -2.26770370e-01
  -3.22833335e-01  3.68879676e-01 -1.65834372e-01  4.68673466e-01
   9.38618543e-03  6.55758618e-01  2.67253057e-02  8.61654291e-01
   7.21289457e-01 -8.40022455e-01  3.08746251e-01]
 [ 1.08432369e+00  2.73168575e-01  2.90898306e-01 -3.90938006e-01
   1.30795688e-01  1.37170879e-01  9.77952434e-01 -2.93400818e-01
  -1.77546507e-02 -1.13110899e+00  6.29970993e-01 -4.34584060e-01
   1.41342421e+00 -1.32328722e-02 -3.95498392e-01 -8.89035090e-01
  -3.80571542e-01  6.26217239e-01 -6.04846694e-01 -3.99909072e-02
   1.70438661e-01 -2.42814881e-01  2.12756491e-01  1.02898076e+00
   1.13591117e+00  6.65111811e-02  3.95664218e-01]
 [ 5.18979993e-03 -4.69728795e-01  2.07787717e-01 -3.93587404e-01
   3.43785720e-01  4.78477766e-01 -4.86749383e-01 -5.28185647e-01
   6.63688256e-01  5.66401149e-01 -6.55901565e-02 -1.63674158e-01
   1.09714156e-01 -2.53712338e-01  1.74662583e-01 -1.37536282e-01
  -2.88156959e-01  1.18929440e-02  4.52150156e-01  6.43494653e-01
   3.33220142e-01  2.93998201e-01  2.87542158e-01  1.87981484e-01
   5.02307734e-01 -2.51889035e-01  2.62415506e-01]
 [-2.13337013e-01 -2.97735311e-01  4.27602526e-01 -6.84862666e-01
   3.89934276e-01  9.11934863e-02  6.09800986e-01 -9.03611085e-01
   4.25914857e-01  3.09632013e-01  8.04906083e-02  4.33168993e-01
  -7.38316184e-01 -2.88902964e-01 -1.87045379e-01 -1.24705735e-01
  -2.01549137e-01  8.31811221e-01  6.19405302e-01  5.94511782e-01
   2.59135714e-01 -8.47762413e-01  4.82997536e-01  3.02123797e-01
   4.48099733e-01 -1.07786506e-01  1.63010645e-01]
 [ 1.21641271e+00 -7.67441096e-02  4.54553872e-01 -4.16203858e-01
   5.42906727e-01 -1.18517570e+00 -1.65653000e-04 -1.30521696e+00
   5.32551941e-01  1.11666774e+00 -4.21864066e-01  4.02634344e-01
  -5.99760642e-01 -2.67896833e-01 -2.78939388e-01 -8.39651720e-01
  -9.14505126e-02  8.09319361e-01 -4.72340061e-02  1.63084542e-01
   4.21378067e-01 -2.80651119e-01  3.65354036e-01 -1.58736358e-01
   8.31517531e-02  3.35353722e-01  4.56879757e-01]
 [-1.39710869e-01 -7.24830306e-02  2.57494905e-01 -5.13101429e-01
   4.25219195e-01 -3.81253269e-02 -8.00545146e-01  1.79633282e-01
   8.83102116e-01  6.31338016e-01  7.42954374e-01  7.94119229e-01
  -1.19246686e+00 -2.30583756e-01 -2.31730802e-01 -5.69420867e-01
  -2.97008958e-01  3.09900575e-01 -2.08984495e-01  2.87159294e-01
   3.24272635e-01 -7.18664128e-02  3.57685802e-01  9.08072980e-01
  -8.66570664e-02  4.90094412e-01  3.05341969e-01]
 [ 5.52235931e-01 -8.51950585e-02  3.02306905e-01 -6.32035269e-01
   3.77419096e-01 -5.08795340e-01 -5.45418745e-01 -4.69747011e-01
   9.71597408e-01  8.47105794e-01 -3.97095504e-02  4.48504779e-02
  -4.00214894e-01 -4.25221271e-01 -6.10121903e-01 -5.58299189e-01
  -2.79312618e-01  4.77380900e-01 -5.77451802e-01  8.62682041e-01
   9.40379266e-02  1.50121241e-01  2.10865255e-01  4.39354384e-01
   2.70051581e-01  7.73283591e-02  2.21690057e-01]
 [ 3.66168531e-01 -1.27077540e-01  3.63835567e-01 -6.34684056e-01
   4.86757459e-01 -7.12933701e-01  2.71848091e-01 -6.42634370e-01
   4.81869706e-01  1.24056290e+00  7.44229217e-01  9.97412734e-02
  -5.25869079e-01 -1.48086579e-01 -7.38683123e-01  6.95745399e-01
  -2.68446479e-01  4.33874905e-01 -3.11902746e-01  5.62799546e-01
   1.82724859e-01 -1.37978180e-01  3.47012201e-01  3.49680257e-01
   1.47357144e-01  3.21621044e-01  5.46651400e-01]
 [-5.93935182e-02 -2.60900429e-01  2.40328783e-01 -6.63782116e-01
   5.03956489e-01 -4.69683832e-01  1.11409940e-01 -2.64792848e-01
   6.72690718e-01  2.86796839e-01  3.53135976e-01  6.73854536e-01
  -6.96486675e-01 -4.78739832e-01 -2.93538120e-01 -4.19510520e-01
  -3.69492508e-01  9.04609455e-01 -6.49455817e-01  8.62077366e-01
   2.51237398e-01 -3.68738009e-01  4.48377924e-01  7.58479859e-01
   4.73285648e-01  5.03948180e-01  5.53838547e-01]]================= config23 =================
2022年 02月 19日 星期六 22:16:42 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (52136) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (234317) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236]
upper = 
[6210.59220564 6197.97692663 6214.39516937 ... 6205.62397874 6211.43101742
 6223.26310085]
upper.argmax() = 8025
all predict_target = 
[4731.88598499 4762.64318485 4722.51765455 ... 4744.11953436 4730.05909162
 4701.19839874]
upper.argmax() = 8025, sortnumber[0] = 8025
x_max = [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
 3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
 1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
 5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
 1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
 9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
 3.42713031e+00 3.36891164e+02 3.80375083e+00]
black_box_function中schafferRun(i) 中的i为[53.10926091465372, 0.04427281774752933, 0.936721333916878, 203.83012737982986, 3.874696932898346, 4.4759060592886755, 5.089660551005859, 489.62802167238476, 119.70792903814925, 100.49277543663788, 7.31095692554607, 2126696217.4392302, 0.5705615143249015, 0.05399744188760247, 86.52406238268152, 0.5273125224399731, 0.01691161859478852, 2030795550.246238, 1254466334.8641906, 69.03763847398714, 0.9429925834414026, 682.970534799763, 0.9559910663833693, 33.619711250281554, 3.4271303094795567, 336.8911639871419, 3.80375083048129]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 53.10926091465372
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.04427281774752933
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.936721333916878
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 203.83012737982986
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.874696932898346
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.4759060592886755
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.089660551005859
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 489.62802167238476
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 119.70792903814925
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 100.49277543663788
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.31095692554607
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2126696217.4392302
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.5705615143249015
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.05399744188760247
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 86.52406238268152
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5273125224399731
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.01691161859478852
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2030795550.246238
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1254466334.8641906
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 69.03763847398714
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9429925834414026
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 682.970534799763
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9559910663833693
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 33.619711250281554
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.4271303094795567
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 336.8911639871419
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.80375083048129
configNum = 23	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 23 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 53.10926091465372, 'spark.broadcast.checksum': 0.04427281774752933, 'spark.broadcast.compress': 0.936721333916878, 'spark.default.parallelism': 203.83012737982986, 'spark.executor.cores': 3.874696932898346, 'spark.executor.instances': 4.4759060592886755, 'spark.executor.memory': 5.089660551005859, 'spark.executor.memoryOverhead': 489.62802167238476, 'spark.kryoserializer.buffer': 119.70792903814925, 'spark.kryoserializer.buffer.max': 100.49277543663788, 'spark.locality.wait': 7.31095692554607, 'spark.maxRemoteBlockSizeFetchToMem': 2126696217.4392302, 'spark.memory.fraction': 0.5705615143249015, 'spark.memory.offHeap.enabled': 0.05399744188760247, 'spark.memory.offHeap.size': 86.52406238268152, 'spark.memory.storageFraction': 0.5273125224399731, 'spark.rdd.compress': 0.01691161859478852, 'spark.reducer.maxBlocksInFlightPerAddress': 2030795550.246238, 'spark.reducer.maxReqsInFlight': 1254466334.8641906, 'spark.reducer.maxSizeInFlight': 69.03763847398714, 'spark.scheduler.mode': 0.9429925834414026, 'spark.scheduler.revive.interval': 682.970534799763, 'spark.shuffle.compress': 0.9559910663833693, 'spark.shuffle.file.buffer': 33.619711250281554, 'spark.shuffle.io.numConnectionsPerPeer': 3.4271303094795567, 'spark.shuffle.sort.bypassMergeThreshold': 336.8911639871419, 'spark.storage.memoryMapThreshold': 3.80375083048129} target = -213.154
x_probe = {'spark.broadcast.blockSize': 53.10926091465372, 'spark.broadcast.checksum': 0.04427281774752933, 'spark.broadcast.compress': 0.936721333916878, 'spark.default.parallelism': 203.83012737982986, 'spark.executor.cores': 3.874696932898346, 'spark.executor.instances': 4.4759060592886755, 'spark.executor.memory': 5.089660551005859, 'spark.executor.memoryOverhead': 489.62802167238476, 'spark.kryoserializer.buffer': 119.70792903814925, 'spark.kryoserializer.buffer.max': 100.49277543663788, 'spark.locality.wait': 7.31095692554607, 'spark.maxRemoteBlockSizeFetchToMem': 2126696217.4392302, 'spark.memory.fraction': 0.5705615143249015, 'spark.memory.offHeap.enabled': 0.05399744188760247, 'spark.memory.offHeap.size': 86.52406238268152, 'spark.memory.storageFraction': 0.5273125224399731, 'spark.rdd.compress': 0.01691161859478852, 'spark.reducer.maxBlocksInFlightPerAddress': 2030795550.246238, 'spark.reducer.maxReqsInFlight': 1254466334.8641906, 'spark.reducer.maxSizeInFlight': 69.03763847398714, 'spark.scheduler.mode': 0.9429925834414026, 'spark.scheduler.revive.interval': 682.970534799763, 'spark.shuffle.compress': 0.9559910663833693, 'spark.shuffle.file.buffer': 33.619711250281554, 'spark.shuffle.io.numConnectionsPerPeer': 3.4271303094795567, 'spark.shuffle.sort.bypassMergeThreshold': 336.8911639871419, 'spark.storage.memoryMapThreshold': 3.80375083048129}
target = -213.154
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.65334292e+01 5.54665708e+01]
 [0.00000000e+00 1.32497807e-01]
 [8.67502193e-01 1.00000000e+00]
 [2.00000000e+02 2.61115455e+02]
 [3.60250658e+00 4.00000000e+00]
 [4.45257485e+00 5.54742515e+00]
 [4.43514093e+00 5.56485907e+00]
 [4.65080927e+02 6.00919073e+02]
 [9.49315321e+01 1.21068468e+02]
 [8.17048911e+01 1.08295109e+02]
 [7.17014531e+00 8.82985469e+00]
 [1.92261417e+09 2.14748314e+09]
 [5.55083146e-01 6.64916854e-01]
 [0.00000000e+00 1.32497807e-01]
 [0.00000000e+00 1.99776092e+02]
 [5.00000000e-01 5.83522141e-01]
 [0.00000000e+00 1.32497807e-01]
 [1.90566012e+09 2.14748365e+09]
 [1.11586651e+09 1.40694685e+09]
 [6.05529356e+01 7.20000000e+01]
 [8.67502193e-01 1.00000000e+00]
 [6.02752462e+02 7.41247538e+02]
 [8.67502193e-01 1.00000000e+00]
 [3.05334292e+01 3.94665708e+01]
 [3.45257485e+00 4.54742515e+00]
 [3.08238930e+02 3.50000000e+02]
 [3.60250658e+00 4.00000000e+00]]
before probe, param.shape = (23, 27)
before probe, target = (23,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]]
标准化后的train_x = 
[[ 2.12704493e-01 -5.09763448e-01  5.59108055e-01 -6.62421475e-01
   6.95203629e-01 -5.37223934e-01 -9.39195675e-02 -2.24242915e-01
   3.52467845e-01  2.45122775e-01  4.33607040e-01  6.18302676e-01
  -3.42085740e-01 -5.91350900e-01 -5.44678487e-01 -5.09622945e-01
  -5.01595943e-01  5.81368388e-01 -6.58207244e-01  4.57841522e-01
   4.83762222e-01 -2.75753552e-01  5.98222700e-01  1.41681465e-01
   5.30459075e-01  5.91470187e-01  8.26980184e-01]
 [-4.99085243e-01 -5.09763448e-01 -2.49514304e+00  1.29298596e+00
  -1.57373922e+00  3.22839608e+00  1.30313972e+00 -1.42887871e+00
  -8.39055265e-01  3.64872497e-01  4.33607040e-01 -1.92520319e+00
  -1.40072423e+00  2.51617037e+00  3.03864292e-01 -3.05577572e-01
   2.56356616e+00 -2.64847593e+00  4.88184742e-01 -4.43456480e-01
  -3.09992900e+00  3.40585187e+00 -2.37196330e+00  1.52561759e+00
  -4.78685895e-01 -3.64356472e+00 -5.72208837e-01]
 [ 2.17012627e+00  3.09436872e+00 -2.49514304e+00  1.43113975e+00
  -2.70821064e+00  7.17982738e-01 -2.88803815e+00  2.35583525e+00
  -2.62633993e+00  1.50249485e+00 -2.66925679e+00 -3.44072621e-02
   7.16552745e-01  2.51617037e+00 -4.69917009e-01  1.93892153e+00
   2.56356616e+00 -4.92663203e-01 -1.48696648e+00 -2.57379721e+00
   4.83762222e-01  1.34580179e-01 -2.37196330e+00 -2.48779718e+00
  -2.49697583e+00  8.93972680e-01 -5.72208837e-01]
 [ 2.12704493e-01 -5.09763448e-01  5.59108055e-01 -6.41167047e-01
   6.95203629e-01 -5.37223934e-01 -9.39195675e-02 -2.51212373e-01
   4.37576639e-01  1.25373054e-01  4.33607040e-01  6.76814545e-01
  -4.93319449e-01 -5.91350900e-01 -5.33464266e-01 -7.13668708e-01
  -5.01595943e-01  6.44437615e-01 -4.89292185e-01  5.39777704e-01
   4.83762222e-01 -2.87151711e-01  5.98222700e-01  4.18468691e-01
   5.30459075e-01  6.38009032e-01  8.26980184e-01]
 [ 2.12704493e-01 -5.09763448e-01  5.59108055e-01 -6.94303118e-01
   6.95203629e-01 -5.37223934e-01 -9.39195675e-02 -2.33232734e-01
   5.65239829e-01 -1.74001250e-01  4.33607040e-01  7.00276646e-01
  -4.93319449e-01 -5.91350900e-01 -6.04487670e-01 -7.13668708e-01
  -5.01595943e-01  7.44071879e-01 -5.97220917e-01  6.21713886e-01
   4.83762222e-01 -2.75753552e-01  5.98222700e-01  2.80075078e-01
   5.30459075e-01  8.47433835e-01  8.26980184e-01]
 [ 2.12704493e-01 -5.09763448e-01  5.59108055e-01 -8.85592977e-01
   6.95203629e-01 -5.37223934e-01 -9.39195675e-02 -4.75957857e-01
   1.03333819e+00  3.04997636e-01  1.20932300e+00  1.03219419e+00
  -7.95788200e-01 -5.91350900e-01 -6.04487670e-01 -1.12175906e+00
  -5.01595943e-01  9.15622294e-01 -1.36166514e+00  8.67522432e-01
   4.83762222e-01 -7.08883602e-01  5.98222700e-01  2.80075078e-01
   1.53960404e+00  9.40511525e-01  8.26980184e-01]
 [ 3.47570587e-02 -5.09763448e-01  5.59108055e-01 -6.83675904e-01
   6.95203629e-01 -5.37223934e-01 -9.39195675e-02 -2.06263276e-01
   5.65239829e-01  3.04997636e-01  4.33607040e-01  7.03270586e-01
  -3.42085524e-01 -5.91350900e-01 -5.63368857e-01 -7.13668708e-01
  -5.01595943e-01  6.57764539e-01 -6.12448951e-01  6.21713886e-01
   4.83762222e-01 -2.98549870e-01  5.98222700e-01  1.41681465e-01
   5.30459075e-01  5.21661919e-01  8.26980184e-01]
 [ 2.12704493e-01 -5.09763448e-01  5.59108055e-01 -5.56149332e-01
   6.95203629e-01 -5.37223934e-01 -9.39195675e-02 -3.41110567e-01
   1.82250258e-01  2.45122775e-01  4.33607040e-01  2.46107425e-01
  -3.96176733e-02 -5.91350900e-01 -4.84869305e-01 -7.13668708e-01
  -5.01595943e-01  5.52885031e-01 -5.84266098e-01  1.30096794e-01
   4.83762222e-01 -1.73170119e-01  5.98222700e-01  1.41681465e-01
   5.30459075e-01  2.88967693e-01  8.26980184e-01]
 [ 3.47570587e-02 -5.09763448e-01  5.59108055e-01 -7.79246865e-02
  -4.39267794e-01  7.17982738e-01 -9.39195675e-02 -4.44465274e-02
  -2.43293710e-01 -3.53625832e-01  4.33607040e-01 -1.41335042e-01
   2.62850177e-01 -5.91350900e-01 -4.84869305e-01  1.93892105e+00
  -5.01595943e-01 -2.10483711e-01 -8.77115898e-02 -6.07328844e-01
   4.83762222e-01 -2.41559074e-01  5.98222700e-01  1.41681465e-01
   5.30459075e-01 -5.95270364e-01 -5.72208837e-01]
 [-2.45650702e+00 -5.09763448e-01 -2.49514304e+00  2.24943525e+00
  -2.70821064e+00  7.17982738e-01 -9.39195675e-02  6.92718661e-01
  -5.41174487e-01 -2.62887054e+00 -2.66925679e+00  1.74213399e-01
   1.77519123e+00  2.51617037e+00  2.86070685e+00 -5.09622945e-01
   2.56356616e+00 -2.04314469e+00  1.55690233e+00  1.30096794e-01
   4.83762222e-01  2.39141570e+00  5.98222700e-01 -5.50286599e-01
  -1.48783086e+00  3.30040450e-02 -3.37058688e+00]
 [-1.21087498e+00 -5.09763448e-01  5.59108055e-01  1.70744732e+00
  -4.39267794e-01  7.17982738e-01  2.70019901e+00  1.54675150e+00
  -2.66889433e+00  2.45122775e-01 -1.11782488e+00 -2.74774242e+00
   1.62395716e+00 -5.91350900e-01  2.83827841e+00  1.32678541e+00
  -5.01595943e-01 -1.17364476e+00  1.14056792e+00 -2.00024394e+00
   4.83762222e-01 -9.48244945e-01 -2.37196330e+00 -2.21100995e+00
  -2.49697583e+00 -4.32384406e-01 -5.72208837e-01]
 [-1.92266471e+00  3.09436872e+00  5.59108055e-01  2.22818083e+00
   6.95203629e-01 -1.79243061e+00 -1.49097886e+00  2.67946874e+00
  -1.58184916e-01 -2.03012193e+00 -1.11782488e+00 -2.33908165e+00
   2.68259565e+00 -5.91350900e-01  1.61219016e+00  1.32678541e+00
  -5.01595943e-01 -1.73238812e+00  1.93237171e+00 -2.57379721e+00
  -3.09992900e+00 -3.09948030e-01  5.98222700e-01 -2.21100995e+00
  -4.78685895e-01  7.31086722e-01 -1.97139786e+00]
 [-1.45818056e+00  6.92135169e-01 -6.82171841e-01  6.15480013e-01
  -6.99015065e-01  7.91584771e-01  8.00675998e-01  9.16746390e-01
  -1.44026152e+00 -1.42032665e+00  8.56859197e-02  8.91305948e-01
  -2.47490562e-01  1.68281813e-01 -4.85493234e-01  2.21874464e+00
  -3.67359140e-01 -9.52291700e-01  2.67809580e+00 -2.68537694e-03
  -8.90997528e-01 -1.45519136e+00 -1.33130348e+00 -3.64156518e-01
  -1.03268938e+00 -1.79333093e+00 -9.21080083e-01]
 [ 1.01754003e+00 -4.21778418e-01  3.08746124e-01 -4.31691267e-01
   9.94629554e-02  1.06734939e+00  1.65180336e-01 -3.09593703e-01
   2.00627162e-01 -1.02102368e+00  1.23949198e+00 -2.98570233e-01
   3.25231324e-01  1.98162683e-02  5.72568458e-02 -2.04524583e-01
  -3.08124290e-01  3.51371137e-01 -1.36399645e-01  4.46536268e-01
  -3.12287855e-03  6.77000837e-01  5.93951001e-03  8.83213780e-01
   7.39628061e-01 -8.79867537e-01  2.88379689e-01]
 [ 1.07321670e+00  2.94446480e-01  2.79900997e-01 -3.54781725e-01
   1.07663695e-01  1.89946255e-01  9.98484699e-01 -2.69496296e-01
  -5.65204125e-02 -1.17392840e+00  6.48566492e-01 -4.77702305e-01
   1.45862408e+00  5.77739686e-03 -3.81704158e-01 -8.76752231e-01
  -3.66888112e-01  6.12888919e-01 -5.80408043e-01 -6.89251922e-02
   1.61256650e-01 -2.41293443e-01  1.95204483e-01  1.05429140e+00
   1.16354641e+00  3.84936591e-02  3.76632646e-01]
 [-2.14646135e-02 -4.63027163e-01  1.95181401e-01 -3.57446356e-01
   3.23921446e-01  5.27406419e-01 -4.99102441e-01 -5.07491082e-01
   6.28682194e-01  5.48686883e-01 -6.24626377e-02 -2.06158220e-01
   1.52571728e-01 -2.39102205e-01  1.98500410e-01 -1.13948082e-01
  -2.72831951e-01 -1.14145252e-02  4.88617710e-01  6.23693524e-01
   3.27400902e-01  3.07300949e-01  2.71290153e-01  1.94438483e-01
   5.15736341e-01 -2.84060731e-01  2.41337341e-01]
 [-2.43139812e-01 -2.87659022e-01  4.19251787e-01 -6.50396367e-01
   3.70778019e-01  1.44487054e-01  6.22067555e-01 -8.88049303e-01
   3.89596937e-01  2.88120286e-01  8.68666904e-02  3.92082102e-01
  -6.96982220e-01 -2.74936726e-01 -1.69579170e-01 -1.00924515e-01
  -1.84685698e-01  8.21822591e-01  6.57776263e-01  5.74056114e-01
   2.51786024e-01 -8.59517617e-01  4.70143140e-01  3.11139655e-01
   4.60312891e-01 -1.38078093e-01  1.40405700e-01]
 [ 1.20720877e+00 -6.23317865e-02  4.46724907e-01 -3.80192848e-01
   5.26097392e-01 -1.11749673e+00 -1.59398760e-03 -1.29514589e+00
   4.96822365e-01  1.10709159e+00 -4.26659413e-01  3.61475973e-01
  -5.58177743e-01 -2.53546239e-01 -2.63091924e-01 -8.26625951e-01
  -7.26313704e-02  7.98965371e-01 -1.64495753e-02  1.36863876e-01
   4.17380010e-01 -2.79960065e-01  3.50454638e-01 -1.60052128e-01
   8.71820638e-02  3.10843793e-01  4.38788408e-01]
 [-1.68452913e-01 -5.79871015e-02  2.45850912e-01 -4.77647553e-01
   4.06604283e-01  1.66257374e-02 -8.19943512e-01  2.10005083e-01
   8.49306618e-01  6.14584128e-01  7.64062412e-01  7.53877298e-01
  -1.15194884e+00 -2.15550432e-01 -2.15051742e-01 -5.52329819e-01
  -2.81841190e-01  2.91433974e-01 -1.80040827e-01  2.62596592e-01
   3.18268555e-01 -6.65932094e-02  3.42653107e-01  9.30673090e-01
  -8.64342011e-02  4.67603388e-01  2.84923120e-01]
 [ 5.33462987e-01 -7.09485501e-02  2.91530465e-01 -5.97265228e-01
   3.58070829e-01 -4.48739556e-01 -5.59089042e-01 -4.48253479e-01
   9.38290162e-01  8.33542982e-01 -3.60064953e-02  2.85455803e-03
  -3.58273482e-01 -4.13749297e-01 -6.00108340e-01 -5.41040830e-01
  -2.63830507e-01  4.61634866e-01 -5.52701389e-01  8.45809829e-01
   8.32776144e-02  1.60266355e-01  1.93280371e-01  4.51446695e-01
   2.78272551e-01  4.94519690e-02  1.99986381e-01]
 [ 3.44714854e-01 -1.13652801e-01  3.54250311e-01 -5.99929245e-01
   4.69086675e-01 -6.50577162e-01  2.76526979e-01 -6.23504538e-01
   4.45860503e-01  1.23281908e+00  7.65365606e-01  5.78738494e-02
  -4.84153423e-01 -1.31543775e-01 -7.30934213e-01  7.31869259e-01
  -2.52771350e-01  4.17422156e-01 -2.84130316e-01  5.41920119e-01
   1.73796659e-01 -1.34155916e-01  3.31793965e-01  3.59762241e-01
   1.52827065e-01  2.96931945e-01  5.29938872e-01]
 [-8.69784042e-02 -2.50101408e-01  2.28352457e-01 -6.29194610e-01
   4.86549575e-01 -4.10068857e-01  1.12486688e-01 -2.40497201e-01
   6.37734325e-01  2.64947394e-01  3.65575181e-01  6.33331073e-01
  -6.55077558e-01 -4.68247106e-01 -2.77947819e-01 -4.00164262e-01
  -3.55612279e-01  8.95803367e-01 -6.25524829e-01  8.45197074e-01
   2.43724542e-01 -3.69980177e-01  4.34921734e-01  7.77726370e-01
   4.86063523e-01  4.81637907e-01  5.37236408e-01]
 [ 5.88042060e-01 -3.50198361e-01  3.65839119e-01 -8.44889392e-01
   5.53050880e-01 -1.19507014e+00  3.13415383e-02 -6.14149166e-01
   8.50691703e-01  5.74001939e-01 -1.00894669e-01  9.26220061e-01
  -9.38530008e-01 -4.23552701e-01 -4.56743803e-01 -5.64459681e-01
  -4.49759091e-01  5.17014509e-01 -6.89083258e-01  6.24797839e-01
   2.79465243e-01 -1.50709650e-01  4.67507981e-01 -4.93416819e-02
  -4.76494916e-02  6.35476480e-01  5.52390500e-01]]================= config24 =================
2022年 02月 19日 星期六 22:20:24 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (61464) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (241950) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154]
upper = 
[6121.41206915 6119.82302222 6104.43075729 ... 6158.80032332 6145.45224392
 6120.64751903]
upper.argmax() = 5965
all predict_target = 
[4537.397077   4541.22416725 4578.18980655 ... 4444.01678009 4478.9716477
 4539.1997875 ]
upper.argmax() = 5965, sortnumber[0] = 5965
x_max = [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
 3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
 1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
 6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
 4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
 9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
 4.19453138e+00 3.37310595e+02 3.96324901e+00]
black_box_function中schafferRun(i) 中的i为[52.34781443539676, 0.08040648183196626, 0.9320374521897253, 223.47726602973782, 3.8848034245766283, 4.988017883562228, 5.2371924387418325, 539.0409447776977, 114.98605761009438, 83.93969955072205, 7.454334189641479, 2097225009.4400113, 0.6024379086384203, 0.03668709770354851, 8.688393844591626, 0.5381085994563017, 0.049354756381397455, 1964489342.0592825, 1233388961.1581197, 69.17455108885427, 0.9439571500185866, 677.3576837917957, 0.965839970811208, 36.20288657873539, 4.194531375526564, 337.3105945769817, 3.9632490100252626]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 52.34781443539676
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.08040648183196626
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9320374521897253
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 223.47726602973782
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.8848034245766283
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.988017883562228
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.2371924387418325
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 539.0409447776977
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 114.98605761009438
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 83.93969955072205
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.454334189641479
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2097225009.4400113
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6024379086384203
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.03668709770354851
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 8.688393844591626
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5381085994563017
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.049354756381397455
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1964489342.0592825
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1233388961.1581197
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 69.17455108885427
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9439571500185866
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 677.3576837917957
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.965839970811208
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 36.20288657873539
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.194531375526564
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 337.3105945769817
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.9632490100252626
configNum = 24	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 24 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 52.34781443539676, 'spark.broadcast.checksum': 0.08040648183196626, 'spark.broadcast.compress': 0.9320374521897253, 'spark.default.parallelism': 223.47726602973782, 'spark.executor.cores': 3.8848034245766283, 'spark.executor.instances': 4.988017883562228, 'spark.executor.memory': 5.2371924387418325, 'spark.executor.memoryOverhead': 539.0409447776977, 'spark.kryoserializer.buffer': 114.98605761009438, 'spark.kryoserializer.buffer.max': 83.93969955072205, 'spark.locality.wait': 7.454334189641479, 'spark.maxRemoteBlockSizeFetchToMem': 2097225009.4400113, 'spark.memory.fraction': 0.6024379086384203, 'spark.memory.offHeap.enabled': 0.03668709770354851, 'spark.memory.offHeap.size': 8.688393844591626, 'spark.memory.storageFraction': 0.5381085994563017, 'spark.rdd.compress': 0.049354756381397455, 'spark.reducer.maxBlocksInFlightPerAddress': 1964489342.0592825, 'spark.reducer.maxReqsInFlight': 1233388961.1581197, 'spark.reducer.maxSizeInFlight': 69.17455108885427, 'spark.scheduler.mode': 0.9439571500185866, 'spark.scheduler.revive.interval': 677.3576837917957, 'spark.shuffle.compress': 0.965839970811208, 'spark.shuffle.file.buffer': 36.20288657873539, 'spark.shuffle.io.numConnectionsPerPeer': 4.194531375526564, 'spark.shuffle.sort.bypassMergeThreshold': 337.3105945769817, 'spark.storage.memoryMapThreshold': 3.9632490100252626} target = -180.247
x_probe = {'spark.broadcast.blockSize': 52.34781443539676, 'spark.broadcast.checksum': 0.08040648183196626, 'spark.broadcast.compress': 0.9320374521897253, 'spark.default.parallelism': 223.47726602973782, 'spark.executor.cores': 3.8848034245766283, 'spark.executor.instances': 4.988017883562228, 'spark.executor.memory': 5.2371924387418325, 'spark.executor.memoryOverhead': 539.0409447776977, 'spark.kryoserializer.buffer': 114.98605761009438, 'spark.kryoserializer.buffer.max': 83.93969955072205, 'spark.locality.wait': 7.454334189641479, 'spark.maxRemoteBlockSizeFetchToMem': 2097225009.4400113, 'spark.memory.fraction': 0.6024379086384203, 'spark.memory.offHeap.enabled': 0.03668709770354851, 'spark.memory.offHeap.size': 8.688393844591626, 'spark.memory.storageFraction': 0.5381085994563017, 'spark.rdd.compress': 0.049354756381397455, 'spark.reducer.maxBlocksInFlightPerAddress': 1964489342.0592825, 'spark.reducer.maxReqsInFlight': 1233388961.1581197, 'spark.reducer.maxSizeInFlight': 69.17455108885427, 'spark.scheduler.mode': 0.9439571500185866, 'spark.scheduler.revive.interval': 677.3576837917957, 'spark.shuffle.compress': 0.965839970811208, 'spark.shuffle.file.buffer': 36.20288657873539, 'spark.shuffle.io.numConnectionsPerPeer': 4.194531375526564, 'spark.shuffle.sort.bypassMergeThreshold': 337.3105945769817, 'spark.storage.memoryMapThreshold': 3.9632490100252626}
target = -180.247
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.69800863e+01 5.50199137e+01]
 [0.00000000e+00 1.19248027e-01]
 [8.80751973e-01 1.00000000e+00]
 [2.00000000e+02 2.57103909e+02]
 [3.64225592e+00 4.00000000e+00]
 [4.50731736e+00 5.49268264e+00]
 [4.49162683e+00 5.50837317e+00]
 [4.71872834e+02 5.94127166e+02]
 [9.62383789e+01 1.19761621e+02]
 [8.30344020e+01 1.06965598e+02]
 [7.25313078e+00 8.74686922e+00]
 [1.93698255e+09 2.14748314e+09]
 [5.60574831e-01 6.59425169e-01]
 [0.00000000e+00 1.19248027e-01]
 [0.00000000e+00 1.86098483e+02]
 [5.00000000e-01 5.78169926e-01]
 [0.00000000e+00 1.19248027e-01]
 [1.92005755e+09 2.14748365e+09]
 [1.13042053e+09 1.39239284e+09]
 [6.11976421e+01 7.20000000e+01]
 [8.80751973e-01 1.00000000e+00]
 [6.09677216e+02 7.34322784e+02]
 [8.80751973e-01 1.00000000e+00]
 [3.09800863e+01 3.90199137e+01]
 [3.50731736e+00 4.49268264e+00]
 [3.10915037e+02 3.50000000e+02]
 [3.64225592e+00 4.00000000e+00]]
before probe, param.shape = (24, 27)
before probe, target = (24,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]]
标准化后的train_x = 
[[ 0.19717824 -0.51085021  0.55474465 -0.64418723  0.68161811 -0.5219664
  -0.10592187 -0.2216996   0.32950771  0.26718158  0.44249253  0.59120308
  -0.32859226 -0.5810009  -0.51856422 -0.50469102 -0.49620674  0.5804876
  -0.63103728  0.43695108  0.48132296 -0.27228545  0.58693586  0.13135325
   0.50540353  0.57179022  0.80177189]
 [-0.52683803 -0.51085021 -2.5571954   1.33664908 -1.62088854  3.30043283
   1.31951173 -1.45150484 -0.87707629  0.38906588  0.44249253 -1.97501574
  -1.40533619  2.57839406  0.33830639 -0.29676954  2.62690573 -2.71303785
   0.52533974 -0.47606963 -3.17335624  3.48489739 -2.43165332  1.5422664
  -0.51428633 -3.71728956 -0.60993   ]
 [ 2.18822298  3.1670934  -2.5571954   1.47659947 -2.77214186  0.75216668
  -2.95678906  2.41228625 -2.6869523   1.54696665 -2.72710015 -0.06733541
   0.74815168  2.57839406 -0.44306901  1.99036668  2.62690573 -0.5147201
  -1.46701498 -2.63411859  0.48132296  0.14647177 -2.43165332 -2.54938172
  -2.55366604  0.87815307 -0.60993   ]
 [ 0.19717824 -0.51085021  0.55474465 -0.6226564   0.68161811 -0.5219664
  -0.10592187 -0.24923255  0.41569228  0.14529729  0.44249253  0.65023745
  -0.48241245 -0.5810009  -0.50723994 -0.71261289 -0.49620674  0.64480033
  -0.46065098  0.51995297  0.48132296 -0.2839176   0.58693586  0.41353588
   0.50540353  0.61892297  0.80177189]
 [ 0.19717824 -0.51085021  0.55474465 -0.67648348  0.68161811 -0.5219664
  -0.10592187 -0.23087725  0.54496914 -0.15941344  0.44249253  0.67390906
  -0.48241245 -0.5810009  -0.57896038 -0.71261289 -0.49620674  0.74639903
  -0.56951976  0.60295485  0.48132296 -0.27228545  0.58693586  0.27244457
   0.50540353  0.83102032  0.80177189]
 [ 0.19717824 -0.51085021  0.55474465 -0.87026094  0.68161811 -0.5219664
  -0.10592187 -0.47867383  1.01898428  0.32812373  1.2348907   1.00879055
  -0.7900542  -0.5810009  -0.57896038 -1.12845544 -0.49620674  0.92133182
  -1.34062227  0.8519605   0.48132296 -0.71430696  0.58693586  0.27244457
   1.52509338  0.92528581  0.80177189]
 [ 0.01617417 -0.51085021  0.55474465 -0.66571806  0.68161811 -0.5219664
  -0.10592187 -0.2033443   0.54496914  0.32812373  0.44249253  0.67692973
  -0.32859204 -0.5810009  -0.53743802 -0.71261289 -0.49620674  0.65839001
  -0.58488043  0.60295485  0.48132296 -0.29554974  0.58693586  0.13135325
   0.50540353  0.50109111  0.80177189]
 [ 0.19717824 -0.51085021  0.55474465 -0.53653309  0.68161811 -0.5219664
  -0.10592187 -0.34100907  0.15713856  0.26718158  0.44249253  0.21568421
  -0.0209512  -0.5810009  -0.45816805 -0.71261289 -0.49620674  0.55144265
  -0.55645211  0.10494355  0.48132296 -0.16759615  0.58693586  0.13135325
   0.50540353  0.26542738  0.80177189]
 [ 0.01617417 -0.51085021  0.55474465 -0.05208942 -0.46963522  0.75216668
  -0.10592187 -0.03814658 -0.27378429 -0.34223988  0.44249253 -0.17521804
   0.28668963 -0.5810009  -0.45816805  1.99036618 -0.49620674 -0.22697703
  -0.05557263 -0.6420734   0.48132296 -0.23738902  0.58693586  0.13135325
   0.50540353 -0.63009477 -0.60993   ]
 [-2.51788278 -0.51085021 -2.5571954   2.30553641 -2.77214186  0.75216668
  -0.10592187  0.71442081 -0.57543029 -2.65804144 -2.72710015  0.14314818
   1.82489562  2.57839406  2.9202425  -0.50469102  2.62690573 -2.09577161
   1.60336583  0.10494355  0.48132296  2.44963648  0.58693586 -0.57410332
  -1.53397618  0.00619728 -3.43333379]
 [-1.2508543  -0.51085021  0.55474465  1.75650026 -0.46963522  0.75216668
   2.74494533  1.58629766 -2.73004458  0.26718158 -1.14230381 -2.80490006
   1.67107505 -0.5810009   2.89759394  1.36660225 -0.49620674 -1.20912821
   1.18340515 -2.05310541  0.48132296 -0.95858201 -2.43165332 -2.2671991
  -2.55366604 -0.46513016 -0.60993   ]
 [-1.97487057  3.1670934   0.55474465  2.28400558  0.68161811 -1.79609948
  -1.53135547  2.74268169 -0.18759972 -2.04861997 -1.14230381 -2.39259003
   2.74781899 -0.5810009   1.65947253  1.36660225 -0.49620674 -1.77888802
   1.98210553 -2.63411859 -3.17335624 -0.30718189  0.58693586 -2.2671991
  -0.51428633  0.71318846 -2.02163189]
 [-1.5024079   0.7156629  -0.70998064  0.65033258 -0.73322485  0.8268785
   0.80684295  0.94312933 -1.48588181 -1.42795492  0.08708917  0.86664421
  -0.23237926  0.19131232 -0.4587981   2.27550538 -0.35943203 -0.98341085
   2.73432486 -0.02956565 -0.92066889 -1.47593522 -1.37403454 -0.38434501
  -1.07407878 -1.84344424 -0.96192118]
 [ 1.01583857 -0.42106327  0.29965386 -0.41045652  0.07706482  1.10680119
   0.15844036 -0.30883369  0.17574775 -1.02153427  1.26570848 -0.3338573
   0.35013765  0.04036845  0.08927867 -0.19379693 -0.29907728  0.34595562
  -0.10468475  0.42549879 -0.01520667  0.70002745 -0.01499938  0.88734023
   0.71675819 -0.9183238   0.25835472]
 [ 1.07247161  0.30982968  0.27026391 -0.33254682  0.08538687  0.21616829
   1.00866916 -0.2678985  -0.08465018 -1.17716456  0.66207481 -0.51458898
   1.50291435  0.02609522 -0.35399041 -0.87879439 -0.3589521   0.61262961
  -0.55256045 -0.09666701  0.15242899 -0.23711793  0.17734992  1.06175266
   1.1451062   0.01175695  0.34739692]
 [-0.04101323 -0.46315678  0.18394412 -0.3352461   0.30484366  0.55871679
  -0.51933402 -0.51086591  0.60921341  0.5761568  -0.06424541 -0.24062007
   0.17452513 -0.22287214  0.23190844 -0.10149981 -0.2631177  -0.0239829
   0.52577648  0.60496023  0.32186433  0.32273822  0.25467551  0.18513866
   0.49052695 -0.31491367  0.21089167]
 [-0.26649618 -0.28419715  0.41224677 -0.63200575  0.35239336  0.17002364
   0.62460697 -0.89937544  0.36710611  0.31094554  0.08829533  0.36296241
  -0.68955838 -0.25930485 -0.13978357 -0.08822884 -0.17330494  0.82568271
   0.6964084   0.55467722  0.24475163 -0.86803325  0.45676907  0.30411468
   0.43452436 -0.1670681   0.10905741]
 [ 1.20876529 -0.05425529  0.4402388  -0.3582884   0.51001033 -1.11098873
  -0.01172115 -1.31497784  0.47568687  1.14451522 -0.43627444  0.33208297
  -0.54837999 -0.23755729 -0.23421409 -0.8277159  -0.0591321   0.80237483
   0.01631008  0.11179865  0.41362581 -0.27657832  0.33513008 -0.17626202
   0.05749457  0.28758265  0.41010854]
 [-0.19052638 -0.04982163  0.23557068 -0.45701044  0.3887496   0.04023439
  -0.84669138  0.2216215   0.83262654  0.64322868  0.78005453  0.72798835
  -1.15230611 -0.19892722 -0.18570243 -0.54820916 -0.27229727  0.2848367
  -0.14870605  0.2391667   0.31255109 -0.05883139  0.32720141  0.93572466
  -0.11793587  0.44634271  0.25486724]
 [ 0.52344645 -0.06304852  0.28211303 -0.57818367  0.3394982  -0.43214783
  -0.58053895 -0.4503906   0.92273484  0.86609054 -0.03722031 -0.02974085
  -0.34505685 -0.40043461 -0.57453808 -0.53670573 -0.25394607  0.45839336
  -0.52461247  0.82996549  0.0729053   0.17268524  0.17539445  0.44715673
   0.25058183  0.02285511  0.16917092]
 [ 0.33145616 -0.10662734  0.34601754 -0.58088233  0.45215627 -0.63702881
   0.27204846 -0.62930333  0.42408085  1.27248384  0.78138575  0.02576975
  -0.47308966 -0.11351824 -0.70664791  0.76038491 -0.24267783  0.41330893
  -0.25370215  0.52212325  0.1652174  -0.12778105  0.31616531  0.35368507
   0.12382552  0.27349327  0.50207415]
 [-0.10765237 -0.24587037  0.21774172 -0.61052827  0.46987749 -0.39289404
   0.1046765  -0.2382935   0.61837996  0.28735958  0.37299761  0.60636568
  -0.64693704 -0.45584215 -0.24921578 -0.39315303 -0.34746309  0.90112213
  -0.5980702   0.82934477  0.23653046 -0.3684464   0.42097368  0.77979656
   0.46054407  0.46055633  0.50943695]
 [ 0.57896304 -0.34801728  0.35782524 -0.82902803  0.53736253 -1.18973183
   0.02188329 -0.61975248  0.83402913  0.60192311 -0.10350394  0.9018701
  -0.93523726 -0.41040166 -0.42976652 -0.56056945 -0.44338985  0.51486489
  -0.66218222  0.60607891  0.27297914 -0.1446746   0.45409097 -0.0633935
  -0.07874588  0.6163581   0.52472657]
 [ 0.44113813 -0.2151197   0.34324928 -0.61751844  0.54899767 -0.53723321
   0.2321802  -0.16625792  0.6305529  -0.40685686  0.01010794  0.75028078
  -0.44491277 -0.46509187 -0.72357752 -0.33609582 -0.34206628  0.28389634
  -0.75676734  0.61744292  0.27650432 -0.2099641   0.48382076  0.3010701
   0.7037652   0.62624256  0.74989045]]
================= config25 =================
2022年 02月 19日 星期六 22:23:33 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (68932) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (248197) - 没有那个进程
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247]
upper = 
[6038.67030914 6046.26838296 6039.85301954 ... 6103.3477323  6058.45665432
 6034.99938279]
upper.argmax() = 4575
all predict_target = 
[4350.19264483 4334.07364504 4349.69425924 ... 4191.81771327 4304.08699357
 4361.14331762]
upper.argmax() = 4575, sortnumber[0] = 4575
x_max = [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
 3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
 1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
 6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
 4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
 9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
 3.79664483e+00 3.40120797e+02 3.87791767e+00]
black_box_function中schafferRun(i) 中的i为[50.00869972066648, 0.0382201729622953, 0.9559043082655398, 228.06976059627797, 3.909417290287063, 4.802706588243986, 5.2371018076106575, 501.9537660420565, 114.0904124475301, 89.3241407300582, 7.504934743456981, 2076000644.7919276, 0.6114166760981352, 0.02672927547772011, 106.84861189701982, 0.5546794682038574, 0.04203823093693514, 1994924927.0416453, 1170701632.1459136, 69.12001399198822, 0.9413904315876692, 652.4163371732149, 0.919096219063528, 36.026846977070626, 3.796644830795154, 340.1207965922258, 3.8779176687476076]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.00869972066648
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0382201729622953
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9559043082655398
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 228.06976059627797
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.909417290287063
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.802706588243986
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.2371018076106575
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 501.9537660420565
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 114.0904124475301
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 89.3241407300582
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.504934743456981
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2076000644.7919276
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6114166760981352
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.02672927547772011
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 106.84861189701982
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5546794682038574
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04203823093693514
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1994924927.0416453
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1170701632.1459136
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 69.12001399198822
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9413904315876692
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 652.4163371732149
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.919096219063528
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 36.026846977070626
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.796644830795154
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 340.1207965922258
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8779176687476076
configNum = 25	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 25 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.00869972066648, 'spark.broadcast.checksum': 0.0382201729622953, 'spark.broadcast.compress': 0.9559043082655398, 'spark.default.parallelism': 228.06976059627797, 'spark.executor.cores': 3.909417290287063, 'spark.executor.instances': 4.802706588243986, 'spark.executor.memory': 5.2371018076106575, 'spark.executor.memoryOverhead': 501.9537660420565, 'spark.kryoserializer.buffer': 114.0904124475301, 'spark.kryoserializer.buffer.max': 89.3241407300582, 'spark.locality.wait': 7.504934743456981, 'spark.maxRemoteBlockSizeFetchToMem': 2076000644.7919276, 'spark.memory.fraction': 0.6114166760981352, 'spark.memory.offHeap.enabled': 0.02672927547772011, 'spark.memory.offHeap.size': 106.84861189701982, 'spark.memory.storageFraction': 0.5546794682038574, 'spark.rdd.compress': 0.04203823093693514, 'spark.reducer.maxBlocksInFlightPerAddress': 1994924927.0416453, 'spark.reducer.maxReqsInFlight': 1170701632.1459136, 'spark.reducer.maxSizeInFlight': 69.12001399198822, 'spark.scheduler.mode': 0.9413904315876692, 'spark.scheduler.revive.interval': 652.4163371732149, 'spark.shuffle.compress': 0.919096219063528, 'spark.shuffle.file.buffer': 36.026846977070626, 'spark.shuffle.io.numConnectionsPerPeer': 3.796644830795154, 'spark.shuffle.sort.bypassMergeThreshold': 340.1207965922258, 'spark.storage.memoryMapThreshold': 3.8779176687476076} target = -176.99
x_probe = {'spark.broadcast.blockSize': 50.00869972066648, 'spark.broadcast.checksum': 0.0382201729622953, 'spark.broadcast.compress': 0.9559043082655398, 'spark.default.parallelism': 228.06976059627797, 'spark.executor.cores': 3.909417290287063, 'spark.executor.instances': 4.802706588243986, 'spark.executor.memory': 5.2371018076106575, 'spark.executor.memoryOverhead': 501.9537660420565, 'spark.kryoserializer.buffer': 114.0904124475301, 'spark.kryoserializer.buffer.max': 89.3241407300582, 'spark.locality.wait': 7.504934743456981, 'spark.maxRemoteBlockSizeFetchToMem': 2076000644.7919276, 'spark.memory.fraction': 0.6114166760981352, 'spark.memory.offHeap.enabled': 0.02672927547772011, 'spark.memory.offHeap.size': 106.84861189701982, 'spark.memory.storageFraction': 0.5546794682038574, 'spark.rdd.compress': 0.04203823093693514, 'spark.reducer.maxBlocksInFlightPerAddress': 1994924927.0416453, 'spark.reducer.maxReqsInFlight': 1170701632.1459136, 'spark.reducer.maxSizeInFlight': 69.12001399198822, 'spark.scheduler.mode': 0.9413904315876692, 'spark.scheduler.revive.interval': 652.4163371732149, 'spark.shuffle.compress': 0.919096219063528, 'spark.shuffle.file.buffer': 36.026846977070626, 'spark.shuffle.io.numConnectionsPerPeer': 3.796644830795154, 'spark.shuffle.sort.bypassMergeThreshold': 340.1207965922258, 'spark.storage.memoryMapThreshold': 3.8779176687476076}
target = -176.99
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.73820776e+01 5.46179224e+01]
 [0.00000000e+00 1.07323224e-01]
 [8.92676776e-01 1.00000000e+00]
 [2.00000000e+02 2.53493518e+02]
 [3.67803033e+00 4.00000000e+00]
 [4.55658563e+00 5.44341437e+00]
 [4.54246415e+00 5.45753585e+00]
 [4.77985551e+02 5.88014449e+02]
 [9.74145410e+01 1.18585459e+02]
 [8.42309618e+01 1.05769038e+02]
 [7.32781770e+00 8.67218230e+00]
 [1.94991409e+09 2.14748314e+09]
 [5.65517348e-01 6.54482652e-01]
 [0.00000000e+00 1.07323224e-01]
 [0.00000000e+00 1.73788634e+02]
 [5.00000000e-01 5.73352934e-01]
 [0.00000000e+00 1.07323224e-01]
 [1.93301524e+09 2.14748365e+09]
 [1.14351914e+09 1.37929422e+09]
 [6.17778779e+01 7.20000000e+01]
 [8.92676776e-01 1.00000000e+00]
 [6.15909494e+02 7.28090506e+02]
 [8.92676776e-01 1.00000000e+00]
 [3.13820776e+01 3.86179224e+01]
 [3.55658563e+00 4.44341437e+00]
 [3.13323533e+02 3.50000000e+02]
 [3.67803033e+00 4.00000000e+00]]
before probe, param.shape = (25, 27)
before probe, target = (25,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]]
标准化后的train_x = 
[[ 2.00518337e-01 -5.04885183e-01  5.47234038e-01 -6.30224551e-01
   6.67667847e-01 -4.95269055e-01 -1.17453073e-01 -2.04540751e-01
   3.09971029e-01  2.75870503e-01  4.49544828e-01  5.72533604e-01
  -3.22236921e-01 -5.69906414e-01 -5.13565696e-01 -5.15442272e-01
  -4.90237315e-01  5.74794375e-01 -5.89107801e-01  4.17811680e-01
   4.79658868e-01 -2.56205995e-01  5.83677853e-01  1.22597757e-01
   5.02765282e-01  5.50060860e-01  7.86402079e-01]
 [-5.38423019e-01 -5.04885183e-01 -2.61786059e+00  1.37853457e+00
  -1.66680737e+00  3.36010830e+00  1.33580975e+00 -1.45331128e+00
  -9.12952849e-01  4.00252724e-01  4.49544828e-01 -2.02533394e+00
  -1.41912112e+00  2.63885307e+00  3.58802244e-01 -3.03233609e-01
   2.68882051e+00 -2.77647132e+00  5.66472111e-01 -5.07112835e-01
  -3.24507069e+00  3.55941555e+00 -2.48994489e+00  1.56041240e+00
  -5.36107285e-01 -3.78607570e+00 -6.43127642e-01]
 [ 2.23260706e+00  3.23864909e+00 -2.61786059e+00  1.52045777e+00
  -2.83404497e+00  7.89856730e-01 -3.02397871e+00  2.47006477e+00
  -2.74733867e+00  1.58188383e+00 -2.78524410e+00 -9.41265293e-02
   7.74647274e-01  2.63885307e+00 -4.36705085e-01  2.03106169e+00
   2.68882051e+00 -5.39613898e-01 -1.42450925e+00 -2.69329805e+00
   4.79658868e-01  1.69064517e-01 -2.48994489e+00 -2.60925006e+00
  -2.61385242e+00  8.59784900e-01 -6.43127642e-01]
 [ 2.00518337e-01 -5.04885183e-01  5.47234038e-01 -6.08390213e-01
   6.67667847e-01 -4.95269055e-01 -1.17453073e-01 -2.32498300e-01
   3.97322735e-01  1.51488281e-01  4.49544828e-01  6.32296032e-01
  -4.78934290e-01 -5.69906414e-01 -5.02036604e-01 -7.27651341e-01
  -4.90237315e-01  6.40234600e-01 -4.18838948e-01  5.01895727e-01
   4.79658868e-01 -2.68019065e-01  5.83677853e-01  4.10160685e-01
   5.02765282e-01  5.97710712e-01  7.86402079e-01]
 [ 2.00518337e-01 -5.04885183e-01  5.47234038e-01 -6.62976058e-01
   6.67667847e-01 -4.95269055e-01 -1.17453073e-01 -2.13859934e-01
   5.28350293e-01 -1.59467273e-01  4.49544828e-01  6.56259582e-01
  -4.78934290e-01 -5.69906414e-01 -5.75054185e-01 -7.27651341e-01
  -4.90237315e-01  7.43614471e-01 -5.27632690e-01  5.85979774e-01
   4.79658868e-01 -2.56205995e-01  5.83677853e-01  2.66379221e-01
   5.02765282e-01  8.12135047e-01  7.86402079e-01]
 [ 2.00518337e-01 -5.04885183e-01  5.47234038e-01 -8.59485103e-01
   6.67667847e-01 -4.95269055e-01 -1.17453073e-01 -4.65477875e-01
   1.00878467e+00  3.38061613e-01  1.25824206e+00  9.95271106e-01
  -7.92330409e-01 -5.69906414e-01 -5.75054185e-01 -1.15206826e+00
  -4.90237315e-01  9.21614079e-01 -1.29820366e+00  8.38231914e-01
   4.79658868e-01 -7.05102647e-01  5.83677853e-01  2.66379221e-01
   1.54163785e+00  9.07434752e-01  7.86402079e-01]
 [ 1.57829977e-02 -5.04885183e-01  5.47234038e-01 -6.52058889e-01
   6.67667847e-01 -4.95269055e-01 -1.17453073e-01 -1.85902385e-01
   5.28350293e-01  3.38061613e-01  4.49544828e-01  6.59317511e-01
  -3.22236697e-01 -5.69906414e-01 -5.32780849e-01 -7.27651341e-01
  -4.90237315e-01  6.54062530e-01 -5.42982771e-01  5.85979774e-01
   4.79658868e-01 -2.79832135e-01  5.83677853e-01  1.22597757e-01
   5.02765282e-01  4.78586082e-01  7.86402079e-01]
 [ 2.00518337e-01 -5.04885183e-01  5.47234038e-01 -5.21052860e-01
   6.67667847e-01 -4.95269055e-01 -1.17453073e-01 -3.25690130e-01
   1.35267618e-01  2.75870503e-01  4.49544828e-01  1.92383524e-01
  -8.84151171e-03 -5.69906414e-01 -4.52077207e-01 -7.27651341e-01
  -4.90237315e-01  5.45240227e-01 -5.14574043e-01  8.14754930e-02
   4.79658868e-01 -1.49888367e-01  5.83677853e-01  1.22597757e-01
   5.02765282e-01  2.40336820e-01  7.86402079e-01]
 [ 1.57829977e-02 -5.04885183e-01  5.47234038e-01 -2.97802495e-02
  -4.99569760e-01  7.89856730e-01 -1.17453073e-01 -1.81570907e-02
  -3.01490910e-01 -3.46040605e-01  4.49544828e-01 -2.03339648e-01
   3.04553674e-01 -5.69906414e-01 -4.52077207e-01  2.03106119e+00
  -4.90237315e-01 -2.46826271e-01 -1.40398264e-02 -6.75280929e-01
   4.79658868e-01 -2.20766786e-01  5.83677853e-01  1.22597757e-01
   5.02765282e-01 -6.65010373e-01 -6.43127642e-01]
 [-2.57051175e+00 -5.04885183e-01 -2.61786059e+00  2.36107979e+00
  -2.83404497e+00  7.89856730e-01 -1.17453073e-01  7.46015917e-01
  -6.07221879e-01 -2.70930281e+00 -2.78524410e+00  1.18952926e-01
   1.87153147e+00  2.63885307e+00  2.98743516e+00 -5.15442272e-01
   2.68882051e+00 -2.14838352e+00  1.64375510e+00  8.14754930e-02
   4.79658868e-01  2.50805234e+00  5.83677853e-01 -5.96309563e-01
  -1.57497985e+00 -2.17373671e-02 -3.50218708e+00]
 [-1.27736437e+00 -5.04885183e-01  5.47234038e-01  1.80430416e+00
  -4.99569760e-01  7.89856730e-01  2.78907257e+00  1.63133830e+00
  -2.79101452e+00  2.75870503e-01 -1.16784964e+00 -2.86545308e+00
   1.71483373e+00 -5.69906414e-01  2.96437697e+00  1.39443570e+00
  -4.90237315e-01 -1.24619598e+00  1.22408391e+00 -2.10470972e+00
   4.79658868e-01 -9.53177113e-01 -2.48994489e+00 -2.32168713e+00
  -2.61385242e+00 -4.98235890e-01 -6.43127642e-01]
 [-2.01630573e+00  3.23864909e+00  5.47234038e-01  2.33924545e+00
   6.67667847e-01 -1.78039484e+00 -1.57071589e+00  2.80555536e+00
  -2.14139204e-01 -2.08739171e+00 -1.16784964e+00 -2.44805810e+00
   2.81171792e+00 -5.69906414e-01  1.70386294e+00  1.39443570e+00
  -4.90237315e-01 -1.82594450e+00  2.02223373e+00 -2.69329805e+00
  -3.24507069e+00 -2.91645204e-01  5.83677853e-01 -2.32168713e+00
  -5.36107285e-01  6.93010417e-01 -2.07265736e+00]
 [-1.53410357e+00  7.43500964e-01 -7.39093839e-01  6.82543425e-01
  -7.66819139e-01  8.65213142e-01  8.13131965e-01  9.78251439e-01
  -1.53000297e+00 -1.45400658e+00  8.68310749e-02  8.51371702e-01
  -2.24224279e-01  2.14473953e-01 -4.52718655e-01  2.32207975e+00
  -3.51012521e-01 -1.01652147e+00  2.77393453e+00 -5.47874133e-02
  -9.49205381e-01 -1.47857716e+00 -1.41304408e+00 -4.02933185e-01
  -1.10643072e+00 -1.89167185e+00 -9.99563983e-01]
 [ 1.03605478e+00 -4.13497033e-01  2.87786082e-01 -3.93199060e-01
   5.47207920e-02  1.14755089e+00  1.52070389e-01 -2.93018570e-01
   1.54128817e-01 -1.03925664e+00  1.28969374e+00 -3.63935384e-01
   3.69188480e-01  6.11716315e-02  1.05270619e-01 -1.98137769e-01
  -2.89576614e-01  3.36150706e-01 -6.31180990e-02  4.06210072e-01
  -2.63878893e-02  7.31230125e-01 -2.92316014e-02  8.92998932e-01
   7.18096012e-01 -9.56401644e-01  2.36122307e-01]
 [ 1.09385527e+00  3.30430308e-01  2.57894121e-01 -3.14191104e-01
   6.31583883e-02  2.49233967e-01  1.01889849e+00 -2.51452098e-01
  -1.09795488e-01 -1.19807646e+00  6.73643755e-01 -5.46895999e-01
   1.54352762e+00  4.66753954e-02 -3.46015417e-01 -8.97259384e-01
  -3.50523990e-01  6.07499875e-01 -5.10685067e-01 -1.22763631e-01
   1.44460895e-01 -2.20491485e-01  1.66624525e-01  1.07073684e+00
   1.15450223e+00 -1.61167011e-02  3.26288985e-01]
 [-4.25832818e-02 -4.56341213e-01  1.70099919e-01 -3.16928437e-01
   2.85662168e-01  5.94737833e-01 -5.38936406e-01 -4.98166395e-01
   5.93464584e-01  5.91177943e-01 -6.76163450e-02 -2.69548275e-01
   1.90291166e-01 -2.06182004e-01  2.50479983e-01 -1.03937553e-01
  -2.52972877e-01 -4.02733645e-02  5.66908549e-01  5.88011306e-01
   3.17143854e-01  3.48072590e-01  2.45359879e-01  1.77408678e-01
   4.87608843e-01 -3.46371330e-01  1.88059870e-01]
 [-2.72714405e-01 -2.74190111e-01  4.02302169e-01 -6.17871348e-01
   3.33872068e-01  2.02691200e-01  6.27338127e-01 -8.92667282e-01
   3.48078601e-01  3.20531366e-01  8.80620486e-02  3.41478078e-01
  -6.89954839e-01 -2.43183958e-01 -1.27934439e-01 -9.03929500e-02
  -1.61551274e-01  8.24288110e-01  7.37422848e-01  5.37072707e-01
   2.38553107e-01 -8.61219973e-01  4.51137922e-01  2.98653184e-01
   4.30552718e-01 -1.96903695e-01  8.49395783e-02]
 [ 1.23295854e+00 -4.01475759e-02  4.30772331e-01 -3.40295549e-01
   4.93677427e-01 -1.08937323e+00 -2.14132460e-02 -1.31467884e+00
   4.58129791e-01  1.17118445e+00 -4.47297749e-01  3.10217812e-01
  -5.46135737e-01 -2.21096602e-01 -2.24072820e-01 -8.45127691e-01
  -4.53332155e-02  8.00571606e-01  5.77933280e-02  8.84199667e-02
   4.10664145e-01 -2.60565631e-01  3.27281267e-01 -1.90882735e-01
   4.64301270e-02  2.62735161e-01  3.89792563e-01]
 [-1.95178532e-01 -3.56348454e-02  2.22608305e-01 -4.40409224e-01
   3.70733079e-01  7.17821803e-02 -8.72684875e-01  2.45616966e-01
   8.19903227e-01  6.59624413e-01  7.94050239e-01  7.11005826e-01
  -1.16135816e+00 -1.81862950e-01 -1.74683778e-01 -5.59857730e-01
  -2.62316883e-01  2.73960291e-01 -1.07109050e-01  2.17448624e-01
   3.07652098e-01 -3.94318931e-02  3.19208048e-01  9.42305897e-01
  -1.32300561e-01  4.23237028e-01  2.32590784e-01]
 [ 5.33512344e-01 -4.90976222e-02  2.69945640e-01 -5.63290569e-01
   3.20797865e-01 -4.04675564e-01 -6.01336260e-01 -4.36758480e-01
   9.11231796e-01  8.87053657e-01 -4.00353614e-02 -5.60683222e-02
  -3.39009482e-01 -3.86518827e-01 -5.70551894e-01 -5.48117100e-01
  -2.43636956e-01  4.50559643e-01 -4.82756355e-01  8.15950140e-01
   6.34129472e-02  1.95685709e-01  1.64633406e-01  4.44422568e-01
   2.43149797e-01 -4.89678698e-03  1.45812235e-01]
 [ 3.37564307e-01 -9.34536063e-02  3.34941688e-01 -5.66027272e-01
   4.35020108e-01 -6.11324172e-01  2.67896494e-01 -6.18430284e-01
   4.05824907e-01  1.30177570e+00  7.95408841e-01  1.26881728e-04
  -4.69437121e-01 -9.51194874e-02 -7.05051061e-01  7.75718598e-01
  -2.32166861e-01  4.04684819e-01 -2.12032779e-01  5.04094303e-01
   1.57494423e-01 -1.09453987e-01  3.07970737e-01  3.49168714e-01
   1.14008913e-01  2.48491200e-01  4.82919578e-01]
 [-1.10596133e-01 -2.35179829e-01  2.04474804e-01 -5.96091118e-01
   4.52987377e-01 -3.65083109e-01  9.72568817e-02 -2.21390552e-01
   6.02755270e-01  2.96462034e-01  3.78620445e-01  5.87883199e-01
  -6.46536277e-01 -4.42792089e-01 -2.39345834e-01 -4.01604450e-01
  -3.38829169e-01  9.01050088e-01 -5.56163448e-01  8.15321323e-01
   2.30174361e-01 -3.53862614e-01  4.14689930e-01  7.83404754e-01
   4.57061917e-01  4.37606589e-01  4.90375357e-01]
 [ 5.90173367e-01 -3.39148373e-01  3.46951072e-01 -8.17670954e-01
   5.21409395e-01 -1.16879569e+00  1.28472722e-02 -6.08732155e-01
   8.21324814e-01  6.17472308e-01 -1.07682399e-01  8.87032025e-01
  -9.40229087e-01 -3.96641610e-01 -4.23162005e-01 -5.72472874e-01
  -4.36474301e-01  5.08021204e-01 -6.20231276e-01  5.89144569e-01
   2.67321658e-01 -1.26610302e-01  4.48410994e-01 -7.58621801e-02
  -9.23733239e-02  5.95117702e-01  5.05858059e-01]
 [ 4.49507293e-01 -2.03880763e-01  3.32126143e-01 -6.03179819e-01
   5.33206072e-01 -5.10667582e-01  2.27249879e-01 -1.48244081e-01
   6.15093053e-01 -4.11981868e-01  8.26639780e-03  7.33573183e-01
  -4.40733186e-01 -4.52186341e-01 -7.22286859e-01 -3.43370767e-01
  -3.33335690e-01  2.73003444e-01 -7.14751189e-01  6.00656736e-01
   2.70914408e-01 -1.92915303e-01  4.78682811e-01  2.95550550e-01
   7.04858592e-01  6.05110605e-01  7.33865447e-01]
 [ 1.73901436e-02 -3.61806656e-01  4.07667001e-01 -5.53042779e-01
   5.61936302e-01 -7.48815906e-01  2.27118169e-01 -4.93866287e-01
   5.75974987e-01 -7.71174899e-02  4.91869256e-02  6.23056286e-01
  -3.00037927e-01 -4.84138598e-01 -3.45054140e-01  8.27742457e-03
  -3.56595348e-01  3.80880266e-01 -9.95867849e-01  5.96071036e-01
   2.61354076e-01 -4.87549171e-01  3.35010152e-01  2.70239319e-01
   2.91505176e-01  6.72063461e-01  6.11881758e-01]]================= config26 =================
2022年 02月 19日 星期六 22:26:39 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (84644) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (264311) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99 ]
upper = 
[5992.66078151 5979.66051162 5955.07508523 ... 5960.96126543 5971.88484443
 6000.73018314]
upper.argmax() = 3592
all predict_target = 
[4101.34770063 4132.98133584 4192.32229283 ... 4170.98276317 4151.56287469
 4080.38298244]
upper.argmax() = 3592, sortnumber[0] = 3592
x_max = [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
 3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
 1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
 5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
 6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
 9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
 3.98103918e+00 3.43870975e+02 3.92155727e+00]
black_box_function中schafferRun(i) 中的i为[52.90709640510982, 0.07956383551746103, 0.9642592604203715, 211.33938728024924, 3.942216436183089, 4.690447499681895, 4.864299743248708, 556.7204884368048, 109.55590982683674, 91.38125887408398, 7.623269983950988, 1986597944.897435, 0.5796624299864721, 0.059877581230034095, 60.5866728591385, 0.519704299953972, 0.06620220062005656, 2077830129.7083685, 1291624673.60361, 69.29785911703694, 0.9423263697053363, 672.1284753231062, 0.9702325480090068, 35.8118640241435, 3.9810391805633794, 343.8709745361133, 3.9215572724507295]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 52.90709640510982
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07956383551746103
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9642592604203715
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 211.33938728024924
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.942216436183089
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.690447499681895
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.864299743248708
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 556.7204884368048
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 109.55590982683674
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 91.38125887408398
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.623269983950988
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1986597944.897435
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.5796624299864721
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.059877581230034095
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 60.5866728591385
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.519704299953972
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.06620220062005656
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2077830129.7083685
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1291624673.60361
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 69.29785911703694
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9423263697053363
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 672.1284753231062
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9702325480090068
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 35.8118640241435
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.9810391805633794
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 343.8709745361133
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.9215572724507295
configNum = 26	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 26 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 52.90709640510982, 'spark.broadcast.checksum': 0.07956383551746103, 'spark.broadcast.compress': 0.9642592604203715, 'spark.default.parallelism': 211.33938728024924, 'spark.executor.cores': 3.942216436183089, 'spark.executor.instances': 4.690447499681895, 'spark.executor.memory': 4.864299743248708, 'spark.executor.memoryOverhead': 556.7204884368048, 'spark.kryoserializer.buffer': 109.55590982683674, 'spark.kryoserializer.buffer.max': 91.38125887408398, 'spark.locality.wait': 7.623269983950988, 'spark.maxRemoteBlockSizeFetchToMem': 1986597944.897435, 'spark.memory.fraction': 0.5796624299864721, 'spark.memory.offHeap.enabled': 0.059877581230034095, 'spark.memory.offHeap.size': 60.5866728591385, 'spark.memory.storageFraction': 0.519704299953972, 'spark.rdd.compress': 0.06620220062005656, 'spark.reducer.maxBlocksInFlightPerAddress': 2077830129.7083685, 'spark.reducer.maxReqsInFlight': 1291624673.60361, 'spark.reducer.maxSizeInFlight': 69.29785911703694, 'spark.scheduler.mode': 0.9423263697053363, 'spark.scheduler.revive.interval': 672.1284753231062, 'spark.shuffle.compress': 0.9702325480090068, 'spark.shuffle.file.buffer': 35.8118640241435, 'spark.shuffle.io.numConnectionsPerPeer': 3.9810391805633794, 'spark.shuffle.sort.bypassMergeThreshold': 343.8709745361133, 'spark.storage.memoryMapThreshold': 3.9215572724507295} target = -208.065
x_probe = {'spark.broadcast.blockSize': 52.90709640510982, 'spark.broadcast.checksum': 0.07956383551746103, 'spark.broadcast.compress': 0.9642592604203715, 'spark.default.parallelism': 211.33938728024924, 'spark.executor.cores': 3.942216436183089, 'spark.executor.instances': 4.690447499681895, 'spark.executor.memory': 4.864299743248708, 'spark.executor.memoryOverhead': 556.7204884368048, 'spark.kryoserializer.buffer': 109.55590982683674, 'spark.kryoserializer.buffer.max': 91.38125887408398, 'spark.locality.wait': 7.623269983950988, 'spark.maxRemoteBlockSizeFetchToMem': 1986597944.897435, 'spark.memory.fraction': 0.5796624299864721, 'spark.memory.offHeap.enabled': 0.059877581230034095, 'spark.memory.offHeap.size': 60.5866728591385, 'spark.memory.storageFraction': 0.519704299953972, 'spark.rdd.compress': 0.06620220062005656, 'spark.reducer.maxBlocksInFlightPerAddress': 2077830129.7083685, 'spark.reducer.maxReqsInFlight': 1291624673.60361, 'spark.reducer.maxSizeInFlight': 69.29785911703694, 'spark.scheduler.mode': 0.9423263697053363, 'spark.scheduler.revive.interval': 672.1284753231062, 'spark.shuffle.compress': 0.9702325480090068, 'spark.shuffle.file.buffer': 35.8118640241435, 'spark.shuffle.io.numConnectionsPerPeer': 3.9810391805633794, 'spark.shuffle.sort.bypassMergeThreshold': 343.8709745361133, 'spark.storage.memoryMapThreshold': 3.9215572724507295}
target = -208.065
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.77438699e+01 5.42561301e+01]
 [0.00000000e+00 9.65909015e-02]
 [9.03409099e-01 1.00000000e+00]
 [2.00000000e+02 2.50244166e+02]
 [3.71022730e+00 4.00000000e+00]
 [4.60092706e+00 5.39907294e+00]
 [4.58821774e+00 5.41178226e+00]
 [4.83486996e+02 5.82513004e+02]
 [9.84730869e+01 1.17526913e+02]
 [8.53078656e+01 1.04692134e+02]
 [7.39503593e+00 8.60496407e+00]
 [1.96155247e+09 2.14748314e+09]
 [5.69965613e-01 6.50034387e-01]
 [0.00000000e+00 9.65909015e-02]
 [0.00000000e+00 1.62709771e+02]
 [5.00000000e-01 5.69017640e-01]
 [0.00000000e+00 9.65909015e-02]
 [1.94467716e+09 2.14748365e+09]
 [1.15530790e+09 1.36750547e+09]
 [6.23000901e+01 7.16999099e+01]
 [9.03409099e-01 1.00000000e+00]
 [6.21518545e+02 7.22481455e+02]
 [9.03409099e-01 1.00000000e+00]
 [3.17438699e+01 3.82561301e+01]
 [3.60092706e+00 4.39907294e+00]
 [3.15491180e+02 3.50000000e+02]
 [3.71022730e+00 4.00000000e+00]]
before probe, param.shape = (26, 27)
before probe, target = (26,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]]
标准化后的train_x = 
[[ 1.81740730e-01 -5.06346081e-01  5.39093969e-01 -6.07558089e-01
   6.52840255e-01 -4.62999687e-01 -1.07233089e-01 -2.09238123e-01
   3.00462010e-01  2.79326738e-01  4.52582078e-01  5.77417695e-01
  -2.93760932e-01 -5.64827248e-01 -5.00604048e-01 -4.91794904e-01
  -4.88237796e-01  5.54875491e-01 -5.80689765e-01  3.99263184e-01
   4.78125612e-01 -2.50977296e-01  5.73267502e-01  1.15511259e-01
   4.91573487e-01  5.25265322e-01  7.68836244e-01]
 [-5.67444264e-01 -5.06346081e-01 -2.67704736e+00  1.41998732e+00
  -1.71154219e+00  3.40977569e+00  1.37199613e+00 -1.48273250e+00
  -9.43269051e-01  4.06165914e-01  4.52582078e-01 -2.07063435e+00
  -1.39892819e+00  2.69853423e+00  3.84399917e-01 -2.77591158e-01
   2.74890860e+00 -2.83322405e+00  5.93139749e-01 -5.37278199e-01
  -3.31525486e+00  3.63536354e+00 -2.54672400e+00  1.58018778e+00
  -5.63150228e-01 -3.84825222e+00 -6.76422648e-01]
 [ 2.24199946e+00  3.30818177e+00 -2.67704736e+00  1.56323781e+00
  -2.89373341e+00  8.27925440e-01 -3.06569152e+00  2.51832072e+00
  -2.80886564e+00  1.61113809e+00 -2.84493741e+00 -1.02120697e-01
   8.11406328e-01  2.69853423e+00 -4.22630131e-01  2.07865006e+00
   2.74890860e+00 -5.71781269e-01 -1.42928437e+00 -2.75092147e+00
   4.78125612e-01  1.82175243e-01 -2.54672400e+00 -2.66737413e+00
  -2.67259766e+00  8.37659432e-01 -6.76422648e-01]
 [ 1.81740730e-01 -5.06346081e-01  5.39093969e-01 -5.85519552e-01
   6.52840255e-01 -4.62999687e-01 -1.07233089e-01 -2.37749191e-01
   3.89299943e-01  1.52487562e-01  4.52582078e-01  6.38334588e-01
  -4.51641592e-01 -5.64827248e-01 -4.88907961e-01 -7.05999060e-01
  -4.88237796e-01  6.21034971e-01 -4.07731925e-01  4.84403310e-01
   4.78125612e-01 -2.63009311e-01  5.73267502e-01  4.08446563e-01
   4.91573487e-01  5.73325954e-01  7.68836244e-01]
 [ 1.81740730e-01 -5.06346081e-01  5.39093969e-01 -6.40615895e-01
   6.52840255e-01 -4.62999687e-01 -1.07233089e-01 -2.18741813e-01
   5.22556842e-01 -1.64610378e-01  4.52582078e-01  6.62761056e-01
  -4.51641592e-01 -5.64827248e-01 -5.62983182e-01 -7.05999060e-01
  -4.88237796e-01  7.25551093e-01 -5.18243803e-01  5.69543436e-01
   4.78125612e-01 -2.50977296e-01  5.73267502e-01  2.61978911e-01
   4.91573487e-01  7.89598800e-01  7.68836244e-01]
 [ 1.81740730e-01 -5.06346081e-01  5.39093969e-01 -8.38962728e-01
   6.52840255e-01 -4.62999687e-01 -1.07233089e-01 -4.75341426e-01
   1.01116547e+00  3.42746326e-01  1.27696195e+00  1.00832146e+00
  -7.67404306e-01 -5.64827248e-01 -5.62983182e-01 -1.13440614e+00
  -4.88237796e-01  9.05507100e-01 -1.30098409e+00  8.24963813e-01
   4.78125612e-01 -7.08193865e-01  5.73267502e-01  2.61978911e-01
   1.54629720e+00  8.85720065e-01  7.68836244e-01]
 [-5.55551841e-03 -5.06346081e-01  5.39093969e-01 -6.29596626e-01
   6.52840255e-01 -4.62999687e-01 -1.07233089e-01 -1.90230745e-01
   5.22556842e-01  3.42746326e-01  4.52582078e-01  6.65878057e-01
  -2.93760706e-01 -5.64827248e-01 -5.20097528e-01 -7.05999060e-01
  -4.88237796e-01  6.35014885e-01 -5.33836302e-01  5.69543436e-01
   4.78125612e-01 -2.75041326e-01  5.73267502e-01  1.15511259e-01
   4.91573487e-01  4.53174373e-01  7.68836244e-01]
 [ 1.81740730e-01 -5.06346081e-01  5.39093969e-01 -4.97365404e-01
   6.52840255e-01 -4.62999687e-01 -1.07233089e-01 -3.32786085e-01
   1.22786144e-01  2.79326738e-01  4.52582078e-01  1.89924036e-01
   2.20010674e-02 -5.64827248e-01 -4.38224914e-01 -7.05999060e-01
  -4.88237796e-01  5.24996514e-01 -5.04978926e-01  5.87026810e-02
   4.78125612e-01 -1.42689161e-01  5.73267502e-01  1.15511259e-01
   4.91573487e-01  2.12871212e-01  7.68836244e-01]
 [-5.55551841e-03 -5.06346081e-01  5.39093969e-01 -1.49832098e-03
  -5.29350967e-01  8.27925440e-01 -1.07233089e-01 -1.91643361e-02
  -3.21403521e-01 -3.54869142e-01  4.52582078e-01 -2.13443549e-01
   3.37762840e-01 -5.64827248e-01 -4.38224914e-01  2.07864954e+00
  -4.88237796e-01 -2.75775607e-01  3.46002345e-03 -7.07558451e-01
   4.78125612e-01 -2.14881251e-01  5.73267502e-01  1.15511259e-01
   4.91573487e-01 -7.00280804e-01 -6.76422648e-01]
 [-2.62770300e+00 -5.06346081e-01 -2.67704736e+00  2.41172148e+00
  -2.89373341e+00  8.27925440e-01 -1.07233089e-01  7.60138192e-01
  -6.32336286e-01 -2.76481349e+00 -2.84493741e+00  1.15074937e-01
   1.91657359e+00  2.69853423e+00  3.05110790e+00 -4.91794904e-01
   2.74890860e+00 -2.19823292e+00  1.68743583e+00  5.87026810e-02
   4.78125612e-01  2.56451421e+00  5.73267502e-01 -6.16827002e-01
  -1.61787394e+00 -5.14622665e-02 -3.56694043e+00]
 [-1.31662926e+00 -5.06346081e-01  5.39093969e-01  1.84973879e+00
  -5.29350967e-01  8.27925440e-01  2.85122534e+00  1.66298868e+00
  -2.85328461e+00  2.79326738e-01 -1.19617767e+00 -2.92698256e+00
   1.75869255e+00 -5.64827248e-01  3.02771573e+00  1.43603882e+00
  -4.88237796e-01 -1.28612942e+00  1.26113694e+00 -2.15494059e+00
   4.78125612e-01 -9.60866180e-01 -2.54672400e+00 -2.37443883e+00
  -2.67259766e+00 -5.32068590e-01 -6.76422648e-01]
 [-2.06581425e+00  3.30818177e+00  5.39093969e-01  2.38968295e+00
   6.52840255e-01 -1.75392481e+00 -1.58646230e+00  2.86045354e+00
  -2.32565588e-01 -2.13061761e+00 -1.19617767e+00 -2.50152453e+00
   2.86385981e+00 -5.64827248e-01  1.74894348e+00  1.43603882e+00
  -4.88237796e-01 -1.87224996e+00  2.07189161e+00 -2.75092147e+00
  -3.31525486e+00 -2.87073341e-01  5.73267502e-01 -2.37443883e+00
  -5.63150228e-01  6.69447219e-01 -2.12168154e+00]
 [-1.57692752e+00  7.65714857e-01 -7.67979824e-01  7.17487137e-01
  -8.00024108e-01  9.03621910e-01  8.39979320e-01  9.96971642e-01
  -1.57081785e+00 -1.48472106e+00  8.28344069e-02  8.61642269e-01
  -1.95008152e-01  2.32900561e-01 -4.38875653e-01  2.37240412e+00
  -3.46469050e-01 -1.05393055e+00  2.83546373e+00 -7.92716603e-02
  -9.77074198e-01 -1.49600407e+00 -1.45357704e+00 -4.19837882e-01
  -1.14217568e+00 -1.93751710e+00 -1.03678087e+00]
 [ 1.02885987e+00 -4.13224817e-01  2.75461633e-01 -3.68315891e-01
   3.20406650e-02  1.18723375e+00  1.67106125e-01 -2.99467676e-01
   1.41968252e-01 -1.06177845e+00  1.30902356e+00 -3.77141606e-01
   4.02885734e-01  7.69895633e-02  1.27195952e-01 -1.71507258e-01
  -2.83910571e-01  3.13608885e-01 -4.63933224e-02  3.87515862e-01
  -3.72481511e-02  7.54760111e-01 -4.88883224e-02  9.00305405e-01
   7.10189739e-01 -9.94184102e-01  2.12501723e-01]
 [ 1.08746162e+00  3.44810597e-01  2.45087573e-01 -2.88569038e-01
   4.05863563e-02  2.84863027e-01  1.04942241e+00 -2.57078247e-01
  -1.26446537e-01 -1.22373548e+00  6.81026838e-01 -5.63636576e-01
   1.58609283e+00  6.22466515e-02 -3.30626846e-01 -8.77201676e-01
  -3.45971593e-01  5.87940459e-01 -5.01028533e-01 -1.48101646e-01
   1.36749567e-01 -2.14600848e-01  1.49922495e-01  1.08136388e+00
   1.15325466e+00 -4.57931459e-02  3.03660508e-01]
 [-6.47309055e-02 -4.56881508e-01  1.55877425e-01 -2.91331972e-01
   2.65940658e-01  6.31926037e-01 -5.36247339e-01 -5.08677131e-01
   5.88779007e-01  6.00862529e-01 -7.46081307e-02 -2.80931166e-01
   2.22637485e-01 -1.94913506e-01  2.74508636e-01 -7.64214176e-02
  -2.46638000e-01 -6.69524717e-02  5.93583079e-01  5.71600483e-01
   3.12615265e-01  3.64501078e-01  2.29845653e-01  1.71346181e-01
   4.76185791e-01 -3.78894835e-01  1.63910452e-01]
 [-2.98052241e-01 -2.71276035e-01  3.91824636e-01 -5.95089356e-01
   3.14768180e-01  2.38110229e-01  6.50865781e-01 -9.10988564e-01
   3.39217955e-01  3.24869800e-01  8.40892523e-02  3.41898736e-01
  -6.64255652e-01 -2.32545106e-01 -1.09387021e-01 -6.27494744e-02
  -1.53545918e-01  8.07111419e-01  7.66790241e-01  5.20022106e-01
   2.32576003e-01 -8.67204693e-01  4.38728069e-01  2.94855830e-01
   4.18259101e-01 -2.28138670e-01  5.96555240e-02]
 [ 1.22849323e+00 -3.27950426e-02  4.20753965e-01 -3.14917617e-01
   4.76620824e-01 -1.05978486e+00 -9.47725556e-03 -1.34135534e+00
   4.51141588e-01  1.19232606e+00 -4.61652497e-01  3.10034598e-01
  -5.19350508e-01 -2.10081899e-01 -2.06917942e-01 -8.24579866e-01
  -3.52042926e-02  7.83134245e-01  7.64276095e-02  6.57343760e-02
   4.07859239e-01 -2.55417734e-01  3.13002910e-01 -2.03825812e-01
   2.82755568e-02  2.35462644e-01  3.67862818e-01]
 [-2.19441521e-01 -2.81967313e-02  2.09232667e-01 -4.15967574e-01
   3.52101422e-01  1.06610461e-01 -8.75959110e-01  2.49832065e-01
   8.19070343e-01  6.70661040e-01  8.03768302e-01  7.18564865e-01
  -1.13921875e+00 -1.70180626e-01 -1.56813512e-01 -5.36627935e-01
  -2.56152742e-01  2.50734933e-01 -9.10790041e-02  1.96383608e-01
   3.02948566e-01 -3.01854706e-02  3.04807898e-01  9.50533544e-01
  -1.53182210e-01  3.97348167e-01  2.08931342e-01]
 [ 5.19350895e-01 -4.19148205e-02  2.57333459e-01 -5.39998128e-01
   3.01526482e-01 -3.71997377e-01 -5.99762133e-01 -4.46053428e-01
   9.11952802e-01  9.02582754e-01 -4.64922836e-02 -6.33272977e-02
  -3.10660150e-01 -3.78319038e-01 -5.58415677e-01 -5.24776925e-01
  -2.37131491e-01  4.29275293e-01 -4.72658754e-01  8.02402183e-01
   5.42078150e-02  2.09289837e-01  1.47901339e-01  4.43348542e-01
   2.27996781e-01 -3.44765070e-02  1.21197965e-01]
 [ 3.20686512e-01 -8.71119854e-02  3.23377764e-01 -5.42760425e-01
   4.17212039e-01 -5.79578521e-01  2.85001770e-01 -6.31322070e-01
   3.97946774e-01  1.32549690e+00  8.05153250e-01 -6.04653852e-03
  -4.42072706e-01 -8.19610899e-02 -6.94863029e-01  8.11504834e-01
  -2.25451812e-01  3.82896257e-01 -1.97659751e-01  4.86629500e-01
   1.50023317e-01 -1.01505364e-01  2.93401060e-01  3.46315113e-01
   9.68854614e-02  2.21095888e-01  4.62014514e-01]
 [-1.33686591e-01 -2.31525949e-01  1.90806709e-01 -5.73105434e-01
   4.35409489e-01 -3.32226255e-01  1.11313229e-01 -2.26421526e-01
   5.98227767e-01  3.00325020e-01  3.80282296e-01  5.93063807e-01
  -6.20509217e-01 -4.35549877e-01 -2.22412182e-01 -3.76886834e-01
  -3.34063081e-01  8.84717089e-01 -5.47225135e-01  8.01765469e-01
   2.24042827e-01 -3.50443897e-01  4.01730222e-01  7.88663740e-01
   4.45172779e-01  4.11841604e-01  4.69552329e-01]
 [ 5.76797386e-01 -3.37466185e-01  3.35580836e-01 -7.96757526e-01
   5.04708069e-01 -1.13956572e+00  2.53954177e-02 -6.21431932e-01
   8.20516117e-01  6.27676294e-01 -1.15451164e-01  8.97991464e-01
  -9.16419834e-01 -3.88614076e-01 -4.08890883e-01 -5.49361681e-01
  -4.33492410e-01  4.87368415e-01 -6.12304760e-01  5.72747980e-01
   2.61874791e-01 -1.18979657e-01  4.35960003e-01 -8.66563935e-02
  -1.12645761e-01  5.70710591e-01  4.85205387e-01]
 [ 4.34181317e-01 -1.99633317e-01  3.20516810e-01 -5.80260429e-01
   5.16655875e-01 -4.78467702e-01  2.43628896e-01 -1.51826861e-01
   6.10775469e-01 -4.22112960e-01  2.74616632e-03  7.41568168e-01
  -4.13152014e-01 -4.45103987e-01 -7.12348484e-01 -3.18105666e-01
  -3.28469224e-01  2.49767569e-01 -7.08317388e-01  5.84404737e-01
   2.65533759e-01 -1.86513564e-01  4.66688501e-01  2.91695232e-01
   6.96750342e-01  5.80789640e-01  7.15721549e-01]
 [-3.92609337e-03 -3.60554167e-01  3.97275992e-01 -5.29654499e-01
   5.45754171e-01 -7.17690709e-01  2.43494832e-01 -5.04291887e-01
   5.70991836e-01 -8.06339185e-02  4.44602444e-02  6.28916353e-01
  -2.71394302e-01 -4.77599960e-01 -3.29651645e-01  3.68485512e-02
  -3.52153888e-01  3.58830068e-01 -9.93873609e-01  5.79761442e-01
   2.55797219e-01 -4.86608220e-01  3.20848393e-01  2.65911125e-01
   2.77089968e-01  6.48319683e-01  5.92395670e-01]
 [ 5.38932732e-01 -2.02847615e-01  4.24146699e-01 -7.14010975e-01
   5.84529033e-01 -8.62608788e-01 -3.07964873e-01  1.61940303e-02
   3.69573916e-01  4.98276668e-02  1.42013435e-01  1.54396782e-01
  -7.72733633e-01 -3.69425056e-01 -5.10012877e-01 -7.12332657e-01
  -2.73931580e-01  6.55911545e-01 -4.43039377e-01  5.94903198e-01
   2.59347589e-01 -2.49431479e-01  4.80393305e-01  2.34423076e-01
   4.71575061e-01  7.38437645e-01  6.55466195e-01]]================= config27 =================
2022年 02月 19日 星期六 22:30:15 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (98182) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (280359) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065]
upper = 
[5949.29850922 5849.43478586 5928.84476615 ... 5868.68222622 5741.56068496
 5887.99845253]
upper.argmax() = 8229
all predict_target = 
[3865.37707049 4103.6302506  3909.66798152 ... 4057.80815416 4358.9299013
 4012.32859916]
upper.argmax() = 8229, sortnumber[0] = 8229
x_max = [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
 3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
 1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
 6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
 6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
 9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
 3.99296909e+00 3.29891441e+02 3.85107457e+00]
black_box_function中schafferRun(i) 中的i为[50.95219182415045, 0.05850698518130133, 0.9531289452179257, 231.57401975377184, 3.935003407429971, 4.834719048073348, 4.972881286747964, 528.2694220689516, 105.9032464566777, 97.11400059917071, 7.7081218188565765, 2137422332.9240513, 0.6302868850960122, 0.05373203302580816, 56.72368110219504, 0.524106509129912, 0.06005840166831679, 2078361881.3388019, 1263021963.0547588, 71.49926439779277, 0.9416258583944338, 690.0452713635033, 0.978820184626055, 38.101492924061, 3.992969087139323, 329.89144092735944, 3.8510745703332354]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.95219182415045
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.05850698518130133
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9531289452179257
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 231.57401975377184
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.935003407429971
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.834719048073348
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.972881286747964
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 528.2694220689516
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 105.9032464566777
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 97.11400059917071
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.7081218188565765
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2137422332.9240513
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6302868850960122
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.05373203302580816
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 56.72368110219504
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.524106509129912
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.06005840166831679
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2078361881.3388019
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1263021963.0547588
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.49926439779277
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9416258583944338
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 690.0452713635033
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.978820184626055
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.101492924061
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.992969087139323
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 329.89144092735944
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8510745703332354
configNum = 27	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 27 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.95219182415045, 'spark.broadcast.checksum': 0.05850698518130133, 'spark.broadcast.compress': 0.9531289452179257, 'spark.default.parallelism': 231.57401975377184, 'spark.executor.cores': 3.935003407429971, 'spark.executor.instances': 4.834719048073348, 'spark.executor.memory': 4.972881286747964, 'spark.executor.memoryOverhead': 528.2694220689516, 'spark.kryoserializer.buffer': 105.9032464566777, 'spark.kryoserializer.buffer.max': 97.11400059917071, 'spark.locality.wait': 7.7081218188565765, 'spark.maxRemoteBlockSizeFetchToMem': 2137422332.9240513, 'spark.memory.fraction': 0.6302868850960122, 'spark.memory.offHeap.enabled': 0.05373203302580816, 'spark.memory.offHeap.size': 56.72368110219504, 'spark.memory.storageFraction': 0.524106509129912, 'spark.rdd.compress': 0.06005840166831679, 'spark.reducer.maxBlocksInFlightPerAddress': 2078361881.3388019, 'spark.reducer.maxReqsInFlight': 1263021963.0547588, 'spark.reducer.maxSizeInFlight': 71.49926439779277, 'spark.scheduler.mode': 0.9416258583944338, 'spark.scheduler.revive.interval': 690.0452713635033, 'spark.shuffle.compress': 0.978820184626055, 'spark.shuffle.file.buffer': 38.101492924061, 'spark.shuffle.io.numConnectionsPerPeer': 3.992969087139323, 'spark.shuffle.sort.bypassMergeThreshold': 329.89144092735944, 'spark.storage.memoryMapThreshold': 3.8510745703332354} target = -170.828
x_probe = {'spark.broadcast.blockSize': 50.95219182415045, 'spark.broadcast.checksum': 0.05850698518130133, 'spark.broadcast.compress': 0.9531289452179257, 'spark.default.parallelism': 231.57401975377184, 'spark.executor.cores': 3.935003407429971, 'spark.executor.instances': 4.834719048073348, 'spark.executor.memory': 4.972881286747964, 'spark.executor.memoryOverhead': 528.2694220689516, 'spark.kryoserializer.buffer': 105.9032464566777, 'spark.kryoserializer.buffer.max': 97.11400059917071, 'spark.locality.wait': 7.7081218188565765, 'spark.maxRemoteBlockSizeFetchToMem': 2137422332.9240513, 'spark.memory.fraction': 0.6302868850960122, 'spark.memory.offHeap.enabled': 0.05373203302580816, 'spark.memory.offHeap.size': 56.72368110219504, 'spark.memory.storageFraction': 0.524106509129912, 'spark.rdd.compress': 0.06005840166831679, 'spark.reducer.maxBlocksInFlightPerAddress': 2078361881.3388019, 'spark.reducer.maxReqsInFlight': 1263021963.0547588, 'spark.reducer.maxSizeInFlight': 71.49926439779277, 'spark.scheduler.mode': 0.9416258583944338, 'spark.scheduler.revive.interval': 690.0452713635033, 'spark.shuffle.compress': 0.978820184626055, 'spark.shuffle.file.buffer': 38.101492924061, 'spark.shuffle.io.numConnectionsPerPeer': 3.992969087139323, 'spark.shuffle.sort.bypassMergeThreshold': 329.89144092735944, 'spark.storage.memoryMapThreshold': 3.8510745703332354}
target = -170.828
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.80240651e+01 5.38803185e+01]
 [0.00000000e+00 1.42513447e-01]
 [8.68540687e-01 1.00000000e+00]
 [2.05782971e+02 2.57365068e+02]
 [3.67745780e+00 4.00000000e+00]
 [4.48381745e+00 5.18562064e+00]
 [4.60363318e+00 5.34212939e+00]
 [4.83944247e+02 5.72594597e+02]
 [9.74338623e+01 1.14372631e+02]
 [8.84967797e+01 1.05731222e+02]
 [7.17824807e+00 8.23799557e+00]
 [2.04670762e+09 2.14748314e+09]
 [5.95270281e-01 6.65303489e-01]
 [0.00000000e+00 1.37977243e-01]
 [0.00000000e+00 1.46148659e+02]
 [5.00000000e-01 5.58927711e-01]
 [0.00000000e+00 1.43987293e-01]
 [1.98533669e+09 2.14748365e+09]
 [1.16761382e+09 1.35843011e+09]
 [6.74943087e+01 7.20000000e+01]
 [8.57612754e-01 1.00000000e+00]
 [6.45514225e+02 7.34576318e+02]
 [8.92947364e-01 1.00000000e+00]
 [3.53260505e+01 4.08769354e+01]
 [3.63415499e+00 4.35178318e+00]
 [3.12588931e+02 3.47193951e+02]
 [3.59772541e+00 4.00000000e+00]]
before probe, param.shape = (27, 27)
before probe, target = (27,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]]
标准化后的train_x = 
[[ 0.17858266 -0.50455543  0.53321888 -0.59793459  0.63961879 -0.44255831
  -0.10367285 -0.20338673  0.29812337  0.26819767  0.45282681  0.54327797
  -0.3003543  -0.55931783 -0.48783822 -0.47449249 -0.48567305  0.536337
  -0.56667348  0.37313623  0.47696381 -0.25447502  0.56237273  0.09563349
   0.48058262  0.51852635  0.75829624]
 [-0.58445206 -0.50455543 -2.73507254  1.45906969 -1.75513502  3.47097597
   1.40312899 -1.49959023 -0.96829227  0.39704592  0.45282681 -2.11077198
  -1.42655957  2.75690573  0.4094549  -0.25773614  2.8078776  -2.88896438
   0.62230106 -0.57060907 -3.38396985  3.70581395 -2.60201416  1.57931784
  -0.58959737 -3.92499231 -0.70620564]
 [ 2.27692814  3.37687733 -2.73507254  1.60440152 -2.95251192  0.86195312
  -3.11727651  2.57281031 -2.86791572  1.62110429 -2.90471587 -0.1377996
   0.82585098  2.75690573 -0.40878156  2.12658368  2.8078776  -0.60269062
  -1.42621685 -2.80127977  0.47696381  0.18691942 -2.60201416 -2.72336677
  -2.72995734  0.83592054 -0.70620564]
 [ 0.17858266 -0.50455543  0.53321888 -0.57557585  0.63961879 -0.44255831
  -0.10367285 -0.23240621  0.38858163  0.13934942  0.45282681  0.60433284
  -0.46124038 -0.55931783 -0.47597972 -0.69124925 -0.48567305  0.60322292
  -0.3914841   0.45893125  0.47696381 -0.26673598  0.56237273  0.39237036
   0.48058262  0.56735623  0.75829624]
 [ 0.17858266 -0.50455543  0.53321888 -0.6314727   0.63961879 -0.44255831
  -0.10367285 -0.21305989  0.52426902 -0.1827712   0.45282681  0.62881463
  -0.46124038 -0.55931783 -0.55108355 -0.69124925 -0.48567305  0.70888665
  -0.50342182  0.54472628  0.47696381 -0.25447502  0.56237273  0.24400193
   0.48058262  0.78709066  0.75829624]
 [ 0.17858266 -0.50455543  0.53321888 -0.83270138  0.63961879 -0.44255831
  -0.10367285 -0.47423523  1.02178944  0.33262179  1.29221248  0.97515774
  -0.78301397 -0.55931783 -0.55108355 -1.12476153 -0.48567305  0.8908186
  -1.29626121  0.80211136  0.47696381 -0.72039137  0.56237273  0.24400193
   1.55076261  0.88475042  0.75829624]
 [-0.01217602 -0.50455543  0.53321888 -0.62029333  0.63961879 -0.44255831
  -0.10367285 -0.18404041  0.52426902  0.33262179  0.45282681  0.63193869
  -0.30035407 -0.55931783 -0.50760238 -0.69124925 -0.48567305  0.61735634
  -0.5192155   0.54472628  0.47696381 -0.27899693  0.56237273  0.09563349
   0.48058262  0.44528154  0.75829624]
 [ 0.17858266 -0.50455543  0.53321888 -0.48614088  0.63961879 -0.44255831
  -0.10367285 -0.32913782  0.11720685  0.26819767  0.45282681  0.15490663
   0.02141856 -0.55931783 -0.42459289 -0.69124925 -0.48567305  0.50612995
  -0.4899858   0.02995612  0.47696381 -0.14412641  0.56237273  0.09563349
   0.48058262  0.20113216  0.75829624]
 [-0.01217602 -0.50455543  0.53321888  0.01693082 -0.55775811  0.86195312
  -0.10367285 -0.00992352 -0.33508445 -0.37604358  0.45282681 -0.2493746
   0.34319119 -0.55931783 -0.42459289  2.12658316 -0.48567305 -0.30343477
   0.02501315 -0.74219912  0.47696381 -0.21769215  0.56237273  0.09563349
   0.48058262 -0.72663547 -0.70620564]
 [-2.68279755 -0.50455543 -2.73507254  2.46521309 -2.95251192  0.86195312
  -0.10367285  0.78327563 -0.65168836 -2.82416031 -2.90471587  0.07988799
   1.95205626  2.75690573  3.11319275 -0.47449249  2.8078776  -2.24700096
   1.730716    0.02995612  0.47696381  2.61458881  0.56237273 -0.64620868
  -1.65977736 -0.06743215 -3.63520939]
 [-1.34748678 -0.50455543  0.53321888  1.89506517 -0.55775811  0.86195312
   2.90993082  1.70222587 -2.91314485  0.26819767 -1.22594453 -2.96905984
   1.79116979 -0.55931783  3.08947575  1.47631463 -0.48567305 -1.32488242
   1.29891691 -2.20071458  0.47696381 -0.97787146 -2.60201416 -2.4266299
  -2.72995734 -0.55573091 -0.70620564]
 [-2.11052151  3.37687733  0.53321888  2.44285435  0.63961879 -1.74706974
  -1.61047468  2.92104409 -0.24462619 -2.17991907 -1.22594453 -2.54263813
   2.91737507 -0.55931783  1.79294649  1.47631463 -0.48567305 -1.91743866
   2.12013213 -2.80127977 -3.38396985 -0.29125789  0.56237273 -2.4266299
  -0.58959737  0.66501598 -2.17070751]
 [-1.61259702  0.78981682 -0.79504926  0.74636266 -0.83190815  0.93844625
   0.86119547  1.02433233 -1.60728701 -1.52379182  0.0763488   0.82814632
  -0.19972165  0.2513321  -0.42525266  2.42383832 -0.34143412 -1.09013397
   2.89355603 -0.10907953 -1.00415046 -1.52319179 -1.49331245 -0.44666314
  -1.17710805 -1.98367457 -1.07136187]
 [ 1.04136198 -0.40980086  0.26531171 -0.35521636  0.0108448   1.22504296
   0.17578001 -0.29522527  0.13673882 -1.09415     1.32485769 -0.41344343
   0.40955377  0.09289555  0.1486794  -0.15038807 -0.27778561  0.29242125
  -0.02548342  0.36129854 -0.04758782  0.77039926 -0.06863595  0.8906123
   0.70240255 -1.02524289  0.19455437]
 [ 1.10104706  0.36153011  0.23444513 -0.27431084  0.01950027  0.31317526
   1.07454254 -0.25207995 -0.13657162 -1.25867235  0.68542985 -0.60036082
   1.61528445  0.07791383 -0.31550072 -0.86449203 -0.34092799  0.56976503
  -0.48598444 -0.17843895  0.12950848 -0.21740641  0.13300381  1.07402046
   1.15196029 -0.0616723   0.2869269 ]
 [-0.07244535 -0.45422327  0.14378843 -0.27711392  0.24774933  0.66389092
  -0.54068386 -0.50816538  0.59169902  0.59482644 -0.08395959 -0.31701507
   0.22587431 -0.18341198  0.29803767 -0.05416912 -0.2398636  -0.09231873
   0.62275011  0.54679915  0.30850602  0.37271449  0.21406422  0.15219301
   0.46496943 -0.4001055   0.14531613]
 [-0.31007995 -0.26536237  0.38356155 -0.58528469  0.29720406  0.26593041
   0.66855688 -0.91765088  0.33758619  0.31446211  0.07762649  0.30722555
  -0.67790177 -0.22165316 -0.09118876 -0.04033425 -0.14514948  0.79134252
   0.79819203  0.49482403  0.22704141 -0.88242781  0.42591889  0.27730551
   0.40619386 -0.24693638  0.03967309]
 [ 1.24468583 -0.02269854  0.41295998 -0.30104225  0.46113576 -1.04562433
  -0.00409486 -1.35569201  0.45155121  1.19565847 -0.47804914  0.27528924
  -0.53023821 -0.19882608 -0.19007399 -0.81124314 -0.02474586  0.76710207
   0.09892218  0.0370419   0.40544612 -0.25899995  0.29840475 -0.22784777
   0.01049537  0.22408518  0.35198403]
 [-0.230016   -0.01801958  0.19800884 -0.40356039  0.33501686  0.13304668
  -0.88672781  0.26386966  0.82619066  0.66573052  0.81040551  0.68474484
  -1.16190629 -0.15827846 -0.13927381 -0.51985978 -0.24954413  0.22885693
  -0.07074564  0.16869609  0.29866718 -0.02948203  0.29009312  0.94149227
  -0.17362154  0.38856179  0.19093645]
 [ 0.52243402 -0.03197827  0.24688959 -0.52939303  0.28379226 -0.35059825
  -0.60538256 -0.44442496  0.92076722  0.90132577 -0.05533196 -0.09891833
  -0.31757521 -0.36978844 -0.54645262 -0.50786754 -0.23019145  0.40935769
  -0.45724863  0.77937619  0.04549681  0.21454994  0.13095389  0.42772528
   0.21314337 -0.05017453  0.10203494]
 [ 0.32009705 -0.07796817  0.31400481 -0.53219546  0.40096384 -0.56036408
   0.29587321 -0.63299734  0.39738617  1.33093868  0.81181567 -0.04150783
  -0.45148934 -0.06862989 -0.68479468  0.84433827 -0.21830827  0.36246941
  -0.17870152  0.46117457  0.14301861 -0.10215898  0.27852398  0.3294326
   0.0801107   0.20948848  0.44738931]
 [-0.14267577 -0.22491509  0.1792841  -0.56298136  0.41939505 -0.31040856
   0.11894714 -0.22087655  0.60132011  0.28952855  0.37921099  0.55895952
  -0.63332258 -0.42794634 -0.20578338 -0.35821509 -0.32881198  0.86980031
  -0.53277708  0.77873457  0.21835627 -0.35583424  0.38839459  0.7775218
   0.43350194  0.40328721  0.45502749]
 [ 0.58094249 -0.33271346  0.32640575 -0.78988297  0.48958379 -1.12624485
   0.03142784 -0.62293084  0.82766281  0.62206492 -0.12554607  0.86457784
  -0.93486616 -0.38025024 -0.39485153 -0.53274527 -0.42997378  0.46808868
  -0.59869638  0.54795547  0.25686195 -0.11996577  0.42311144 -0.10915779
  -0.13249106  0.564699    0.47088896]
 [ 0.43568996 -0.19246307  0.31109746 -0.57024031  0.50168507 -0.45818912
   0.25372916 -0.1449517   0.61409667 -0.44435251 -0.00519725  0.70780024
  -0.42201811 -0.43765521 -0.70252293 -0.29873345 -0.32312066  0.22787895
  -0.69594778  0.5597019   0.26058608 -0.18878469  0.45427718  0.27410389
   0.6887662   0.57493937  0.70447435]
 [-0.01051647 -0.3562064   0.38910131 -0.51889911  0.53115715 -0.69992982
   0.25359259 -0.50370193  0.57358742 -0.0974646   0.03727613  0.59489327
  -0.27756189 -0.47067758 -0.31451197  0.06045065 -0.34721801  0.33813897
  -0.98518832  0.55502288  0.25067615 -0.49458946  0.30636187  0.24798517
   0.26295599  0.64355028  0.57950644]
 [ 0.54237785 -0.19573375  0.41640772 -0.70593416  0.57043009 -0.84637309
  -0.30814624  0.02606536  0.36849581  0.03506344  0.13660504  0.1192989
  -0.78844474 -0.36075039 -0.4973777  -0.69765832 -0.26763275  0.63848244
  -0.42724709  0.57028111  0.25428975 -0.25289979  0.46817699  0.21608849
   0.46029113  0.73511064  0.64341672]
 [ 0.16946283 -0.2774645   0.38003061 -0.4797237   0.56179337 -0.6581692
  -0.14453537 -0.24914637  0.20328903  0.40439031  0.20782845  0.92163742
   0.02603423 -0.3811304  -0.51264746 -0.60223764 -0.28786766  0.64040884
  -0.55922055  0.75915074  0.25158512 -0.03322273  0.4953516   0.55579714
   0.47305828  0.3938012   0.54019467]]================= config28 =================
2022年 02月 19日 星期六 22:33:15 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (110317) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (293157) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828]
upper = 
[5857.16089128 5956.9348564  5875.33276127 ... 5886.65926749 5520.08588715
 5925.14824755]
upper.argmax() = 6361
all predict_target = 
[3763.26946321 3519.53055246 3720.60049692 ... 3686.78335899 4559.92098532
 3596.97314799]
upper.argmax() = 6361, sortnumber[0] = 6361
x_max = [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
 3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
 1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
 6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
 9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
 9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
 3.82539761e+00 3.20559926e+02 3.73667538e+00]
black_box_function中schafferRun(i) 中的i为[51.813891420406605, 0.07321629402001217, 0.9704477754831345, 234.71531223183771, 3.854415910973639, 4.914123921741606, 5.181605168320134, 537.6360403599366, 102.88688838199745, 97.32493138061321, 7.541339203882462, 2104660884.6759946, 0.6286124076144675, 0.03045030283781533, 8.974555359430626, 0.5022359223664097, 0.09004739603575394, 2109052215.9234734, 1283329000.023574, 71.61390951351996, 0.932675290981788, 701.2609954096886, 0.9659287111186063, 37.88781829406328, 3.825397614019238, 320.55992621160664, 3.736675380236218]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.813891420406605
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07321629402001217
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9704477754831345
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 234.71531223183771
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.854415910973639
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.914123921741606
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.181605168320134
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 537.6360403599366
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 102.88688838199745
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 97.32493138061321
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.541339203882462
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2104660884.6759946
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6286124076144675
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.03045030283781533
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 8.974555359430626
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5022359223664097
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.09004739603575394
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2109052215.9234734
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1283329000.023574
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.61390951351996
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.932675290981788
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 701.2609954096886
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9659287111186063
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 37.88781829406328
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.825397614019238
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 320.55992621160664
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.736675380236218
configNum = 28	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 28 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.813891420406605, 'spark.broadcast.checksum': 0.07321629402001217, 'spark.broadcast.compress': 0.9704477754831345, 'spark.default.parallelism': 234.71531223183771, 'spark.executor.cores': 3.854415910973639, 'spark.executor.instances': 4.914123921741606, 'spark.executor.memory': 5.181605168320134, 'spark.executor.memoryOverhead': 537.6360403599366, 'spark.kryoserializer.buffer': 102.88688838199745, 'spark.kryoserializer.buffer.max': 97.32493138061321, 'spark.locality.wait': 7.541339203882462, 'spark.maxRemoteBlockSizeFetchToMem': 2104660884.6759946, 'spark.memory.fraction': 0.6286124076144675, 'spark.memory.offHeap.enabled': 0.03045030283781533, 'spark.memory.offHeap.size': 8.974555359430626, 'spark.memory.storageFraction': 0.5022359223664097, 'spark.rdd.compress': 0.09004739603575394, 'spark.reducer.maxBlocksInFlightPerAddress': 2109052215.9234734, 'spark.reducer.maxReqsInFlight': 1283329000.023574, 'spark.reducer.maxSizeInFlight': 71.61390951351996, 'spark.scheduler.mode': 0.932675290981788, 'spark.scheduler.revive.interval': 701.2609954096886, 'spark.shuffle.compress': 0.9659287111186063, 'spark.shuffle.file.buffer': 37.88781829406328, 'spark.shuffle.io.numConnectionsPerPeer': 3.825397614019238, 'spark.shuffle.sort.bypassMergeThreshold': 320.55992621160664, 'spark.storage.memoryMapThreshold': 3.736675380236218} target = -178.658
x_probe = {'spark.broadcast.blockSize': 51.813891420406605, 'spark.broadcast.checksum': 0.07321629402001217, 'spark.broadcast.compress': 0.9704477754831345, 'spark.default.parallelism': 234.71531223183771, 'spark.executor.cores': 3.854415910973639, 'spark.executor.instances': 4.914123921741606, 'spark.executor.memory': 5.181605168320134, 'spark.executor.memoryOverhead': 537.6360403599366, 'spark.kryoserializer.buffer': 102.88688838199745, 'spark.kryoserializer.buffer.max': 97.32493138061321, 'spark.locality.wait': 7.541339203882462, 'spark.maxRemoteBlockSizeFetchToMem': 2104660884.6759946, 'spark.memory.fraction': 0.6286124076144675, 'spark.memory.offHeap.enabled': 0.03045030283781533, 'spark.memory.offHeap.size': 8.974555359430626, 'spark.memory.storageFraction': 0.5022359223664097, 'spark.rdd.compress': 0.09004739603575394, 'spark.reducer.maxBlocksInFlightPerAddress': 2109052215.9234734, 'spark.reducer.maxReqsInFlight': 1283329000.023574, 'spark.reducer.maxSizeInFlight': 71.61390951351996, 'spark.scheduler.mode': 0.932675290981788, 'spark.scheduler.revive.interval': 701.2609954096886, 'spark.shuffle.compress': 0.9659287111186063, 'spark.shuffle.file.buffer': 37.88781829406328, 'spark.shuffle.io.numConnectionsPerPeer': 3.825397614019238, 'spark.shuffle.sort.bypassMergeThreshold': 320.55992621160664, 'spark.storage.memoryMapThreshold': 3.736675380236218}
target = -178.658
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.83168778e+01 5.35875059e+01]
 [0.00000000e+00 1.34112801e-01]
 [8.76999512e-01 1.00000000e+00]
 [2.08362076e+02 2.54785964e+02]
 [3.70321236e+00 4.00000000e+00]
 [4.51890761e+00 5.15053048e+00]
 [4.64055799e+00 5.30520458e+00]
 [4.88376764e+02 5.68162080e+02]
 [9.82808007e+01 1.13525692e+02]
 [8.93585018e+01 1.04869499e+02]
 [7.23123544e+00 8.18500820e+00]
 [2.05577910e+09 2.14748314e+09]
 [5.98771942e-01 6.61801829e-01]
 [0.00000000e+00 1.29552722e-01]
 [0.00000000e+00 1.37206161e+02]
 [5.00000000e-01 5.55445591e-01]
 [0.00000000e+00 1.35594404e-01]
 [1.99463921e+09 2.14748365e+09]
 [1.17715463e+09 1.34888929e+09]
 [6.78948043e+01 7.20000000e+01]
 [8.66014065e-01 1.00000000e+00]
 [6.49967330e+02 7.30123213e+02]
 [9.01534646e-01 1.00000000e+00]
 [3.56035947e+01 4.05993911e+01]
 [3.67003640e+00 4.31590177e+00]
 [3.14319182e+02 3.45463700e+02]
 [3.62306032e+00 4.00000000e+00]]
before probe, param.shape = (28, 27)
before probe, target = (28,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]
 [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
  3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
  1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
  6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
  9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
  9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
  3.82539761e+00 3.20559926e+02 3.73667538e+00]]
标准化后的train_x = 
[[ 1.69381292e-01 -5.05361207e-01  5.25337865e-01 -5.90655329e-01
   6.31994432e-01 -4.28164130e-01 -1.11699403e-01 -2.01262494e-01
   3.01138198e-01  2.57116482e-01  4.58631492e-01  5.20896350e-01
  -3.05832893e-01 -5.50849268e-01 -4.67194401e-01 -4.35144805e-01
  -4.87396701e-01  5.13687877e-01 -5.57985934e-01  3.48356256e-01
   4.77421563e-01 -2.62886711e-01  5.54119467e-01  7.79458615e-02
   4.77982821e-01  5.21748424e-01  7.56783288e-01]
 [-6.06113410e-01 -5.05361207e-01 -2.79165385e+00  1.49673996e+00
  -1.79732946e+00  3.53547441e+00  1.42196148e+00 -1.52065945e+00
  -9.88413417e-01  3.87921670e-01  4.58631492e-01 -2.15529538e+00
  -1.45270419e+00  2.81362987e+00  4.38641223e-01 -2.18840072e-01
   2.86445153e+00 -2.93980576e+00  6.48147900e-01 -6.02716388e-01
  -3.45105801e+00  3.76929107e+00 -2.65650994e+00  1.58149925e+00
  -6.10159997e-01 -4.00108521e+00 -7.30907697e-01]
 [ 2.30199172e+00  3.44387312e+00 -2.79165385e+00  1.64421897e+00
  -3.01199140e+00  8.93048716e-01 -3.17902117e+00  2.62461010e+00
  -2.92274084e+00  1.63057096e+00 -2.96024171e+00 -1.65863198e-01
   8.41038407e-01  2.81362987e+00 -3.87385095e-01  2.16051199e+00
   2.86445153e+00 -6.34714616e-01 -1.42993424e+00 -2.85070627e+00
   4.77421563e-01  1.86520101e-01 -2.65650994e+00 -2.77880557e+00
  -2.78644563e+00  8.44807969e-01 -7.30907697e-01]
 [ 1.69381292e-01 -5.05361207e-01  5.25337865e-01 -5.67966249e-01
   6.31994432e-01 -4.28164130e-01 -1.11699403e-01 -2.30801232e-01
   3.93249028e-01  1.26311294e-01  4.58631492e-01  5.82460580e-01
  -4.69671260e-01 -5.50849268e-01 -4.55223005e-01 -6.51449950e-01
  -4.87396701e-01  5.81124309e-01 -3.80268216e-01  4.34817406e-01
   4.77421563e-01 -2.75370233e-01  5.54119467e-01  3.78656538e-01
   4.77982821e-01  5.71449893e-01  7.56783288e-01]
 [ 1.69381292e-01 -5.05361207e-01  5.25337865e-01 -6.24688947e-01
   6.31994432e-01 -4.28164130e-01 -1.11699403e-01 -2.11108740e-01
   5.31415272e-01 -2.00701676e-01  4.58631492e-01  6.07146617e-01
  -4.69671260e-01 -5.50849268e-01 -5.31041846e-01 -6.51449950e-01
  -4.87396701e-01  6.87657708e-01 -4.93821431e-01  5.21278555e-01
   4.77421563e-01 -2.62886711e-01  5.54119467e-01  2.28301200e-01
   4.77982821e-01  7.95106501e-01  7.56783288e-01]
 [ 1.69381292e-01 -5.05361207e-01  5.25337865e-01 -8.28890660e-01
   6.31994432e-01 -4.28164130e-01 -1.11699403e-01 -4.76957381e-01
   1.03802484e+00  3.22519076e-01  1.31334979e+00  9.56379141e-01
  -7.97349439e-01 -5.50849268e-01 -5.31041846e-01 -1.08405900e+00
  -4.87396701e-01  8.71087066e-01 -1.29810308e+00  7.80662003e-01
   4.77421563e-01 -7.37260567e-01  5.54119467e-01  2.28301200e-01
   1.56612564e+00  8.94509438e-01  7.56783288e-01]
 [-2.44923835e-02 -5.05361207e-01  5.25337865e-01 -6.13344408e-01
   6.31994432e-01 -4.28164130e-01 -1.11699403e-01 -1.81570002e-01
   5.31415272e-01  3.22519076e-01  4.58631492e-01  6.10296741e-01
  -3.05832659e-01 -5.50849268e-01 -4.87146727e-01 -6.51449950e-01
  -4.87396701e-01  5.95374050e-01 -5.09843042e-01  5.21278555e-01
   4.77421563e-01 -2.87853756e-01  5.54119467e-01  7.79458615e-02
   4.77982821e-01  4.47196221e-01  7.56783288e-01]
 [ 1.69381292e-01 -5.05361207e-01  5.25337865e-01 -4.77209933e-01
   6.31994432e-01 -4.28164130e-01 -1.11699403e-01 -3.29263691e-01
   1.16916539e-01  2.57116482e-01  4.58631492e-01  1.29284966e-01
   2.18445429e-02 -5.50849268e-01 -4.03346956e-01 -6.51449950e-01
  -4.87396701e-01  4.83232202e-01 -4.80191498e-01  2.51165830e-03
   4.77421563e-01 -1.50535008e-01  5.54119467e-01  7.79458615e-02
   4.77982821e-01  1.98688879e-01  7.56783288e-01]
 [-2.44923835e-02 -5.05361207e-01  5.25337865e-01  3.32943498e-02
  -5.82667512e-01  8.93048716e-01 -1.11699403e-01 -4.33757486e-03
  -3.43637609e-01 -3.96909458e-01  4.58631492e-01 -2.78369028e-01
   3.49521745e-01 -5.50849268e-01 -4.03346956e-01  2.16051147e+00
  -4.87396701e-01 -3.32995714e-01  4.22399213e-02 -7.75638687e-01
   4.77421563e-01 -2.25436143e-01  5.54119467e-01  7.79458615e-02
   4.77982821e-01 -7.45639023e-01 -7.30907697e-01]
 [-2.73872384e+00 -5.05361207e-01 -2.79165385e+00  2.51774852e+00
  -3.01199140e+00  8.93048716e-01 -1.11699403e-01  8.03054594e-01
  -6.66025513e-01 -2.88220803e+00 -2.96024171e+00  5.36404788e-02
   1.98790971e+00  2.81362987e+00  3.16811949e+00 -4.35144805e-01
   2.86445153e+00 -2.29255859e+00  1.77255950e+00  2.51165830e-03
   4.77421563e-01  2.65825756e+00  5.54119467e-01 -6.73830831e-01
  -1.69830282e+00 -7.46691980e-02 -3.70628967e+00]
 [-1.38160811e+00 -5.05361207e-01  5.25337865e-01  1.93917700e+00
  -5.82667512e-01  8.93048716e-01  2.95562236e+00  1.73844796e+00
  -2.96879626e+00  2.57116482e-01 -1.25080511e+00 -3.02074362e+00
   1.82407095e+00 -5.50849268e-01  3.14417670e+00  1.51159779e+00
  -4.87396701e-01 -1.36285048e+00  1.33452868e+00 -2.24547823e+00
   4.77421563e-01 -9.99414540e-01 -2.65650994e+00 -2.47809489e+00
  -2.78644563e+00 -5.71683883e-01 -7.30907697e-01]
 [-2.15710282e+00  3.44387312e+00  5.25337865e-01  2.49505944e+00
   6.31994432e-01 -1.74937698e+00 -1.64536029e+00  2.97907495e+00
  -2.51526780e-01 -2.22818209e+00 -1.25080511e+00 -2.59076444e+00
   2.97094225e+00 -5.50849268e-01  1.83530408e+00  1.51159779e+00
  -4.87396701e-01 -1.96028380e+00  2.16759568e+00 -2.85070627e+00
  -3.45105801e+00 -3.00337278e-01  5.54119467e-01 -2.47809489e+00
  -6.10159997e-01  6.70852830e-01 -2.21859868e+00]
 [-1.65104747e+00  8.11621373e-01 -8.22722590e-01  7.73503103e-01
  -8.60775113e-01  9.70521178e-01  8.70367882e-01  1.04842461e+00
  -1.63908187e+00 -1.56208963e+00  7.52765468e-02  8.08141254e-01
  -2.03353628e-01  2.71596727e-01 -4.04013012e-01  2.45714730e+00
  -3.40604662e-01 -1.12616991e+00  2.95218165e+00 -1.37603476e-01
  -1.02960436e+00 -1.55463375e+00 -1.53160630e+00 -4.71613035e-01
  -1.20753197e+00 -2.02511575e+00 -1.10184586e+00]
 [ 1.04624937e+00 -4.08951452e-01  2.53438658e-01 -3.44351086e-01
  -5.85638533e-03  1.26078713e+00  1.72734758e-01 -2.94744333e-01
   1.36805340e-01 -1.12592244e+00  1.34659131e+00 -4.43806632e-01
   4.17102083e-01  1.10854712e-01  1.75383064e-01 -1.11715664e-01
  -2.75829548e-01  2.67764556e-01 -8.98541117e-03  3.36426664e-01
  -5.63069444e-02  7.80591511e-01 -8.61104123e-02  8.83570774e-01
   7.03525967e-01 -1.04957646e+00  1.84115058e-01]
 [ 1.10690909e+00  3.75853273e-01  2.22112142e-01 -2.62250234e-01
   2.92402670e-03  3.37244959e-01  1.08751791e+00 -2.50826996e-01
  -1.41498175e-01 -1.29294354e+00  6.95483364e-01 -6.32283402e-01
   1.64495809e+00  9.56549801e-02 -2.93216192e-01 -8.24331783e-01
  -3.40089578e-01  5.47391035e-01 -4.76132388e-01 -2.07501419e-01
   1.23887604e-01 -2.25145218e-01  1.18475996e-01  1.06943508e+00
   1.16062947e+00 -6.88065281e-02  2.77950220e-01]
 [-8.57458784e-02 -4.54149839e-01  1.30104580e-01 -2.65094725e-01
   2.34468035e-01  6.92450770e-01 -5.56500228e-01 -5.11494658e-01
   6.00077142e-01  5.88706065e-01 -8.79601146e-02 -3.46573807e-01
   2.30052077e-01 -1.69473475e-01  3.26163267e-01 -1.56971880e-02
  -2.37236298e-01 -1.20142059e-01  6.48603431e-01  5.23367519e-01
   3.06016660e-01  3.75687806e-01  2.00720977e-01  1.35262808e-01
   4.62107563e-01 -4.13280629e-01  1.34097171e-01]
 [-3.27260940e-01 -2.61989882e-01  3.73450523e-01 -5.77818539e-01
   2.84636681e-01  2.89395245e-01  6.74295473e-01 -9.28307242e-01
   3.41321959e-01  3.04083585e-01  7.65775724e-02  2.82874634e-01
  -6.90308418e-01 -2.08271118e-01 -6.67687151e-02 -1.89114554e-03
  -1.40845682e-01  7.70792239e-01  8.26577332e-01  4.70988858e-01
   2.23126844e-01 -9.02238358e-01  4.15671571e-01  2.62050770e-01
   4.02345456e-01 -2.57377503e-01  2.67813696e-02]
 [ 1.25289341e+00 -1.50871567e-02  4.03287006e-01 -2.89376580e-01
   4.50934860e-01 -1.03895109e+00 -1.03464173e-02 -1.37418641e+00
   4.57368994e-01  1.19866350e+00 -4.89248300e-01  2.50671890e-01
  -5.39935205e-01 -1.85111872e-01 -1.66595366e-01 -7.71193839e-01
  -1.83108578e-02  7.46352279e-01  1.17215608e-01  9.65245618e-03
   4.04652694e-01 -2.67493779e-01  2.86294009e-01 -2.49867364e-01
   5.21603066e-06  2.22051605e-01  3.44037478e-01]
 [-2.45889586e-01 -1.03264602e-02  1.85132913e-01 -3.93409370e-01
   3.22995338e-01  1.54810226e-01 -9.08712481e-01  2.74354692e-01
   8.38852689e-01  6.60687038e-01  8.22741900e-01  6.63543429e-01
  -1.18319449e+00 -1.43974229e-01 -1.15311554e-01 -4.80417574e-01
  -2.47088176e-01  2.03677066e-01 -5.49008631e-02  1.42328825e-01
   2.96005686e-01 -3.38095584e-02  2.77860926e-01  9.35132118e-01
  -1.87202071e-01  3.89464054e-01  1.80439852e-01]
 [ 5.18847575e-01 -2.45289909e-02  2.34742030e-01 -5.21101106e-01
   2.71031279e-01 -3.35026722e-01 -6.22352195e-01 -4.46613709e-01
   9.35157050e-01  8.99860488e-01 -5.88095617e-02 -1.26657558e-01
  -3.23369812e-01 -3.58561963e-01 -5.26366828e-01 -4.68450325e-01
  -2.27392944e-01  3.85663454e-01 -4.46981860e-01  7.57750310e-01
   3.84061741e-02  2.14652183e-01  1.16396124e-01  4.14484919e-01
   2.06054642e-01 -5.71035284e-02  9.01306668e-02]
 [ 3.13206541e-01 -7.13222515e-02  3.02857323e-01 -5.23944942e-01
   3.89894321e-01 -5.47478140e-01  2.94968647e-01 -6.38560284e-01
   4.02214419e-01  1.33599833e+00  8.24177817e-01 -6.87681012e-02
  -4.59741287e-01 -5.30211448e-02 -6.66025945e-01  8.80938159e-01
  -2.15299419e-01  3.38389252e-01 -1.64414760e-01  4.37078137e-01
   1.37634091e-01 -1.07805768e-01  2.66122712e-01  3.14875936e-01
   7.07890373e-02  2.07194354e-01  4.40953422e-01]
 [-1.57123134e-01 -2.20836059e-01  1.66129162e-01 -5.55185686e-01
   4.08591592e-01 -2.94322489e-01  1.14888833e-01 -2.19065265e-01
   6.09874006e-01  2.78771338e-01  3.83670968e-01  5.36708726e-01
  -6.44911190e-01 -4.17566142e-01 -1.82454318e-01 -3.19109676e-01
  -3.27759112e-01  8.49895785e-01 -5.23600342e-01  7.57103716e-01
   2.14289764e-01 -3.66085848e-01  3.77598911e-01  7.68965809e-01
   4.30111898e-01  4.04452312e-01  4.48712543e-01]
 [ 5.78311458e-01 -3.30517476e-01  3.15443054e-01 -7.85439629e-01
   4.79793565e-01 -1.12060378e+00  2.58094768e-02 -6.28313660e-01
   8.40351727e-01  6.16358243e-01 -1.30306234e-01  8.44876715e-01
  -9.51988142e-01 -3.69176001e-01 -3.73322446e-01 -4.93276217e-01
  -4.30711522e-01  4.44877838e-01 -5.90470988e-01  5.24532821e-01
   2.53469092e-01 -1.25935792e-01  4.12823090e-01 -1.29587921e-01
  -1.45381218e-01  5.68745238e-01  4.64825168e-01]
 [ 4.30687031e-01 -1.87817169e-01  2.99906657e-01 -5.62551886e-01
   4.92069536e-01 -4.43995056e-01  2.52073362e-01 -1.41781866e-01
   6.22883980e-01 -4.66255858e-01 -7.75906231e-03  6.86791178e-01
  -4.29729259e-01 -4.27416293e-01 -6.83922981e-01 -2.59751961e-01
  -3.21967048e-01  2.02691032e-01 -6.89125927e-01  5.36370443e-01
   2.57258372e-01 -1.96003944e-01  4.44444273e-01  2.58806280e-01
   6.89660741e-01  5.79168396e-01  7.02109171e-01]
 [-2.28057367e-02 -3.54420788e-01  3.79072821e-01 -5.10452149e-01
   5.21967062e-01 -6.88830720e-01  2.51934365e-01 -5.06951350e-01
   5.81634670e-01 -1.14099438e-01  3.54901570e-02  5.72942261e-01
  -2.82622248e-01 -4.60919178e-01 -2.92218036e-01  9.86837727e-02
  -3.46490930e-01  3.13858558e-01 -9.82540784e-01  5.31655103e-01
   2.47175071e-01 -5.07359807e-01  2.94367409e-01  2.32337786e-01
   2.56703354e-01  6.49003979e-01  5.75162504e-01]
 [ 5.39117082e-01 -1.91144977e-01  4.06786128e-01 -7.00250532e-01
   5.61806936e-01 -8.37148870e-01 -3.19817579e-01  3.22952694e-02
   3.72796271e-01  2.04414250e-02  1.36633453e-01  9.33801801e-02
  -8.02879870e-01 -3.49392395e-01 -4.76824699e-01 -6.57845670e-01
  -2.65496971e-01  6.16674038e-01 -4.16547345e-01  5.47031797e-01
   2.50851885e-01 -2.61282886e-01  4.58547210e-01  2.00013952e-01
   4.57350742e-01  7.42198655e-01  6.40084749e-01]
 [ 1.60112545e-01 -2.74303413e-01  3.69866965e-01 -4.70697943e-01
   5.53045545e-01 -6.46535447e-01 -1.53290313e-01 -2.47840928e-01
   2.04571344e-01  3.95377604e-01  2.09157869e-01  9.02412318e-01
   2.65449108e-02 -3.70068963e-01 -4.92239834e-01 -5.62623802e-01
  -2.86090053e-01  6.18616288e-01 -5.50425440e-01  7.37367828e-01
   2.48099940e-01 -3.76181589e-02  4.86118929e-01  5.44271880e-01
   4.70332184e-01  3.94796980e-01  5.35228269e-01]
 [ 3.27173413e-01 -2.16212905e-01  4.27313381e-01 -4.35061426e-01
   4.55158980e-01 -5.41624708e-01  1.66821340e-01 -1.55614900e-01
   6.56517216e-02  4.09173025e-01  6.66057156e-02  7.26677711e-01
  -8.89520157e-04 -4.48399859e-01 -6.82781063e-01 -1.03569494e+00
  -1.85571495e-01  7.30714301e-01 -4.55376146e-01  7.47280176e-01
   2.12937819e-01  1.02393585e-01  4.44729185e-01  5.12144759e-01
   2.87990489e-01  1.62901988e-01  3.65037625e-01]]================= config29 =================
2022年 02月 19日 星期六 22:36:22 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (121238) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (309464) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658]
upper = 
[5746.67538129 5823.3257401  5909.11943762 ... 5796.85287564 5724.43413109
 5727.52876318]
upper.argmax() = 3025
all predict_target = 
[3721.33698656 3539.44656844 3328.2124666  ... 3598.00310866 3775.07889651
 3766.73969089]
upper.argmax() = 3025, sortnumber[0] = 3025
x_max = [5.08552424e+01 7.02536082e-02 9.37190526e-01 2.16065724e+02
 3.78571231e+00 4.58263516e+00 4.90417382e+00 5.40473863e+02
 1.06000729e+02 9.45934004e+01 7.29261524e+00 2.11861009e+09
 6.50409634e-01 7.05382486e-02 6.53785093e+01 5.19348490e-01
 7.18737172e-02 2.06109913e+09 1.31135719e+09 7.10883205e+01
 9.59364859e-01 6.71001026e+02 9.39988703e-01 3.82567810e+01
 3.88285161e+00 3.32869014e+02 3.76159792e+00]
black_box_function中schafferRun(i) 中的i为[50.855242405798386, 0.07025360820566307, 0.9371905258022497, 216.065724471891, 3.785712307538233, 4.582635158148302, 4.904173823752956, 540.4738634089184, 106.00072861269088, 94.5934003517073, 7.292615241484764, 2118610088.0355709, 0.6504096335475518, 0.07053824864153484, 65.37850930470908, 0.5193484902593852, 0.07187371719420606, 2061099132.9679759, 1311357188.096292, 71.08832054826513, 0.9593648587071251, 671.0010260925676, 0.9399887030655757, 38.25678102919794, 3.882851606084352, 332.8690142807385, 3.7615979214010387]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.855242405798386
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07025360820566307
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9371905258022497
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 216.065724471891
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.785712307538233
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.582635158148302
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.904173823752956
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 540.4738634089184
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.00072861269088
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 94.5934003517073
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.292615241484764
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2118610088.0355709
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6504096335475518
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.07053824864153484
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 65.37850930470908
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5193484902593852
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.07187371719420606
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2061099132.9679759
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1311357188.096292
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.08832054826513
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9593648587071251
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 671.0010260925676
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9399887030655757
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.25678102919794
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.882851606084352
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 332.8690142807385
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.7615979214010387
configNum = 29	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 29 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.855242405798386, 'spark.broadcast.checksum': 0.07025360820566307, 'spark.broadcast.compress': 0.9371905258022497, 'spark.default.parallelism': 216.065724471891, 'spark.executor.cores': 3.785712307538233, 'spark.executor.instances': 4.582635158148302, 'spark.executor.memory': 4.904173823752956, 'spark.executor.memoryOverhead': 540.4738634089184, 'spark.kryoserializer.buffer': 106.00072861269088, 'spark.kryoserializer.buffer.max': 94.5934003517073, 'spark.locality.wait': 7.292615241484764, 'spark.maxRemoteBlockSizeFetchToMem': 2118610088.0355709, 'spark.memory.fraction': 0.6504096335475518, 'spark.memory.offHeap.enabled': 0.07053824864153484, 'spark.memory.offHeap.size': 65.37850930470908, 'spark.memory.storageFraction': 0.5193484902593852, 'spark.rdd.compress': 0.07187371719420606, 'spark.reducer.maxBlocksInFlightPerAddress': 2061099132.9679759, 'spark.reducer.maxReqsInFlight': 1311357188.096292, 'spark.reducer.maxSizeInFlight': 71.08832054826513, 'spark.scheduler.mode': 0.9593648587071251, 'spark.scheduler.revive.interval': 671.0010260925676, 'spark.shuffle.compress': 0.9399887030655757, 'spark.shuffle.file.buffer': 38.25678102919794, 'spark.shuffle.io.numConnectionsPerPeer': 3.882851606084352, 'spark.shuffle.sort.bypassMergeThreshold': 332.8690142807385, 'spark.storage.memoryMapThreshold': 3.7615979214010387} target = -221.268
x_probe = {'spark.broadcast.blockSize': 50.855242405798386, 'spark.broadcast.checksum': 0.07025360820566307, 'spark.broadcast.compress': 0.9371905258022497, 'spark.default.parallelism': 216.065724471891, 'spark.executor.cores': 3.785712307538233, 'spark.executor.instances': 4.582635158148302, 'spark.executor.memory': 4.904173823752956, 'spark.executor.memoryOverhead': 540.4738634089184, 'spark.kryoserializer.buffer': 106.00072861269088, 'spark.kryoserializer.buffer.max': 94.5934003517073, 'spark.locality.wait': 7.292615241484764, 'spark.maxRemoteBlockSizeFetchToMem': 2118610088.0355709, 'spark.memory.fraction': 0.6504096335475518, 'spark.memory.offHeap.enabled': 0.07053824864153484, 'spark.memory.offHeap.size': 65.37850930470908, 'spark.memory.storageFraction': 0.5193484902593852, 'spark.rdd.compress': 0.07187371719420606, 'spark.reducer.maxBlocksInFlightPerAddress': 2061099132.9679759, 'spark.reducer.maxReqsInFlight': 1311357188.096292, 'spark.reducer.maxSizeInFlight': 71.08832054826513, 'spark.scheduler.mode': 0.9593648587071251, 'spark.scheduler.revive.interval': 671.0010260925676, 'spark.shuffle.compress': 0.9399887030655757, 'spark.shuffle.file.buffer': 38.25678102919794, 'spark.shuffle.io.numConnectionsPerPeer': 3.882851606084352, 'spark.shuffle.sort.bypassMergeThreshold': 332.8690142807385, 'spark.storage.memoryMapThreshold': 3.7615979214010387}
target = -221.268
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.85804092e+01 5.33239745e+01]
 [0.00000000e+00 1.26552219e-01]
 [8.84612456e-01 1.00000000e+00]
 [2.10683270e+02 2.52464769e+02]
 [3.72639147e+00 4.00000000e+00]
 [4.55048876e+00 5.11894934e+00]
 [4.67379032e+00 5.27197225e+00]
 [4.92366030e+02 5.64172814e+02]
 [9.90430453e+01 1.12763448e+02]
 [9.01340516e+01 1.04093950e+02]
 [7.27892408e+00 8.13731956e+00]
 [2.06394342e+09 2.14748314e+09]
 [6.01923436e-01 6.58650334e-01]
 [0.00000000e+00 1.21970653e-01]
 [0.00000000e+00 1.29157913e+02]
 [5.00000000e-01 5.52311683e-01]
 [0.00000000e+00 1.28040804e-01]
 [2.00301148e+09 2.14748365e+09]
 [1.18574137e+09 1.34030256e+09]
 [6.82552503e+01 7.20000000e+01]
 [8.73575244e-01 1.00000000e+00]
 [6.53975124e+02 7.26115419e+02]
 [9.09263200e-01 1.00000000e+00]
 [3.58533845e+01 4.03496013e+01]
 [3.70232967e+00 4.28360850e+00]
 [3.15876408e+02 3.43906474e+02]
 [3.64586175e+00 4.00000000e+00]]
before probe, param.shape = (29, 27)
before probe, target = (29,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]
 [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
  3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
  1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
  6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
  9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
  9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
  3.82539761e+00 3.20559926e+02 3.73667538e+00]
 [5.08552424e+01 7.02536082e-02 9.37190526e-01 2.16065724e+02
  3.78571231e+00 4.58263516e+00 4.90417382e+00 5.40473863e+02
  1.06000729e+02 9.45934004e+01 7.29261524e+00 2.11861009e+09
  6.50409634e-01 7.05382486e-02 6.53785093e+01 5.19348490e-01
  7.18737172e-02 2.06109913e+09 1.31135719e+09 7.10883205e+01
  9.59364859e-01 6.71001026e+02 9.39988703e-01 3.82567810e+01
  3.88285161e+00 3.32869014e+02 3.76159792e+00]]
标准化后的train_x = 
[[ 1.67362567e-01 -5.05855323e-01  5.22607439e-01 -5.74292497e-01
   6.28640918e-01 -3.94885759e-01 -1.04478747e-01 -2.00288213e-01
   2.98906732e-01  2.53345753e-01  4.71699214e-01  4.96519946e-01
  -3.23041597e-01 -5.48667916e-01 -4.57751351e-01 -4.16323719e-01
  -4.86864136e-01  5.00626892e-01 -5.55480187e-01  3.27126197e-01
   4.73895590e-01 -2.57540328e-01  5.50005929e-01  5.90786962e-02
   4.73141754e-01  5.12593672e-01  7.53968224e-01]
 [-6.21587169e-01 -5.05855323e-01 -2.84726319e+00  1.53489954e+00
  -1.83781464e+00  3.57378450e+00  1.45453129e+00 -1.54266193e+00
  -1.01248274e+00  3.86344455e-01  4.71699214e-01 -2.19736773e+00
  -1.48766769e+00  2.86957585e+00  4.60806209e-01 -1.97852429e-01
   2.92074580e+00 -2.99543998e+00  6.69784607e-01 -6.32664030e-01
  -3.51717684e+00  3.84065502e+00 -2.71011813e+00  1.58081574e+00
  -6.31923436e-01 -4.07295418e+00 -7.55852293e-01]
 [ 2.33697434e+00  3.50968770e+00 -2.84726319e+00  1.68391855e+00
  -3.07104242e+00  9.28004328e-01 -3.22249882e+00  2.67479580e+00
  -2.97956695e+00  1.64983213e+00 -3.00641198e+00 -1.94780703e-01
   8.41584500e-01  2.86957585e+00 -3.76821169e-01  2.20533175e+00
   2.92074580e+00 -6.61932631e-01 -1.44125881e+00 -2.90125911e+00
   4.73895590e-01  1.99224479e-01 -2.71011813e+00 -2.83222169e+00
  -2.84205382e+00  8.40132804e-01 -7.55852293e-01]
 [ 1.67362567e-01 -5.05855323e-01  5.22607439e-01 -5.51366496e-01
   6.28640918e-01 -3.94885759e-01 -1.04478747e-01 -2.30341356e-01
   3.92577409e-01  1.20347051e-01  4.71699214e-01  5.58491260e-01
  -4.89416357e-01 -5.48667916e-01 -4.45611823e-01 -6.34795425e-01
  -4.86864136e-01  5.68894652e-01 -3.74943618e-01  4.14379854e-01
   4.73895590e-01 -2.70228239e-01  5.50005929e-01  3.63426105e-01
   4.73141754e-01  5.62984308e-01  7.53968224e-01]
 [ 1.67362567e-01 -5.05855323e-01  5.22607439e-01 -6.08681497e-01
   6.28640918e-01 -3.94885759e-01 -1.04478747e-01 -2.10305928e-01
   5.33083424e-01 -2.12149705e-01  4.71699214e-01  5.83340531e-01
  -4.89416357e-01 -5.48667916e-01 -5.22495496e-01 -6.34795425e-01
  -4.86864136e-01  6.76741351e-01 -4.90297945e-01  5.01633511e-01
   4.73895590e-01 -2.57540328e-01  5.50005929e-01  2.11252401e-01
   4.73141754e-01  7.89742169e-01  7.53968224e-01]
 [ 1.67362567e-01 -5.05855323e-01  5.22607439e-01 -8.15015501e-01
   6.28640918e-01 -3.94885759e-01 -1.04478747e-01 -4.80784215e-01
   1.04827214e+00  3.19845104e-01  1.34122701e+00  9.34882305e-01
  -8.22167345e-01 -5.48667916e-01 -5.22495496e-01 -1.07173759e+00
  -4.86864136e-01  8.62431950e-01 -1.30733662e+00  7.63394482e-01
   4.73895590e-01 -7.39680956e-01  5.50005929e-01  2.11252401e-01
   1.57820694e+00  8.90523440e-01  7.53968224e-01]
 [-2.98748666e-02 -5.05855323e-01  5.22607439e-01 -5.97218497e-01
   6.28640918e-01 -3.94885759e-01 -1.04478747e-01 -1.80252785e-01
   5.33083424e-01  3.19845104e-01  4.71699214e-01  5.86511484e-01
  -3.23041359e-01 -5.48667916e-01 -4.77983896e-01 -6.34795425e-01
  -4.86864136e-01  5.83320058e-01 -5.06573681e-01  5.01633511e-01
   4.73895590e-01 -2.82916150e-01  5.50005929e-01  5.90786962e-02
   4.73141754e-01  4.37007718e-01  7.53968224e-01]
 [ 1.67362567e-01 -5.05855323e-01  5.22607439e-01 -4.59662494e-01
   6.28640918e-01 -3.94885759e-01 -1.04478747e-01 -3.30518500e-01
   1.11565379e-01  2.53345753e-01  4.71699214e-01  1.02319086e-01
   9.70863718e-03 -5.48667916e-01 -3.93007205e-01 -6.34795425e-01
  -4.86864136e-01  4.69795772e-01 -4.76451823e-01 -2.18884310e-02
   4.73895590e-01 -1.43349126e-01  5.50005929e-01  5.90786962e-02
   4.73141754e-01  1.85054539e-01  7.53968224e-01]
 [-2.98748666e-02 -5.05855323e-01  5.22607439e-01  5.61725156e-02
  -6.04586860e-01  9.28004328e-01 -1.04478747e-01  6.60732127e-05
  -3.56788004e-01 -4.11647759e-01  4.71699214e-01 -3.08030463e-01
   3.42458633e-01 -5.48667916e-01 -3.93007205e-01  2.20533123e+00
  -4.86864136e-01 -3.56494263e-01  5.42660853e-02 -8.07171344e-01
   4.73895590e-01 -2.19476594e-01  5.50005929e-01  5.90786962e-02
   4.73141754e-01 -7.72367540e-01 -7.55852293e-01]
 [-2.79119894e+00 -5.05855323e-01 -2.84726319e+00  2.56656956e+00
  -3.07104242e+00  9.28004328e-01 -1.04478747e-01  8.21518648e-01
  -6.84635371e-01 -2.93862310e+00 -3.00641198e+00  2.61744105e-02
   2.00621060e+00  2.86957585e+00  3.22861842e+00 -4.16323719e-01
   2.92074580e+00 -2.34021382e+00  1.81203094e+00 -2.18884310e-02
   4.73895590e-01  2.71143091e+00  5.50005929e-01 -7.01789825e-01
  -1.73698863e+00 -9.20939572e-02 -3.77549333e+00]
 [-1.41053690e+00 -5.05855323e-01  5.22607439e-01  1.98195655e+00
  -6.04586860e-01  9.28004328e-01  3.01354133e+00  1.77320151e+00
  -3.02640228e+00  2.53345753e-01 -1.26735638e+00 -3.06853863e+00
   1.83983544e+00 -5.48667916e-01  3.20433936e+00  1.54991789e+00
  -4.86864136e-01 -1.39904465e+00  1.36705234e+00 -2.29048351e+00
   4.73895590e-01 -1.00612709e+00 -2.71011813e+00 -2.52787428e+00
  -2.84205382e+00 -5.96000315e-01 -7.55852293e-01]
 [-2.19948664e+00  3.50968770e+00  5.22607439e-01  2.54364356e+00
   6.28640918e-01 -1.71777585e+00 -1.66348878e+00  3.03543352e+00
  -2.63117327e-01 -2.27362959e+00 -1.26735638e+00 -2.63571626e+00
   3.00446154e+00 -5.48667916e-01  1.87708439e+00  1.54991789e+00
  -4.86864136e-01 -2.00384288e+00  2.21333295e+00 -2.90125911e+00
  -3.51717684e+00 -2.95604062e-01  5.50005929e-01 -2.52787428e+00
  -6.31923436e-01  6.63765579e-01 -2.26567281e+00]
 [-1.68465110e+00  8.33239745e-01 -8.46943565e-01  8.04110589e-01
  -8.86945272e-01  1.00557514e+00  8.93820663e-01  1.07116168e+00
  -1.67416991e+00 -1.59636721e+00  8.17019703e-02  7.85664216e-01
  -2.18975842e-01  2.86920826e-01 -3.93682616e-01  2.50493823e+00
  -3.37630049e-01 -1.15944638e+00  3.01036353e+00 -1.63287868e-01
  -1.05714193e+00 -1.57043673e+00 -1.56787312e+00 -4.97126450e-01
  -1.23858550e+00 -2.06958566e+00 -1.13230819e+00]
 [ 1.05944453e+00 -4.07826822e-01  2.46373662e-01 -3.25416325e-01
  -1.89593054e-02  1.29620957e+00  1.84656691e-01 -2.95398001e-01
   1.31790986e-01 -1.15288579e+00  1.37504450e+00 -4.74562000e-01
   4.11085188e-01  1.23610142e-01  1.93850742e-01 -8.96550393e-02
  -2.71777329e-01  2.51671930e-01  2.22824788e-03  3.15087257e-01
  -6.83368671e-02  8.03022431e-01 -1.00093653e-01  8.74446667e-01
   7.02192459e-01 -1.08051942e+00  1.72781504e-01]
 [ 1.12115671e+00  3.90154983e-01  2.14547744e-01 -2.42458169e-01
  -1.00446867e-02  3.71494994e-01  1.11455986e+00 -2.50715861e-01
  -1.51225448e-01 -1.32270773e+00  7.12654962e-01 -6.64285046e-01
   1.65794973e+00  1.08167518e-01 -2.81329719e-01 -8.09408881e-01
  -3.37106397e-01  5.34745529e-01 -4.72328330e-01 -2.33826499e-01
   1.14728739e-01 -2.19180905e-01  1.07646634e-01  1.06255878e+00
   1.16640466e+00 -8.61499948e-02  2.68012473e-01]
 [-9.21911255e-02 -4.53784102e-01  1.21073413e-01 -2.45332362e-01
   2.25038419e-01  7.27151729e-01 -5.56631473e-01 -5.15922945e-01
   6.02908044e-01  5.90495869e-01 -8.43630533e-02 -3.76686236e-01
   2.21139447e-01 -1.61197710e-01  3.46748565e-01  7.32517923e-03
  -2.32542038e-01 -1.41016637e-01  6.70247363e-01  5.03741622e-01
   2.99759675e-01  3.91489367e-01  1.91159492e-01  1.17088822e-01
   4.57019610e-01 -4.35400620e-01  1.22019597e-01]
 [-3.37896536e-01 -2.58397728e-01  3.68298735e-01 -5.61321664e-01
   2.75973882e-01  3.23584537e-01  6.94507465e-01 -9.39994151e-01
   3.39770983e-01  3.01100463e-01  8.30255384e-02  2.56924345e-01
  -7.13469215e-01 -2.00615341e-01 -5.17019184e-02  2.12695061e-02
  -1.34547858e-01  7.60900729e-01  8.51044178e-01  4.50882856e-01
   2.15549168e-01 -9.07359876e-01  4.09423738e-01  2.45410131e-01
   3.96328106e-01 -2.77335720e-01  1.31074636e-02]
 [ 1.26967390e+00 -7.34944057e-03  3.98610866e-01 -2.69867771e-01
   4.44813891e-01 -1.00644810e+00 -1.45054554e-03 -1.39363812e+00
   4.57783212e-01  1.21068187e+00 -4.92604262e-01  2.24508664e-01
  -5.60768063e-01 -1.77086009e-01 -1.52930577e-01 -7.55738695e-01
  -9.97453123e-03  7.36159484e-01  1.30430991e-01 -1.46821802e-02
   3.99967286e-01 -2.62222826e-01  2.78051708e-01 -2.72699033e-01
  -1.22691722e-02  2.08741216e-01  3.35082784e-01]
 [-2.55113368e-01 -2.50881078e-03  1.76978998e-01 -3.74986879e-01
   3.14918842e-01  1.88828666e-01 -9.14665275e-01  2.83611653e-01
   8.45727125e-01  6.63683915e-01  8.42118475e-01  6.40110258e-01
  -1.21398569e+00 -1.35290984e-01 -1.00926514e-01 -4.62049950e-01
  -2.42557813e-01  1.86794397e-01 -4.44154870e-02  1.19210307e-01
   2.89589195e-01 -2.47125680e-02  2.69488621e-01  9.26631582e-01
  -2.02387834e-01  3.78475029e-01  1.69051629e-01]
 [ 5.22892180e-01 -1.69498057e-02  2.27378974e-01 -5.04011983e-01
   2.62160525e-01 -3.01630115e-01 -6.23571877e-01 -4.49912121e-01
   9.43662349e-01  9.06868142e-01 -5.47074159e-02 -1.55315822e-01
  -3.40850006e-01 -3.53307846e-01 -5.17754820e-01 -4.49962835e-01
  -2.22534930e-01  3.71024237e-01 -4.42715434e-01  7.40272779e-01
   2.78853250e-02  2.27817158e-01  1.05534698e-01  3.99687787e-01
   1.96984654e-01 -7.42847196e-02  7.73990871e-02]
 [ 3.13683221e-01 -6.45287376e-02  2.96580150e-01 -5.06885514e-01
   3.82840361e-01 -5.14351234e-01  3.08910927e-01 -6.45201367e-01
   4.01694624e-01  1.35031972e+00  8.43579272e-01 -9.70435791e-02
  -4.79332657e-01 -4.28844627e-02 -6.59375369e-01  9.12941426e-01
  -2.10240215e-01  3.23167258e-01 -1.55666427e-01  4.16661307e-01
   1.28694251e-01 -9.99202936e-02  2.57569453e-01  2.98874153e-01
   5.96154514e-02  1.93677953e-01  4.33440361e-01]
 [-1.64806795e-01 -2.16552921e-01  1.57672292e-01 -5.38452477e-01
   4.01823415e-01 -2.60874209e-01  1.25854659e-01 -2.18401013e-01
   6.12870813e-01  2.75363747e-01  3.95439867e-01  5.12436879e-01
  -6.67369189e-01 -4.13254916e-01 -1.69012258e-01 -2.99126356e-01
  -3.24570799e-01  8.40979432e-01 -5.20549191e-01  7.39620258e-01
   2.06571286e-01 -3.62429111e-01  3.70764154e-01  7.58455693e-01
   4.24526361e-01  3.93671116e-01  4.41314900e-01]
 [ 5.83387778e-01 -3.28075918e-01  3.09366520e-01 -7.71110750e-01
   4.74113695e-01 -1.08820444e+00  3.53029522e-02 -6.34776302e-01
   8.47251549e-01  6.18611756e-01 -1.27442893e-01  8.22642585e-01
  -9.79200021e-01 -3.64091497e-01 -3.62561019e-01 -4.75037388e-01
  -4.29235936e-01  4.30968592e-01 -5.88480498e-01  5.04917605e-01
   2.46374862e-01 -1.18347155e-01  4.06531346e-01 -1.50964956e-01
  -1.59916599e-01  5.60242150e-01  4.57667201e-01]
 [ 4.33202028e-01 -1.82979636e-01  2.93582445e-01 -5.45895596e-01
   4.86577301e-01 -4.10736782e-01  2.65306646e-01 -1.39771754e-01
   6.26101104e-01 -4.82157051e-01 -2.77237679e-03  6.63511729e-01
  -4.48856011e-01 -4.23262473e-01 -6.77523758e-01 -2.39174101e-01
  -3.18682378e-01  1.85796206e-01 -6.88700242e-01  5.16863732e-01
   2.50224517e-01 -1.89562511e-01  4.38639996e-01  2.42126403e-01
   6.88111605e-01  5.70809837e-01  6.98480825e-01]
 [-2.81589561e-02 -3.52380574e-01  3.74010662e-01 -4.93251829e-01
   5.16931804e-01 -6.55883257e-01  2.65165351e-01 -5.11300516e-01
   5.84153259e-01 -1.24095206e-01  4.12262113e-02  5.48910003e-01
  -2.99471626e-01 -4.57300736e-01 -2.80317545e-01  1.22851805e-01
  -3.43614242e-01  2.98334160e-01 -9.86769066e-01  5.12105170e-01
   2.39980557e-01 -5.06016104e-01  2.86249566e-01  2.15337804e-01
   2.48421035e-01  6.41613770e-01  5.69645815e-01]
 [ 5.43513369e-01 -1.86363318e-01  4.02165770e-01 -6.85032102e-01
   5.57380622e-01 -8.04389693e-01 -3.16036809e-01  3.73368635e-02
   3.71778295e-01  1.27018160e-02  1.44121992e-01  6.61768850e-02
  -8.27783394e-01 -3.43991747e-01 -4.67516901e-01 -6.41255205e-01
  -2.61272859e-01  6.04882624e-01 -4.11798184e-01  5.27622808e-01
   2.43715954e-01 -2.55910244e-01  4.52960342e-01  1.82623052e-01
   4.52188812e-01  7.36100695e-01  6.35533784e-01]
 [ 1.57933005e-01 -2.70918007e-01  3.64658048e-01 -4.53082506e-01
   5.48485314e-01 -6.13534292e-01 -1.46757093e-01 -2.47677792e-01
   2.00704571e-01  3.93925421e-01  2.17903022e-01  8.80558634e-01
   1.44817718e-02 -3.64998729e-01 -4.83148532e-01 -5.45079574e-01
  -2.82208530e-01  6.06848817e-01 -5.47799773e-01  7.19703469e-01
   2.40920163e-01 -2.85835255e-02  4.80957103e-01  5.31044363e-01
   4.65372137e-01  3.83881902e-01  5.29117555e-01]
 [ 3.27892423e-01 -2.11852144e-01  4.23020265e-01 -4.17073869e-01
   4.49102575e-01 -5.08490371e-01  1.78645533e-01 -1.53845685e-01
   5.94324200e-02  4.07952181e-01  7.28809016e-02  7.03662007e-01
  -1.33773735e-02 -4.44581358e-01 -6.76365803e-01 -1.02288910e+00
  -1.80017734e-01  7.20328727e-01 -4.51242865e-01  7.29706675e-01
   2.05197800e-01  1.13720586e-01  4.38929300e-01  4.98528703e-01
   2.80194735e-01  1.48771423e-01  3.56395310e-01]
 [ 1.38810951e-01 -2.23748936e-01  3.10947636e-01 -6.30854098e-01
   3.64375383e-01 -9.47013571e-01 -2.53872717e-01 -1.25417185e-01
   2.05270181e-01  2.26307140e-01 -1.43391498e-01  7.78981236e-01
   3.49274315e-01 -3.07550987e-01 -4.48126691e-01 -6.49028626e-01
  -2.41946543e-01  5.43018456e-01 -3.17973044e-01  6.83847116e-01
   3.11717798e-01 -2.70215220e-01  3.54361656e-01  5.54675130e-01
   3.43685142e-01  4.58902809e-01  3.94023874e-01]]================= config30 =================
2022年 02月 19日 星期六 22:40:12 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (133725) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (20355) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268]
upper = 
[5714.59268794 5782.54982738 5712.17991019 ... 5689.22006142 5657.76454143
 5724.31402564]
upper.argmax() = 7181
all predict_target = 
[3506.82591972 3332.61297448 3508.77050106 ... 3569.37202029 3626.9613965
 3482.45577064]
upper.argmax() = 7181, sortnumber[0] = 7181
x_max = [5.03899352e+01 5.28949923e-02 9.54216820e-01 2.23762517e+02
 3.96158473e+00 4.89749031e+00 5.16063910e+00 4.99578845e+02
 1.10077719e+02 9.65370568e+01 7.47826001e+00 2.12910966e+09
 6.30857433e-01 9.41835015e-02 4.12132627e+01 5.26323793e-01
 1.08195665e-02 2.09275859e+09 1.32125038e+09 7.05481352e+01
 9.59796014e-01 6.84301683e+02 9.48692336e-01 3.88522332e+01
 3.77891863e+00 3.40886461e+02 3.86198691e+00]
black_box_function中schafferRun(i) 中的i为[50.38993522185536, 0.05289499232343295, 0.9542168198841048, 223.76251680255834, 3.96158473424398, 4.897490305056992, 5.160639102813574, 499.57884539475606, 110.07771946274113, 96.53705684194529, 7.478260006158008, 2129109662.7568326, 0.6308574334343345, 0.09418350146795199, 41.21326272633492, 0.5263237934699156, 0.010819566481628804, 2092758589.5777006, 1321250382.09697, 70.54813521645278, 0.9597960140701892, 684.3016827677671, 0.9486923362867361, 38.85223316289729, 3.778918634248435, 340.88646115692194, 3.861986907697808]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.38993522185536
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.05289499232343295
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9542168198841048
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 223.76251680255834
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.96158473424398
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.897490305056992
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.160639102813574
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 499.57884539475606
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 110.07771946274113
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.53705684194529
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.478260006158008
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2129109662.7568326
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6308574334343345
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.09418350146795199
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 41.21326272633492
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5263237934699156
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.010819566481628804
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2092758589.5777006
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1321250382.09697
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 70.54813521645278
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9597960140701892
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 684.3016827677671
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9486923362867361
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.85223316289729
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.778918634248435
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 340.88646115692194
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.861986907697808
configNum = 30	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 30 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.38993522185536, 'spark.broadcast.checksum': 0.05289499232343295, 'spark.broadcast.compress': 0.9542168198841048, 'spark.default.parallelism': 223.76251680255834, 'spark.executor.cores': 3.96158473424398, 'spark.executor.instances': 4.897490305056992, 'spark.executor.memory': 5.160639102813574, 'spark.executor.memoryOverhead': 499.57884539475606, 'spark.kryoserializer.buffer': 110.07771946274113, 'spark.kryoserializer.buffer.max': 96.53705684194529, 'spark.locality.wait': 7.478260006158008, 'spark.maxRemoteBlockSizeFetchToMem': 2129109662.7568326, 'spark.memory.fraction': 0.6308574334343345, 'spark.memory.offHeap.enabled': 0.09418350146795199, 'spark.memory.offHeap.size': 41.21326272633492, 'spark.memory.storageFraction': 0.5263237934699156, 'spark.rdd.compress': 0.010819566481628804, 'spark.reducer.maxBlocksInFlightPerAddress': 2092758589.5777006, 'spark.reducer.maxReqsInFlight': 1321250382.09697, 'spark.reducer.maxSizeInFlight': 70.54813521645278, 'spark.scheduler.mode': 0.9597960140701892, 'spark.scheduler.revive.interval': 684.3016827677671, 'spark.shuffle.compress': 0.9486923362867361, 'spark.shuffle.file.buffer': 38.85223316289729, 'spark.shuffle.io.numConnectionsPerPeer': 3.778918634248435, 'spark.shuffle.sort.bypassMergeThreshold': 340.88646115692194, 'spark.storage.memoryMapThreshold': 3.861986907697808} target = -226.546
x_probe = {'spark.broadcast.blockSize': 50.38993522185536, 'spark.broadcast.checksum': 0.05289499232343295, 'spark.broadcast.compress': 0.9542168198841048, 'spark.default.parallelism': 223.76251680255834, 'spark.executor.cores': 3.96158473424398, 'spark.executor.instances': 4.897490305056992, 'spark.executor.memory': 5.160639102813574, 'spark.executor.memoryOverhead': 499.57884539475606, 'spark.kryoserializer.buffer': 110.07771946274113, 'spark.kryoserializer.buffer.max': 96.53705684194529, 'spark.locality.wait': 7.478260006158008, 'spark.maxRemoteBlockSizeFetchToMem': 2129109662.7568326, 'spark.memory.fraction': 0.6308574334343345, 'spark.memory.offHeap.enabled': 0.09418350146795199, 'spark.memory.offHeap.size': 41.21326272633492, 'spark.memory.storageFraction': 0.5263237934699156, 'spark.rdd.compress': 0.010819566481628804, 'spark.reducer.maxBlocksInFlightPerAddress': 2092758589.5777006, 'spark.reducer.maxReqsInFlight': 1321250382.09697, 'spark.reducer.maxSizeInFlight': 70.54813521645278, 'spark.scheduler.mode': 0.9597960140701892, 'spark.scheduler.revive.interval': 684.3016827677671, 'spark.shuffle.compress': 0.9486923362867361, 'spark.shuffle.file.buffer': 38.85223316289729, 'spark.shuffle.io.numConnectionsPerPeer': 3.778918634248435, 'spark.shuffle.sort.bypassMergeThreshold': 340.88646115692194, 'spark.storage.memoryMapThreshold': 3.861986907697808}
target = -226.546
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.88175875e+01 5.30867962e+01]
 [0.00000000e+00 1.19747696e-01]
 [8.91464105e-01 1.00000000e+00]
 [2.12772345e+02 2.50375694e+02]
 [3.74725266e+00 4.00000000e+00]
 [4.57891179e+00 5.09052631e+00]
 [4.70369942e+00 5.24206315e+00]
 [4.95956369e+02 5.60582475e+02]
 [9.97290654e+01 1.12077427e+02]
 [9.08320465e+01 1.03395955e+02]
 [7.32184385e+00 8.09439978e+00]
 [2.07129131e+09 2.14748314e+09]
 [6.04759781e-01 6.55813989e-01]
 [0.00000000e+00 1.15146791e-01]
 [0.00000000e+00 1.21914490e+02]
 [5.00000000e-01 5.49491165e-01]
 [0.00000000e+00 1.21242563e-01]
 [2.01054652e+09 2.14617724e+09]
 [1.19346943e+09 1.33257450e+09]
 [6.85796517e+01 7.20000000e+01]
 [8.80380305e-01 1.00000000e+00]
 [6.57582139e+02 7.22508404e+02]
 [9.16218898e-01 1.00000000e+00]
 [3.60781954e+01 4.01247905e+01]
 [3.73139361e+00 4.25454456e+00]
 [3.17277911e+02 3.42504971e+02]
 [3.66638303e+00 4.00000000e+00]]
before probe, param.shape = (30, 27)
before probe, target = (30,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]
 [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
  3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
  1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
  6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
  9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
  9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
  3.82539761e+00 3.20559926e+02 3.73667538e+00]
 [5.08552424e+01 7.02536082e-02 9.37190526e-01 2.16065724e+02
  3.78571231e+00 4.58263516e+00 4.90417382e+00 5.40473863e+02
  1.06000729e+02 9.45934004e+01 7.29261524e+00 2.11861009e+09
  6.50409634e-01 7.05382486e-02 6.53785093e+01 5.19348490e-01
  7.18737172e-02 2.06109913e+09 1.31135719e+09 7.10883205e+01
  9.59364859e-01 6.71001026e+02 9.39988703e-01 3.82567810e+01
  3.88285161e+00 3.32869014e+02 3.76159792e+00]
 [5.03899352e+01 5.28949923e-02 9.54216820e-01 2.23762517e+02
  3.96158473e+00 4.89749031e+00 5.16063910e+00 4.99578845e+02
  1.10077719e+02 9.65370568e+01 7.47826001e+00 2.12910966e+09
  6.30857433e-01 9.41835015e-02 4.12132627e+01 5.26323793e-01
  1.08195665e-02 2.09275859e+09 1.32125038e+09 7.05481352e+01
  9.59796014e-01 6.84301683e+02 9.48692336e-01 3.88522332e+01
  3.77891863e+00 3.40886461e+02 3.86198691e+00]]
标准化后的train_x = 
[[ 1.68622822e-01 -5.03831449e-01  5.17884553e-01 -5.62957537e-01
   6.16220598e-01 -3.81864054e-01 -1.11173852e-01 -1.84691615e-01
   2.89826258e-01  2.45106278e-01  4.79149101e-01  4.71222977e-01
  -3.29373725e-01 -5.49889899e-01 -4.44864414e-01 -4.04942026e-01
  -4.78319355e-01  4.83309325e-01 -5.55112081e-01  3.09050708e-01
   4.70600464e-01 -2.58458971e-01  5.45103211e-01  3.79489185e-02
   4.73059410e-01  4.95356689e-01  7.44674800e-01]
 [-6.33784626e-01 -5.03831449e-01 -2.90187138e+00  1.57184100e+00
  -1.87839139e+00  3.63585089e+00  1.47392514e+00 -1.54354444e+00
  -1.04050552e+00  3.80094501e-01  4.79149101e-01 -2.23737291e+00
  -1.51389806e+00  2.92381482e+00  4.84789948e-01 -1.83643770e-01
   2.97590638e+00 -3.04697987e+00  6.89577097e-01 -6.60617563e-01
  -3.58206997e+00  3.90908114e+00 -2.76268751e+00  1.57506970e+00
  -6.49917514e-01 -4.13499549e+00 -7.83394143e-01]
 [ 2.37524330e+00  3.57450908e+00 -2.90187138e+00  1.72266915e+00
  -3.12569738e+00  9.57374260e-01 -3.28137184e+00  2.72568719e+00
  -3.03600318e+00  1.66248262e+00 -3.05840212e+00 -2.23852066e-01
   8.55150606e-01  2.92381482e+00 -3.62956541e-01  2.25063704e+00
   2.97590638e+00 -6.90630266e-01 -1.45493314e+00 -2.95256075e+00
   4.70600464e-01  2.06034665e-01 -2.76268751e+00 -2.88258056e+00
  -2.89587136e+00  8.26096130e-01 -7.83394143e-01]
 [ 1.68622822e-01 -5.03831449e-01  5.17884553e-01 -5.39753205e-01
   6.16220598e-01 -3.81864054e-01 -1.11173852e-01 -2.15113694e-01
   3.84849956e-01  1.10118055e-01  4.79149101e-01  5.33532645e-01
  -4.98591083e-01 -5.49889899e-01 -4.32578233e-01 -6.26240704e-01
  -4.78319355e-01  5.52245345e-01 -3.71713428e-01  3.97202369e-01
   4.70600464e-01 -2.71361572e-01  5.45103211e-01  3.45373075e-01
   4.73059410e-01  5.46239680e-01  7.44674800e-01]
 [ 1.68622822e-01 -5.03831449e-01  5.17884553e-01 -5.97764035e-01
   6.16220598e-01 -3.81864054e-01 -1.11173852e-01 -1.94832308e-01
   5.27385504e-01 -2.27352502e-01  4.79149101e-01  5.58517589e-01
  -4.98591083e-01 -5.49889899e-01 -5.10390713e-01 -6.26240704e-01
  -4.78319355e-01  6.61147734e-01 -4.88896492e-01  4.85354030e-01
   4.70600464e-01 -2.58458971e-01  5.45103211e-01  1.91660997e-01
   4.73059410e-01  7.75213140e-01  7.44674800e-01]
 [ 1.68622822e-01 -5.03831449e-01  5.17884553e-01 -8.06603022e-01
   6.16220598e-01 -3.81864054e-01 -1.11173852e-01 -4.68631011e-01
   1.05001584e+00  3.12600390e-01  1.36353691e+00  9.11978727e-01
  -8.37027292e-01 -5.49889899e-01 -5.10390713e-01 -1.06883679e+00
  -4.78319355e-01  8.48656022e-01 -1.31888785e+00  7.49809013e-01
   4.70600464e-01 -7.48757808e-01  5.45103211e-01  1.91660997e-01
   1.59603633e+00  8.76979121e-01  7.44674800e-01]
 [-3.19790404e-02 -5.03831449e-01  5.17884553e-01 -5.86161869e-01
   6.16220598e-01 -3.81864054e-01 -1.11173852e-01 -1.64410230e-01
   5.27385504e-01  3.12600390e-01  4.79149101e-01  5.61705855e-01
  -3.29373482e-01 -5.49889899e-01 -4.65341382e-01 -6.26240704e-01
  -4.78319355e-01  5.66811958e-01 -5.05430251e-01  4.85354030e-01
   4.70600464e-01 -2.84264173e-01  5.45103211e-01  3.79489185e-02
   4.73059410e-01  4.19032203e-01  7.44674800e-01]
 [ 1.68622822e-01 -5.03831449e-01  5.17884553e-01 -4.46935878e-01
   6.16220598e-01 -3.81864054e-01 -1.11173852e-01 -3.16520621e-01
   9.97788612e-02  2.45106278e-01  4.79149101e-01  7.48698420e-02
   9.06171784e-03 -5.49889899e-01 -3.79338115e-01 -6.26240704e-01
  -4.78319355e-01  4.52176405e-01 -4.74830864e-01 -4.35559358e-02
   4.70600464e-01 -1.42335562e-01  5.45103211e-01  3.79489185e-02
   4.73059410e-01  1.64617248e-01  7.44674800e-01]
 [-3.19790404e-02 -5.03831449e-01  5.17884553e-01  7.51615898e-02
  -6.31085394e-01  9.57374260e-01 -1.11173852e-01  1.81222386e-02
  -3.75339631e-01 -4.29834837e-01  4.79149101e-01 -3.37720152e-01
   3.47496918e-01 -5.49889899e-01 -3.79338115e-01  2.25063651e+00
  -4.78319355e-01 -3.82202022e-01  6.43006286e-02 -8.36920885e-01
   4.70600464e-01 -2.19751168e-01  5.45103211e-01  3.79489185e-02
   4.73059410e-01 -8.02159579e-01 -7.83394143e-01]
 [-2.84040511e+00 -5.03831449e-01 -2.90187138e+00  2.61603593e+00
  -3.12569738e+00  9.57374260e-01 -1.11173852e-01  8.49659040e-01
  -7.07922575e-01 -2.99461107e+00 -3.05840212e+00 -1.69057196e-03
   2.03967494e+00  2.92381482e+00  3.28603922e+00 -4.04942026e-01
   2.97590638e+00 -2.38533983e+00  1.84993170e+00 -4.35559358e-02
   4.70600464e-01  2.76074966e+00  5.45103211e-01 -7.30611471e-01
  -1.77289444e+00 -1.15239202e-01 -3.83953203e+00]
 [-1.43619207e+00 -5.03831449e-01  5.17884553e-01  2.02432547e+00
  -6.31085394e-01  9.57374260e-01  3.05902413e+00  1.81302485e+00
  -3.08351503e+00  2.45106278e-01 -1.28962651e+00 -3.11330026e+00
   1.87045718e+00 -5.49889899e-01  3.26146685e+00  1.58674227e+00
  -4.78319355e-01 -1.43495773e+00  1.39789876e+00 -2.33549912e+00
   4.70600464e-01 -1.01971243e+00 -2.76268751e+00 -2.57515641e+00
  -2.89587136e+00 -6.24069111e-01 -7.83394143e-01]
 [-2.23859952e+00  3.57450908e+00  5.17884553e-01  2.59283160e+00
   6.16220598e-01 -1.72110237e+00 -1.69627284e+00  3.09075213e+00
  -2.80315932e-01 -2.31966996e+00 -1.28962651e+00 -2.67811475e+00
   3.05498151e+00 -5.49889899e-01  1.91817773e+00  1.58674227e+00
  -4.78319355e-01 -2.04567622e+00  2.25759564e+00 -2.95256075e+00
  -3.58206997e+00 -2.97166774e-01  5.45103211e-01 -2.57515641e+00
  -6.49917514e-01  6.48005662e-01 -2.31146309e+00]
 [-1.71498205e+00  8.56205201e-01 -8.71940365e-01  8.32179951e-01
  -9.16667138e-01  1.03590369e+00  9.03831409e-01  1.10236671e+00
  -1.71175040e+00 -1.63227645e+00  8.24869045e-02  7.61945930e-01
  -2.23529953e-01  2.99256258e-01 -3.80021685e-01  2.55412035e+00
  -3.27043760e-01 -1.19301408e+00  3.06726172e+00 -1.86410639e-01
  -1.08406701e+00 -1.59357064e+00 -1.60374160e+00 -5.23879087e-01
  -1.26641282e+00 -2.11205252e+00 -1.16440007e+00]
 [ 1.07592171e+00 -4.04269919e-01  2.37561596e-01 -3.11059902e-01
  -3.87724644e-02  1.33012977e+00  1.82800069e-01 -2.80968980e-01
   1.20296616e-01 -1.18216101e+00  1.39793233e+00 -5.05160925e-01
   4.17295992e-01  1.33295861e-01  2.14609477e-01 -7.40463321e-02
  -2.60290180e-01  2.31917391e-01  1.14378242e-02  2.96887865e-01
  -8.00007802e-02  8.20049365e-01 -1.14501555e-01  8.61559711e-01
   7.05822742e-01 -1.11332234e+00  1.56463574e-01]
 [ 1.13868655e+00  4.06191211e-01  2.05264549e-01 -2.27094598e-01
  -2.97560787e-02  3.93987604e-01  1.12826453e+00 -2.35738317e-01
  -1.66807836e-01 -1.35452331e+00  7.24222721e-01 -6.95919830e-01
   1.68546385e+00  1.17602680e-01 -2.66311488e-01 -8.03113615e-01
  -3.26512943e-01  5.17761942e-01 -4.70642000e-01 -2.57675245e-01
   1.05890250e-01 -2.19450476e-01  9.62761276e-02  1.05157351e+00
   1.17755925e+00 -1.09237162e-01  2.52845551e-01]
 [-9.53582748e-02 -4.50945907e-01  1.10406487e-01 -2.30003686e-01
   2.08010676e-01  7.54039532e-01 -5.70893041e-01 -5.04201107e-01
   5.98218703e-01  5.87299805e-01 -8.64161278e-02 -4.06750775e-01
   2.24104931e-01 -1.56132995e-01  3.69354410e-01  2.41887872e-02
  -2.20518153e-01 -1.64615128e-01  6.90047189e-01  4.87483838e-01
   2.93776944e-01  4.01552830e-01  1.81010038e-01  9.65454879e-02
   4.56675946e-01 -4.61900234e-01  1.05088134e-01]
 [-3.45254868e-01 -2.52503962e-01  3.61291567e-01 -5.49829233e-01
   2.59527605e-01  3.45485071e-01  7.01182843e-01 -9.33478250e-01
   3.31280770e-01  2.93575348e-01  8.38330921e-02  2.30319221e-01
  -7.26471999e-01 -1.96190177e-01 -3.39096273e-02  3.83135503e-02
  -1.21183422e-01  7.46130933e-01  8.73710215e-01  4.34081055e-01
   2.08266737e-01 -9.19273990e-01  4.02465551e-01  2.26164039e-01
   3.95000709e-01 -3.02290919e-01 -5.14036428e-03]
 [ 1.28973711e+00  2.47037124e-03  3.92052418e-01 -2.54836965e-01
   4.30295049e-01 -1.00098406e+00 -6.42154454e-03 -1.39269120e+00
   4.50997622e-01  1.21676314e+00 -5.01634074e-01  1.97726556e-01
  -5.71161869e-01 -1.72279081e-01 -1.36361197e-01 -7.48748951e-01
   5.09405703e-03  7.21147500e-01  1.41672993e-01 -3.62755191e-02
   3.95531155e-01 -2.63220700e-01  2.69172715e-01 -2.97182860e-01
  -2.02194243e-02  1.88535362e-01  3.20726507e-01]
 [-2.61059605e-01  7.38670175e-03  1.67139661e-01 -3.61232264e-01
   2.98917152e-01  2.09063892e-01 -9.34918292e-01  3.05148649e-01
   8.44545173e-01  6.61582667e-01  8.55898733e-01  6.15597270e-01
  -1.23554005e+00 -1.29805932e-01 -8.37288893e-02 -4.51259943e-01
  -2.30670943e-01  1.66404784e-01 -3.59453637e-02  9.89949737e-02
   2.83449494e-01 -2.16915775e-02  2.60484426e-01  9.14272180e-01
  -2.13419673e-01  3.59927605e-01  1.52688619e-01]
 [ 5.30216972e-01 -7.28013027e-03  2.18285725e-01 -4.91823788e-01
   2.45556558e-01 -2.87455961e-01 -6.38953646e-01 -4.37379928e-01
   9.43895018e-01  9.08404674e-01 -5.62536830e-02 -1.84171713e-01
  -3.47486399e-01 -3.51360114e-01 -5.05592766e-01 -4.39016424e-01
  -2.10374149e-01  3.52438015e-01 -4.40559645e-01  7.26449345e-01
   1.77065001e-02  2.35111156e-01  9.41333130e-02  3.82001338e-01
   1.92426146e-01 -9.72559544e-02  5.99283191e-02]
 [ 3.17439377e-01 -5.56031304e-02  2.88511309e-01 -4.94732205e-01
   3.67614045e-01 -5.02805879e-01  3.09133613e-01 -6.35066563e-01
   3.94098864e-01  1.35848982e+00  8.57384494e-01 -1.25581313e-01
  -4.88335098e-01 -3.59001168e-02 -6.48924188e-01  9.41523491e-01
  -1.97911243e-01  3.04112573e-01 -1.48959988e-01  3.99507303e-01
   1.20071305e-01 -9.81718784e-02  2.48390986e-01  2.80168546e-01
   5.28303598e-02  1.73324919e-01  4.20272881e-01]
 [-1.69212604e-01 -2.10004761e-01  1.47547151e-01 -5.26682405e-01
   3.86813805e-01 -2.46196395e-01  1.23014024e-01 -2.03026769e-01
   6.08325379e-01  2.67453638e-01  4.01586502e-01  4.87226814e-01
  -6.79584330e-01 -4.12279825e-01 -1.52637156e-01 -2.86228157e-01
  -3.13805860e-01  8.26993509e-01 -5.19627318e-01  7.25790108e-01
   1.99150291e-01 -3.65122557e-01  3.63240721e-01  7.44396146e-01
   4.23656022e-01  3.75272169e-01  4.28242596e-01]
 [ 5.91744488e-01 -3.23271822e-01  3.01486959e-01 -7.62165248e-01
   4.59929332e-01 -1.08375074e+00  3.09469976e-02 -6.24513520e-01
   8.46091617e-01  6.15836276e-01 -1.30232191e-01  7.99126195e-01
  -9.96742951e-01 -3.62318730e-01 -3.48524118e-01 -4.64415436e-01
  -4.19902807e-01  4.12969153e-01 -5.88635554e-01  4.88671924e-01
   2.39568193e-01 -1.16910538e-01  3.99530869e-01 -1.74218133e-01
  -1.70260033e-01  5.43470729e-01  4.44792539e-01]
 [ 4.38996907e-01 -1.75906436e-01  2.85469227e-01 -5.34215885e-01
   4.72535219e-01 -3.97910963e-01  2.64799644e-01 -1.23432251e-01
   6.21746773e-01 -5.01398874e-01 -3.43108748e-03  6.39126510e-01
  -4.57337742e-01 -4.22449754e-01 -6.67291822e-01 -2.25500135e-01
  -3.07836885e-01  1.65396823e-01 -6.90444102e-01  5.00740999e-01
   2.43477263e-01 -1.89330914e-01  4.32108983e-01  2.22847114e-01
   6.91513656e-01  5.54141671e-01  6.88516753e-01]
 [-3.02338602e-02 -3.47956569e-01  3.67088050e-01 -4.80933001e-01
   5.03236242e-01 -6.46086950e-01  2.64655985e-01 -4.99521934e-01
   5.79193016e-01 -1.37980800e-01  4.13194252e-02  5.23899076e-01
  -3.05401049e-01 -4.57040288e-01 -2.65287086e-01  1.41210300e-01
  -3.33109816e-01  2.79036389e-01 -9.93238276e-01  4.95933463e-01
   2.33075199e-01 -5.11139158e-01  2.77490435e-01  1.95787701e-01
   2.44696248e-01  6.25637413e-01  5.58124581e-01]
 [ 5.51189911e-01 -1.79343034e-01  3.95659947e-01 -6.75041569e-01
   5.44146813e-01 -7.96428622e-01 -3.26272192e-01  5.58505685e-02
   3.63750411e-01  8.62560993e-04  1.45973669e-01  3.85303099e-02
  -8.42739293e-01 -3.41892862e-01 -4.54747939e-01 -6.32784072e-01
  -2.49642010e-01  5.88585596e-01 -4.09152257e-01  5.11610806e-01
   2.36868248e-01 -2.56801305e-01  4.46638710e-01  1.62742225e-01
   4.51766847e-01  7.21047548e-01  6.24808904e-01]
 [ 1.59032413e-01 -2.65220040e-01  3.57596985e-01 -4.40276005e-01
   5.35149959e-01 -6.03214637e-01 -1.54159697e-01 -2.32662953e-01
   1.90205620e-01  3.87788870e-01  2.21015597e-01  8.57358457e-01
   1.39164039e-02 -3.63240682e-01 -4.70568411e-01 -5.35363951e-01
  -2.70864078e-01  5.90571036e-01 -5.47309908e-01  7.05668338e-01
   2.34029307e-01 -2.56280347e-02  4.75044814e-01  5.14685841e-01
   4.65163857e-01  3.65387307e-01  5.17106476e-01]
 [ 3.31890956e-01 -2.05230470e-01  4.16823158e-01 -4.03830209e-01
   4.34632692e-01 -4.96872588e-01  1.76688318e-01 -1.37678955e-01
   4.68928698e-02  4.02025456e-01  7.35150861e-02  6.79496002e-01
  -1.44187292e-02 -4.44114538e-01 -6.66119878e-01 -1.01935622e+00
  -1.67275322e-01  7.05161779e-01 -4.49222263e-01  7.15774495e-01
   1.97755607e-01  1.19083977e-01  4.32402518e-01  4.81841469e-01
   2.76984960e-01  1.27979618e-01  3.42296626e-01]
 [ 1.39584179e-01 -2.17313312e-01  3.03091481e-01 -6.20205820e-01
   3.48938275e-01 -9.40815041e-01 -2.63067827e-01 -1.08901463e-01
   1.94837177e-01  2.17663196e-01 -1.46453353e-01  7.55226462e-01
   3.54429049e-01 -3.04860851e-01 -4.35123482e-01 -6.40658078e-01
  -2.30051311e-01  5.26115852e-01 -3.13839688e-01  6.69442955e-01
   3.05919629e-01 -2.71348332e-01  3.46598400e-01  5.38555498e-01
   3.41504467e-01  4.41141226e-01  3.80379987e-01]
 [ 4.62426912e-02 -2.88107658e-01  3.61317251e-01 -5.30906359e-01
   5.68305007e-01 -5.19148965e-01  1.43455029e-01 -5.23605274e-01
   3.88542552e-01  3.48848564e-01  1.77286129e-02  8.12228831e-01
   2.35710952e-02 -2.22724225e-01 -5.34089680e-01 -4.86295835e-01
  -4.40946130e-01  6.44325077e-01 -2.66053292e-01  6.21824721e-01
   3.07666959e-01 -9.97352665e-02  3.75388197e-01  6.30083683e-01
   2.24790138e-01  6.45117064e-01  5.33781280e-01]]================= config31 =================
2022年 02月 19日 星期六 22:44:08 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (146700) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (36656) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546]
upper = 
[5626.52990317 5674.52258852 5634.61488907 ... 5733.60108196 5709.3479398
 5620.37998431]
upper.argmax() = 4018
all predict_target = 
[3438.32425277 3330.77439117 3426.38377974 ... 3179.84965214 3248.30315491
 3454.96627548]
upper.argmax() = 4018, sortnumber[0] = 4018
x_max = [5.01558507e+01 3.07324334e-02 9.94372965e-01 2.27135137e+02
 3.90540783e+00 4.86460406e+00 4.77621000e+00 5.23564798e+02
 1.10341387e+02 9.65045337e+01 7.63186196e+00 2.12071782e+09
 6.13994939e-01 1.30728776e-02 6.55934995e+01 5.26878315e-01
 1.15393622e-02 2.11049971e+09 1.25798811e+09 7.03208183e+01
 9.41516192e-01 7.00193015e+02 9.83068956e-01 3.96800975e+01
 3.74346294e+00 3.36523966e+02 3.88604765e+00]
black_box_function中schafferRun(i) 中的i为[50.15585067023401, 0.0307324333581163, 0.9943729649241491, 227.13513718746088, 3.9054078250966073, 4.864604060945823, 4.776209998499828, 523.5647984337875, 110.34138716329879, 96.50453370227117, 7.631861961882917, 2120717820.9826622, 0.6139949389660072, 0.013072877588801839, 65.59349947730442, 0.5268783146685209, 0.011539362176011418, 2110499708.5414526, 1257988106.935292, 70.3208183200178, 0.9415161917278357, 700.193014774289, 0.9830689564156272, 39.68009747020734, 3.743462941926634, 336.5239656909357, 3.8860476493505325]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.15585067023401
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0307324333581163
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9943729649241491
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 227.13513718746088
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9054078250966073
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.864604060945823
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.776209998499828
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 523.5647984337875
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 110.34138716329879
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.50453370227117
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.631861961882917
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2120717820.9826622
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6139949389660072
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.013072877588801839
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 65.59349947730442
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5268783146685209
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.011539362176011418
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2110499708.5414526
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1257988106.935292
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 70.3208183200178
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9415161917278357
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 700.193014774289
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9830689564156272
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 39.68009747020734
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.743462941926634
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 336.5239656909357
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8860476493505325
configNum = 31	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 31 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.15585067023401, 'spark.broadcast.checksum': 0.0307324333581163, 'spark.broadcast.compress': 0.9943729649241491, 'spark.default.parallelism': 227.13513718746088, 'spark.executor.cores': 3.9054078250966073, 'spark.executor.instances': 4.864604060945823, 'spark.executor.memory': 4.776209998499828, 'spark.executor.memoryOverhead': 523.5647984337875, 'spark.kryoserializer.buffer': 110.34138716329879, 'spark.kryoserializer.buffer.max': 96.50453370227117, 'spark.locality.wait': 7.631861961882917, 'spark.maxRemoteBlockSizeFetchToMem': 2120717820.9826622, 'spark.memory.fraction': 0.6139949389660072, 'spark.memory.offHeap.enabled': 0.013072877588801839, 'spark.memory.offHeap.size': 65.59349947730442, 'spark.memory.storageFraction': 0.5268783146685209, 'spark.rdd.compress': 0.011539362176011418, 'spark.reducer.maxBlocksInFlightPerAddress': 2110499708.5414526, 'spark.reducer.maxReqsInFlight': 1257988106.935292, 'spark.reducer.maxSizeInFlight': 70.3208183200178, 'spark.scheduler.mode': 0.9415161917278357, 'spark.scheduler.revive.interval': 700.193014774289, 'spark.shuffle.compress': 0.9830689564156272, 'spark.shuffle.file.buffer': 39.68009747020734, 'spark.shuffle.io.numConnectionsPerPeer': 3.743462941926634, 'spark.shuffle.sort.bypassMergeThreshold': 336.5239656909357, 'spark.storage.memoryMapThreshold': 3.8860476493505325} target = -175.379
x_probe = {'spark.broadcast.blockSize': 50.15585067023401, 'spark.broadcast.checksum': 0.0307324333581163, 'spark.broadcast.compress': 0.9943729649241491, 'spark.default.parallelism': 227.13513718746088, 'spark.executor.cores': 3.9054078250966073, 'spark.executor.instances': 4.864604060945823, 'spark.executor.memory': 4.776209998499828, 'spark.executor.memoryOverhead': 523.5647984337875, 'spark.kryoserializer.buffer': 110.34138716329879, 'spark.kryoserializer.buffer.max': 96.50453370227117, 'spark.locality.wait': 7.631861961882917, 'spark.maxRemoteBlockSizeFetchToMem': 2120717820.9826622, 'spark.memory.fraction': 0.6139949389660072, 'spark.memory.offHeap.enabled': 0.013072877588801839, 'spark.memory.offHeap.size': 65.59349947730442, 'spark.memory.storageFraction': 0.5268783146685209, 'spark.rdd.compress': 0.011539362176011418, 'spark.reducer.maxBlocksInFlightPerAddress': 2110499708.5414526, 'spark.reducer.maxReqsInFlight': 1257988106.935292, 'spark.reducer.maxSizeInFlight': 70.3208183200178, 'spark.scheduler.mode': 0.9415161917278357, 'spark.scheduler.revive.interval': 700.193014774289, 'spark.shuffle.compress': 0.9830689564156272, 'spark.shuffle.file.buffer': 39.68009747020734, 'spark.shuffle.io.numConnectionsPerPeer': 3.743462941926634, 'spark.shuffle.sort.bypassMergeThreshold': 336.5239656909357, 'spark.storage.memoryMapThreshold': 3.8860476493505325}
target = -175.379
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.90310479e+01 5.28733358e+01]
 [3.39034542e-03 1.13623625e-01]
 [8.97630589e-01 1.00000000e+00]
 [2.14652513e+02 2.48495527e+02]
 [3.76602774e+00 4.00000000e+00]
 [4.60449251e+00 5.06494558e+00]
 [4.73061761e+00 5.21514497e+00]
 [4.99187675e+02 5.57351169e+02]
 [1.00346484e+02 1.11460009e+02]
 [9.14602419e+01 1.02767759e+02]
 [7.36047165e+00 8.05577199e+00]
 [2.07790441e+09 2.14748314e+09]
 [6.07312491e-01 6.53261279e-01]
 [0.00000000e+00 1.09005315e-01]
 [0.00000000e+00 1.15395409e+02]
 [5.01260319e-01 5.46952700e-01]
 [4.99265612e-03 1.15124147e-01]
 [2.01732806e+09 2.13939571e+09]
 [1.20042468e+09 1.32561925e+09]
 [6.88716130e+01 7.20000000e+01]
 [8.86504861e-01 9.96746856e-01]
 [6.60828452e+02 7.19262091e+02]
 [9.22479027e-01 1.00000000e+00]
 [3.62805251e+01 3.99224607e+01]
 [3.75755116e+00 4.22838702e+00]
 [3.18539264e+02 3.41243618e+02]
 [3.68485218e+00 4.00000000e+00]]
before probe, param.shape = (31, 27)
before probe, target = (31,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]
 [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
  3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
  1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
  6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
  9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
  9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
  3.82539761e+00 3.20559926e+02 3.73667538e+00]
 [5.08552424e+01 7.02536082e-02 9.37190526e-01 2.16065724e+02
  3.78571231e+00 4.58263516e+00 4.90417382e+00 5.40473863e+02
  1.06000729e+02 9.45934004e+01 7.29261524e+00 2.11861009e+09
  6.50409634e-01 7.05382486e-02 6.53785093e+01 5.19348490e-01
  7.18737172e-02 2.06109913e+09 1.31135719e+09 7.10883205e+01
  9.59364859e-01 6.71001026e+02 9.39988703e-01 3.82567810e+01
  3.88285161e+00 3.32869014e+02 3.76159792e+00]
 [5.03899352e+01 5.28949923e-02 9.54216820e-01 2.23762517e+02
  3.96158473e+00 4.89749031e+00 5.16063910e+00 4.99578845e+02
  1.10077719e+02 9.65370568e+01 7.47826001e+00 2.12910966e+09
  6.30857433e-01 9.41835015e-02 4.12132627e+01 5.26323793e-01
  1.08195665e-02 2.09275859e+09 1.32125038e+09 7.05481352e+01
  9.59796014e-01 6.84301683e+02 9.48692336e-01 3.88522332e+01
  3.77891863e+00 3.40886461e+02 3.86198691e+00]
 [5.01558507e+01 3.07324334e-02 9.94372965e-01 2.27135137e+02
  3.90540783e+00 4.86460406e+00 4.77621000e+00 5.23564798e+02
  1.10341387e+02 9.65045337e+01 7.63186196e+00 2.12071782e+09
  6.13994939e-01 1.30728776e-02 6.55934995e+01 5.26878315e-01
  1.15393622e-02 2.11049971e+09 1.25798811e+09 7.03208183e+01
  9.41516192e-01 7.00193015e+02 9.83068956e-01 3.96800975e+01
  3.74346294e+00 3.36523966e+02 3.88604765e+00]]
标准化后的train_x = 
[[ 1.71433612e-01 -4.98597758e-01  5.08060665e-01 -5.53980537e-01
   6.07640928e-01 -3.67831514e-01 -9.73936079e-02 -1.78324896e-01
   2.80738076e-01  2.37331131e-01  4.81850364e-01  4.49629603e-01
  -3.25874467e-01 -5.40224111e-01 -4.36652630e-01 -3.94664113e-01
  -4.70392015e-01  4.64232793e-01 -5.42691187e-01  2.92721136e-01
   4.70306260e-01 -2.66136776e-01  5.36011463e-01  1.36167854e-02
   4.74551745e-01  4.83809037e-01  7.34429333e-01]
 [-6.44237660e-01 -4.98597758e-01 -2.95436608e+00  1.60769063e+00
  -1.91811454e+00  3.69556150e+00  1.50829534e+00 -1.55789161e+00
  -1.06808918e+00  3.74285526e-01  4.81850364e-01 -2.27800201e+00
  -1.52865042e+00  2.97649512e+00  5.05507815e-01 -1.70518664e-01
   3.03009485e+00 -3.09553988e+00  7.15956775e-01 -6.87268222e-01
  -3.64573435e+00  3.96953547e+00 -2.81355822e+00  1.56188891e+00
  -6.66358587e-01 -4.20157263e+00 -8.10806740e-01]
 [ 2.41452961e+00  3.63761177e+00 -2.95436608e+00  1.76041740e+00
  -3.18099227e+00  9.86632825e-01 -3.30877150e+00  2.77641874e+00
  -3.09133007e+00  1.67535229e+00 -3.11280961e+00 -2.50330354e-01
   8.76901486e-01  2.97649512e+00 -3.53642899e-01  2.29508128e+00
   3.03009485e+00 -7.19511046e-01 -1.45260345e+00 -3.00360671e+00
   4.70306260e-01  2.05950533e-01 -2.81355822e+00 -2.92810025e+00
  -2.94817925e+00  8.18479157e-01 -8.10806740e-01]
 [ 1.71433612e-01 -4.98597758e-01  5.08060665e-01 -5.30484111e-01
   6.07640928e-01 -3.67831514e-01 -9.73936079e-02 -2.09210718e-01
   3.77082880e-01  1.00376735e-01  4.81850364e-01  5.12377177e-01
  -4.97699193e-01 -5.40224111e-01 -4.24201171e-01 -6.18809990e-01
  -4.70392015e-01  5.33744538e-01 -3.57235778e-01  3.81811078e-01
   4.70306260e-01 -2.79250312e-01  5.36011463e-01  3.23271210e-01
   4.74551745e-01  5.35296748e-01  7.34429333e-01]
 [ 1.71433612e-01 -4.98597758e-01  5.08060665e-01 -5.89225176e-01
   6.07640928e-01 -3.67831514e-01 -9.73936079e-02 -1.88620170e-01
   5.21600086e-01 -2.42009254e-01  4.81850364e-01  5.37537713e-01
  -4.97699193e-01 -5.40224111e-01 -5.03060415e-01 -6.18809990e-01
  -4.70392015e-01  6.43556434e-01 -4.75733011e-01  4.70901019e-01
   4.70306260e-01 -2.66136776e-01  5.36011463e-01  1.68443998e-01
   4.74551745e-01  7.66991446e-01  7.34429333e-01]
 [ 1.71433612e-01 -4.98597758e-01  5.08060665e-01 -8.00693008e-01
   6.07640928e-01 -3.67831514e-01 -9.73936079e-02 -4.66592568e-01
   1.05149651e+00  3.05808329e-01  1.38051536e+00  8.93482939e-01
  -8.41350162e-01 -5.40224111e-01 -5.03060415e-01 -1.06710046e+00
  -4.70392015e-01  8.32630712e-01 -1.31503246e+00  7.38170844e-01
   4.70306260e-01 -7.64451157e-01  5.36011463e-01  1.68443998e-01
   1.61546208e+00  8.69966867e-01  7.34429333e-01]
 [-3.24842059e-02 -4.98597758e-01  5.08060665e-01 -5.77476963e-01
   6.07640928e-01 -3.67831514e-01 -9.73936079e-02 -1.57734348e-01
   5.21600086e-01  3.05808329e-01  4.81850364e-01  5.40748386e-01
  -3.25874221e-01 -5.40224111e-01 -4.57405063e-01 -6.18809990e-01
  -4.70392015e-01  5.48432805e-01 -4.92452191e-01  4.70901019e-01
   4.70306260e-01 -2.92363849e-01  5.36011463e-01  1.36167854e-02
   4.74551745e-01  4.06577471e-01  7.34429333e-01]
 [ 1.71433612e-01 -4.98597758e-01  5.08060665e-01 -4.36498408e-01
   6.07640928e-01 -3.67831514e-01 -9.73936079e-02 -3.12163458e-01
   8.80484670e-02  2.37331131e-01  4.81850364e-01  5.04909403e-02
   1.77757235e-02 -5.40224111e-01 -3.70244846e-01 -6.18809990e-01
  -4.70392015e-01  4.32839864e-01 -4.61509642e-01 -6.36386306e-02
   4.70306260e-01 -1.48114949e-01  5.36011463e-01  1.36167854e-02
   4.74551745e-01  1.49138918e-01  7.34429333e-01]
 [-3.24842059e-02 -4.98597758e-01  5.08060665e-01  9.21711712e-02
  -6.55236806e-01  9.86632825e-01 -9.73936079e-02  2.75805840e-02
  -3.93675554e-01 -4.47440848e-01  4.81850364e-01 -3.64998693e-01
   3.61425668e-01 -5.40224111e-01 -3.70244846e-01  2.29508074e+00
  -4.70392015e-01 -4.08506939e-01  8.36680351e-02 -8.65448105e-01
   4.70306260e-01 -2.26796167e-01  5.36011463e-01  1.36167854e-02
   4.74551745e-01 -8.29127584e-01 -8.10806740e-01]
 [-2.88733366e+00 -4.98597758e-01 -2.95436608e+00  2.66502979e+00
  -3.18099227e+00  9.86632825e-01 -9.73936079e-02  8.71793053e-01
  -7.30882369e-01 -3.04957437e+00 -3.11280961e+00 -2.66075322e-02
   2.07967744e+00  2.97649512e+00  3.34444061e+00 -3.94664113e-01
   3.03009485e+00 -2.42837410e+00  1.88932438e+00 -6.36386306e-02
   4.70306260e-01  2.80243073e+00  5.36011463e-01 -7.60519277e-01
  -1.80726892e+00 -1.34043490e-01 -3.90127889e+00]
 [-1.45990893e+00 -4.98597758e-01  5.08060665e-01  2.06587094e+00
  -6.55236806e-01  9.86632825e-01  3.11398428e+00  1.84984408e+00
  -3.13950248e+00  2.37331131e-01 -1.31547962e+00 -3.16008529e+00
   1.90785230e+00 -5.40224111e-01  3.31953769e+00  1.62264493e+00
  -4.70392015e-01 -1.47005482e+00  1.43222204e+00 -2.37997711e+00
   4.70306260e-01 -1.03983542e+00 -2.81355822e+00 -2.61844583e+00
  -2.94817925e+00 -6.48920597e-01 -8.10806740e-01]
 [-2.27558021e+00  3.63761177e+00  5.08060665e-01  2.64153337e+00
   6.07640928e-01 -1.72229585e+00 -1.70308255e+00  3.14704861e+00
  -2.97330750e-01 -2.36480239e+00 -1.31547962e+00 -2.72184134e+00
   3.11062826e+00 -5.40224111e-01  1.95817811e+00  1.62264493e+00
  -4.70392015e-01 -2.08587377e+00  2.30156013e+00 -3.00360671e+00
  -3.64573435e+00 -3.05477385e-01  5.36011463e-01 -2.61844583e+00
  -6.66358587e-01  6.38272169e-01 -2.35604281e+00]
 [-1.74330732e+00  8.80736930e-01 -8.99106125e-01  8.58718806e-01
  -9.44383838e-01  1.06605507e+00  9.30796260e-01  1.12835292e+00
  -1.74866632e+00 -1.66739664e+00  7.87846189e-02  7.42395727e-01
  -2.18399813e-01  3.19436932e-01 -3.70937611e-01  2.60246916e+00
  -3.17090444e-01 -1.22609056e+00  3.12030636e+00 -2.08013870e-01
  -1.10867100e+00 -1.62307523e+00 -1.63997427e+00 -5.52287111e-01
  -1.29269903e+00 -2.15458797e+00 -1.19609309e+00]
 [ 1.09373018e+00 -3.97623515e-01  2.24239912e-01 -2.98912039e-01
  -5.55292640e-02  1.36362626e+00  2.00398943e-01 -2.76069880e-01
   1.08851478e-01 -1.21072504e+00  1.41546604e+00 -5.33616222e-01
   4.32300234e-01  1.51421465e-01  2.31692768e-01 -5.95111600e-02
  -2.49442859e-01  2.10741340e-01  3.02123916e-02  2.80428832e-01
  -8.89045418e-02  8.30003320e-01 -1.31924422e-01  8.43202624e-01
   7.11032197e-01 -1.14398836e+00  1.39609833e-01]
 [ 1.15753253e+00  4.24337533e-01  1.91539871e-01 -2.13889789e-01
  -4.64003151e-02  4.16840932e-01  1.15814470e+00 -2.30149737e-01
  -1.82244561e-01 -1.38559788e+00  7.30880351e-01 -7.25715761e-01
   1.72000853e+00  1.35533957e-01 -2.55697739e-01 -7.97958525e-01
  -3.16552518e-01  4.98973144e-01 -4.57273801e-01 -2.80037012e-01
   9.98932012e-02 -2.26490559e-01  8.15154820e-02  1.03459492e+00
   1.19030211e+00 -1.27970119e-01  2.37074616e-01]
 [-9.69111014e-02 -4.44961804e-01  9.54981943e-02 -2.16835496e-01
   1.94334791e-01  7.80986350e-01 -5.63084409e-01 -5.02704883e-01
   5.93418073e-01  5.84508882e-01 -9.28451136e-02 -4.34514456e-01
   2.36132408e-01 -1.41591357e-01  3.88519392e-01  3.99878392e-02
  -2.09138181e-01 -1.89102851e-01  7.16432140e-01  4.73053497e-01
   2.90717813e-01  4.04665084e-01  1.67319621e-01  7.26384551e-02
   4.57906645e-01 -4.84824421e-01  8.76572148e-02]
 [-3.50938495e-01 -2.43704097e-01  3.49513753e-01 -5.40686975e-01
   2.46494873e-01  3.67786965e-01  7.25515351e-01 -9.38525782e-01
   3.22768926e-01  2.86506178e-01  8.01525388e-02  2.07032801e-01
  -7.29091389e-01 -1.82144563e-01 -2.01695150e-02  5.42943296e-02
  -1.08473098e-01  7.29249376e-01  9.02154886e-01  4.19082298e-01
   2.03870512e-01 -9.37754987e-01  3.91572222e-01  2.03197349e-01
   3.95246483e-01 -3.23318226e-01 -2.38096488e-02]
 [ 1.31107996e+00  1.48881567e-02  3.80658430e-01 -2.41981373e-01
   4.19394229e-01 -9.93990397e-01  8.71939953e-03 -1.40473882e+00
   4.44150190e-01  1.22314067e+00 -5.14766166e-01  1.74211078e-01
  -5.71388180e-01 -1.57937379e-01 -1.23999305e-01 -7.42894412e-01
   1.94955674e-02  7.04057292e-01  1.61908105e-01 -5.62807217e-02
   3.94063118e-01 -2.70976352e-01  2.56595834e-01 -3.23946272e-01
  -2.66045177e-02  1.73341287e-01  3.05718182e-01]
 [-2.65351481e-01  1.98742467e-02  1.52939270e-01 -3.49715966e-01
   2.86376170e-01  2.29814791e-01 -9.31838237e-01  3.18982329e-01
   8.43169198e-01  6.59873712e-01  8.64682085e-01  5.95018544e-01
  -1.24600336e+00 -1.14938290e-01 -7.06589657e-02 -4.41577951e-01
  -2.19426943e-01  1.44681600e-01 -1.77021835e-02  8.04295817e-02
   2.80228876e-01 -2.54986424e-02  2.47797809e-01  8.96297506e-01
  -2.22890083e-01  3.46770444e-01  1.35792468e-01]
 [ 5.39004927e-01  4.99930187e-03  2.04723521e-01 -4.81951364e-01
   2.32349407e-01 -2.72350080e-01 -6.32029101e-01 -4.34865105e-01
   9.43900294e-01  9.10290808e-01 -6.21957390e-02 -2.10371131e-01
  -3.44266229e-01 -3.39235954e-01 -4.98197925e-01 -4.29176908e-01
  -1.98858321e-01  3.32268501e-01 -4.26854082e-01  7.14562537e-01
   1.03305528e-02  2.35502374e-01  7.93456027e-02  3.60165200e-01
   1.89436902e-01 -1.15846521e-01  4.19900504e-02]
 [ 3.22710111e-01 -4.40093702e-02  2.75825362e-01 -4.84896392e-01
   3.55930696e-01 -4.90148348e-01  3.28373522e-01 -6.35565208e-01
   3.86460375e-01  1.36693168e+00  8.66191832e-01 -1.51368964e-01
  -4.87285180e-01 -1.98696484e-02 -6.43457498e-01  9.69124848e-01
  -1.86228505e-01  2.83539466e-01 -1.31984230e-01  3.84140545e-01
   1.14296000e-01 -1.03229265e-01  2.35551623e-01  2.57593642e-01
   4.76118367e-02  1.57950075e-01  4.06382913e-01]
 [-1.71986246e-01 -2.00601860e-01  1.33102290e-01 -5.17248777e-01
   3.75370151e-01 -2.30621427e-01  1.39836297e-01 -1.96939545e-01
   6.03665261e-01  2.60003991e-01  4.03035627e-01  4.65745914e-01
  -6.81481256e-01 -4.00910026e-01 -1.40494214e-01 -2.74422888e-01
  -3.03675254e-01  8.10787283e-01 -5.06808473e-01  7.13896284e-01
   1.94611516e-01 -3.74544129e-01  3.51851964e-01  7.25189073e-01
   4.24359409e-01  3.62297371e-01  4.14442163e-01]
 [ 6.01549496e-01 -3.15476107e-01  2.88962919e-01 -7.55695856e-01
   4.49398475e-01 -1.07769807e+00  4.65733476e-02 -6.24851297e-01
   8.44737141e-01  6.13461001e-01 -1.37368526e-01  7.79837291e-01
  -1.00352678e+00 -3.50330268e-01 -3.39016326e-01 -4.54902700e-01
  -4.11193117e-01  3.93305170e-01 -5.76590615e-01  4.74254229e-01
   2.35661418e-01 -1.22274269e-01  3.88600473e-01 -2.00089474e-01
  -1.79041204e-01  5.32494889e-01  4.31178037e-01]
 [ 4.46276991e-01 -1.66019701e-01  2.72745322e-01 -5.24877089e-01
   4.62161738e-01 -3.84060864e-01  2.83463669e-01 -1.16131714e-01
   6.17273252e-01 -5.20047252e-01 -8.52039742e-03  6.18713145e-01
  -4.55810205e-01 -4.11205889e-01 -6.62072221e-01 -2.12913547e-01
  -2.97626339e-01  1.43665221e-01 -6.79540913e-01  4.86451766e-01
   2.39631614e-01 -1.95878595e-01  4.21590065e-01  1.99856361e-01
   6.96494602e-01  5.43292650e-01  6.77640378e-01]
 [-3.07101778e-02 -3.40511114e-01  3.55382563e-01 -4.70923485e-01
   4.93246041e-01 -6.35058405e-01  2.83318143e-01 -4.97954382e-01
   5.74127873e-01 -1.51335808e-01  3.69525489e-02  5.02675905e-01
  -3.01532410e-01 -4.46224754e-01 -2.54659557e-01  1.58514935e-01
  -3.23237740e-01  2.58253856e-01 -9.85730824e-01  4.81593059e-01
   2.29066896e-01 -5.22947850e-01  2.65018611e-01  1.72600640e-01
   2.42541732e-01  6.15638084e-01  5.45783311e-01]
 [ 5.60324550e-01 -1.69505063e-01  3.84310973e-01 -6.67475472e-01
   5.34667352e-01 -7.87109337e-01 -3.15286010e-01  6.58840319e-02
   3.55689989e-01 -1.04701215e-02  1.43296287e-01  1.38960177e-02
  -8.47150176e-01 -3.29651469e-01 -4.46669112e-01 -6.25437545e-01
  -2.38652082e-01  5.70388287e-01 -3.95094471e-01  4.97437271e-01
   2.32919256e-01 -2.64452010e-01  4.36303309e-01  1.39315429e-01
   4.52919150e-01  7.12182122e-01  6.13216801e-01]
 [ 1.61684673e-01 -2.56600608e-01  3.45773071e-01 -4.29754702e-01
   5.25558179e-01 -5.91698670e-01 -1.40937826e-01 -2.27027492e-01
   1.79732421e-01  3.82091968e-01  2.19549661e-01  8.38478804e-01
   2.27052125e-02 -3.51263637e-01 -4.62702407e-01 -5.26764029e-01
  -2.60158369e-01  5.72390309e-01 -5.34801515e-01  6.93560339e-01
   2.30035923e-01 -2.94994540e-02  4.65068196e-01  4.93812289e-01
   4.66530104e-01  3.52295032e-01  5.04304387e-01]
 [ 3.37400575e-01 -1.95759825e-01  4.05738253e-01 -3.92850129e-01
   4.23786024e-01 -4.84147600e-01  1.94207803e-01 -1.30595590e-01
   3.44272065e-02  3.96535917e-01  6.96679631e-02  6.59366350e-01
  -6.06651961e-03 -4.33138945e-01 -6.60884511e-01 -1.01698328e+00
  -1.55182289e-01  6.87938065e-01 -4.35613849e-01  7.03774065e-01
   1.93195024e-01  1.17578351e-01  4.21887307e-01  4.60729642e-01
   2.75346079e-01  1.12065867e-01  3.27530632e-01]
 [ 1.41914960e-01 -2.08014114e-01  2.90587462e-01 -6.11949457e-01
   3.37021773e-01 -9.33137309e-01 -2.51260640e-01 -1.01379424e-01
   1.84428370e-01  2.09488326e-01 -1.53851555e-01  7.35629036e-01
   3.68464612e-01 -2.92160895e-01 -4.26780659e-01 -6.33412857e-01
  -2.18799013e-01  5.07396823e-01 -2.98713002e-01  6.56949375e-01
   3.03050368e-01 -2.79236857e-01  3.34999442e-01  5.17855114e-01
   3.40895932e-01  4.28949249e-01  3.66041841e-01]
 [ 4.70305338e-02 -2.79812986e-01  3.49539758e-01 -5.21525902e-01
   5.59127144e-01 -5.06677241e-01  1.60542823e-01 -5.22404840e-01
   3.80826813e-01  3.42584476e-01  1.29808963e-02  7.93032011e-01
   3.25086671e-02 -2.09007180e-01 -5.27078190e-01 -4.77064610e-01
  -4.32518265e-01  6.26593280e-01 -2.50390697e-01  6.08824295e-01
   3.04825021e-01 -1.04818212e-01  3.64152868e-01  6.10047307e-01
   2.22317731e-01  6.35349242e-01  5.21166524e-01]
 [-7.03477217e-04 -3.71481974e-01  4.88577469e-01 -4.81903639e-01
   4.88182577e-01 -5.51220486e-01 -4.56730739e-01 -2.75462882e-01
   3.93528320e-01  3.40357383e-01  1.51017597e-01  7.47152373e-01
  -2.57231374e-01 -4.94250471e-01 -4.25888346e-01 -4.64635270e-01
  -4.29998630e-01  6.93387811e-01 -5.59388876e-01  5.88572646e-01
   2.29584530e-01  1.03573348e-01  4.79299753e-01  7.38223230e-01
   1.81865965e-01  5.23041790e-01  5.58346050e-01]]================= config32 =================
2022年 02月 19日 星期六 22:47:12 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (157484) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (53484) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379]
upper = 
[5599.84370019 5510.50197843 5419.14825223 ... 5569.87124851 5607.57250651
 5232.96264294]
upper.argmax() = 6379
all predict_target = 
[3198.99158601 3456.07519494 3652.96276193 ... 3316.21679212 3221.03025448
 4107.87673247]
upper.argmax() = 6379, sortnumber[0] = 6379
x_max = [5.13691857e+01 3.03672541e-02 9.37814792e-01 2.25348820e+02
 3.92676716e+00 4.93502611e+00 4.90411917e+00 5.49698123e+02
 1.06959775e+02 9.48261703e+01 7.67001070e+00 2.11795207e+09
 6.32201910e-01 1.50057476e-02 6.50587548e+01 5.33153057e-01
 7.46701972e-02 2.10210024e+09 1.31489326e+09 7.08424278e+01
 9.39500062e-01 6.84646218e+02 9.51191066e-01 3.63195754e+01
 3.97533285e+00 3.32898617e+02 3.89329167e+00]
black_box_function中schafferRun(i) 中的i为[51.36918565682117, 0.0303672540580278, 0.9378147915706563, 225.34882025903184, 3.9267671577575136, 4.9350261068854495, 4.904119167898117, 549.6981226010428, 106.95977473537931, 94.82617028855914, 7.670010701395539, 2117952069.4221082, 0.6322019097814786, 0.015005747619647796, 65.05875476260228, 0.5331530567084086, 0.07467019718802961, 2102100238.6424499, 1314893255.304852, 70.84242777072994, 0.9395000620081585, 684.6462184187378, 0.9511910663337932, 36.31957543028201, 3.975332849578112, 332.89861720284165, 3.8932916659659482]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.36918565682117
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0303672540580278
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9378147915706563
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 225.34882025903184
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9267671577575136
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.9350261068854495
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.904119167898117
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 549.6981226010428
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.95977473537931
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 94.82617028855914
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.670010701395539
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2117952069.4221082
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6322019097814786
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.015005747619647796
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 65.05875476260228
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5331530567084086
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.07467019718802961
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2102100238.6424499
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1314893255.304852
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 70.84242777072994
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9395000620081585
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 684.6462184187378
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9511910663337932
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 36.31957543028201
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.975332849578112
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 332.89861720284165
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8932916659659482
configNum = 32	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 32 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.36918565682117, 'spark.broadcast.checksum': 0.0303672540580278, 'spark.broadcast.compress': 0.9378147915706563, 'spark.default.parallelism': 225.34882025903184, 'spark.executor.cores': 3.9267671577575136, 'spark.executor.instances': 4.9350261068854495, 'spark.executor.memory': 4.904119167898117, 'spark.executor.memoryOverhead': 549.6981226010428, 'spark.kryoserializer.buffer': 106.95977473537931, 'spark.kryoserializer.buffer.max': 94.82617028855914, 'spark.locality.wait': 7.670010701395539, 'spark.maxRemoteBlockSizeFetchToMem': 2117952069.4221082, 'spark.memory.fraction': 0.6322019097814786, 'spark.memory.offHeap.enabled': 0.015005747619647796, 'spark.memory.offHeap.size': 65.05875476260228, 'spark.memory.storageFraction': 0.5331530567084086, 'spark.rdd.compress': 0.07467019718802961, 'spark.reducer.maxBlocksInFlightPerAddress': 2102100238.6424499, 'spark.reducer.maxReqsInFlight': 1314893255.304852, 'spark.reducer.maxSizeInFlight': 70.84242777072994, 'spark.scheduler.mode': 0.9395000620081585, 'spark.scheduler.revive.interval': 684.6462184187378, 'spark.shuffle.compress': 0.9511910663337932, 'spark.shuffle.file.buffer': 36.31957543028201, 'spark.shuffle.io.numConnectionsPerPeer': 3.975332849578112, 'spark.shuffle.sort.bypassMergeThreshold': 332.89861720284165, 'spark.storage.memoryMapThreshold': 3.8932916659659482} target = -174.447
x_probe = {'spark.broadcast.blockSize': 51.36918565682117, 'spark.broadcast.checksum': 0.0303672540580278, 'spark.broadcast.compress': 0.9378147915706563, 'spark.default.parallelism': 225.34882025903184, 'spark.executor.cores': 3.9267671577575136, 'spark.executor.instances': 4.9350261068854495, 'spark.executor.memory': 4.904119167898117, 'spark.executor.memoryOverhead': 549.6981226010428, 'spark.kryoserializer.buffer': 106.95977473537931, 'spark.kryoserializer.buffer.max': 94.82617028855914, 'spark.locality.wait': 7.670010701395539, 'spark.maxRemoteBlockSizeFetchToMem': 2117952069.4221082, 'spark.memory.fraction': 0.6322019097814786, 'spark.memory.offHeap.enabled': 0.015005747619647796, 'spark.memory.offHeap.size': 65.05875476260228, 'spark.memory.storageFraction': 0.5331530567084086, 'spark.rdd.compress': 0.07467019718802961, 'spark.reducer.maxBlocksInFlightPerAddress': 2102100238.6424499, 'spark.reducer.maxReqsInFlight': 1314893255.304852, 'spark.reducer.maxSizeInFlight': 70.84242777072994, 'spark.scheduler.mode': 0.9395000620081585, 'spark.scheduler.revive.interval': 684.6462184187378, 'spark.shuffle.compress': 0.9511910663337932, 'spark.shuffle.file.buffer': 36.31957543028201, 'spark.shuffle.io.numConnectionsPerPeer': 3.975332849578112, 'spark.shuffle.sort.bypassMergeThreshold': 332.89861720284165, 'spark.storage.memoryMapThreshold': 3.8932916659659482}
target = -174.447
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.92231623e+01 5.26812214e+01]
 [8.90200939e-03 1.08111961e-01]
 [9.03180424e-01 1.00000000e+00]
 [2.16344663e+02 2.46803376e+02]
 [3.78292530e+00 4.00000000e+00]
 [4.62751517e+00 5.04192293e+00]
 [4.75484397e+00 5.19091860e+00]
 [5.02095849e+02 5.54442995e+02]
 [1.00902160e+02 1.10904333e+02]
 [9.20256178e+01 1.02202383e+02]
 [7.39523667e+00 8.02100697e+00]
 [2.08385620e+09 2.14748314e+09]
 [6.09609931e-01 6.50963840e-01]
 [3.98607916e-03 1.03477987e-01]
 [3.91912595e+00 1.09528236e+02]
 [5.03544938e-01 5.44668081e-01]
 [1.04992307e-02 1.09617573e-01]
 [2.02343144e+09 2.13329232e+09]
 [1.20668441e+09 1.31935952e+09]
 [6.91343781e+01 7.20000000e+01]
 [8.92016960e-01 9.91234756e-01]
 [6.63750134e+02 7.16340409e+02]
 [9.28113143e-01 1.00000000e+00]
 [3.64626219e+01 3.97403639e+01]
 [3.78109295e+00 4.20484522e+00]
 [3.19674482e+02 3.40108400e+02]
 [3.70147442e+00 4.00000000e+00]]
before probe, param.shape = (32, 27)
before probe, target = (32,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]
 [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
  3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
  1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
  6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
  9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
  9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
  3.82539761e+00 3.20559926e+02 3.73667538e+00]
 [5.08552424e+01 7.02536082e-02 9.37190526e-01 2.16065724e+02
  3.78571231e+00 4.58263516e+00 4.90417382e+00 5.40473863e+02
  1.06000729e+02 9.45934004e+01 7.29261524e+00 2.11861009e+09
  6.50409634e-01 7.05382486e-02 6.53785093e+01 5.19348490e-01
  7.18737172e-02 2.06109913e+09 1.31135719e+09 7.10883205e+01
  9.59364859e-01 6.71001026e+02 9.39988703e-01 3.82567810e+01
  3.88285161e+00 3.32869014e+02 3.76159792e+00]
 [5.03899352e+01 5.28949923e-02 9.54216820e-01 2.23762517e+02
  3.96158473e+00 4.89749031e+00 5.16063910e+00 4.99578845e+02
  1.10077719e+02 9.65370568e+01 7.47826001e+00 2.12910966e+09
  6.30857433e-01 9.41835015e-02 4.12132627e+01 5.26323793e-01
  1.08195665e-02 2.09275859e+09 1.32125038e+09 7.05481352e+01
  9.59796014e-01 6.84301683e+02 9.48692336e-01 3.88522332e+01
  3.77891863e+00 3.40886461e+02 3.86198691e+00]
 [5.01558507e+01 3.07324334e-02 9.94372965e-01 2.27135137e+02
  3.90540783e+00 4.86460406e+00 4.77621000e+00 5.23564798e+02
  1.10341387e+02 9.65045337e+01 7.63186196e+00 2.12071782e+09
  6.13994939e-01 1.30728776e-02 6.55934995e+01 5.26878315e-01
  1.15393622e-02 2.11049971e+09 1.25798811e+09 7.03208183e+01
  9.41516192e-01 7.00193015e+02 9.83068956e-01 3.96800975e+01
  3.74346294e+00 3.36523966e+02 3.88604765e+00]
 [5.13691857e+01 3.03672541e-02 9.37814792e-01 2.25348820e+02
  3.92676716e+00 4.93502611e+00 4.90411917e+00 5.49698123e+02
  1.06959775e+02 9.48261703e+01 7.67001070e+00 2.11795207e+09
  6.32201910e-01 1.50057476e-02 6.50587548e+01 5.33153057e-01
  7.46701972e-02 2.10210024e+09 1.31489326e+09 7.08424278e+01
  9.39500062e-01 6.84646218e+02 9.51191066e-01 3.63195754e+01
  3.97533285e+00 3.32898617e+02 3.89329167e+00]]
标准化后的train_x = 
[[ 1.66185466e-01 -4.93661349e-01  5.06217945e-01 -5.44729745e-01
   5.98530774e-01 -3.58083676e-01 -9.08820172e-02 -1.80974542e-01
   2.77677049e-01  2.33785773e-01  4.83417876e-01  4.29996707e-01
  -3.32838331e-01 -5.31422250e-01 -4.28820822e-01 -3.90053234e-01
  -4.70961333e-01  4.47597594e-01 -5.41768919e-01  2.75511713e-01
   4.70445990e-01 -2.67168710e-01  5.31609132e-01  6.91048062e-03
   4.66521182e-01  4.76534213e-01  7.24435595e-01]
 [-6.61750314e-01 -4.93661349e-01 -3.00690989e+00  1.64290287e+00
  -1.95706403e+00  3.75698910e+00  1.53889158e+00 -1.58261483e+00
  -1.09159531e+00  3.72821224e-01  4.83417876e-01 -2.31836338e+00
  -1.55480088e+00  3.02837617e+00  5.25685638e-01 -1.62693827e-01
   3.08311176e+00 -3.14463805e+00  7.35438936e-01 -7.13943199e-01
  -3.70825947e+00  4.03560229e+00 -2.86420180e+00  1.57879057e+00
  -6.89052278e-01 -4.27014298e+00 -8.37628672e-01]
 [ 2.44300886e+00  3.69962625e+00 -3.00690989e+00  1.79746387e+00
  -3.23486144e+00  1.01360725e+00 -3.35042922e+00  2.82104607e+00
  -3.14550385e+00  1.69365801e+00 -3.16680248e+00 -2.75282555e-01
   8.89124215e-01  3.02837617e+00 -3.44723337e-01  2.33825965e+00
   3.08311176e+00 -7.46941271e-01 -1.46509865e+00 -3.05265481e+00
   4.70445990e-01  2.12397099e-01 -2.86420180e+00 -2.97966169e+00
  -3.00019920e+00  8.15582584e-01 -8.37628672e-01]
 [ 1.66185466e-01 -4.93661349e-01  5.06217945e-01 -5.20951130e-01
   5.98530774e-01 -3.58083676e-01 -9.08820172e-02 -2.12354548e-01
   3.75482218e-01  9.47503218e-02  4.83417876e-01  4.93221128e-01
  -5.07403993e-01 -5.31422250e-01 -4.16206200e-01 -6.17413074e-01
  -4.70961333e-01  5.17743244e-01 -3.53578804e-01  3.65462159e-01
   4.70445990e-01 -2.80489982e-01  5.31609132e-01  3.21286498e-01
   4.66521182e-01  5.28695501e-01  7.24435595e-01]
 [ 1.66185466e-01 -4.93661349e-01  5.06217945e-01 -5.80397668e-01
   5.98530774e-01 -3.58083676e-01 -9.08820172e-02 -1.91434544e-01
   5.22189971e-01 -2.52838306e-01  4.83417876e-01  5.18572869e-01
  -5.07403993e-01 -5.31422250e-01 -4.96098811e-01 -6.17413074e-01
  -4.70961333e-01  6.28556558e-01 -4.73823385e-01  4.55412605e-01
   4.70445990e-01 -2.67168710e-01  5.31609132e-01  1.64098490e-01
   4.66521182e-01  7.63421296e-01  7.24435595e-01]
 [ 1.66185466e-01 -4.93661349e-01  5.06217945e-01 -7.94405207e-01
   5.98530774e-01 -3.58083676e-01 -9.08820172e-02 -4.73854601e-01
   1.06011840e+00  3.03303499e-01  1.39597296e+00  8.77223080e-01
  -8.56536856e-01 -5.31422250e-01 -4.96098811e-01 -1.07213145e+00
  -4.70961333e-01  8.19355079e-01 -1.32549905e+00  7.25263945e-01
   4.70445990e-01 -7.73377063e-01  5.31609132e-01  1.64098490e-01
   1.62209464e+00  8.67743872e-01  7.24435595e-01]
 [-4.07984790e-02 -4.93661349e-01  5.06217945e-01 -5.68508360e-01
   5.98530774e-01 -3.58083676e-01 -9.08820172e-02 -1.60054537e-01
   5.22189971e-01  3.03303499e-01  4.83417876e-01  5.21807941e-01
  -3.32838081e-01 -5.31422250e-01 -4.49845194e-01 -6.17413074e-01
  -4.70961333e-01  5.32565459e-01 -4.90789104e-01  4.55412605e-01
   4.70445990e-01 -2.93811255e-01  5.31609132e-01  6.91048062e-03
   4.66521182e-01  3.98292281e-01  7.24435595e-01]
 [ 1.66185466e-01 -4.93661349e-01  5.06217945e-01 -4.25836668e-01
   5.98530774e-01 -3.58083676e-01 -9.08820172e-02 -3.16954569e-01
   8.20667121e-02  2.33785773e-01  4.83417876e-01  2.78248131e-02
   1.62937418e-02 -5.31422250e-01 -3.61542834e-01 -6.17413074e-01
  -4.70961333e-01  4.15918381e-01 -4.59390279e-01 -8.42900734e-02
   4.70445990e-01 -1.47277258e-01  5.31609132e-01  6.91048062e-03
   4.66521182e-01  1.37485842e-01  7.24435595e-01]
 [-4.07984790e-02 -4.93661349e-01  5.06217945e-01  1.09182179e-01
  -6.79266630e-01  1.01360725e+00 -9.08820172e-02  2.82255009e-02
  -4.06959131e-01 -4.61391483e-01  4.83417876e-01 -3.90822310e-01
   3.65425565e-01 -5.31422250e-01 -3.61542834e-01  2.33825910e+00
  -4.70961333e-01 -4.33100996e-01  9.38265311e-02 -8.93844092e-01
   4.70445990e-01 -2.27204892e-01  5.31609132e-01  6.91048062e-03
   4.66521182e-01 -8.53578627e-01 -8.37628672e-01]
 [-2.93857371e+00 -4.93661349e-01 -3.00690989e+00  2.71294057e+00
  -3.23486144e+00  1.01360725e+00 -9.08820172e-02  8.85945675e-01
  -7.49277222e-01 -3.10306506e+00 -3.16680248e+00 -4.98595648e-02
   2.11108676e+00  3.02837617e+00  3.40181964e+00 -3.90053234e-01
   3.08311176e+00 -2.47138813e+00  1.92610890e+00 -8.42900734e-02
   4.70445990e-01  2.85000905e+00  5.31609132e-01 -7.79029564e-01
  -1.84462574e+00 -1.49401241e-01 -3.96175720e+00]
 [-1.48968609e+00 -4.93661349e-01  5.06217945e-01  2.10658587e+00
  -6.79266630e-01  1.01360725e+00  3.16866518e+00  1.87964588e+00
  -3.19440644e+00  2.33785773e-01 -1.34169230e+00 -3.20715000e+00
   1.93652068e+00 -5.31422250e-01  3.37659040e+00  1.65618143e+00
  -4.70961333e-01 -1.50432955e+00  1.46226617e+00 -2.42300168e+00
   4.70445990e-01 -1.05312378e+00 -2.86420180e+00 -2.66528567e+00
  -3.00019920e+00 -6.71014119e-01 -8.37628672e-01]
 [-2.31762187e+00  3.69962625e+00  5.06217945e-01  2.68916195e+00
   5.98530774e-01 -1.72977460e+00 -1.72065562e+00  3.19760615e+00
  -3.09153963e-01 -2.40788780e+00 -1.34169230e+00 -2.76557565e+00
   3.15848323e+00 -5.31422250e-01  1.99739163e+00  1.65618143e+00
  -4.70961333e-01 -2.12576440e+00  2.34442344e+00 -3.05265481e+00
  -3.70825947e+00 -3.07132527e-01  5.31609132e-01 -2.66528567e+00
  -6.89052278e-01  6.33018077e-01 -2.39969294e+00]
 [-1.77734568e+00  9.04707615e-01 -9.21554303e-01  8.84935972e-01
  -9.71829653e-01  1.09403961e+00  9.52730265e-01  1.14661059e+00
  -1.78248842e+00 -1.69988480e+00  7.41221987e-02  7.24987690e-01
  -2.23649249e-01  3.38769488e-01 -3.62244678e-01  2.65005508e+00
  -3.15312987e-01 -1.25814048e+00  3.17524281e+00 -2.30059809e-01
  -1.13257048e+00 -1.64560290e+00 -1.67441637e+00 -5.67622287e-01
  -1.32344253e+00 -2.19637907e+00 -1.22711093e+00]
 [ 1.10234977e+00 -3.91293701e-01  2.18241141e-01 -2.86597901e-01
  -7.24741281e-02  1.39539543e+00  2.11377297e-01 -2.80283481e-01
   1.03185049e-01 -1.23627396e+00  1.43146386e+00 -5.60721238e-01
   4.37430717e-01  1.68695861e-01  2.48282534e-01 -5.00946179e-02
  -2.46629838e-01  1.91794453e-01  3.95826362e-02  2.63100680e-01
  -9.72785431e-02  8.46335724e-01 -1.45547695e-01  8.49145796e-01
   7.06040912e-01 -1.17255850e+00  1.23138290e-01]
 [ 1.16711146e+00  4.42010085e-01  1.85062265e-01 -2.00554542e-01
  -6.32373295e-02  4.36568529e-01  1.18348883e+00 -2.33628599e-01
  -1.92323333e-01 -1.41380404e+00  7.36296961e-01 -7.54280626e-01
   1.74568044e+00  1.52613734e-01 -2.45494709e-01 -7.99130368e-01
  -3.14766826e-01  4.82654756e-01 -4.55091978e-01 -3.02778610e-01
   9.43935600e-02 -2.26894443e-01  7.08387745e-02  1.04345643e+00
   1.19147046e+00 -1.43248416e-01  2.21664500e-01]
 [-1.06194103e-01 -4.39285239e-01  8.76142293e-02 -2.03535626e-01
   1.80341827e-01  8.05345285e-01 -5.63557984e-01 -5.10544726e-01
   5.95096553e-01  5.86238975e-01 -1.00160306e-01 -4.60866353e-01
   2.38133636e-01 -1.27906316e-01  4.07164205e-01  5.08310690e-02
  -2.05708167e-01 -2.11696075e-01  7.35921310e-01  4.57585874e-01
   2.88123390e-01  4.14259557e-01  1.57827451e-01  6.68321093e-02
   4.49662157e-01 -5.04771190e-01  7.06198886e-02]
 [-3.64041075e-01 -2.35250256e-01  3.45349394e-01 -5.31276529e-01
   2.33118130e-01  3.86890675e-01  7.44370230e-01 -9.53338918e-01
   3.20344991e-01  2.83708047e-01  7.55112617e-02  1.85556305e-01
  -7.42487340e-01 -1.68956291e-01 -6.88013719e-03  6.53426961e-02
  -1.03502080e-01  7.15030968e-01  9.24382705e-01  4.03093376e-01
   1.99953879e-01 -9.49426259e-01  3.85175889e-01  1.99381758e-01
   3.86196679e-01 -3.41152124e-01 -4.20608905e-02]
 [ 1.32296764e+00  2.69104693e-02  3.76950130e-01 -2.28983503e-01
   4.08060123e-01 -9.92206283e-01  1.68226406e-02 -1.42701153e+00
   4.43566114e-01  1.23457493e+00 -5.28602723e-01  1.52485155e-01
  -5.82268460e-01 -1.44452574e-01 -1.12070506e-01 -7.43276707e-01
   2.64255581e-02  6.89609148e-01  1.73220321e-01 -7.68610957e-02
   3.93042081e-01 -2.72084951e-01  2.48336134e-01 -3.35799719e-01
  -4.10760063e-02  1.62004834e-01  2.91055621e-01]
 [-2.77167167e-01  3.19653654e-02  1.45896428e-01 -3.38011978e-01
   2.73470586e-01  2.47163719e-01 -9.37842963e-01  3.24289779e-01
   8.48633327e-01  6.62748992e-01  8.72166784e-01  5.76490523e-01
  -1.26764506e+00 -1.00926753e-01 -5.80311986e-02 -4.37639755e-01
  -2.16154432e-01  1.25132288e-01 -9.03848221e-03  6.11696696e-02
   2.77474764e-01 -2.27185435e-02  2.39416651e-01  9.03050267e-01
  -2.39884259e-01  3.37702841e-01  1.19279352e-01]
 [ 5.39283616e-01  1.68851522e-02  1.98438967e-01 -4.71835508e-01
   2.18805549e-01 -2.61387873e-01 -6.33536817e-01 -4.41619487e-01
   9.50891274e-01  9.16971237e-01 -6.90372030e-02 -2.35019665e-01
  -3.51523477e-01 -3.27972024e-01 -4.91172603e-01 -4.25060897e-01
  -1.95270941e-01  3.14429868e-01 -4.24223692e-01  7.01427609e-01
   3.46736080e-03  2.42417082e-01  6.86389397e-02  3.58743046e-01
   1.77742006e-01 -1.30966213e-01  2.44553918e-02]
 [ 3.19736572e-01 -3.27998203e-02  2.70581967e-01 -4.74815906e-01
   3.43846830e-01 -4.81956181e-01  3.41271440e-01 -6.45530864e-01
   3.85001854e-01  1.38055088e+00  8.73699866e-01 -1.75569114e-01
  -4.96823856e-01 -4.69353797e-03 -6.38335649e-01  9.93290708e-01
  -1.82447784e-01  2.65256453e-01 -1.25005720e-01  3.67814126e-01
   1.09015635e-01 -1.01680524e-01  2.27001405e-01  2.54607483e-01
   3.40941864e-02  1.46412269e-01  3.92816627e-01]
 [-1.82398084e-01 -1.91553224e-01  1.25768970e-01 -5.07556840e-01
   3.63515944e-01 -2.19128500e-01  1.49906236e-01 -1.99887032e-01
   6.05499064e-01  2.56803153e-01  4.03384949e-01  4.46235493e-01
  -6.94117734e-01 -3.90401593e-01 -1.28781564e-01 -2.68087904e-01
  -3.01692434e-01  7.97312451e-01 -5.05357083e-01  7.00754920e-01
   1.90553918e-01 -3.77293381e-01  3.44907287e-01  7.29332782e-01
   4.15683767e-01  3.53432895e-01  4.00963646e-01]
 [ 6.02768611e-01 -3.08012691e-01  2.83911901e-01 -7.48867644e-01
   4.38418840e-01 -1.07697858e+00  5.52443819e-02 -6.34645527e-01
   8.50225037e-01  6.15631029e-01 -1.45371888e-01  7.62713789e-01
  -1.02130051e+00 -3.39202242e-01 -3.29905098e-01 -4.51155564e-01
  -4.10856204e-01  3.76023154e-01 -5.76168225e-01  4.58798203e-01
   2.32228787e-01 -1.21027227e-01  3.82163115e-01 -2.10054360e-01
  -1.95471828e-01  5.25856988e-01  4.17881780e-01]
 [ 4.45161415e-01 -1.56493846e-01  2.67456826e-01 -5.15276767e-01
   4.51332889e-01 -3.74519437e-01  2.95687958e-01 -1.17786246e-01
   6.19313321e-01 -5.35101159e-01 -1.45322357e-02  6.00365189e-01
  -4.64846794e-01 -4.00823578e-01 -6.57194298e-01 -2.05696598e-01
  -2.95550921e-01  1.24106640e-01 -6.80636617e-01  4.71113554e-01
   2.36259426e-01 -1.95797544e-01  4.15608132e-01  1.95989827e-01
   6.91316477e-01  5.36796008e-01  6.67028187e-01]
 [-3.89977765e-02 -3.33393171e-01  3.51304142e-01 -4.60675186e-01
   4.82784422e-01 -6.28709259e-01  2.95540250e-01 -5.05718215e-01
   5.75513958e-01 -1.60787054e-01  3.16435571e-02  4.83446131e-01
  -3.08107972e-01 -4.36271418e-01 -2.44442922e-01  1.71057691e-01
  -3.21554387e-01  2.39740254e-01 -9.91341574e-01  4.66207918e-01
   2.25533866e-01 -5.28048018e-01  2.56875189e-01  1.68318512e-01
   2.31529346e-01  6.10087886e-01  5.33735148e-01]
 [ 5.60923803e-01 -1.60027304e-01  3.80656157e-01 -6.59587742e-01
   5.24695086e-01 -7.82694032e-01 -3.12042713e-01  6.71418178e-02
   3.53765061e-01 -1.77808797e-02  1.39630983e-01 -9.04821049e-03
  -8.62429392e-01 -3.18270131e-01 -4.38968560e-01 -6.24135659e-01
  -2.35673873e-01  5.54721162e-01 -3.91995758e-01  4.82205166e-01
   2.29444876e-01 -2.65457255e-01  4.30524494e-01  1.34525770e-01
   4.44610563e-01  7.07894941e-01  6.01903013e-01]
 [ 1.56289941e-01 -2.48324733e-01  3.41553937e-01 -4.19011970e-01
   5.15478296e-01 -5.84798058e-01 -1.35079380e-01 -2.30456397e-01
   1.75140382e-01  3.80746287e-01  2.17062957e-01  8.21800944e-01
   2.13018657e-02 -3.40147044e-01 -4.55211954e-01 -5.24047292e-01
  -2.57509383e-01  5.56741441e-01 -5.33762907e-01  6.80222554e-01
   2.26517645e-01 -2.67827333e-02  4.59686484e-01  4.94427978e-01
   4.58396446e-01  3.43299703e-01  4.91804503e-01]
 [ 3.34647923e-01 -1.86644371e-01  4.02397202e-01 -3.81664178e-01
   4.12503803e-01 -4.75879114e-01  2.05093292e-01 -1.32481550e-01
   2.76326774e-02  3.95409715e-01  6.48646327e-02  6.41327336e-01
  -7.92883101e-03 -4.23025310e-01 -6.55991025e-01 -1.02129566e+00
  -1.50926305e-01  6.73342923e-01 -4.33112630e-01  6.90534933e-01
   1.89115860e-01  1.22624983e-01  4.15909477e-01  4.60840888e-01
   2.64755299e-01  9.99277905e-02  3.13105616e-01]
 [ 1.36222968e-01 -1.99067765e-01  2.85560232e-01 -6.03394865e-01
   3.24714517e-01 -9.30579243e-01 -2.47056989e-01 -1.02797915e-01
   1.79907512e-01  2.05519890e-01 -1.62109685e-01  7.18169575e-01
   3.72576793e-01 -2.80320304e-01 -4.18819490e-01 -6.32225327e-01
  -2.15516888e-01  4.91155254e-01 -2.94193057e-01  6.43257971e-01
   3.00643703e-01 -2.80476313e-01  3.27822114e-01  5.18837406e-01
   3.31147607e-01  4.20956733e-01  3.52036227e-01]
 [ 3.99118515e-02 -2.71857433e-01  3.45375780e-01 -5.11885333e-01
   5.49443847e-01 -4.98695295e-01  1.70923352e-01 -5.30559890e-01
   3.79282901e-01  3.40638469e-01  7.30138985e-03  7.76008781e-01
   3.12617042e-02 -1.96147970e-01 -5.20431314e-01 -4.73635247e-01
  -4.32507803e-01  6.11438711e-01 -2.45158197e-01  5.94668059e-01
   3.02445374e-01 -1.03294642e-01  3.57378007e-01  6.12435341e-01
   2.11045423e-01  6.30056911e-01  5.08850275e-01]
 [-8.53989249e-03 -3.64791417e-01  4.86449451e-01 -4.71787211e-01
   4.77661138e-01 -5.43805057e-01 -4.55609054e-01 -2.79666770e-01
   3.92176933e-01  3.38377534e-01  1.47471636e-01  7.29780484e-01
  -2.63100248e-01 -4.84885441e-01 -4.17915483e-01 -4.61027686e-01
  -4.29949596e-01  6.78842367e-01 -5.58712830e-01  5.74220803e-01
   2.26059381e-01  1.08398122e-01  4.74114510e-01  7.42565683e-01
   1.70073766e-01  5.16280220e-01  5.46434700e-01]
 [ 2.42600970e-01 -3.66322719e-01  2.87753358e-01 -4.93025283e-01
   5.04954038e-01 -4.47207776e-01 -2.47146066e-01 -6.31214376e-03
   2.26807346e-01  2.21701527e-01  1.82284462e-01  7.14544736e-01
   5.47317005e-02 -4.78004814e-01 -4.20164018e-01 -3.18365523e-01
  -2.05577994e-01  6.46930345e-01 -2.76666810e-01  6.21139806e-01
   2.17634568e-01 -9.87049886e-02  3.65863222e-01  2.14331915e-01
   4.38016478e-01  4.21728797e-01  5.57750319e-01]]================= config33 =================
2022年 02月 19日 星期六 22:50:15 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (173321) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (76460) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447]
upper = 
[5538.81249947 5561.56517097 5622.002618   ... 5504.44056463 5532.23259709
 5487.80755879]
upper.argmax() = 988
all predict_target = 
[3144.1020831  3080.13458726 2920.87868265 ... 3227.55312144 3157.36898804
 3261.13380292]
upper.argmax() = 988, sortnumber[0] = 988
x_max = [5.06742851e+01 5.73284951e-02 9.22708752e-01 2.35475088e+02
 3.91294748e+00 4.93225193e+00 5.02564511e+00 5.27186712e+02
 1.04900808e+02 9.34646491e+01 7.60075856e+00 2.11114270e+09
 6.29077238e-01 4.04658105e-02 5.10754327e+01 5.09791521e-01
 7.52264037e-02 2.09532985e+09 1.25593854e+09 7.13909770e+01
 9.32584770e-01 6.92196850e+02 9.86675360e-01 3.95859710e+01
 3.88347277e+00 3.23488146e+02 3.85834755e+00]
black_box_function中schafferRun(i) 中的i为[50.67428505287409, 0.057328495126453896, 0.9227087524625451, 235.47508848802192, 3.9129474800343136, 4.932251933338845, 5.025645114141774, 527.18671150838, 104.90080828125659, 93.46464908054115, 7.600758563604269, 2111142696.5846553, 0.6290772384607254, 0.040465810504750975, 51.07543265777781, 0.509791521329979, 0.07522640374506798, 2095329851.7307062, 1255938539.1366808, 71.39097703257602, 0.9325847703687322, 692.1968497453414, 0.9866753600955698, 39.585970971592296, 3.8834727746674313, 323.4881457134368, 3.8583475450015317]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.67428505287409
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.057328495126453896
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9227087524625451
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 235.47508848802192
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9129474800343136
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.932251933338845
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.025645114141774
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 527.18671150838
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 104.90080828125659
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 93.46464908054115
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.600758563604269
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2111142696.5846553
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6290772384607254
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.040465810504750975
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 51.07543265777781
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.509791521329979
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.07522640374506798
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2095329851.7307062
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1255938539.1366808
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.39097703257602
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9325847703687322
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 692.1968497453414
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9866753600955698
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 39.585970971592296
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.8834727746674313
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 323.4881457134368
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8583475450015317
configNum = 33	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 33 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.67428505287409, 'spark.broadcast.checksum': 0.057328495126453896, 'spark.broadcast.compress': 0.9227087524625451, 'spark.default.parallelism': 235.47508848802192, 'spark.executor.cores': 3.9129474800343136, 'spark.executor.instances': 4.932251933338845, 'spark.executor.memory': 5.025645114141774, 'spark.executor.memoryOverhead': 527.18671150838, 'spark.kryoserializer.buffer': 104.90080828125659, 'spark.kryoserializer.buffer.max': 93.46464908054115, 'spark.locality.wait': 7.600758563604269, 'spark.maxRemoteBlockSizeFetchToMem': 2111142696.5846553, 'spark.memory.fraction': 0.6290772384607254, 'spark.memory.offHeap.enabled': 0.040465810504750975, 'spark.memory.offHeap.size': 51.07543265777781, 'spark.memory.storageFraction': 0.509791521329979, 'spark.rdd.compress': 0.07522640374506798, 'spark.reducer.maxBlocksInFlightPerAddress': 2095329851.7307062, 'spark.reducer.maxReqsInFlight': 1255938539.1366808, 'spark.reducer.maxSizeInFlight': 71.39097703257602, 'spark.scheduler.mode': 0.9325847703687322, 'spark.scheduler.revive.interval': 692.1968497453414, 'spark.shuffle.compress': 0.9866753600955698, 'spark.shuffle.file.buffer': 39.585970971592296, 'spark.shuffle.io.numConnectionsPerPeer': 3.8834727746674313, 'spark.shuffle.sort.bypassMergeThreshold': 323.4881457134368, 'spark.storage.memoryMapThreshold': 3.8583475450015317} target = -224.36
x_probe = {'spark.broadcast.blockSize': 50.67428505287409, 'spark.broadcast.checksum': 0.057328495126453896, 'spark.broadcast.compress': 0.9227087524625451, 'spark.default.parallelism': 235.47508848802192, 'spark.executor.cores': 3.9129474800343136, 'spark.executor.instances': 4.932251933338845, 'spark.executor.memory': 5.025645114141774, 'spark.executor.memoryOverhead': 527.18671150838, 'spark.kryoserializer.buffer': 104.90080828125659, 'spark.kryoserializer.buffer.max': 93.46464908054115, 'spark.locality.wait': 7.600758563604269, 'spark.maxRemoteBlockSizeFetchToMem': 2111142696.5846553, 'spark.memory.fraction': 0.6290772384607254, 'spark.memory.offHeap.enabled': 0.040465810504750975, 'spark.memory.offHeap.size': 51.07543265777781, 'spark.memory.storageFraction': 0.509791521329979, 'spark.rdd.compress': 0.07522640374506798, 'spark.reducer.maxBlocksInFlightPerAddress': 2095329851.7307062, 'spark.reducer.maxReqsInFlight': 1255938539.1366808, 'spark.reducer.maxSizeInFlight': 71.39097703257602, 'spark.scheduler.mode': 0.9325847703687322, 'spark.scheduler.revive.interval': 692.1968497453414, 'spark.shuffle.compress': 0.9866753600955698, 'spark.shuffle.file.buffer': 39.585970971592296, 'spark.shuffle.io.numConnectionsPerPeer': 3.8834727746674313, 'spark.shuffle.sort.bypassMergeThreshold': 323.4881457134368, 'spark.storage.memoryMapThreshold': 3.8583475450015317}
target = -224.36
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.93960652e+01 5.25083184e+01]
 [1.38625070e-02 1.03151463e-01]
 [9.08175276e-01 9.98082614e-01]
 [2.17867599e+02 2.45280440e+02]
 [3.79813311e+00 4.00000000e+00]
 [4.64823555e+00 5.02120254e+00]
 [4.77664771e+00 5.16911487e+00]
 [5.04713207e+02 5.51825637e+02]
 [1.01402268e+02 1.10404224e+02]
 [9.25344561e+01 1.01693545e+02]
 [7.42652518e+00 7.98971846e+00]
 [2.08921282e+09 2.14748314e+09]
 [6.11677626e-01 6.48896144e-01]
 [8.96067455e-03 9.85033915e-02]
 [9.19958147e+00 1.04247781e+02]
 [5.05601095e-01 5.42611923e-01]
 [1.54551478e-02 1.04661656e-01]
 [2.02892448e+09 2.12779928e+09]
 [1.21231816e+09 1.31372576e+09]
 [6.93708667e+01 7.20000000e+01]
 [8.96977850e-01 9.86273867e-01]
 [6.66379648e+02 7.13710895e+02]
 [9.33183847e-01 1.00000000e+00]
 [3.66265090e+01 3.95764768e+01]
 [3.80228057e+00 4.18365761e+00]
 [3.20696178e+02 3.39086704e+02]
 [3.71643444e+00 3.98571470e+00]]
before probe, param.shape = (33, 27)
before probe, target = (33,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]
 [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
  3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
  1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
  6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
  9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
  9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
  3.82539761e+00 3.20559926e+02 3.73667538e+00]
 [5.08552424e+01 7.02536082e-02 9.37190526e-01 2.16065724e+02
  3.78571231e+00 4.58263516e+00 4.90417382e+00 5.40473863e+02
  1.06000729e+02 9.45934004e+01 7.29261524e+00 2.11861009e+09
  6.50409634e-01 7.05382486e-02 6.53785093e+01 5.19348490e-01
  7.18737172e-02 2.06109913e+09 1.31135719e+09 7.10883205e+01
  9.59364859e-01 6.71001026e+02 9.39988703e-01 3.82567810e+01
  3.88285161e+00 3.32869014e+02 3.76159792e+00]
 [5.03899352e+01 5.28949923e-02 9.54216820e-01 2.23762517e+02
  3.96158473e+00 4.89749031e+00 5.16063910e+00 4.99578845e+02
  1.10077719e+02 9.65370568e+01 7.47826001e+00 2.12910966e+09
  6.30857433e-01 9.41835015e-02 4.12132627e+01 5.26323793e-01
  1.08195665e-02 2.09275859e+09 1.32125038e+09 7.05481352e+01
  9.59796014e-01 6.84301683e+02 9.48692336e-01 3.88522332e+01
  3.77891863e+00 3.40886461e+02 3.86198691e+00]
 [5.01558507e+01 3.07324334e-02 9.94372965e-01 2.27135137e+02
  3.90540783e+00 4.86460406e+00 4.77621000e+00 5.23564798e+02
  1.10341387e+02 9.65045337e+01 7.63186196e+00 2.12071782e+09
  6.13994939e-01 1.30728776e-02 6.55934995e+01 5.26878315e-01
  1.15393622e-02 2.11049971e+09 1.25798811e+09 7.03208183e+01
  9.41516192e-01 7.00193015e+02 9.83068956e-01 3.96800975e+01
  3.74346294e+00 3.36523966e+02 3.88604765e+00]
 [5.13691857e+01 3.03672541e-02 9.37814792e-01 2.25348820e+02
  3.92676716e+00 4.93502611e+00 4.90411917e+00 5.49698123e+02
  1.06959775e+02 9.48261703e+01 7.67001070e+00 2.11795207e+09
  6.32201910e-01 1.50057476e-02 6.50587548e+01 5.33153057e-01
  7.46701972e-02 2.10210024e+09 1.31489326e+09 7.08424278e+01
  9.39500062e-01 6.84646218e+02 9.51191066e-01 3.63195754e+01
  3.97533285e+00 3.32898617e+02 3.89329167e+00]
 [5.06742851e+01 5.73284951e-02 9.22708752e-01 2.35475088e+02
  3.91294748e+00 4.93225193e+00 5.02564511e+00 5.27186712e+02
  1.04900808e+02 9.34646491e+01 7.60075856e+00 2.11114270e+09
  6.29077238e-01 4.04658105e-02 5.10754327e+01 5.09791521e-01
  7.52264037e-02 2.09532985e+09 1.25593854e+09 7.13909770e+01
  9.32584770e-01 6.92196850e+02 9.86675360e-01 3.95859710e+01
  3.88347277e+00 3.23488146e+02 3.85834755e+00]]
标准化后的train_x = 
[[ 1.65698283e-01 -4.93042788e-01  5.06422425e-01 -5.40572658e-01
   5.90693992e-01 -3.48683728e-01 -9.07772847e-02 -1.76184220e-01
   2.78034348e-01  2.33443742e-01  4.87143826e-01  4.12971221e-01
  -3.38004632e-01 -5.26545501e-01 -4.19275756e-01 -3.65978888e-01
  -4.71701926e-01  4.32897386e-01 -5.30070405e-01  2.57403484e-01
   4.71677655e-01 -2.71368916e-01  5.23013736e-01 -1.52560093e-02
   4.62770463e-01  4.78272420e-01  7.17437157e-01]
 [-6.74950234e-01 -4.93042788e-01 -3.05820234e+00  1.67631966e+00
  -1.99523774e+00  3.81737232e+00  1.56420521e+00 -1.59829760e+00
  -1.11213332e+00  3.74600390e-01  4.87143826e-01 -2.35881776e+00
  -1.57891346e+00  3.08025579e+00  5.46678459e-01 -1.37578237e-01
   3.13521163e+00 -3.19389113e+00  7.60627129e-01 -7.40617894e-01
  -3.76952933e+00  4.09811546e+00 -2.91315516e+00  1.56833803e+00
  -7.08766610e-01 -4.33973269e+00 -8.62796425e-01]
 [ 2.47748171e+00  3.76112837e+00 -3.05820234e+00  1.83294793e+00
  -3.28820361e+00  1.04000162e+00 -3.40074228e+00  2.86968549e+00
  -3.19738482e+00  1.71558855e+00 -3.21887621e+00 -2.98320321e-01
   9.02904199e-01  3.08025579e+00 -3.34169658e-01  2.37482892e+00
   3.13521163e+00 -7.73131466e-01 -1.46315221e+00 -3.09957752e+00
   4.71677655e-01  2.15632439e-01 -2.91315516e+00 -3.02408468e+00
  -3.05184076e+00  8.22415642e-01 -8.62796425e-01]
 [ 1.65698283e-01 -4.93042788e-01  5.06422425e-01 -5.16476002e-01
   5.90693992e-01 -3.48683728e-01 -9.07772847e-02 -2.08022579e-01
   3.77332039e-01  9.22870932e-02  4.87143826e-01  4.76734609e-01
  -5.15276900e-01 -5.26545501e-01 -4.06509842e-01 -5.94379974e-01
  -4.71701926e-01  5.03717750e-01 -3.39892653e-01  3.48132701e-01
   4.71677655e-01 -2.84896731e-01  5.23013736e-01  3.01462798e-01
   4.62770463e-01  5.31217531e-01  7.17437157e-01]
 [ 1.65698283e-01 -4.93042788e-01  5.06422425e-01 -5.76717642e-01
   5.90693992e-01 -3.48683728e-01 -9.07772847e-02 -1.86797006e-01
   5.26278575e-01 -2.60604528e-01  4.87143826e-01  5.02302466e-01
  -5.15276900e-01 -5.26545501e-01 -4.87360635e-01 -5.94379974e-01
  -4.71701926e-01  6.15596952e-01 -4.61407240e-01  4.38861917e-01
   4.71677655e-01 -2.71368916e-01  5.23013736e-01  1.43103394e-01
   4.62770463e-01  7.69470531e-01  7.17437157e-01]
 [ 1.65698283e-01 -4.93042788e-01  5.06422425e-01 -7.93587543e-01
   5.90693992e-01 -3.48683728e-01 -9.07772847e-02 -4.73342241e-01
   1.07241587e+00  3.04022066e-01  1.41364883e+00  8.64010055e-01
  -8.69822999e-01 -5.26545501e-01 -4.87360635e-01 -1.05118084e+00
  -4.71701926e-01  8.08230718e-01 -1.32207818e+00  7.11049565e-01
   4.71677655e-01 -7.85425901e-01  5.23013736e-01  1.43103394e-01
   1.63430754e+00  8.75360753e-01  7.17437157e-01]
 [-4.44638458e-02 -4.93042788e-01  5.06422425e-01 -5.64669314e-01
   5.90693992e-01 -3.48683728e-01 -9.07772847e-02 -1.54958647e-01
   5.26278575e-01  3.04022066e-01  4.87143826e-01  5.05565116e-01
  -3.38004379e-01 -5.26545501e-01 -4.40552281e-01 -5.94379974e-01
  -4.71701926e-01  5.18682537e-01 -4.78552148e-01  4.38861917e-01
   4.71677655e-01 -2.98424547e-01  5.23013736e-01 -1.52560093e-02
   4.62770463e-01  3.98854754e-01  7.17437157e-01]
 [ 1.65698283e-01 -4.93042788e-01  5.06422425e-01 -4.20089380e-01
   5.90693992e-01 -3.48683728e-01 -9.07772847e-02 -3.14150444e-01
   7.94389672e-02  2.33443742e-01  4.87143826e-01  7.37094065e-03
   1.65406635e-02 -5.26545501e-01 -3.51190878e-01 -5.94379974e-01
  -4.71701926e-01  4.00913458e-01 -4.46821694e-01 -1.05513380e-01
   4.71677655e-01 -1.49618577e-01  5.23013736e-01 -1.52560093e-02
   4.62770463e-01  1.34129198e-01  7.17437157e-01]
 [-4.44638458e-02 -4.93042788e-01  5.06422425e-01  1.22085373e-01
  -7.02271875e-01  1.04000162e+00 -9.07772847e-02  3.60715090e-02
  -4.17049486e-01 -4.72339501e-01  4.87143826e-01 -4.14845014e-01
   3.71085706e-01 -5.26545501e-01 -3.51190878e-01  2.37482837e+00
  -4.71701926e-01 -4.56272435e-01  1.12238110e-01 -9.22076326e-01
   4.71677655e-01 -2.30785470e-01  5.23013736e-01 -1.52560093e-02
   4.62770463e-01 -8.71827912e-01 -8.62796425e-01]
 [-2.98673366e+00 -4.93042788e-01 -3.05820234e+00  2.76066917e+00
  -3.28820361e+00  1.04000162e+00 -9.07772847e-02  9.06319998e-01
  -7.64591403e-01 -3.15431583e+00 -3.21887621e+00 -7.09756716e-02
   2.14381303e+00  3.08025579e+00  3.45730702e+00 -3.65978888e-01
   3.13521163e+00 -2.51416537e+00  1.96387277e+00 -1.05513380e-01
   4.71677655e-01  2.89413989e+00  5.23013736e-01 -8.07053027e-01
  -1.88030368e+00 -1.57068912e-01 -4.02326359e+00]
 [-1.51559875e+00 -4.93042788e-01  5.06422425e-01  2.14620445e+00
  -7.02271875e-01  1.04000162e+00  3.21918771e+00  1.91453471e+00
  -3.24703367e+00  2.33443742e-01 -1.36586619e+00 -3.25518100e+00
   1.96654034e+00 -5.26545501e-01  3.43177519e+00  1.68962697e+00
  -4.71701926e-01 -1.53780488e+00  1.49513100e+00 -2.46447300e+00
   4.71677655e-01 -1.06951002e+00 -2.91315516e+00 -2.70736587e+00
  -3.05184076e+00 -6.86520023e-01 -8.62796425e-01]
 [-2.35624727e+00  3.76112837e+00  5.06422425e-01  2.73657251e+00
   5.90693992e-01 -1.73736908e+00 -1.74575978e+00  3.25174580e+00
  -3.17751795e-01 -2.44853258e+00 -1.36586619e+00 -2.80984236e+00
   3.20744917e+00 -5.26545501e-01  2.03603518e+00  1.68962697e+00
  -4.71701926e-01 -2.16521716e+00  2.38660548e+00 -3.09957752e+00
  -3.76952933e+00 -3.11952362e-01  5.23013736e-01 -2.70736587e+00
  -7.08766610e-01  6.37107753e-01 -2.44303001e+00]
 [-1.80767527e+00  9.25629501e-01 -9.42278719e-01  9.08214915e-01
  -9.98307851e-01  1.12143050e+00  9.68977310e-01  1.17079232e+00
  -1.81356956e+00 -1.72972792e+00  7.15913848e-02  7.10476907e-01
  -2.27122595e-01  3.55136075e-01 -3.51901139e-01  2.68805229e+00
  -3.13739465e-01 -1.28924778e+00  3.22619985e+00 -2.52545156e-01
  -1.15531538e+00 -1.67117538e+00 -1.70922957e+00 -5.94070303e-01
  -1.35192061e+00 -2.23480650e+00 -1.25680899e+00]
 [ 1.11623714e+00 -3.89188834e-01  2.14224334e-01 -2.78988286e-01
  -8.82762673e-02  1.42651992e+00  2.16157295e-01 -2.76943718e-01
   1.00879573e-01 -1.25904399e+00  1.44968227e+00 -5.86192276e-01
   4.44207283e-01  1.82816830e-01  2.65948356e-01 -2.44633545e-02
  -2.44035164e-01  1.74633735e-01  5.74212987e-02  2.44885000e-01
  -1.04538419e-01  8.59400121e-01 -1.62190852e-01  8.33255803e-01
   7.05599026e-01 -1.19560107e+00  1.09145799e-01]
 [ 1.18199323e+00  4.56213932e-01  1.80559108e-01 -1.91794093e-01
  -7.89298207e-02  4.55813740e-01  1.20330519e+00 -2.29607370e-01
  -1.99138312e-01 -1.43928256e+00  7.43888588e-01 -7.81401696e-01
   1.77274115e+00  1.66522358e-01 -2.33750944e-01 -7.76929484e-01
  -3.13185185e-01  4.68291755e-01 -4.42477994e-01 -3.25893539e-01
   9.00005527e-02 -2.30470207e-01  5.67672917e-02  1.02901447e+00
   1.19773452e+00 -1.50823630e-01  2.08818027e-01]
 [-1.10863603e-01 -4.37877176e-01  8.16826371e-02 -1.94815050e-01
   1.67540813e-01  8.29159418e-01 -5.70764476e-01 -5.10568281e-01
   6.00297722e-01  5.91274154e-01 -1.05355317e-01 -4.85486161e-01
   2.41820141e-01 -1.17701623e-01  4.26735555e-01  7.69245444e-02
  -2.02505087e-01 -2.32737873e-01  7.61114597e-01  4.41054001e-01
   2.86628029e-01  4.20624723e-01  1.44789797e-01  4.51121668e-02
   4.45678540e-01 -5.17778975e-01  5.60165241e-02]
 [-3.72669747e-01 -2.30879749e-01  3.43195795e-01 -5.26939505e-01
   2.20943612e-01  4.05520407e-01  7.57394418e-01 -9.59830159e-01
   3.21353409e-01  2.84127656e-01  7.30016819e-02  1.66447043e-01
  -7.54005167e-01 -1.59293614e-01  7.72542256e-03  9.15026308e-02
  -9.87794429e-02  7.02903138e-01  9.51566493e-01  3.86089720e-01
   1.97139753e-01 -9.64204695e-01  3.74840187e-01  1.78649600e-01
   3.81336321e-01 -3.51701220e-01 -5.79749134e-02]
 [ 1.34024254e+00  3.50873639e-02  3.75259747e-01 -2.20603293e-01
   3.97962304e-01 -9.90662731e-01  1.85933196e-02 -1.44042148e+00
   4.46454905e-01  1.24950146e+00 -5.40347189e-01  1.33093972e-01
  -5.91302126e-01 -1.34466354e-01 -9.87265343e-02 -7.20820028e-01
   3.30799044e-02  6.77236792e-01  1.92470445e-01 -9.80200843e-02
   3.93116004e-01 -2.76361382e-01  2.36374142e-01 -3.60520151e-01
  -5.18389018e-02  1.59016635e-01  2.79016278e-01]
 [-2.84461913e-01  4.02156535e-02  1.40819161e-01 -3.31090029e-01
   2.61775083e-01  2.64062318e-01 -9.50838794e-01  3.36460259e-01
   8.57703507e-01  6.68951447e-01  8.81835407e-01  5.60713849e-01
  -1.28730535e+00 -9.03658272e-02 -4.40391128e-02 -4.13783343e-01
  -2.13106663e-01  1.07330362e-01  8.28665138e-03  4.12057188e-02
   2.75820130e-01 -2.31286118e-02  2.27348654e-01  8.87561980e-01
  -2.53393581e-01  3.37354841e-01  1.05241976e-01]
 [ 5.44525258e-01  2.49164863e-02  1.94131891e-01 -4.66703457e-01
   2.06461129e-01 -2.50789921e-01 -6.41825722e-01 -4.40636283e-01
   9.61521925e-01  9.27052239e-01 -7.37564462e-02 -2.57714202e-01
  -3.56979488e-01 -3.20408958e-01 -4.82375345e-01 -4.01146877e-01
  -1.91912685e-01  2.98448751e-01 -4.11283683e-01  6.87006860e-01
  -2.28564337e-03  2.46117874e-01  5.45413126e-02  3.39198479e-01
   1.70001961e-01 -1.38356863e-01  9.31506004e-03]
 [ 3.21607127e-01 -2.54898768e-02  2.67332395e-01 -4.69723718e-01
   3.32986749e-01 -4.74090938e-01  3.48060605e-01 -6.47526098e-01
   3.86996946e-01  1.39770449e+00  8.83391924e-01 -1.97756854e-01
  -5.04532720e-01  7.13803210e-03 -6.31303373e-01  1.02370039e+00
  -1.78898879e-01  2.48802349e-01 -1.08905415e-01  3.50505031e-01
   1.04841332e-01 -1.03314878e-01  2.14785857e-01  2.34286878e-01
   2.43697258e-02  1.43189762e-01  3.81960928e-01]
 [-1.88237676e-01 -1.86548268e-01  1.20396667e-01 -5.02902564e-01
   3.52889351e-01 -2.08006980e-01  1.53735416e-01 -1.95372956e-01
   6.10858977e-01  2.56812287e-01  4.05887463e-01  4.29348437e-01
  -7.04885600e-01 -3.83662835e-01 -1.15638014e-01 -2.43454990e-01
  -2.99916408e-01  7.85976068e-01 -4.93273992e-01  6.86328348e-01
   1.87599196e-01 -3.83201043e-01  3.34093008e-01  7.12549919e-01
   4.11230757e-01  3.53321269e-01  3.90202710e-01]
 [ 6.08985048e-01 -3.04698643e-01  2.80857724e-01 -7.47440912e-01
   4.28681403e-01 -1.07648531e+00  5.76093580e-02 -6.36481764e-01
   8.59319506e-01  6.21114628e-01 -1.51258033e-01  7.48524609e-01
  -1.03714128e+00 -3.31787458e-01 -3.19173698e-01 -4.27361050e-01
  -4.10703179e-01  3.60634489e-01 -5.64833030e-01  4.42276826e-01
   2.29897402e-01 -1.22961546e-01  3.71791607e-01 -2.33837713e-01
  -2.08367617e-01  5.28336364e-01  4.07317629e-01]
 [ 4.48957835e-01 -1.50979852e-01  2.64161444e-01 -5.10725745e-01
   4.41748752e-01 -3.65323117e-01  3.01772050e-01 -1.12072963e-01
   6.24884042e-01 -5.47173730e-01 -1.84182800e-02  5.84792039e-01
  -4.72059860e-01 -3.94222429e-01 -6.50388201e-01 -1.80777949e-01
  -2.93683586e-01  1.06294849e-01 -6.70404802e-01  4.54698800e-01
   2.33988328e-01 -1.98891158e-01  4.05634106e-01  1.75232392e-01
   6.90671181e-01  5.39439763e-01  6.59362008e-01]
 [-4.26354940e-02 -3.30447630e-01  3.49237830e-01 -4.55393865e-01
   4.73573640e-01 -6.22662198e-01  3.01622057e-01 -5.05671271e-01
   5.80416294e-01 -1.67148895e-01  2.84633865e-02  4.66876284e-01
  -3.12890834e-01 -4.30138316e-01 -2.32686543e-01  1.97701772e-01
  -3.20073661e-01  2.23040715e-01 -9.84391378e-01  4.49750692e-01
   2.23102344e-01 -5.36293092e-01  2.45014680e-01  1.47354866e-01
   2.24532343e-01  6.13832992e-01  5.24518557e-01]
 [ 5.66497725e-01 -1.54564613e-01  3.79020099e-01 -6.56966887e-01
   5.15981816e-01 -7.78554750e-01 -3.15358835e-01  7.55562583e-02
   3.55283475e-01 -2.19609430e-02  1.38101579e-01 -2.98164136e-02
  -8.75806897e-01 -3.10578964e-01 -4.29545199e-01 -6.01133347e-01
  -2.32916311e-01  5.41051351e-01 -3.78715361e-01  4.65886441e-01
   2.27071851e-01 -2.69630925e-01  4.20727743e-01  1.13310293e-01
   4.40557160e-01  7.13109786e-01  5.93479325e-01]
 [ 1.55650815e-01 -2.44144059e-01  3.39344702e-01 -4.13173402e-01
   5.06655616e-01 -5.78206964e-01 -1.35658280e-01 -2.26388833e-01
   1.73932956e-01  3.82646362e-01  2.16717229e-01  8.08115463e-01
   2.16264373e-02 -3.32744735e-01 -4.45983407e-01 -5.00586603e-01
  -2.55076463e-01  5.43091062e-01 -5.21979834e-01  6.65618217e-01
   2.24100838e-01 -2.72558159e-02  4.50236313e-01  4.75894561e-01
   4.54533488e-01  3.43035806e-01  4.82100192e-01]
 [ 3.36747437e-01 -1.81568141e-01  4.01079833e-01 -3.75326080e-01
   4.02458734e-01 -4.67938579e-01  2.09776090e-01 -1.26982914e-01
   2.41742607e-02  3.97533503e-01  6.21923014e-02  6.26103375e-01
  -8.05747551e-03 -4.16717309e-01 -6.49170496e-01 -1.00011223e+00
  -1.46908752e-01  6.60814106e-01 -4.20266504e-01  6.76019878e-01
   1.86139629e-01  1.24468429e-01  4.05939033e-01  4.42057174e-01
   2.58217295e-01  9.60067650e-02  3.01322750e-01]
 [ 1.35275719e-01 -1.94171914e-01  2.82530217e-01 -6.00022427e-01
   3.13627320e-01 -9.28272169e-01 -2.49367929e-01 -9.68657037e-02
   1.78772833e-01  2.04746620e-01 -1.68251695e-01  7.03600670e-01
   3.78347812e-01 -2.72128055e-01 -4.09154474e-01 -6.09260063e-01
  -2.12459641e-01  4.76874016e-01 -2.79879683e-01  6.28333603e-01
   2.99335610e-01 -2.84882850e-01  3.16804784e-01  5.00485892e-01
   3.25526777e-01  4.21859782e-01  3.40706186e-01]
 [ 3.74857707e-02 -2.68018437e-01  3.43222567e-01 -5.07288950e-01
   5.41024364e-01 -4.91037439e-01  1.75077619e-01 -5.30875797e-01
   3.81190721e-01  3.41926638e-01  3.74910885e-03  7.61932937e-01
   3.17407011e-02 -1.86844326e-01 -5.11984966e-01 -4.49943684e-01
  -4.32676685e-01  5.98314452e-01 -2.30326924e-01  5.79323012e-01
   3.01164229e-01 -1.04954022e-01  3.46711938e-01  5.94781337e-01
   2.03765447e-01  6.34102090e-01  4.99344234e-01]
 [-1.17099371e-02 -3.62301756e-01  4.86364156e-01 -4.66654514e-01
   4.68389538e-01 -5.36706085e-01 -4.61145820e-01 -2.76317999e-01
   3.94281517e-01  3.39631209e-01  1.46062090e-01  7.15310558e-01
  -2.67185275e-01 -4.79394229e-01 -4.08239625e-01 -4.37278384e-01
  -4.30080444e-01  6.66366448e-01 -5.47193275e-01  5.58698728e-01
   2.23635719e-01  1.10020984e-01  4.64835811e-01  7.25881435e-01
   1.62227789e-01  5.18615687e-01  5.37365826e-01]
 [ 2.43287127e-01 -3.63855291e-01  2.84755491e-01 -4.88176646e-01
   4.96006426e-01 -4.38912021e-01 -2.49458384e-01  1.02938928e-03
   2.26388365e-01  2.21175132e-01  1.81407088e-01  6.99944930e-01
   5.55745950e-02 -4.72422751e-01 -4.10515127e-01 -2.93962868e-01
  -2.02372979e-01  6.34147472e-01 -2.62168327e-01  6.06023944e-01
   2.15084895e-01 -1.00293207e-01  3.55297996e-01  1.93711169e-01
   4.33871982e-01  4.22643447e-01  5.48813064e-01]
 [ 9.72453367e-02 -2.49157557e-01  2.30908130e-01 -3.66172047e-01
   4.78138055e-01 -4.42764475e-01 -4.83350696e-02 -2.37879409e-01
   1.24163058e-01  1.25081247e-01  1.17244636e-01  6.62114241e-01
   1.82705952e-04 -3.80593363e-01 -4.70018426e-01 -8.27541856e-01
  -2.00366790e-01  6.08177388e-01 -5.57459094e-01  6.55793389e-01
   1.85755712e-01  1.85033932e-03  4.77228023e-01  7.10975619e-01
   3.26254499e-01  1.73524218e-01  4.93593191e-01]]================= config34 =================
2022年 02月 19日 星期六 22:54:08 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (186725) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (96783) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36 ]
upper = 
[5452.49989145 5493.71915795 5375.60056363 ... 5443.26288622 5466.76438238
 5493.62125568]
upper.argmax() = 5164
all predict_target = 
[3040.77518525 2992.83468468 3269.08979995 ... 3132.21109535 3071.64371422
 3008.94257995]
upper.argmax() = 5164, sortnumber[0] = 5164
x_max = [5.11000956e+01 6.36187310e-02 9.58183982e-01 2.34095252e+02
 3.97760892e+00 4.81041356e+00 5.03788103e+00 5.18251667e+02
 1.08477804e+02 9.38332344e+01 7.69851844e+00 2.13287191e+09
 6.21366344e-01 3.55369250e-02 3.27531372e+01 5.31909969e-01
 3.42651650e-02 2.06785513e+09 1.26233200e+09 7.15003012e+01
 9.66004829e-01 6.82517862e+02 9.70692494e-01 3.81160471e+01
 3.92295556e+00 3.30146103e+02 3.90710216e+00]
black_box_function中schafferRun(i) 中的i为[51.10009557308883, 0.06361873104947346, 0.9581839823043568, 234.09525184673163, 3.9776089216842907, 4.810413564457066, 5.037881027315373, 518.2516670062296, 108.47780436393262, 93.83323442235773, 7.698518437899774, 2132871906.1587312, 0.6213663440333588, 0.03553692495883837, 32.753137223230965, 0.5319099694369527, 0.03426516496485266, 2067855132.4651947, 1262331998.6179252, 71.5003011941519, 0.9660048289590129, 682.5178619377137, 0.970692493894209, 38.1160471357966, 3.9229555608026527, 330.1461026347445, 3.9071021645702046]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.10009557308883
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06361873104947346
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9581839823043568
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 234.09525184673163
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9776089216842907
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.810413564457066
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.037881027315373
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 518.2516670062296
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 108.47780436393262
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 93.83323442235773
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.698518437899774
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2132871906.1587312
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6213663440333588
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.03553692495883837
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 32.753137223230965
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5319099694369527
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.03426516496485266
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2067855132.4651947
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1262331998.6179252
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.5003011941519
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9660048289590129
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 682.5178619377137
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.970692493894209
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.1160471357966
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.9229555608026527
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 330.1461026347445
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.9071021645702046
configNum = 34	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 34 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.10009557308883, 'spark.broadcast.checksum': 0.06361873104947346, 'spark.broadcast.compress': 0.9581839823043568, 'spark.default.parallelism': 234.09525184673163, 'spark.executor.cores': 3.9776089216842907, 'spark.executor.instances': 4.810413564457066, 'spark.executor.memory': 5.037881027315373, 'spark.executor.memoryOverhead': 518.2516670062296, 'spark.kryoserializer.buffer': 108.47780436393262, 'spark.kryoserializer.buffer.max': 93.83323442235773, 'spark.locality.wait': 7.698518437899774, 'spark.maxRemoteBlockSizeFetchToMem': 2132871906.1587312, 'spark.memory.fraction': 0.6213663440333588, 'spark.memory.offHeap.enabled': 0.03553692495883837, 'spark.memory.offHeap.size': 32.753137223230965, 'spark.memory.storageFraction': 0.5319099694369527, 'spark.rdd.compress': 0.03426516496485266, 'spark.reducer.maxBlocksInFlightPerAddress': 2067855132.4651947, 'spark.reducer.maxReqsInFlight': 1262331998.6179252, 'spark.reducer.maxSizeInFlight': 71.5003011941519, 'spark.scheduler.mode': 0.9660048289590129, 'spark.scheduler.revive.interval': 682.5178619377137, 'spark.shuffle.compress': 0.970692493894209, 'spark.shuffle.file.buffer': 38.1160471357966, 'spark.shuffle.io.numConnectionsPerPeer': 3.9229555608026527, 'spark.shuffle.sort.bypassMergeThreshold': 330.1461026347445, 'spark.storage.memoryMapThreshold': 3.9071021645702046} target = -215.284
x_probe = {'spark.broadcast.blockSize': 51.10009557308883, 'spark.broadcast.checksum': 0.06361873104947346, 'spark.broadcast.compress': 0.9581839823043568, 'spark.default.parallelism': 234.09525184673163, 'spark.executor.cores': 3.9776089216842907, 'spark.executor.instances': 4.810413564457066, 'spark.executor.memory': 5.037881027315373, 'spark.executor.memoryOverhead': 518.2516670062296, 'spark.kryoserializer.buffer': 108.47780436393262, 'spark.kryoserializer.buffer.max': 93.83323442235773, 'spark.locality.wait': 7.698518437899774, 'spark.maxRemoteBlockSizeFetchToMem': 2132871906.1587312, 'spark.memory.fraction': 0.6213663440333588, 'spark.memory.offHeap.enabled': 0.03553692495883837, 'spark.memory.offHeap.size': 32.753137223230965, 'spark.memory.storageFraction': 0.5319099694369527, 'spark.rdd.compress': 0.03426516496485266, 'spark.reducer.maxBlocksInFlightPerAddress': 2067855132.4651947, 'spark.reducer.maxReqsInFlight': 1262331998.6179252, 'spark.reducer.maxSizeInFlight': 71.5003011941519, 'spark.scheduler.mode': 0.9660048289590129, 'spark.scheduler.revive.interval': 682.5178619377137, 'spark.shuffle.compress': 0.970692493894209, 'spark.shuffle.file.buffer': 38.1160471357966, 'spark.shuffle.io.numConnectionsPerPeer': 3.9229555608026527, 'spark.shuffle.sort.bypassMergeThreshold': 330.1461026347445, 'spark.storage.memoryMapThreshold': 3.9071021645702046}
target = -215.284
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.95516779e+01 5.23527057e+01]
 [1.83269548e-02 9.86870156e-02]
 [9.12670643e-01 9.93587247e-01]
 [2.19238241e+02 2.43909798e+02]
 [3.81182014e+00 4.00000000e+00]
 [4.66688390e+00 5.00255419e+00]
 [4.79627106e+00 5.14949151e+00]
 [5.07068828e+02 5.49470016e+02]
 [1.01852366e+02 1.09954127e+02]
 [9.29924105e+01 1.01235591e+02]
 [7.45468485e+00 7.96155879e+00]
 [2.09403377e+09 2.14748314e+09]
 [6.13538552e-01 6.47035218e-01]
 [1.34378104e-02 9.40262557e-02]
 [1.39519914e+01 9.94953708e+01]
 [5.07451636e-01 5.40761382e-01]
 [1.99154732e-02 1.00201330e-01]
 [2.03386822e+09 2.12285554e+09]
 [1.21738854e+09 1.30865538e+09]
 [6.95837065e+01 7.20000000e+01]
 [9.01442651e-01 9.81809066e-01]
 [6.68746210e+02 7.11344333e+02]
 [9.37747481e-01 1.00000000e+00]
 [3.67740074e+01 3.94289785e+01]
 [3.82134942e+00 4.16458876e+00]
 [3.21615704e+02 3.38167178e+02]
 [3.72989845e+00 3.97225069e+00]]
before probe, param.shape = (34, 27)
before probe, target = (34,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]
 [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
  3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
  1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
  6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
  9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
  9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
  3.82539761e+00 3.20559926e+02 3.73667538e+00]
 [5.08552424e+01 7.02536082e-02 9.37190526e-01 2.16065724e+02
  3.78571231e+00 4.58263516e+00 4.90417382e+00 5.40473863e+02
  1.06000729e+02 9.45934004e+01 7.29261524e+00 2.11861009e+09
  6.50409634e-01 7.05382486e-02 6.53785093e+01 5.19348490e-01
  7.18737172e-02 2.06109913e+09 1.31135719e+09 7.10883205e+01
  9.59364859e-01 6.71001026e+02 9.39988703e-01 3.82567810e+01
  3.88285161e+00 3.32869014e+02 3.76159792e+00]
 [5.03899352e+01 5.28949923e-02 9.54216820e-01 2.23762517e+02
  3.96158473e+00 4.89749031e+00 5.16063910e+00 4.99578845e+02
  1.10077719e+02 9.65370568e+01 7.47826001e+00 2.12910966e+09
  6.30857433e-01 9.41835015e-02 4.12132627e+01 5.26323793e-01
  1.08195665e-02 2.09275859e+09 1.32125038e+09 7.05481352e+01
  9.59796014e-01 6.84301683e+02 9.48692336e-01 3.88522332e+01
  3.77891863e+00 3.40886461e+02 3.86198691e+00]
 [5.01558507e+01 3.07324334e-02 9.94372965e-01 2.27135137e+02
  3.90540783e+00 4.86460406e+00 4.77621000e+00 5.23564798e+02
  1.10341387e+02 9.65045337e+01 7.63186196e+00 2.12071782e+09
  6.13994939e-01 1.30728776e-02 6.55934995e+01 5.26878315e-01
  1.15393622e-02 2.11049971e+09 1.25798811e+09 7.03208183e+01
  9.41516192e-01 7.00193015e+02 9.83068956e-01 3.96800975e+01
  3.74346294e+00 3.36523966e+02 3.88604765e+00]
 [5.13691857e+01 3.03672541e-02 9.37814792e-01 2.25348820e+02
  3.92676716e+00 4.93502611e+00 4.90411917e+00 5.49698123e+02
  1.06959775e+02 9.48261703e+01 7.67001070e+00 2.11795207e+09
  6.32201910e-01 1.50057476e-02 6.50587548e+01 5.33153057e-01
  7.46701972e-02 2.10210024e+09 1.31489326e+09 7.08424278e+01
  9.39500062e-01 6.84646218e+02 9.51191066e-01 3.63195754e+01
  3.97533285e+00 3.32898617e+02 3.89329167e+00]
 [5.06742851e+01 5.73284951e-02 9.22708752e-01 2.35475088e+02
  3.91294748e+00 4.93225193e+00 5.02564511e+00 5.27186712e+02
  1.04900808e+02 9.34646491e+01 7.60075856e+00 2.11114270e+09
  6.29077238e-01 4.04658105e-02 5.10754327e+01 5.09791521e-01
  7.52264037e-02 2.09532985e+09 1.25593854e+09 7.13909770e+01
  9.32584770e-01 6.92196850e+02 9.86675360e-01 3.95859710e+01
  3.88347277e+00 3.23488146e+02 3.85834755e+00]
 [5.11000956e+01 6.36187310e-02 9.58183982e-01 2.34095252e+02
  3.97760892e+00 4.81041356e+00 5.03788103e+00 5.18251667e+02
  1.08477804e+02 9.38332344e+01 7.69851844e+00 2.13287191e+09
  6.21366344e-01 3.55369250e-02 3.27531372e+01 5.31909969e-01
  3.42651650e-02 2.06785513e+09 1.26233200e+09 7.15003012e+01
  9.66004829e-01 6.82517862e+02 9.70692494e-01 3.81160471e+01
  3.92295556e+00 3.30146103e+02 3.90710216e+00]]
标准化后的train_x = 
[[ 1.62532016e-01 -4.93459106e-01  5.02426746e-01 -5.36119940e-01
   5.80120943e-01 -3.33824472e-01 -9.13029271e-02 -1.68626879e-01
   2.72841771e-01  2.32365559e-01  4.87955627e-01  3.92291236e-01
  -3.38919436e-01 -5.21355599e-01 -4.07426175e-01 -3.61307325e-01
  -4.67570569e-01  4.22828196e-01 -5.20247485e-01  2.39842158e-01
   4.68255844e-01 -2.71529632e-01  5.16917476e-01 -2.96620515e-02
   4.57675864e-01  4.74170261e-01  7.07809102e-01]
 [-6.90321318e-01 -4.93459106e-01 -3.10902819e+00  1.70927757e+00
  -2.03260277e+00  3.87178454e+00  1.58854844e+00 -1.60978257e+00
  -1.13634610e+00  3.75596904e-01  4.87955627e-01 -2.39616321e+00
  -1.59814456e+00  3.13117195e+00  5.68753152e-01 -1.29825349e-01
   3.18707828e+00 -3.24489169e+00  7.84573210e-01 -7.66649583e-01
  -3.82995816e+00  4.16257854e+00 -2.96181427e+00  1.57236839e+00
  -7.29060058e-01 -4.40751497e+00 -8.88562517e-01]
 [ 2.50787868e+00  3.82155069e+00 -3.10902819e+00  1.86791978e+00
  -3.33896463e+00  1.06804520e+00 -3.45100566e+00  2.91802748e+00
  -3.25012791e+00  1.73629468e+00 -3.27141022e+00 -3.23276969e-01
   9.20305687e-01  3.13117195e+00 -3.21419186e-01  2.41647638e+00
   3.18707828e+00 -7.96811712e-01 -1.46353932e+00 -3.14563006e+00
   4.68255844e-01  2.22674375e-01 -2.96181427e+00 -3.07351988e+00
  -3.10253190e+00  8.22862063e-01 -8.88562517e-01]
 [ 1.62532016e-01 -4.93459106e-01  5.02426746e-01 -5.11713445e-01
   5.80120943e-01 -3.33824472e-01 -9.13029271e-02 -2.00891559e-01
   3.73498047e-01  8.91342143e-02  4.87955627e-01  4.56438004e-01
  -5.18808311e-01 -5.21355599e-01 -3.94525127e-01 -5.92789741e-01
  -4.67570569e-01  4.94447828e-01 -3.27988758e-01  3.31341408e-01
   4.68255844e-01 -2.85257521e-01  5.16917476e-01  2.90744036e-01
   4.57675864e-01  5.27815154e-01  7.07809102e-01]
 [ 1.62532016e-01 -4.93459106e-01  5.02426746e-01 -5.72729682e-01
   5.80120943e-01 -3.33824472e-01 -9.13029271e-02 -1.79381772e-01
   5.24482462e-01 -2.68944148e-01  4.87955627e-01  4.82159588e-01
  -5.18808311e-01 -5.21355599e-01 -4.76231766e-01 -5.92789741e-01
  -4.67570569e-01  6.07589681e-01 -4.50832990e-01  4.22840657e-01
   4.68255844e-01 -2.71529632e-01  5.16917476e-01  1.30540992e-01
   4.57675864e-01  7.69217171e-01  7.07809102e-01]
 [ 1.62532016e-01 -4.93459106e-01  5.02426746e-01 -7.92388134e-01
   5.80120943e-01 -3.33824472e-01 -9.13029271e-02 -4.69763890e-01
   1.07809198e+00  3.03981231e-01  1.42779709e+00  8.46041956e-01
  -8.78587647e-01 -5.21355599e-01 -4.76231766e-01 -1.05575325e+00
  -4.67570569e-01  8.02397482e-01 -1.32092162e+00  6.97338405e-01
   4.68255844e-01 -7.93189418e-01  5.16917476e-01  1.30540992e-01
   1.64441179e+00  8.76506956e-01  7.07809102e-01]
 [-5.06813179e-02 -4.93459106e-01  5.02426746e-01 -5.60526435e-01
   5.80120943e-01 -3.33824472e-01 -9.13029271e-02 -1.47117093e-01
   5.24482462e-01  3.03981231e-01  4.87955627e-01  4.85441855e-01
  -3.38919179e-01 -5.21355599e-01 -4.28927922e-01 -5.92789741e-01
  -4.67570569e-01  5.09581505e-01 -4.68165502e-01  4.22840657e-01
   4.68255844e-01 -2.98985411e-01  5.16917476e-01 -2.96620515e-02
   4.57675864e-01  3.93702922e-01  7.07809102e-01]
 [ 1.62532016e-01 -4.93459106e-01  5.02426746e-01 -4.14087467e-01
   5.80120943e-01 -3.33824472e-01 -9.13029271e-02 -3.08440491e-01
   7.15292175e-02  2.32365559e-01  4.87955627e-01 -1.57477287e-02
   2.08590847e-02 -5.21355599e-01 -3.38620584e-01 -5.92789741e-01
  -4.67570569e-01  3.90483302e-01 -4.36087845e-01 -1.26154839e-01
   4.68255844e-01 -1.47978631e-01  5.16917476e-01 -2.96620515e-02
   4.57675864e-01  1.25478458e-01  7.07809102e-01]
 [-5.06813179e-02 -4.93459106e-01  5.02426746e-01  1.35058663e-01
  -7.26240914e-01  1.06804520e+00 -9.13029271e-02  4.64709853e-02
  -4.31752165e-01 -4.83791165e-01  4.87955627e-01 -4.40502271e-01
   3.80637348e-01 -5.21355599e-01 -3.38620584e-01  2.41647582e+00
  -4.67570569e-01 -4.76376659e-01  1.29089343e-01 -9.49648082e-01
   4.68255844e-01 -2.30345965e-01  5.16917476e-01 -2.96620515e-02
   4.57675864e-01 -8.93774503e-01 -8.88562517e-01]
 [-3.03566799e+00 -4.93459106e-01 -3.10902819e+00  2.80756983e+00
  -3.33896463e+00  1.06804520e+00 -9.13029271e-02  9.28372230e-01
  -7.84049133e-01 -3.20518672e+00 -3.27141022e+00 -9.45654025e-02
   2.17953081e+00  3.13117195e+00  3.51019218e+00 -3.61307325e-01
   3.18707828e+00 -2.55749465e+00  2.00098509e+00 -1.26154839e-01
   4.68255844e-01  2.94079642e+00  5.16917476e-01 -8.30677270e-01
  -1.91579598e+00 -1.69568452e-01 -4.08130576e+00]
 [-1.54317465e+00 -4.93459106e-01  5.02426746e-01  2.18520421e+00
  -7.26240914e-01  1.06804520e+00  3.26839980e+00  1.95008709e+00
  -3.30045604e+00  2.32365559e-01 -1.39172730e+00 -3.29791586e+00
   1.99964151e+00 -5.21355599e-01  3.48439008e+00  1.72203045e+00
  -4.67570569e-01 -1.57011512e+00  1.52711422e+00 -2.50513532e+00
   4.68255844e-01 -1.08147509e+00 -2.96181427e+00 -2.75311380e+00
  -3.10253190e+00 -7.06017379e-01 -8.88562517e-01]
 [-2.39602799e+00  3.82155069e+00  5.02426746e-01  2.78316333e+00
   5.80120943e-01 -1.73569414e+00 -1.77115429e+00  3.30520363e+00
  -3.31095888e-01 -2.48902999e+00 -1.39172730e+00 -2.84989962e+00
   3.25886663e+00 -5.21355599e-01  2.07387546e+00  1.72203045e+00
  -4.67570569e-01 -2.20460827e+00  2.42834346e+00 -3.14563006e+00
  -3.82995816e+00 -3.12713300e-01  5.16917476e-01 -2.75311380e+00
  -7.29060058e-01  6.35104939e-01 -2.48493414e+00]
 [-1.83949164e+00  9.45501529e-01 -9.65306672e-01  9.31296395e-01
  -1.02534402e+00  1.15024717e+00  9.84376244e-01  1.19638588e+00
  -1.84737936e+00 -1.75966046e+00  6.64215716e-02  6.91585685e-01
  -2.26400738e-01  3.71503748e-01 -3.39338363e-01  2.73392540e+00
  -3.07517572e-01 -1.31875284e+00  3.27712489e+00 -2.74434496e-01
  -1.18060597e+00 -1.69203896e+00 -1.74297600e+00 -6.15214974e-01
  -1.38055797e+00 -2.27476774e+00 -1.28659891e+00]
 [ 1.12687112e+00 -3.88119944e-01  2.06389910e-01 -2.71172071e-01
  -1.05883902e-01  1.45823315e+00  2.20243855e-01 -2.70735562e-01
   9.32631724e-02 -1.28205850e+00  1.46434920e+00 -6.12879764e-01
   4.54838228e-01  1.96999876e-01  2.85051379e-01 -1.51844480e-02
  -2.36890777e-01  1.61649821e-01  7.36727113e-02  2.27217427e-01
  -1.15705280e-01  8.75963253e-01 -1.76774546e-01  8.28728242e-01
   7.03654745e-01 -1.22182701e+00  9.33056064e-02]
 [ 1.19358187e+00  4.69372876e-01  1.72282408e-01 -1.82856719e-01
  -9.64406195e-02  4.78310978e-01  1.22222529e+00 -2.22765373e-01
  -2.10859542e-01 -1.46494619e+00  7.48396068e-01 -8.09262886e-01
   1.80298177e+00  1.80498826e-01 -2.19937489e-01 -7.77802004e-01
  -3.06955956e-01  4.58622020e-01 -4.31696615e-01 -3.48405399e-01
   8.14485334e-02 -2.30026040e-01  4.48957694e-02  1.02676596e+00
   1.20217492e+00 -1.63240625e-01  1.93995731e-01]
 [-1.18045089e-01 -4.37504575e-01  7.21069503e-02 -1.85916520e-01
   1.52583614e-01  8.55201238e-01 -5.78502725e-01 -5.07488392e-01
   5.99514335e-01  5.95455301e-01 -1.13072166e-01 -5.11568149e-01
   2.49463774e-01 -1.07328486e-01  4.47540591e-01  8.75712624e-02
  -1.94811075e-01 -2.50319320e-01  7.85066013e-01  4.25051345e-01
   2.80718924e-01  4.30698454e-01  1.34008584e-01  3.14089385e-02
   4.40362200e-01 -5.35046061e-01  3.96337519e-02]
 [-3.83652223e-01 -2.27546890e-01  3.37055730e-01 -5.22311489e-01
   2.06539702e-01  4.27540155e-01  7.69613967e-01 -9.62765953e-01
   3.16753520e-01  2.83794417e-01  6.78521690e-02  1.44284823e-01
  -7.61060299e-01 -1.49447771e-01  2.40950260e-02  1.02346020e-01
  -8.97126852e-02  6.95881191e-01  9.77601885e-01  3.69620574e-01
   1.90027816e-01 -9.74612314e-01  3.66908543e-01  1.66501032e-01
   3.75185242e-01 -3.66773237e-01 -7.55218160e-02]
 [ 1.35412870e+00  4.22238024e-02  3.69540922e-01 -2.12036353e-01
   3.85392426e-01 -9.81898490e-01  1.97111525e-02 -1.44979246e+00
   4.43566649e-01  1.26335712e+00 -5.54325471e-01  1.10731216e-01
  -5.95955699e-01 -1.24305757e-01 -8.34837784e-02 -7.20935582e-01
   4.38917398e-02  6.69925178e-01  2.10199602e-01 -1.18597946e-01
   3.88638228e-01 -2.76595936e-01  2.26727359e-01 -3.78945801e-01
  -6.36097469e-02  1.50694835e-01  2.64910877e-01]
 [-2.94163758e-01  4.74254314e-02  1.32020379e-01 -3.23943747e-01
   2.47794215e-01  2.84739048e-01 -9.64288292e-01  3.50881985e-01
   8.60441932e-01  6.74274282e-01  8.88328544e-01  5.40922172e-01
  -1.30223220e+00 -7.96461325e-02 -2.82174630e-02 -4.09756703e-01
  -2.05552956e-01  9.35868729e-02  2.40004194e-02  2.18094885e-02
   2.69765753e-01 -1.96179039e-02  2.17590075e-01  8.83666658e-01
  -2.67779281e-01  3.31390157e-01  8.93619154e-02]
 [ 5.46858927e-01  3.19074717e-02  1.86033503e-01 -4.61300916e-01
   1.91907172e-01 -2.35001251e-01 -6.50631784e-01 -4.36619994e-01
   9.65680789e-01  9.36168595e-01 -8.10184495e-02 -2.82426704e-01
  -3.58174368e-01 -3.12605701e-01 -4.71193705e-01 -3.96949760e-01
  -1.84078488e-01  2.86862195e-01 -4.00160967e-01  6.73091645e-01
  -1.20781023e-02  2.53610683e-01  4.26422177e-02  3.28919040e-01
   1.61109151e-01 -1.50609083e-01 -7.54464787e-03]
 [ 3.20704396e-01 -1.92197497e-02  2.60195677e-01 -4.64360012e-01
   3.19743681e-01 -4.60422311e-01  3.54129232e-01 -6.46280094e-01
   3.83295189e-01  1.41373842e+00  8.89907466e-01 -2.22108861e-01
  -5.07905543e-01  1.90938600e-02 -6.21698211e-01  1.04711994e+00
  -1.70892453e-01  2.36655490e-01 -9.44739947e-02  3.33733872e-01
   9.64887914e-02 -1.00990109e-01  2.04871666e-01  2.22786045e-01
   1.35875676e-02  1.34658777e-01  3.68906843e-01]
 [-1.96542504e-01 -1.82581427e-01  1.11329584e-01 -4.97965477e-01
   3.39852487e-01 -1.91812124e-01  1.56883984e-01 -1.88072555e-01
   6.10220089e-01  2.56077571e-01  4.05529630e-01  4.08766921e-01
  -7.11215708e-01 -3.76661497e-01 -1.00574275e-01 -2.37130472e-01
  -2.93511575e-01  7.79891669e-01 -4.83048436e-01  6.72407374e-01
   1.80359022e-01 -3.85015734e-01  3.25656641e-01  7.06617085e-01
   4.05467512e-01  3.47567616e-01  3.77232794e-01]
 [ 6.12254566e-01 -3.02421464e-01  2.73898695e-01 -7.45648142e-01
   4.16429796e-01 -1.06853587e+00  5.93134718e-02 -6.35087875e-01
   8.62080042e-01  6.25734365e-01 -1.59635623e-01  7.29862150e-01
  -1.04837561e+00 -3.24128455e-01 -3.06264486e-01 -4.23517586e-01
  -4.05764541e-01  3.49749751e-01 -5.55390493e-01  4.26284549e-01
   2.23225767e-01 -1.20927347e-01  3.63822201e-01 -2.50788510e-01
  -2.22169176e-01  5.24895905e-01  3.94522497e-01]
 [ 4.49904024e-01 -1.46504349e-01  2.56983067e-01 -5.05889250e-01
   4.29632531e-01 -3.50621837e-01  3.07145115e-01 -1.03657163e-01
   6.24437044e-01 -5.59725294e-01 -2.48837254e-02  5.65145133e-01
  -4.74953371e-01 -3.87354964e-01 -6.40985061e-01 -1.73607863e-01
  -2.87196265e-01  9.25396726e-02 -6.62117460e-01  4.38811950e-01
   2.27371681e-01 -1.97979944e-01  3.98083898e-01  1.63044040e-01
   6.88533236e-01  5.36146060e-01  6.49140864e-01]
 [-4.88264214e-02 -3.28538685e-01  3.43177142e-01 -4.49845903e-01
   4.61787146e-01 -6.10404122e-01  3.06992868e-01 -5.02525810e-01
   5.79360890e-01 -1.74114919e-01  2.26727731e-02  4.46520405e-01
  -3.13434949e-01 -4.23726184e-01 -2.18861821e-01  2.09977880e-01
  -3.13935596e-01  2.10603115e-01 -9.79539762e-01  4.33821847e-01
   2.16339376e-01 -5.40371984e-01  2.35474925e-01  1.34841960e-01
   2.16346980e-01  6.11522553e-01  5.12920333e-01]
 [ 5.69150397e-01 -1.50140376e-01  3.73350676e-01 -6.54010786e-01
   5.04634699e-01 -7.67776734e-01 -3.19259189e-01  8.64844412e-02
   3.51147815e-01 -2.67930199e-02  1.33889138e-01 -5.31586732e-02
  -8.84659870e-01 -3.02651084e-01 -4.17804325e-01 -5.99634223e-01
  -2.25624772e-01  5.32202769e-01 -3.67236274e-01  4.50094542e-01
   2.20362238e-01 -2.69765937e-01  4.13364495e-01  1.00401036e-01
   4.35174379e-01  7.12111499e-01  5.82585358e-01]
 [ 1.52338675e-01 -2.41000892e-01  3.33154044e-01 -4.07082562e-01
   4.95211874e-01 -5.65526825e-01 -1.36858335e-01 -2.19503740e-01
   1.67316068e-01  3.83761133e-01  2.13636411e-01  7.89811296e-01
   2.60199265e-02 -3.25097869e-01 -4.34416540e-01 -4.97731015e-01
  -2.48078200e-01  5.34265501e-01 -5.12068386e-01  6.51521473e-01
   2.17351291e-01 -2.38061485e-02  4.43238580e-01  4.67206555e-01
   4.49332027e-01  3.37146209e-01  4.70068772e-01]
 [ 3.36064518e-01 -1.77530080e-01  3.95700219e-01 -3.68748593e-01
   3.89935442e-01 -4.54211541e-01  2.13766763e-01 -1.18766760e-01
   1.55083822e-02  3.98867083e-01  5.68871944e-02  6.06704854e-01
  -4.10213225e-03 -4.10135029e-01 -6.39754467e-01 -1.00399568e+00
  -1.38478956e-01  6.53317149e-01 -4.09242081e-01  6.62011415e-01
   1.78879836e-01  1.30162067e-01  3.98392601e-01  4.32975229e-01
   2.50468941e-01  8.68521564e-02  2.87445152e-01]
 [ 1.31667766e-01 -1.90314098e-01  2.75593160e-01 -5.96334125e-01
   3.00183675e-01 -9.18915586e-01 -2.52276660e-01 -8.82462762e-02
   1.72222164e-01  2.03246652e-01 -1.76873898e-01  6.84668105e-01
   3.88006647e-01 -2.63712703e-01 -3.97197754e-01 -6.07870576e-01
  -2.04897371e-01  4.67301140e-01 -2.67319110e-01  6.13920419e-01
   2.93597310e-01 -2.85243435e-01  3.08154272e-01  4.92084182e-01
   3.18651657e-01  4.17012011e-01  3.27230790e-01]
 [ 3.24580706e-02 -2.65216696e-01  3.37082854e-01 -5.02408264e-01
   5.29936705e-01 -4.77529704e-01  1.78546889e-01 -5.28067828e-01
   3.77409523e-01  3.42442918e-01 -2.39725102e-03  7.43351095e-01
   3.62834808e-02 -1.77347766e-01 -5.01116759e-01 -4.46404879e-01
  -4.28028853e-01  5.90112133e-01 -2.17224131e-01  5.64493867e-01
   2.95450508e-01 -1.02653496e-01  3.38431877e-01  5.87477427e-01
   1.95310666e-01  6.32059549e-01  4.87488918e-01]
 [-1.74518770e-02 -3.60848355e-01  4.82104962e-01 -4.61251344e-01
   4.56549334e-01 -5.23631932e-01 -4.67236866e-01 -2.70101465e-01
   3.90679427e-01  3.40113752e-01  1.41964236e-01  6.96448398e-01
  -2.67054757e-01 -4.73606554e-01 -3.96273221e-01 -4.33568713e-01
  -4.25398252e-01  6.58932154e-01 -5.37557719e-01  5.43694541e-01
   2.16879920e-01  1.15500948e-01  4.58018917e-01  7.20103808e-01
   1.53234122e-01  5.15046749e-01  5.25898803e-01]
 [ 2.41247320e-01 -3.62424107e-01  2.77847668e-01 -4.83050211e-01
   4.84452351e-01 -4.24909402e-01 -2.52368474e-01  1.09596465e-02
   2.20489170e-01  2.19916627e-01  1.77818003e-01  6.80990384e-01
   6.04691722e-02 -4.66546693e-01 -3.98572810e-01 -2.88319745e-01
  -1.94677218e-01  6.26349559e-01 -2.49413951e-01  5.91421415e-01
   2.08214163e-01 -9.79237485e-02  3.47124289e-01  1.81737949e-01
   4.28402471e-01  4.17806033e-01  5.37462946e-01]
 [ 9.30852459e-02 -2.46086088e-01  2.23292889e-01 -3.59476855e-01
   4.66398851e-01 -4.28798432e-01 -4.82229472e-02 -2.31148176e-01
   1.16865221e-01  1.22410371e-01  1.12731972e-01  6.42932237e-01
   4.25967747e-03 -3.73553112e-01 -4.58705982e-01 -8.29097180e-01
  -1.92644479e-01  6.00086381e-01 -5.47935869e-01  6.41613260e-01
   1.78490759e-01  5.73048093e-03  4.70564628e-01  7.05024457e-01
   3.19388820e-01  1.65394167e-01  4.81679143e-01]
 [ 1.83873726e-01 -2.18943658e-01  3.51410083e-01 -3.76315343e-01
   5.50870092e-01 -5.99599946e-01 -2.76684317e-02 -3.27243626e-01
   2.96888775e-01  1.48806858e-01  2.04610755e-01  7.64378585e-01
  -1.34451065e-01 -3.91556002e-01 -5.37498255e-01 -3.17094975e-01
  -3.42343423e-01  4.93508507e-01 -5.15562076e-01  6.51616339e-01
   3.22137323e-01 -1.27141590e-01  4.14964524e-01  4.69538184e-01
   3.66244461e-01  3.43976859e-01  5.59509634e-01]]================= config35 =================
2022年 02月 19日 星期六 22:57:52 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (193177) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (112222) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284]
upper = 
[5386.89362898 5320.41308714 5144.80879509 ... 5443.52159311 5441.68153613
 5405.05578458]
upper.argmax() = 6848
all predict_target = 
[3036.49296635 3182.01999992 3600.32435484 ... 2904.76889071 2887.41814713
 2960.19624672]
upper.argmax() = 6848, sortnumber[0] = 6848
x_max = [5.04577765e+01 6.53271224e-02 9.48411184e-01 2.40905088e+02
 3.93254668e+00 4.72280744e+00 4.95012818e+00 5.35494304e+02
 1.05567287e+02 9.75685113e+01 7.61282045e+00 2.12205402e+09
 6.22126963e-01 5.28136350e-02 4.98977984e+01 5.14226311e-01
 7.65489565e-02 2.06567010e+09 1.27052631e+09 7.17550971e+01
 9.35314096e-01 6.78825743e+02 9.72001174e-01 3.84778279e+01
 3.91323807e+00 3.28759860e+02 3.84795038e+00]
black_box_function中schafferRun(i) 中的i为[50.4577764977815, 0.06532712242046176, 0.9484111838710348, 240.90508814183224, 3.932546681394151, 4.722807444236125, 4.950128183731602, 535.4943036830144, 105.56728744800726, 97.5685113491638, 7.6128204491920926, 2122054024.2811797, 0.6221269633324433, 0.05281363495281461, 49.89779844020534, 0.5142263107124344, 0.07654895648424276, 2065670099.2044766, 1270526314.128922, 71.75509714471877, 0.9353140958094771, 678.8257428218637, 0.9720011735408578, 38.47782791992727, 3.913238070402532, 328.75986049725475, 3.8479503793012966]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.4577764977815
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06532712242046176
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9484111838710348
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 240.90508814183224
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.932546681394151
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.722807444236125
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.950128183731602
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 535.4943036830144
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 105.56728744800726
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 97.5685113491638
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.6128204491920926
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2122054024.2811797
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6221269633324433
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.05281363495281461
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 49.89779844020534
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5142263107124344
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.07654895648424276
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2065670099.2044766
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1270526314.128922
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.75509714471877
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9353140958094771
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 678.8257428218637
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9720011735408578
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.47782791992727
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.913238070402532
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 328.75986049725475
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8479503793012966
configNum = 35	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 35 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.4577764977815, 'spark.broadcast.checksum': 0.06532712242046176, 'spark.broadcast.compress': 0.9484111838710348, 'spark.default.parallelism': 240.90508814183224, 'spark.executor.cores': 3.932546681394151, 'spark.executor.instances': 4.722807444236125, 'spark.executor.memory': 4.950128183731602, 'spark.executor.memoryOverhead': 535.4943036830144, 'spark.kryoserializer.buffer': 105.56728744800726, 'spark.kryoserializer.buffer.max': 97.5685113491638, 'spark.locality.wait': 7.6128204491920926, 'spark.maxRemoteBlockSizeFetchToMem': 2122054024.2811797, 'spark.memory.fraction': 0.6221269633324433, 'spark.memory.offHeap.enabled': 0.05281363495281461, 'spark.memory.offHeap.size': 49.89779844020534, 'spark.memory.storageFraction': 0.5142263107124344, 'spark.rdd.compress': 0.07654895648424276, 'spark.reducer.maxBlocksInFlightPerAddress': 2065670099.2044766, 'spark.reducer.maxReqsInFlight': 1270526314.128922, 'spark.reducer.maxSizeInFlight': 71.75509714471877, 'spark.scheduler.mode': 0.9353140958094771, 'spark.scheduler.revive.interval': 678.8257428218637, 'spark.shuffle.compress': 0.9720011735408578, 'spark.shuffle.file.buffer': 38.47782791992727, 'spark.shuffle.io.numConnectionsPerPeer': 3.913238070402532, 'spark.shuffle.sort.bypassMergeThreshold': 328.75986049725475, 'spark.storage.memoryMapThreshold': 3.8479503793012966} target = -217.677
x_probe = {'spark.broadcast.blockSize': 50.4577764977815, 'spark.broadcast.checksum': 0.06532712242046176, 'spark.broadcast.compress': 0.9484111838710348, 'spark.default.parallelism': 240.90508814183224, 'spark.executor.cores': 3.932546681394151, 'spark.executor.instances': 4.722807444236125, 'spark.executor.memory': 4.950128183731602, 'spark.executor.memoryOverhead': 535.4943036830144, 'spark.kryoserializer.buffer': 105.56728744800726, 'spark.kryoserializer.buffer.max': 97.5685113491638, 'spark.locality.wait': 7.6128204491920926, 'spark.maxRemoteBlockSizeFetchToMem': 2122054024.2811797, 'spark.memory.fraction': 0.6221269633324433, 'spark.memory.offHeap.enabled': 0.05281363495281461, 'spark.memory.offHeap.size': 49.89779844020534, 'spark.memory.storageFraction': 0.5142263107124344, 'spark.rdd.compress': 0.07654895648424276, 'spark.reducer.maxBlocksInFlightPerAddress': 2065670099.2044766, 'spark.reducer.maxReqsInFlight': 1270526314.128922, 'spark.reducer.maxSizeInFlight': 71.75509714471877, 'spark.scheduler.mode': 0.9353140958094771, 'spark.scheduler.revive.interval': 678.8257428218637, 'spark.shuffle.compress': 0.9720011735408578, 'spark.shuffle.file.buffer': 38.47782791992727, 'spark.shuffle.io.numConnectionsPerPeer': 3.913238070402532, 'spark.shuffle.sort.bypassMergeThreshold': 328.75986049725475, 'spark.storage.memoryMapThreshold': 3.8479503793012966}
target = -217.677
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.96917293e+01 5.22126544e+01]
 [2.23449578e-02 9.46690125e-02]
 [9.16716474e-01 9.89541417e-01]
 [2.20471819e+02 2.42676221e+02]
 [3.82413847e+00 4.00000000e+00]
 [4.68366742e+00 4.98577068e+00]
 [4.81393209e+00 5.13183049e+00]
 [5.09188888e+02 5.47349957e+02]
 [1.02257454e+02 1.09549039e+02]
 [9.34045695e+01 1.00823432e+02]
 [7.48002854e+00 7.93621509e+00]
 [2.09837263e+09 2.14748314e+09]
 [6.15213385e-01 6.45360385e-01]
 [1.74672327e-02 8.99968334e-02]
 [1.82291604e+01 9.52182018e+01]
 [5.09117124e-01 5.39095895e-01]
 [2.39297660e-02 9.61870373e-02]
 [2.03831759e+09 2.11840617e+09]
 [1.22195189e+09 1.30409204e+09]
 [6.97752623e+01 7.20000000e+01]
 [9.05460972e-01 9.77790745e-01]
 [6.70876116e+02 7.09214427e+02]
 [9.41854751e-01 1.00000000e+00]
 [3.69067559e+01 3.92962299e+01]
 [3.83851138e+00 4.14742679e+00]
 [3.22443278e+02 3.37339604e+02]
 [3.74201606e+00 3.96013308e+00]]
before probe, param.shape = (35, 27)
before probe, target = (35,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]
 [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
  3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
  1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
  6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
  9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
  9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
  3.82539761e+00 3.20559926e+02 3.73667538e+00]
 [5.08552424e+01 7.02536082e-02 9.37190526e-01 2.16065724e+02
  3.78571231e+00 4.58263516e+00 4.90417382e+00 5.40473863e+02
  1.06000729e+02 9.45934004e+01 7.29261524e+00 2.11861009e+09
  6.50409634e-01 7.05382486e-02 6.53785093e+01 5.19348490e-01
  7.18737172e-02 2.06109913e+09 1.31135719e+09 7.10883205e+01
  9.59364859e-01 6.71001026e+02 9.39988703e-01 3.82567810e+01
  3.88285161e+00 3.32869014e+02 3.76159792e+00]
 [5.03899352e+01 5.28949923e-02 9.54216820e-01 2.23762517e+02
  3.96158473e+00 4.89749031e+00 5.16063910e+00 4.99578845e+02
  1.10077719e+02 9.65370568e+01 7.47826001e+00 2.12910966e+09
  6.30857433e-01 9.41835015e-02 4.12132627e+01 5.26323793e-01
  1.08195665e-02 2.09275859e+09 1.32125038e+09 7.05481352e+01
  9.59796014e-01 6.84301683e+02 9.48692336e-01 3.88522332e+01
  3.77891863e+00 3.40886461e+02 3.86198691e+00]
 [5.01558507e+01 3.07324334e-02 9.94372965e-01 2.27135137e+02
  3.90540783e+00 4.86460406e+00 4.77621000e+00 5.23564798e+02
  1.10341387e+02 9.65045337e+01 7.63186196e+00 2.12071782e+09
  6.13994939e-01 1.30728776e-02 6.55934995e+01 5.26878315e-01
  1.15393622e-02 2.11049971e+09 1.25798811e+09 7.03208183e+01
  9.41516192e-01 7.00193015e+02 9.83068956e-01 3.96800975e+01
  3.74346294e+00 3.36523966e+02 3.88604765e+00]
 [5.13691857e+01 3.03672541e-02 9.37814792e-01 2.25348820e+02
  3.92676716e+00 4.93502611e+00 4.90411917e+00 5.49698123e+02
  1.06959775e+02 9.48261703e+01 7.67001070e+00 2.11795207e+09
  6.32201910e-01 1.50057476e-02 6.50587548e+01 5.33153057e-01
  7.46701972e-02 2.10210024e+09 1.31489326e+09 7.08424278e+01
  9.39500062e-01 6.84646218e+02 9.51191066e-01 3.63195754e+01
  3.97533285e+00 3.32898617e+02 3.89329167e+00]
 [5.06742851e+01 5.73284951e-02 9.22708752e-01 2.35475088e+02
  3.91294748e+00 4.93225193e+00 5.02564511e+00 5.27186712e+02
  1.04900808e+02 9.34646491e+01 7.60075856e+00 2.11114270e+09
  6.29077238e-01 4.04658105e-02 5.10754327e+01 5.09791521e-01
  7.52264037e-02 2.09532985e+09 1.25593854e+09 7.13909770e+01
  9.32584770e-01 6.92196850e+02 9.86675360e-01 3.95859710e+01
  3.88347277e+00 3.23488146e+02 3.85834755e+00]
 [5.11000956e+01 6.36187310e-02 9.58183982e-01 2.34095252e+02
  3.97760892e+00 4.81041356e+00 5.03788103e+00 5.18251667e+02
  1.08477804e+02 9.38332344e+01 7.69851844e+00 2.13287191e+09
  6.21366344e-01 3.55369250e-02 3.27531372e+01 5.31909969e-01
  3.42651650e-02 2.06785513e+09 1.26233200e+09 7.15003012e+01
  9.66004829e-01 6.82517862e+02 9.70692494e-01 3.81160471e+01
  3.92295556e+00 3.30146103e+02 3.90710216e+00]
 [5.04577765e+01 6.53271224e-02 9.48411184e-01 2.40905088e+02
  3.93254668e+00 4.72280744e+00 4.95012818e+00 5.35494304e+02
  1.05567287e+02 9.75685113e+01 7.61282045e+00 2.12205402e+09
  6.22126963e-01 5.28136350e-02 4.98977984e+01 5.14226311e-01
  7.65489565e-02 2.06567010e+09 1.27052631e+09 7.17550971e+01
  9.35314096e-01 6.78825743e+02 9.72001174e-01 3.84778279e+01
  3.91323807e+00 3.28759860e+02 3.84795038e+00]]
标准化后的train_x = 
[[ 1.63539505e-01 -4.94214173e-01  4.99884976e-01 -5.34790669e-01
   5.72352034e-01 -3.15413553e-01 -8.75222490e-02 -1.66930169e-01
   2.72376954e-01  2.23137886e-01  4.91374845e-01  3.74967996e-01
  -3.40295632e-01 -5.18646974e-01 -3.98707094e-01 -3.42947988e-01
  -4.68716282e-01  4.13553262e-01 -5.12457490e-01  2.22336253e-01
   4.69335251e-01 -2.70216801e-01  5.11019724e-01 -4.52071143e-02
   4.53261040e-01  4.71565647e-01  7.02493224e-01]
 [-7.01737685e-01 -4.94214173e-01 -3.15907505e+00  1.74059518e+00
  -2.06939598e+00  3.92013352e+00  1.61610793e+00 -1.62870591e+00
  -1.15692225e+00  3.68101832e-01  4.91374845e-01 -2.43437975e+00
  -1.61763846e+00  3.18150684e+00  5.88694525e-01 -1.09837331e-01
   3.23742088e+00 -3.29526905e+00  8.07182635e-01 -7.92268302e-01
  -3.88937720e+00  4.22659534e+00 -3.00965849e+00  1.57378904e+00
  -7.48641998e-01 -4.47474244e+00 -9.12202582e-01]
 [ 2.54305178e+00  3.88099490e+00 -3.15907505e+00  1.90135614e+00
  -3.39026999e+00  1.09643547e+00 -3.49478261e+00  2.96388802e+00
  -3.30087105e+00  1.74525933e+00 -3.32203669e+00 -3.45961810e-01
   9.37047197e-01  3.18150684e+00 -3.11711357e-01  2.45437990e+00
   3.23742088e+00 -8.19754581e-01 -1.46646271e+00 -3.19042452e+00
   4.69335251e-01  2.30975884e-01 -3.00965849e+00 -3.12129980e+00
  -3.15244808e+00  8.24873367e-01 -9.12202582e-01]
 [ 1.63539505e-01 -4.94214173e-01  4.99884976e-01 -5.10058214e-01
   5.72352034e-01 -3.15413553e-01 -8.75222490e-02 -1.99656491e-01
   3.74469754e-01  7.81739389e-02  4.91374845e-01  4.39595402e-01
  -5.22772744e-01 -5.18646974e-01 -3.85657734e-01 -5.76059089e-01
  -4.68716282e-01  4.85975502e-01 -3.18015194e-01  3.14573031e-01
   4.69335251e-01 -2.84138820e-01  5.11019724e-01  2.78592116e-01
   4.53261040e-01  5.25920680e-01  7.02493224e-01]
 [ 1.63539505e-01 -4.94214173e-01  4.99884976e-01 -5.71889351e-01
   5.72352034e-01 -3.15413553e-01 -8.75222490e-02 -1.77838943e-01
   5.27608954e-01 -2.84235928e-01  4.91374845e-01  4.65509712e-01
  -5.22772744e-01 -5.18646974e-01 -4.68303684e-01 -5.76059089e-01
  -4.68716282e-01  6.00385283e-01 -4.42254623e-01  4.06809809e-01
   4.69335251e-01 -2.70216801e-01  5.11019724e-01  1.16692501e-01
   4.53261040e-01  7.70518333e-01  7.02493224e-01]
 [ 1.63539505e-01 -4.94214173e-01  4.99884976e-01 -7.94481445e-01
   5.72352034e-01 -3.15413553e-01 -8.75222490e-02 -4.72375846e-01
   1.08911935e+00  2.95619859e-01  1.44472773e+00  8.32118573e-01
  -8.87728578e-01 -5.18646974e-01 -4.68303684e-01 -1.04227996e+00
  -4.68716282e-01  7.97376205e-01 -1.32222524e+00  6.83520142e-01
   4.69335251e-01 -7.99253524e-01  5.11019724e-01  1.16692501e-01
   1.65516408e+00  8.79228401e-01  7.02493224e-01]
 [-5.27797923e-02 -4.94214173e-01  4.99884976e-01 -5.59523124e-01
   5.72352034e-01 -3.15413553e-01 -8.75222490e-02 -1.45112621e-01
   5.27608954e-01  2.95619859e-01  4.91374845e-01  4.68816573e-01
  -3.40295371e-01 -5.18646974e-01 -4.20456029e-01 -5.76059089e-01
  -4.68716282e-01  5.01278775e-01 -4.59783989e-01  4.06809809e-01
   4.69335251e-01 -2.98060839e-01  5.11019724e-01 -4.52071143e-02
   4.53261040e-01  3.90033096e-01  7.02493224e-01]
 [ 1.63539505e-01 -4.94214173e-01  4.99884976e-01 -4.11128394e-01
   5.72352034e-01 -3.15413553e-01 -8.75222490e-02 -3.08744233e-01
   6.81913540e-02  2.23137886e-01  4.91374845e-01 -3.61283187e-02
   2.46593748e-02 -5.18646974e-01 -3.29110504e-01 -5.76059089e-01
  -4.68716282e-01  3.80845894e-01 -4.27342011e-01 -1.46610858e-01
   4.69335251e-01 -1.44918630e-01  5.11019724e-01 -4.52071143e-02
   4.53261040e-01  1.18257926e-01  7.02493224e-01]
 [-5.27797923e-02 -4.94214173e-01  4.99884976e-01  1.45351842e-01
  -7.48521974e-01  1.09643547e+00 -8.75222490e-02  5.12453147e-02
  -4.42272646e-01 -5.01681848e-01  4.91374845e-01 -4.64065456e-01
   3.89614121e-01 -5.18646974e-01 -3.29110504e-01  2.45437934e+00
  -4.68716282e-01 -4.95728562e-01  1.44254146e-01 -9.76741858e-01
   4.69335251e-01 -2.28450744e-01  5.11019724e-01 -4.52071143e-02
   4.53261040e-01 -9.14487718e-01 -9.12202582e-01]
 [-3.08124996e+00 -4.94214173e-01 -3.15907505e+00  2.85355566e+00
  -3.39026999e+00  1.09643547e+00 -8.75222490e-02  9.45764797e-01
  -7.99597446e-01 -3.25599683e+00 -3.32203669e+00 -1.15536557e-01
   2.21439003e+00  3.18150684e+00  3.56394874e+00 -3.42947988e-01
   3.23742088e+00 -2.60016867e+00  2.03740985e+00 -1.46610858e-01
   4.69335251e-01  2.98753565e+00  5.11019724e-01 -8.54705189e-01
  -1.95054504e+00 -1.80694760e-01 -4.14159419e+00]
 [-1.56701488e+00 -4.94214173e-01  4.99884976e-01  2.22287806e+00
  -7.48521974e-01  1.09643547e+00  3.31973811e+00  1.98209834e+00
  -3.35191745e+00  2.23137886e-01 -1.41533092e+00 -3.34288904e+00
   2.03191248e+00 -5.18646974e-01  3.53785002e+00  1.75504792e+00
  -4.68716282e-01 -1.60172404e+00  1.55815702e+00 -2.54476708e+00
   4.69335251e-01 -1.09161592e+00 -3.00965849e+00 -2.79750057e+00
  -3.15244808e+00 -7.24245099e-01 -9.12202582e-01]
 [-2.43229207e+00  3.88099490e+00  4.99884976e-01  2.82882320e+00
   5.72352034e-01 -1.72726258e+00 -1.79115243e+00  3.35660389e+00
  -3.40179846e-01 -2.53117710e+00 -1.41533092e+00 -2.89151590e+00
   3.30925531e+00 -5.18646974e-01  2.11111993e+00  1.75504792e+00
  -4.68716282e-01 -2.24332766e+00  2.46962192e+00 -3.19042452e+00
  -3.88937720e+00 -3.11982858e-01  5.11019724e-01 -2.79750057e+00
  -7.48641998e-01  6.34630748e-01 -2.52689839e+00]
 [-1.86764843e+00  9.64821591e-01 -9.87155011e-01  9.52223705e-01
  -1.05094777e+00  1.17922260e+00  1.00338349e+00  1.21761318e+00
  -1.87810307e+00 -1.79298473e+00  6.37806987e-02  6.76504994e-01
  -2.26158017e-01  3.85854600e-01 -3.29836536e-01  2.77406246e+00
  -3.06408388e-01 -1.34754486e+00  3.32804334e+00 -2.96085721e-01
  -1.20273471e+00 -1.71081394e+00 -1.77612350e+00 -6.36961119e-01
  -1.40846640e+00 -2.31376229e+00 -1.31480790e+00]
 [ 1.14192652e+00 -3.87405410e-01  1.99954071e-01 -2.66304296e-01
  -1.21273521e-01  1.48940101e+00  2.28434575e-01 -2.70499822e-01
   9.02354865e-02 -1.30960545e+00  1.48180532e+00 -6.37734537e-01
   4.64882601e-01  2.09075327e-01  3.01731277e-01  5.61017167e-03
  -2.34786571e-01  1.49447983e-01  8.82081229e-02  2.09609761e-01
  -1.22845273e-01  8.93503103e-01 -1.91036821e-01  8.22273645e-01
   7.02383663e-01 -1.24688292e+00  8.09360597e-02]
 [ 1.20960908e+00  4.82050405e-01  1.65397919e-01 -1.76809451e-01
  -1.11725335e-01  5.02503165e-01  1.24459937e+00 -2.21843276e-01
  -2.18227538e-01 -1.49470544e+00  7.55559449e-01 -8.35589116e-01
   1.83242321e+00  1.92359115e-01 -2.09063012e-01 -7.62373078e-01
  -3.05838860e-01  4.49748211e-01 -4.22900908e-01 -3.70652866e-01
   7.70835304e-02 -2.28126294e-01  3.33063903e-02  1.02240861e+00
   1.20727519e+00 -1.74283166e-01  1.82781971e-01]
 [-1.21124878e-01 -4.37479013e-01  6.39047523e-02 -1.79910117e-01
   1.40065266e-01  8.82076357e-01 -5.81618511e-01 -5.10640110e-01
   6.03711650e-01  5.90619752e-01 -1.18293491e-01 -5.35663817e-01
   2.56553224e-01 -9.92212523e-02  4.66088487e-01  1.09088860e-01
  -1.92114031e-01 -2.67137904e-01  8.07681035e-01  4.09038316e-01
   2.79158702e-01  4.41941690e-01  1.23493726e-01  1.65106254e-02
   4.35726098e-01 -5.51010495e-01  2.66481250e-02]
 [-3.90601218e-01 -2.24592181e-01  3.32338669e-01 -5.20797799e-01
   1.94620743e-01  4.51370925e-01  7.85581190e-01 -9.72431780e-01
   3.16915394e-01  2.75188854e-01  6.52318628e-02  1.25103323e-01
  -7.68510249e-01 -1.41889742e-01  3.77749339e-02  1.23967571e-01
  -8.55349693e-02  6.89666235e-01  1.00240362e+00  3.53160746e-01
   1.87191093e-01 -9.83241972e-01  3.59201987e-01  1.53033362e-01
   3.69716144e-01 -3.80510106e-01 -8.98292731e-02]
 [ 1.37249466e+00  4.89421180e-02  3.65251171e-01 -2.06378793e-01
   3.75460312e-01 -9.68100951e-01  2.50632694e-02 -1.46642666e+00
   4.45538345e-01  1.26660087e+00 -5.65890375e-01  9.12983062e-02
  -6.01030127e-01 -1.16419894e-01 -7.10406112e-02 -7.05106550e-01
   4.99517340e-02  6.63419345e-01  2.26285610e-01 -1.38993053e-01
   3.88596998e-01 -2.75354749e-01  2.17330501e-01 -3.98189825e-01
  -7.46868785e-02  1.43808112e-01  2.54511126e-01]
 [-2.99809139e-01  5.42163156e-02  1.24606282e-01 -3.19780763e-01
   2.36333545e-01  3.07553274e-01 -9.72864992e-01  3.60011825e-01
   8.68363095e-01  6.70392169e-01  8.97503633e-01  5.24712591e-01
  -1.31746852e+00 -7.11779416e-02 -1.51389467e-02 -3.91738251e-01
  -2.03007249e-01  8.06222852e-02  3.79716806e-02  2.54613380e-03
   2.68051363e-01 -1.47427180e-02  2.08083040e-01  8.77793866e-01
  -2.81465808e-01  3.26895446e-01  7.69471005e-02]
 [ 5.53465061e-01  3.84818628e-02  1.79329896e-01 -4.58972401e-01
   1.79825662e-01 -2.15886849e-01 -6.54768580e-01 -4.38757728e-01
   9.75103876e-01  9.35454494e-01 -8.57789609e-02 -3.04805463e-01
  -3.59827604e-01 -3.07175131e-01 -4.63207704e-01 -3.78841200e-01
  -1.81230240e-01  2.76063553e-01 -3.91007095e-01  6.59077942e-01
  -1.77595162e-02  2.62349671e-01  3.10256653e-02  3.17171398e-01
   1.52904047e-01 -1.61484411e-01 -2.10718190e-02]
 [ 3.24016046e-01 -1.33586412e-02  2.54467598e-01 -4.62072352e-01
   3.09082286e-01 -4.42912592e-01  3.64215141e-01 -6.51417644e-01
   3.84406716e-01  1.41880125e+00  8.99105255e-01 -2.44035671e-01
  -5.11713107e-01  2.88495475e-02 -6.15442431e-01  1.07538882e+00
  -1.67858434e-01  2.25294206e-01 -8.18483002e-02  3.16984780e-01
   9.23354838e-02 -9.72656299e-02  1.95211273e-01  2.09914441e-01
   3.49705884e-03  1.27559772e-01  3.59700826e-01]
 [-2.00765797e-01 -1.78999399e-01  1.03643321e-01 -4.96126635e-01
   3.29414477e-01 -1.72390276e-01  1.64177825e-01 -1.86654073e-01
   6.14570192e-01  2.47136731e-01  4.07763869e-01  3.91567129e-01
  -7.17948495e-01 -3.72066167e-01 -8.83275824e-02 -2.17897441e-01
  -2.92205068e-01  7.74618179e-01 -4.74835955e-01  6.58388155e-01
   1.77386209e-01 -3.85307741e-01  3.17452670e-01  6.98869315e-01
   4.00385437e-01  3.43287060e-01  3.68122347e-01]
 [ 6.19813345e-01 -3.00511340e-01  2.68350866e-01 -7.47117219e-01
   4.06842470e-01 -1.05535507e+00  6.52261718e-02 -6.40065286e-01
   8.70024583e-01  6.21265088e-01 -1.65526356e-01  7.15068257e-01
  -1.05995944e+00 -3.18848133e-01 -2.96382437e-01 -4.05595954e-01
  -4.06039504e-01  3.39655861e-01 -5.47999633e-01  4.10281460e-01
   2.20856315e-01 -1.17484807e-01  3.56078430e-01 -2.68675332e-01
  -2.35272782e-01  5.22962788e-01  3.85610513e-01]
 [ 4.55097777e-01 -1.42419005e-01  2.51212730e-01 -5.04156233e-01
   4.20191872e-01 -3.32330492e-01  3.16565948e-01 -1.01030866e-01
   6.28990045e-01 -5.78534517e-01 -2.88372285e-02  5.49117050e-01
  -4.78286820e-01 -3.82899069e-01 -6.34951006e-01 -1.53927893e-01
  -2.85800785e-01  7.95633495e-02 -6.55938745e-01  4.22909839e-01
   2.25060583e-01 -1.95627025e-01  3.90753254e-01  1.49539760e-01
   6.87068892e-01  5.34361870e-01  6.43151554e-01]
 [-5.08978749e-02 -3.26992926e-01  3.38540603e-01 -4.47364401e-01
   4.52703687e-01 -5.93962063e-01  3.16411546e-01 -5.05606524e-01
   5.83270584e-01 -1.88259595e-01  1.94029554e-02  4.29603492e-01
  -3.14444474e-01 -4.19744543e-01 -2.07974978e-01  2.32356717e-01
  -3.12916832e-01  1.98949874e-01 -9.76966154e-01  4.17879513e-01
   2.13872996e-01 -5.42860927e-01  2.26183545e-01  1.21039016e-01
   2.08847845e-01  6.10736183e-01  5.05367396e-01]
 [ 5.76081260e-01 -1.46105759e-01  3.69111039e-01 -6.54256003e-01
   4.96027227e-01 -7.52454948e-01 -3.18705302e-01  9.18312828e-02
   3.51800549e-01 -3.91556123e-02  1.32218198e-01 -7.38195754e-02
  -8.93888168e-01 -2.97090713e-01 -4.09204553e-01 -5.82951728e-01
  -2.23361846e-01  5.24153546e-01 -3.57708462e-01  4.34283374e-01
   2.17952481e-01 -2.68428165e-01  4.06218104e-01  8.62333586e-02
   4.30471974e-01  7.12656707e-01  5.75832081e-01]
 [ 1.53197674e-01 -2.38233881e-01  3.28385660e-01 -4.04029935e-01
   4.86499725e-01 -5.48765303e-01 -1.33722507e-01 -2.18534975e-01
   1.65345234e-01  3.76364821e-01  2.13111939e-01  7.75466589e-01
   2.98944707e-02 -3.19830187e-01 -4.26007744e-01 -4.80331540e-01
  -2.46131608e-01  5.26239393e-01 -5.04185497e-01  6.37333904e-01
   2.14899153e-01 -1.89901897e-02  4.36452410e-01  4.56923396e-01
   4.44810565e-01  3.32727696e-01  4.62023957e-01]
 [ 3.39599926e-01 -1.73877580e-01  3.91754568e-01 -3.65183998e-01
   3.80053795e-01 -4.36657610e-01  2.21865797e-01 -1.16356652e-01
   1.13710131e-02  3.91653500e-01  5.41092526e-02  5.90988169e-01
  -6.60983640e-04 -4.05976170e-01 -6.33706264e-01 -9.90158225e-01
  -1.34988281e-01  6.46625197e-01 -4.00191347e-01  6.47908400e-01
   1.75886204e-01  1.37155334e-01  3.91065680e-01  4.22329556e-01
   2.43405902e-01  7.91202965e-02  2.77304065e-01]
 [ 1.32225644e-01 -1.86839950e-01  2.70067621e-01 -5.95809042e-01
   2.89304991e-01 -9.04669697e-01 -2.50774615e-01 -8.53994807e-02
   1.70321347e-01  1.93666741e-01 -1.83012454e-01  6.69535582e-01
   3.97089448e-01 -2.57644604e-01 -3.88361086e-01 -5.91246031e-01
  -2.02342428e-01  4.58524594e-01 -2.56656494e-01  5.99429767e-01
   2.92218355e-01 -2.84124535e-01  2.99739258e-01  4.82064480e-01
   3.12460030e-01  4.13650746e-01  3.17546387e-01]
 [ 3.15707210e-02 -2.62787523e-01  3.32366150e-01 -5.00628758e-01
   5.21610308e-01 -4.60141765e-01  1.86147375e-01 -5.31513997e-01
   3.78437053e-01  3.34546799e-01 -6.02748233e-03  7.28658272e-01
   4.03056968e-02 -1.70153532e-01 -4.93474758e-01 -4.28644280e-01
  -4.28617484e-01  5.82711873e-01 -2.05992564e-01  5.49604813e-01
   2.94097637e-01 -9.89525394e-02  3.30381950e-01  5.78467952e-01
   1.87542675e-01  6.31545044e-01  4.79644063e-01]
 [-1.90662848e-02 -3.59753352e-01  4.79295879e-01 -4.58922167e-01
   4.47407689e-01 -5.06572177e-01 -4.68777650e-01 -2.69856652e-01
   3.91896340e-01  3.32189457e-01  1.40409385e-01  6.81404143e-01
  -2.67396966e-01 -4.70275316e-01 -3.87425924e-01 -4.15717799e-01
  -4.25949823e-01  6.52303127e-01 -5.29964323e-01  5.28637835e-01
   2.14421148e-01  1.22286887e-01  4.51410968e-01  7.12498864e-01
   1.44928371e-01  5.12983250e-01  5.18494841e-01]
 [ 2.43401487e-01 -3.61351088e-01  2.72351784e-01 -4.81012168e-01
   4.75620676e-01 -4.07146880e-01 -2.50867728e-01  1.52258798e-02
   2.19277199e-01  2.10538365e-01  1.76778596e-01  6.65830305e-01
   6.48393714e-02 -4.63123400e-01 -3.89751950e-01 -2.69446876e-01
  -1.91978289e-01  6.19355394e-01 -2.38547978e-01  5.76749410e-01
   2.05633418e-01 -9.41559075e-02  3.39179175e-01  1.68431640e-01
   4.23613517e-01  4.14455280e-01  5.30191724e-01]
 [ 9.30810767e-02 -2.43390022e-01  2.17079391e-01 -3.55788432e-01
   4.57366623e-01 -4.11063594e-01 -4.38324585e-02 -2.30346020e-01
   1.14174374e-01  1.11852621e-01  1.10756871e-01  6.27486996e-01
   7.82113562e-03 -3.68917251e-01 -4.50576421e-01 -8.14029161e-01
  -1.89916912e-01  5.92797897e-01 -5.40460343e-01  6.27345826e-01
   1.75491650e-01  1.09641255e-02  4.64107955e-01  6.97259820e-01
   3.13206614e-01  1.58702032e-01  4.73767599e-01]
 [ 1.85192109e-01 -2.15868924e-01  3.46881839e-01 -3.72851806e-01
   5.42776241e-01 -5.83080976e-01 -2.29869875e-02 -3.27816403e-01
   2.96767147e-01  1.38568414e-01  2.03956528e-01  7.49843316e-01
  -1.32885374e-01 -3.87154886e-01 -5.30274501e-01 -2.98424565e-01
  -3.41724881e-01  4.85025655e-01 -5.07718866e-01  6.37429534e-01
   3.21160076e-01 -1.23786927e-01  4.07837426e-01  4.59279717e-01
   3.60661095e-01  3.39648769e-01  5.52491479e-01]
 [ 4.62460981e-02 -2.08394355e-01  3.11123560e-01 -2.88639821e-01
   4.83254699e-01 -7.06767592e-01 -1.72485380e-01 -1.39720373e-01
   1.48195736e-01  4.09308657e-01  1.22256104e-01  6.88928251e-01
  -1.19005780e-01 -3.23228401e-01 -4.55698879e-01 -7.10649495e-01
  -1.85015350e-01  4.76454651e-01 -4.65755045e-01  6.60931092e-01
   1.87387995e-01 -1.75188679e-01  4.12444866e-01  5.17851887e-01
   3.48981613e-01  3.01974150e-01  4.56979339e-01]]================= config36 =================
2022年 02月 19日 星期六 23:01:38 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (202157) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (123666) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677]
upper = 
[5047.53107312 5159.14977399 5401.63217574 ... 5320.48409861 5538.90654915
 5306.56291847]
upper.argmax() = 8008
all predict_target = 
[3594.22125791 3330.74146278 2779.56415828 ... 2954.47134456 2411.88610661
 2986.94298143]
upper.argmax() = 8008, sortnumber[0] = 8008
x_max = [5.01640695e+01 5.63105044e-02 9.66124538e-01 2.28705605e+02
 3.84461431e+00 4.85396451e+00 4.98941345e+00 5.23970161e+02
 1.07793896e+02 9.57884876e+01 7.69625861e+00 2.11837201e+09
 6.23204814e-01 6.37644221e-02 7.19346193e+01 5.19232956e-01
 7.46905714e-02 2.06997561e+09 1.25961354e+09 7.14684150e+01
 9.43200062e-01 7.08706853e+02 9.75441025e-01 3.81983278e+01
 3.91173188e+00 3.29043277e+02 3.85649073e+00]
black_box_function中schafferRun(i) 中的i为[50.16406951967097, 0.05631050439533489, 0.9661245380324552, 228.70560494513043, 3.844614312531875, 4.853964512468615, 4.989413451991429, 523.9701611627038, 107.79389621699909, 95.78848757134492, 7.6962586057383024, 2118372010.4027488, 0.6232048140590294, 0.06376442212017863, 71.93461927961647, 0.5192329557388057, 0.07469057144623267, 2069975611.287225, 1259613544.3778384, 71.46841498762232, 0.9432000618997703, 708.7068534028119, 0.9754410250913016, 38.198327806533996, 3.91173188075677, 329.04327683758805, 3.8564907320185764]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.16406951967097
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.05631050439533489
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9661245380324552
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 228.70560494513043
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.844614312531875
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.853964512468615
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.989413451991429
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 523.9701611627038
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 107.79389621699909
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.78848757134492
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.6962586057383024
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2118372010.4027488
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6232048140590294
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.06376442212017863
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 71.93461927961647
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5192329557388057
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.07469057144623267
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2069975611.287225
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1259613544.3778384
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.46841498762232
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9432000618997703
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 708.7068534028119
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9754410250913016
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.198327806533996
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.91173188075677
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 329.04327683758805
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8564907320185764
configNum = 36	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 36 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.16406951967097, 'spark.broadcast.checksum': 0.05631050439533489, 'spark.broadcast.compress': 0.9661245380324552, 'spark.default.parallelism': 228.70560494513043, 'spark.executor.cores': 3.844614312531875, 'spark.executor.instances': 4.853964512468615, 'spark.executor.memory': 4.989413451991429, 'spark.executor.memoryOverhead': 523.9701611627038, 'spark.kryoserializer.buffer': 107.79389621699909, 'spark.kryoserializer.buffer.max': 95.78848757134492, 'spark.locality.wait': 7.6962586057383024, 'spark.maxRemoteBlockSizeFetchToMem': 2118372010.4027488, 'spark.memory.fraction': 0.6232048140590294, 'spark.memory.offHeap.enabled': 0.06376442212017863, 'spark.memory.offHeap.size': 71.93461927961647, 'spark.memory.storageFraction': 0.5192329557388057, 'spark.rdd.compress': 0.07469057144623267, 'spark.reducer.maxBlocksInFlightPerAddress': 2069975611.287225, 'spark.reducer.maxReqsInFlight': 1259613544.3778384, 'spark.reducer.maxSizeInFlight': 71.46841498762232, 'spark.scheduler.mode': 0.9432000618997703, 'spark.scheduler.revive.interval': 708.7068534028119, 'spark.shuffle.compress': 0.9754410250913016, 'spark.shuffle.file.buffer': 38.198327806533996, 'spark.shuffle.io.numConnectionsPerPeer': 3.91173188075677, 'spark.shuffle.sort.bypassMergeThreshold': 329.04327683758805, 'spark.storage.memoryMapThreshold': 3.8564907320185764} target = -213.312
x_probe = {'spark.broadcast.blockSize': 50.16406951967097, 'spark.broadcast.checksum': 0.05631050439533489, 'spark.broadcast.compress': 0.9661245380324552, 'spark.default.parallelism': 228.70560494513043, 'spark.executor.cores': 3.844614312531875, 'spark.executor.instances': 4.853964512468615, 'spark.executor.memory': 4.989413451991429, 'spark.executor.memoryOverhead': 523.9701611627038, 'spark.kryoserializer.buffer': 107.79389621699909, 'spark.kryoserializer.buffer.max': 95.78848757134492, 'spark.locality.wait': 7.6962586057383024, 'spark.maxRemoteBlockSizeFetchToMem': 2118372010.4027488, 'spark.memory.fraction': 0.6232048140590294, 'spark.memory.offHeap.enabled': 0.06376442212017863, 'spark.memory.offHeap.size': 71.93461927961647, 'spark.memory.storageFraction': 0.5192329557388057, 'spark.rdd.compress': 0.07469057144623267, 'spark.reducer.maxBlocksInFlightPerAddress': 2069975611.287225, 'spark.reducer.maxReqsInFlight': 1259613544.3778384, 'spark.reducer.maxSizeInFlight': 71.46841498762232, 'spark.scheduler.mode': 0.9432000618997703, 'spark.scheduler.revive.interval': 708.7068534028119, 'spark.shuffle.compress': 0.9754410250913016, 'spark.shuffle.file.buffer': 38.198327806533996, 'spark.shuffle.io.numConnectionsPerPeer': 3.91173188075677, 'spark.shuffle.sort.bypassMergeThreshold': 329.04327683758805, 'spark.storage.memoryMapThreshold': 3.8564907320185764}
target = -213.312
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.98177755e+01 5.20866081e+01]
 [2.59611606e-02 9.10528098e-02]
 [9.20357721e-01 9.85900170e-01]
 [2.21582039e+02 2.41566000e+02]
 [3.83522496e+00 4.00000000e+00]
 [4.69877258e+00 4.97066552e+00]
 [4.82982701e+00 5.11593557e+00]
 [5.11096941e+02 5.45441903e+02]
 [1.02622034e+02 1.09184459e+02]
 [9.37755127e+01 1.00452489e+02]
 [7.50283787e+00 7.91340577e+00]
 [2.10227760e+09 2.14748314e+09]
 [6.16720735e-01 6.43853035e-01]
 [2.10937127e-02 8.63703534e-02]
 [2.20786125e+01 9.13687497e+01]
 [5.10616062e-01 5.37596956e-01]
 [2.75426296e-02 9.25741738e-02]
 [2.04232202e+09 2.11440175e+09]
 [1.22605889e+09 1.29998503e+09]
 [6.99476625e+01 7.20000000e+01]
 [9.09077460e-01 9.74174256e-01]
 [6.72793032e+02 7.07297511e+02]
 [9.45551294e-01 1.00000000e+00]
 [3.70262296e+01 3.91767562e+01]
 [3.85395715e+00 4.13198102e+00]
 [3.23188094e+02 3.36594788e+02]
 [3.75292191e+00 3.94922723e+00]]
before probe, param.shape = (36, 27)
before probe, target = (36,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]
 [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
  3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
  1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
  6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
  9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
  9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
  3.82539761e+00 3.20559926e+02 3.73667538e+00]
 [5.08552424e+01 7.02536082e-02 9.37190526e-01 2.16065724e+02
  3.78571231e+00 4.58263516e+00 4.90417382e+00 5.40473863e+02
  1.06000729e+02 9.45934004e+01 7.29261524e+00 2.11861009e+09
  6.50409634e-01 7.05382486e-02 6.53785093e+01 5.19348490e-01
  7.18737172e-02 2.06109913e+09 1.31135719e+09 7.10883205e+01
  9.59364859e-01 6.71001026e+02 9.39988703e-01 3.82567810e+01
  3.88285161e+00 3.32869014e+02 3.76159792e+00]
 [5.03899352e+01 5.28949923e-02 9.54216820e-01 2.23762517e+02
  3.96158473e+00 4.89749031e+00 5.16063910e+00 4.99578845e+02
  1.10077719e+02 9.65370568e+01 7.47826001e+00 2.12910966e+09
  6.30857433e-01 9.41835015e-02 4.12132627e+01 5.26323793e-01
  1.08195665e-02 2.09275859e+09 1.32125038e+09 7.05481352e+01
  9.59796014e-01 6.84301683e+02 9.48692336e-01 3.88522332e+01
  3.77891863e+00 3.40886461e+02 3.86198691e+00]
 [5.01558507e+01 3.07324334e-02 9.94372965e-01 2.27135137e+02
  3.90540783e+00 4.86460406e+00 4.77621000e+00 5.23564798e+02
  1.10341387e+02 9.65045337e+01 7.63186196e+00 2.12071782e+09
  6.13994939e-01 1.30728776e-02 6.55934995e+01 5.26878315e-01
  1.15393622e-02 2.11049971e+09 1.25798811e+09 7.03208183e+01
  9.41516192e-01 7.00193015e+02 9.83068956e-01 3.96800975e+01
  3.74346294e+00 3.36523966e+02 3.88604765e+00]
 [5.13691857e+01 3.03672541e-02 9.37814792e-01 2.25348820e+02
  3.92676716e+00 4.93502611e+00 4.90411917e+00 5.49698123e+02
  1.06959775e+02 9.48261703e+01 7.67001070e+00 2.11795207e+09
  6.32201910e-01 1.50057476e-02 6.50587548e+01 5.33153057e-01
  7.46701972e-02 2.10210024e+09 1.31489326e+09 7.08424278e+01
  9.39500062e-01 6.84646218e+02 9.51191066e-01 3.63195754e+01
  3.97533285e+00 3.32898617e+02 3.89329167e+00]
 [5.06742851e+01 5.73284951e-02 9.22708752e-01 2.35475088e+02
  3.91294748e+00 4.93225193e+00 5.02564511e+00 5.27186712e+02
  1.04900808e+02 9.34646491e+01 7.60075856e+00 2.11114270e+09
  6.29077238e-01 4.04658105e-02 5.10754327e+01 5.09791521e-01
  7.52264037e-02 2.09532985e+09 1.25593854e+09 7.13909770e+01
  9.32584770e-01 6.92196850e+02 9.86675360e-01 3.95859710e+01
  3.88347277e+00 3.23488146e+02 3.85834755e+00]
 [5.11000956e+01 6.36187310e-02 9.58183982e-01 2.34095252e+02
  3.97760892e+00 4.81041356e+00 5.03788103e+00 5.18251667e+02
  1.08477804e+02 9.38332344e+01 7.69851844e+00 2.13287191e+09
  6.21366344e-01 3.55369250e-02 3.27531372e+01 5.31909969e-01
  3.42651650e-02 2.06785513e+09 1.26233200e+09 7.15003012e+01
  9.66004829e-01 6.82517862e+02 9.70692494e-01 3.81160471e+01
  3.92295556e+00 3.30146103e+02 3.90710216e+00]
 [5.04577765e+01 6.53271224e-02 9.48411184e-01 2.40905088e+02
  3.93254668e+00 4.72280744e+00 4.95012818e+00 5.35494304e+02
  1.05567287e+02 9.75685113e+01 7.61282045e+00 2.12205402e+09
  6.22126963e-01 5.28136350e-02 4.98977984e+01 5.14226311e-01
  7.65489565e-02 2.06567010e+09 1.27052631e+09 7.17550971e+01
  9.35314096e-01 6.78825743e+02 9.72001174e-01 3.84778279e+01
  3.91323807e+00 3.28759860e+02 3.84795038e+00]
 [5.01640695e+01 5.63105044e-02 9.66124538e-01 2.28705605e+02
  3.84461431e+00 4.85396451e+00 4.98941345e+00 5.23970161e+02
  1.07793896e+02 9.57884876e+01 7.69625861e+00 2.11837201e+09
  6.23204814e-01 6.37644221e-02 7.19346193e+01 5.19232956e-01
  7.46905714e-02 2.06997561e+09 1.25961354e+09 7.14684150e+01
  9.43200062e-01 7.08706853e+02 9.75441025e-01 3.81983278e+01
  3.91173188e+00 3.29043277e+02 3.85649073e+00]]
标准化后的train_x = 
[[ 1.66345685e-01 -4.93821319e-01  4.95413611e-01 -5.28579008e-01
   5.69064672e-01 -3.04046780e-01 -8.57767334e-02 -1.61662200e-01
   2.68608005e-01  2.18168949e-01  4.92381500e-01  3.59241839e-01
  -3.42277339e-01 -5.17465519e-01 -3.93518276e-01 -3.29470095e-01
  -4.69718632e-01  4.04157276e-01 -5.03133298e-01  2.06464230e-01
   4.69424903e-01 -2.80608171e-01  5.05045328e-01 -5.89797264e-02
   4.49158889e-01  4.68906562e-01  6.97053424e-01]
 [-7.11201911e-01 -4.93821319e-01 -3.20818652e+00  1.77291724e+00
  -2.10515596e+00  3.97544189e+00  1.64175230e+00 -1.64272480e+00
  -1.17958743e+00  3.65029067e-01  4.92381500e-01 -2.47245109e+00
  -1.63756190e+00  3.23101663e+00  6.06093617e-01 -9.42026212e-02
   3.28706944e+00 -3.34462410e+00  8.30196513e-01 -8.16826949e-01
  -3.94810010e+00  4.27632281e+00 -3.05666869e+00  1.57791209e+00
  -7.67757856e-01 -4.54089711e+00 -9.35529454e-01]
 [ 2.57960157e+00  3.93966974e+00 -3.20818652e+00  1.93552296e+00
  -3.44226628e+00  1.12244944e+00 -3.54083479e+00  3.01046441e+00
  -3.35188059e+00  1.76020019e+00 -3.37293802e+00 -3.67422148e-01
   9.53007220e-01  3.23101663e+00 -3.05446743e-01  2.49373959e+00
   3.28706944e+00 -8.42438294e-01 -1.46703518e+00 -3.23551519e+00
   4.69424903e-01  2.27285065e-01 -3.05666869e+00 -3.16907419e+00
  -3.20159135e+00  8.26749682e-01 -9.35529454e-01]
 [ 1.66345685e-01 -4.93821319e-01  4.95413611e-01 -5.03562744e-01
   5.69064672e-01 -3.04046780e-01 -8.57767334e-02 -1.94820318e-01
   3.72050536e-01  7.13088305e-02  4.92381500e-01  4.24383283e-01
  -5.27317550e-01 -5.17465519e-01 -3.80307546e-01 -5.64738018e-01
  -4.69718632e-01  4.77359797e-01 -3.06673896e-01  2.99490700e-01
   4.69424903e-01 -2.94716316e-01  5.05045328e-01  2.68398638e-01
   4.49158889e-01  5.23959350e-01  6.97053424e-01]
 [ 1.66345685e-01 -4.93821319e-01  4.95413611e-01 -5.66103403e-01
   5.69064672e-01 -3.04046780e-01 -8.57767334e-02 -1.72714906e-01
   5.27214333e-01 -2.95841465e-01  4.92381500e-01  4.50503713e-01
  -5.27317550e-01 -5.17465519e-01 -4.63975502e-01 -5.64738018e-01
  -4.69718632e-01  5.93002235e-01 -4.32202160e-01  3.92517171e-01
   4.69424903e-01 -2.80608171e-01  5.05045328e-01  1.04709456e-01
   4.49158889e-01  7.71696894e-01  6.97053424e-01]
 [ 1.66345685e-01 -4.93821319e-01  4.95413611e-01 -7.91249775e-01
   5.69064672e-01 -3.04046780e-01 -8.57767334e-02 -4.71137967e-01
   1.09614826e+00  2.91599008e-01  1.45871138e+00  8.20028532e-01
  -8.97399602e-01 -5.17465519e-01 -4.63975502e-01 -1.03527252e+00
  -4.69718632e-01  7.92115548e-01 -1.32130142e+00  6.71596583e-01
   4.69424903e-01 -8.16717698e-01  5.05045328e-01  1.04709456e-01
   1.66607563e+00  8.81802469e-01  6.97053424e-01]
 [-5.30412139e-02 -4.93821319e-01  4.95413611e-01 -5.53595271e-01
   5.69064672e-01 -3.04046780e-01 -8.57767334e-02 -1.39556788e-01
   5.27214333e-01  2.91599008e-01  4.92381500e-01  4.53836875e-01
  -3.42277075e-01 -5.17465519e-01 -4.15536159e-01 -5.64738018e-01
  -4.69718632e-01  4.92827949e-01 -4.49913372e-01  3.92517171e-01
   4.69424903e-01 -3.08824462e-01  5.05045328e-01 -5.89797264e-02
   4.49158889e-01  3.86327381e-01  6.97053424e-01]
 [ 1.66345685e-01 -4.93821319e-01  4.95413611e-01 -4.03497690e-01
   5.69064672e-01 -3.04046780e-01 -8.57767334e-02 -3.05347377e-01
   6.17229423e-02  2.18168949e-01  4.92381500e-01 -5.51242818e-02
   2.78038752e-02 -5.17465519e-01 -3.23061050e-01 -5.64738018e-01
  -4.69718632e-01  3.71097517e-01 -4.17134847e-01 -1.65641654e-01
   4.69424903e-01 -1.53634862e-01  5.05045328e-01 -5.89797264e-02
   4.49158889e-01  1.11063443e-01  6.97053424e-01]
 [-5.30412139e-02 -4.93821319e-01  4.95413611e-01  1.59368242e-01
  -7.68045645e-01  1.12244944e+00 -8.57767334e-02  5.93919192e-02
  -4.55489714e-01 -5.16131643e-01  4.92381500e-01 -4.86465175e-01
   3.97884825e-01 -5.17465519e-01 -3.23061050e-01  2.49373903e+00
  -4.69718632e-01 -5.14921201e-01  1.60390935e-01 -1.00287989e+00
   4.69424903e-01 -2.38283735e-01  5.05045328e-01 -5.89797264e-02
   4.49158889e-01 -9.34939520e-01 -9.35529454e-01]
 [-3.12445780e+00 -4.93821319e-01 -3.20818652e+00  2.89864911e+00
  -3.44226628e+00  1.12244944e+00 -8.57767334e-02  9.65713808e-01
  -8.17538574e-01 -3.30647389e+00 -3.37293802e+00 -1.35164122e-01
   2.24829178e+00  3.23101663e+00  3.61814002e+00 -3.29470095e-01
   3.28706944e+00 -2.64203467e+00  2.07318586e+00 -1.65641654e-01
   4.69424903e-01  3.02069786e+00  5.05045328e-01 -8.77425637e-01
  -1.98467460e+00 -1.91726888e-01 -4.20069521e+00]
 [-1.58874951e+00 -4.93821319e-01  4.95413611e-01  2.26073438e+00
  -7.68045645e-01  1.12244944e+00  3.36928133e+00  2.01572087e+00
  -3.40360186e+00  2.18168949e-01 -1.44027826e+00 -3.38818655e+00
   2.06325113e+00 -5.17465519e-01  3.59171856e+00  1.78793717e+00
  -4.69718632e-01 -1.63283273e+00  1.58896136e+00 -2.58432989e+00
   4.69424903e-01 -1.11298875e+00 -3.05666869e+00 -2.84169582e+00
  -3.20159135e+00 -7.42254764e-01 -9.35529454e-01]
 [-2.46629710e+00  3.93966974e+00  4.95413611e-01  2.87363284e+00
   5.69064672e-01 -1.73054300e+00 -1.81330576e+00  3.40836183e+00
  -3.52047183e-01 -2.57217330e+00 -1.44027826e+00 -2.93322325e+00
   3.35853569e+00 -5.17465519e-01  2.14734543e+00  1.78793717e+00
  -4.69718632e-01 -2.28134903e+00  2.50988161e+00 -3.23551519e+00
  -3.94810010e+00 -3.22932607e-01  5.05045328e-01 -2.84169582e+00
  -7.67757856e-01  6.34064925e-01 -2.56811233e+00]
 [-1.89364632e+00  9.84650205e-01 -1.00976859e+00  9.75499082e-01
  -1.07418888e+00  1.20609545e+00  1.02043244e+00  1.24114900e+00
  -1.91030272e+00 -1.82432515e+00  5.89669612e-02  6.63177223e-01
  -2.26536532e-01  3.98849905e-01 -3.23796059e-01  2.81637996e+00
  -3.05192514e-01 -1.37591501e+00  3.37720812e+00 -3.16396259e-01
  -1.22520646e+00 -1.74046496e+00 -1.80875604e+00 -6.57274720e-01
  -1.43582453e+00 -2.35217653e+00 -1.34259470e+00]
 [ 1.15860711e+00 -3.85589760e-01  1.91823484e-01 -2.57011713e-01
  -1.33086995e-01  1.51949180e+00  2.34612393e-01 -2.66598364e-01
   8.40585122e-02 -1.33462312e+00  1.49629367e+00 -6.61515598e-01
   4.74210537e-01  2.19761688e-01  3.15581763e-01  2.23130396e-02
  -2.32591859e-01  1.37206512e-01  1.03763502e-01  1.93628778e-01
  -1.30745973e-01  8.98669751e-01 -2.05194146e-01  8.18089784e-01
   7.01393454e-01 -1.27160167e+00  6.86108530e-02]
 [ 1.22724946e+00  4.95448042e-01  1.56845739e-01 -1.66489901e-01
  -1.23421441e-01  5.22355398e-01  1.26503214e+00 -2.17299838e-01
  -2.28482588e-01 -1.52214428e+00  7.60162173e-01 -8.60943886e-01
   1.86095980e+00  2.02827142e-01 -2.01529042e-01 -7.52775845e-01
  -3.04615203e-01  4.40742192e-01 -4.12647673e-01 -3.91601816e-01
   7.18804903e-02 -2.37954948e-01  2.17639328e-02  1.02043695e+00
   1.21259190e+00 -1.85232989e-01  1.71584980e-01]
 [-1.22355494e-01 -4.36330391e-01  5.41143343e-02 -1.69626147e-01
   1.31464194e-01  9.05866465e-01 -5.86804272e-01 -5.09907095e-01
   6.04323155e-01  5.90457588e-01 -1.25585614e-01 -5.58633020e-01
   2.62954937e-01 -9.25616060e-02  4.81971425e-01  1.26749147e-01
  -1.89336124e-01 -2.83867694e-01  8.30700083e-01  3.94764758e-01
   2.76682283e-01  4.41071318e-01  1.13002460e-01  3.42021412e-03
   4.31404907e-01 -5.66796353e-01  1.37215342e-02]
 [-3.95653250e-01 -2.20607702e-01  3.25823203e-01 -5.14425568e-01
   1.86690272e-01  4.70692688e-01  7.99574768e-01 -9.77791704e-01
   3.13735271e-01  2.70900759e-01  6.04378785e-02  1.07389776e-01
  -7.76506717e-01 -1.35787396e-01  4.83613182e-02  1.41765521e-01
  -8.13004704e-02  6.83245106e-01  1.02744268e+00  3.38408788e-01
   1.83473746e-01 -1.00316593e+00  3.51458056e-01  1.41452013e-01
   3.64570382e-01 -3.94107257e-01 -1.04046162e-01]
 [ 1.39244491e+00  5.65703370e-02  3.59137245e-01 -1.96398555e-01
   3.69752738e-01 -9.63505471e-01  2.83881560e-02 -1.47830442e+00
   4.44058699e-01  1.27528074e+00 -5.79275168e-01  7.33158779e-02
  -6.06674146e-01 -1.09984882e-01 -6.17998471e-02 -6.94979468e-01
   5.60378979e-02  6.56715430e-01  2.43273378e-01 -1.57958628e-01
   3.87597240e-01 -2.85814809e-01  2.07932965e-01 -4.15864153e-01
  -8.53839505e-02  1.36941616e-01  2.44108728e-01]
 [-3.03573658e-01  6.19147919e-02  1.15556436e-01 -3.11101830e-01
   2.28915812e-01  3.25383004e-01 -9.83539233e-01  3.72232335e-01
   8.72473460e-01  6.71273452e-01  9.04038495e-01  5.10177483e-01
  -1.33317573e+00 -6.41520169e-02 -5.20689890e-03 -3.78711782e-01
  -2.00378216e-01  6.76392823e-02  5.30059165e-02 -1.52076417e-02
   2.65425071e-01 -2.17186009e-02  1.98577718e-01  8.74223701e-01
  -2.94745882e-01  3.22379236e-01  6.45777054e-02]
 [ 5.61800735e-01  4.59707411e-02  1.70947689e-01 -4.51890714e-01
   1.71713329e-01 -2.03487539e-01 -6.60980504e-01 -4.37076287e-01
   9.80625421e-01  9.39802871e-01 -9.26284979e-02 -3.25938449e-01
  -3.62083659e-01 -3.03231606e-01 -4.58816504e-01 -3.65695403e-01
  -1.78303586e-01  2.65186245e-01 -3.80423001e-01  6.46945119e-01
  -2.42422831e-02  2.59078295e-01  1.94566245e-02  3.07404359e-01
   1.45049953e-01 -1.72269936e-01 -3.45270358e-02]
 [ 3.29097927e-01 -6.56032824e-03  2.47002088e-01 -4.55026238e-01
   3.02558787e-01 -4.32868556e-01  3.72297714e-01 -6.52542065e-01
   3.82118872e-01  1.42947195e+00  9.05661918e-01 -2.64685302e-01
  -5.16102568e-01  3.71819484e-02 -6.12933776e-01  1.10198963e+00
  -1.64749030e-01  2.13869907e-01 -6.80570531e-02  3.01923097e-01
   8.73382399e-02 -1.05344779e-01  1.85555923e-01  1.98961830e-01
  -6.22336973e-03  1.20484697e-01  3.50463684e-01]
 [-2.03125793e-01 -1.74407580e-01  9.43377221e-02 -4.89471298e-01
   3.23140903e-01 -1.59539711e-01  1.69454237e-01 -1.81646344e-01
   6.15325254e-01  2.42481706e-01  4.07632415e-01  3.75973000e-01
  -7.25234766e-01 -3.68970195e-01 -7.93005901e-02 -2.03262539e-01
  -2.90795081e-01  7.69112326e-01 -4.65121484e-01  6.46249427e-01
   1.73536563e-01 -3.97237786e-01  3.09222123e-01  6.93321397e-01
   3.95622784e-01  3.38981268e-01  3.58978496e-01]
 [ 6.29089896e-01 -2.97538177e-01  2.61054735e-01 -7.43342037e-01
   4.01520648e-01 -1.05166481e+00  6.91144713e-02 -6.41039923e-01
   8.74156913e-01  6.21503774e-01 -1.73461412e-01  7.02047213e-01
  -1.07204965e+00 -3.15057072e-01 -2.89928264e-01 -3.92697701e-01
  -4.06185265e-01  3.29463700e-01 -5.39044147e-01  3.96018545e-01
   2.17593215e-01 -1.25834270e-01  3.48298092e-01 -2.84918063e-01
  -2.47975830e-01  5.20963487e-01  3.76660390e-01]
 [ 4.62038515e-01 -1.37339900e-01  2.43707510e-01 -4.97593038e-01
   4.15034143e-01 -3.21139224e-01  3.23980090e-01 -9.48934136e-02
   6.29935747e-01 -5.93989567e-01 -3.49116771e-02  5.34776052e-01
  -4.82206770e-01 -3.79944588e-01 -6.32683595e-01 -1.38701124e-01
  -2.84303272e-01  6.65689375e-02 -6.48102999e-01  4.08755043e-01
   2.21854212e-01 -2.05021189e-01  3.83377073e-01  1.37919794e-01
   6.85887377e-01  5.32508899e-01  6.37054387e-01]
 [-5.11326092e-02 -3.24372524e-01  3.32100802e-01 -4.40149510e-01
   4.47945597e-01 -5.85485087e-01  3.23823522e-01 -5.04807095e-01
   5.83611845e-01 -1.98609733e-01  1.39851500e-02  4.14311899e-01
  -3.16063073e-01 -4.17271307e-01 -2.00427553e-01  2.51157519e-01
  -3.11789908e-01  1.87241739e-01 -9.72460682e-01  4.03681649e-01
   2.10515670e-01 -5.56897334e-01  2.16889197e-01  1.09104015e-01
   2.01692578e-01  6.09863626e-01  4.97743901e-01]
 [ 5.84737652e-01 -1.41075765e-01  3.63044203e-01 -6.49415225e-01
   4.91801673e-01 -7.45622253e-01 -3.20202866e-01  1.00513384e-01
   3.49081631e-01 -4.75554261e-02  1.28336029e-01 -9.31153298e-02
  -9.03645711e-01 -2.93015474e-01 -4.04145547e-01 -5.71694429e-01
  -2.21010995e-01  5.15949173e-01 -3.46778934e-01  4.20225954e-01
   2.14650200e-01 -2.78795622e-01  3.99022177e-01  7.39136318e-02
   4.26085150e-01  7.13092501e-01  5.68989171e-01]
 [ 1.55857198e-01 -2.34431123e-01  3.21821967e-01 -3.96317775e-01
   4.82157058e-01 -5.39819434e-01 -1.32625098e-01 -2.13947887e-01
   1.60161258e-01  3.73400138e-01  2.10330892e-01  7.62925946e-01
   3.31125039e-02 -3.16051952e-01 -4.21156527e-01 -4.68124766e-01
  -2.44091946e-01  5.18057493e-01 -4.94775492e-01  6.25014918e-01
   2.11555673e-01 -2.60228580e-02  4.29608882e-01  4.48701114e-01
   4.40602853e-01  3.28286354e-01  4.53920318e-01]
 [ 3.44902800e-01 -1.69217534e-01  3.85963989e-01 -3.57026075e-01
   3.74402685e-01 -4.26548681e-01  2.27951467e-01 -1.10421409e-01
   4.15140058e-03  3.88888797e-01  4.91638679e-02  5.76980209e-01
   2.12786352e-03 -4.03323102e-01 -6.31423460e-01 -9.82668536e-01
  -1.31429649e-01  6.39740341e-01 -3.89702528e-01  6.35679948e-01
   1.72016318e-01  1.32210208e-01  3.83693140e-01  4.13724888e-01
   2.36682322e-01  7.14234052e-02  2.67154159e-01]
 [ 1.34587765e-01 -1.82352575e-01  2.62792434e-01 -5.90297576e-01
   2.82538388e-01 -8.99416151e-01 -2.51319235e-01 -7.90557853e-02
   1.65203158e-01  1.88312313e-01 -1.91185529e-01  6.56152377e-01
   4.05465152e-01 -2.53054153e-01 -3.83044328e-01 -5.80065474e-01
  -1.99704309e-01  4.49613131e-01 -2.44678673e-01  5.86786262e-01
   2.89918151e-01 -2.94701840e-01  2.91302250e-01  4.74120097e-01
   3.06599047e-01  4.10248210e-01  3.07842273e-01]
 [ 3.25054652e-02 -2.59311843e-01  3.25851019e-01 -4.94025083e-01
   5.17699224e-01 -4.50276473e-01  1.91731980e-01 -5.31056395e-01
   3.76070285e-01  3.31035124e-01 -1.17914457e-02  7.15745321e-01
   4.36699675e-02 -1.64420344e-01 -4.89457842e-01 -4.15959277e-01
  -4.29071814e-01  5.75138411e-01 -1.93489165e-01  5.36534727e-01
   2.91822790e-01 -1.07054241e-01  3.22302102e-01  5.71589169e-01
   1.80121273e-01  6.30939610e-01  4.71735613e-01]
 [-1.88496187e-02 -3.57569350e-01  4.74573323e-01 -4.51839903e-01
   4.42584499e-01 -4.97188576e-01 -4.72380458e-01 -2.65946709e-01
   3.89707513e-01  3.28646947e-01  1.36638714e-01  6.68115339e-01
  -2.68354728e-01 -4.68462070e-01 -3.82097602e-01 -4.02913197e-01
  -4.26367694e-01  6.45479445e-01 -5.20821743e-01  5.15388238e-01
   2.11071218e-01  1.17142982e-01  4.44741792e-01  7.07101601e-01
   1.36974647e-01  5.10855842e-01  5.11016768e-01]
 [ 2.47340182e-01 -3.59188369e-01  2.65104465e-01 -4.74183391e-01
   4.71144283e-01 -3.96731793e-01 -2.51413654e-01  2.28972392e-02
   2.14806238e-01  2.05404623e-01  1.73502981e-01  6.52417629e-01
   6.85482454e-02 -4.61216742e-01 -3.84452391e-01 -2.55288926e-01
  -1.89198526e-01  6.12176732e-01 -2.26382302e-01  5.63911724e-01
   2.02164915e-01 -1.02193482e-01  3.31201864e-01  1.57020497e-01
   4.19141021e-01  4.11063072e-01  5.22843225e-01]
 [ 9.48880929e-02 -2.39655948e-01  2.09157737e-01 -3.47522693e-01
   4.52665850e-01 -4.00689141e-01 -4.14740542e-02 -2.25914768e-01
   1.08313887e-01  1.05428040e-01  1.06582571e-01  6.13769342e-01
   1.07291238e-02 -3.65780150e-01 -4.46029022e-01 -8.04909868e-01
  -1.87108976e-01  5.85333103e-01 -5.31426647e-01  6.14941326e-01
   1.71616441e-01  4.33192276e-03  4.57586771e-01  6.91694111e-01
   3.07354957e-01  1.52026728e-01  4.65794052e-01]
 [ 1.88305342e-01 -2.11768243e-01  3.40543803e-01 -3.64781872e-01
   5.39125330e-01 -5.74491114e-01 -2.03361590e-02 -3.24671188e-01
   2.93320651e-01  1.32493283e-01  2.01050858e-01  7.37098868e-01
  -1.31953769e-01 -3.84255990e-01 -5.26712653e-01 -2.84534727e-01
  -3.40991669e-01  4.76399716e-01 -4.98345516e-01  6.25111367e-01
   3.19250385e-01 -1.32220645e-01  4.00660372e-01  4.51083481e-01
   3.55402221e-01  3.35296272e-01  5.45390009e-01]
 [ 4.73889524e-02 -2.04194105e-01  3.04349265e-01 -2.79603542e-01
   4.78872144e-01 -6.99460914e-01 -1.71931744e-01 -1.34093395e-01
   1.42785033e-01  4.06774889e-01  1.18238331e-01  6.75699293e-01
  -1.17879220e-01 -3.19494551e-01 -4.51214824e-01 -7.00573698e-01
  -1.82140426e-01  4.67736367e-01 -4.55946370e-01  6.48814135e-01
   1.83673304e-01 -1.84309598e-01  4.05321515e-01  5.10303081e-01
   3.43576844e-01  2.97138025e-01  4.48819817e-01]
 [-1.70465108e-02 -2.44169201e-01  3.69952446e-01 -4.32196285e-01
   3.61296866e-01 -5.12365852e-01 -1.04065302e-01 -2.61466353e-01
   2.57948056e-01  2.76067638e-01  1.98867115e-01  6.54801108e-01
  -9.79345999e-02 -2.78445720e-01 -3.54173995e-01 -5.82783625e-01
  -1.89121985e-01  4.84807116e-01 -5.12411381e-01  6.22145106e-01
   2.18509757e-01  2.37257456e-01  4.17573282e-01  4.64551936e-01
   3.41743937e-01  3.04939455e-01  4.62762651e-01]]================= config37 =================
2022年 02月 19日 星期六 23:05:20 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (212293) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (136931) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312]
upper = 
[4696.86942165 5338.02611185 5402.84061009 ... 5333.93164916 5118.97542644
 5319.0694597 ]
upper.argmax() = 3016
all predict_target = 
[4095.20511762 2713.68313462 2548.43667911 ... 2724.92941264 3234.3446549
 2756.03814569]
upper.argmax() = 3016, sortnumber[0] = 3016
x_max = [5.03737765e+01 2.66058442e-02 9.62930965e-01 2.34200570e+02
 3.94615235e+00 4.87638809e+00 5.03119573e+00 5.30775851e+02
 1.08280190e+02 9.60429002e+01 7.69074701e+00 2.12294814e+09
 6.34730806e-01 6.47136472e-02 6.39675906e+01 5.28226873e-01
 6.28857890e-02 2.08108888e+09 1.27520351e+09 7.05715767e+01
 9.44292921e-01 6.91825461e+02 9.93878971e-01 3.75878606e+01
 3.92749703e+00 3.28650066e+02 3.89389916e+00]
black_box_function中schafferRun(i) 中的i为[50.37377651647368, 0.026605844203983122, 0.9629309648216844, 234.2005696350551, 3.9461523504238105, 4.876388088925465, 5.031195732933142, 530.7758514766094, 108.28019041678172, 96.0429002264782, 7.690747005642162, 2122948139.4197967, 0.6347308063615628, 0.06471364715930411, 63.967590625165776, 0.5282268731678904, 0.06288578904431788, 2081088876.559111, 1275203506.555555, 70.57157667557763, 0.9442929210271381, 691.8254605136268, 0.9938789712131034, 37.587860611496296, 3.9274970266554865, 328.6500661906684, 3.8938991627169663]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.37377651647368
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.026605844203983122
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9629309648216844
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 234.2005696350551
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9461523504238105
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.876388088925465
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.031195732933142
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 530.7758514766094
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 108.28019041678172
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.0429002264782
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.690747005642162
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2122948139.4197967
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6347308063615628
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.06471364715930411
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 63.967590625165776
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5282268731678904
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.06288578904431788
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2081088876.559111
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1275203506.555555
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 70.57157667557763
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9442929210271381
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 691.8254605136268
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9938789712131034
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 37.587860611496296
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.9274970266554865
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 328.6500661906684
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8938991627169663
configNum = 37	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 37 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.37377651647368, 'spark.broadcast.checksum': 0.026605844203983122, 'spark.broadcast.compress': 0.9629309648216844, 'spark.default.parallelism': 234.2005696350551, 'spark.executor.cores': 3.9461523504238105, 'spark.executor.instances': 4.876388088925465, 'spark.executor.memory': 5.031195732933142, 'spark.executor.memoryOverhead': 530.7758514766094, 'spark.kryoserializer.buffer': 108.28019041678172, 'spark.kryoserializer.buffer.max': 96.0429002264782, 'spark.locality.wait': 7.690747005642162, 'spark.maxRemoteBlockSizeFetchToMem': 2122948139.4197967, 'spark.memory.fraction': 0.6347308063615628, 'spark.memory.offHeap.enabled': 0.06471364715930411, 'spark.memory.offHeap.size': 63.967590625165776, 'spark.memory.storageFraction': 0.5282268731678904, 'spark.rdd.compress': 0.06288578904431788, 'spark.reducer.maxBlocksInFlightPerAddress': 2081088876.559111, 'spark.reducer.maxReqsInFlight': 1275203506.555555, 'spark.reducer.maxSizeInFlight': 70.57157667557763, 'spark.scheduler.mode': 0.9442929210271381, 'spark.scheduler.revive.interval': 691.8254605136268, 'spark.shuffle.compress': 0.9938789712131034, 'spark.shuffle.file.buffer': 37.587860611496296, 'spark.shuffle.io.numConnectionsPerPeer': 3.9274970266554865, 'spark.shuffle.sort.bypassMergeThreshold': 328.6500661906684, 'spark.storage.memoryMapThreshold': 3.8938991627169663} target = -182.291
x_probe = {'spark.broadcast.blockSize': 50.37377651647368, 'spark.broadcast.checksum': 0.026605844203983122, 'spark.broadcast.compress': 0.9629309648216844, 'spark.default.parallelism': 234.2005696350551, 'spark.executor.cores': 3.9461523504238105, 'spark.executor.instances': 4.876388088925465, 'spark.executor.memory': 5.031195732933142, 'spark.executor.memoryOverhead': 530.7758514766094, 'spark.kryoserializer.buffer': 108.28019041678172, 'spark.kryoserializer.buffer.max': 96.0429002264782, 'spark.locality.wait': 7.690747005642162, 'spark.maxRemoteBlockSizeFetchToMem': 2122948139.4197967, 'spark.memory.fraction': 0.6347308063615628, 'spark.memory.offHeap.enabled': 0.06471364715930411, 'spark.memory.offHeap.size': 63.967590625165776, 'spark.memory.storageFraction': 0.5282268731678904, 'spark.rdd.compress': 0.06288578904431788, 'spark.reducer.maxBlocksInFlightPerAddress': 2081088876.559111, 'spark.reducer.maxReqsInFlight': 1275203506.555555, 'spark.reducer.maxSizeInFlight': 70.57157667557763, 'spark.scheduler.mode': 0.9442929210271381, 'spark.scheduler.revive.interval': 691.8254605136268, 'spark.shuffle.compress': 0.9938789712131034, 'spark.shuffle.file.buffer': 37.587860611496296, 'spark.shuffle.io.numConnectionsPerPeer': 3.9274970266554865, 'spark.shuffle.sort.bypassMergeThreshold': 328.6500661906684, 'spark.storage.memoryMapThreshold': 3.8938991627169663}
target = -182.291
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[4.99312172e+01 5.19731665e+01]
 [2.92157430e-02 8.77982273e-02]
 [9.23634843e-01 9.82623047e-01]
 [2.22581237e+02 2.40566802e+02]
 [3.84520281e+00 4.00000000e+00]
 [4.71236723e+00 4.95707087e+00]
 [4.84413243e+00 5.10163014e+00]
 [5.12814189e+02 5.43724655e+02]
 [1.02950155e+02 1.08856338e+02]
 [9.41093614e+01 1.00118640e+02]
 [7.52336627e+00 7.89287737e+00]
 [2.10579207e+09 2.14748314e+09]
 [6.18077350e-01 6.42496420e-01]
 [2.43575447e-02 8.31065213e-02]
 [2.55431193e+01 8.79042429e+01]
 [5.11965107e-01 5.36247911e-01]
 [3.07942068e-02 8.93225965e-02]
 [2.04592600e+09 2.11079776e+09]
 [1.22975520e+09 1.29628873e+09]
 [7.01028227e+01 7.20000000e+01]
 [9.12332300e-01 9.70919417e-01]
 [6.74518256e+02 7.05572287e+02]
 [9.48878184e-01 1.00000000e+00]
 [3.71337560e+01 3.90692299e+01]
 [3.86785835e+00 4.11807983e+00]
 [3.23858429e+02 3.35924453e+02]
 [3.76273718e+00 3.93941196e+00]]
before probe, param.shape = (37, 27)
before probe, target = (37,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 2.21000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.33000000e+02
  1.08000000e+02 9.50000000e+01 8.00000000e+00 2.06629795e+09
  6.10000000e-01 0.00000000e+00 6.30000000e+01 5.30000000e-01
  0.00000000e+00 2.04963445e+09 1.26140668e+09 6.70000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 4.05000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 3.99000000e+02
  8.00000000e+01 9.70000000e+01 8.00000000e+00 1.56738701e+09
  5.40000000e-01 1.00000000e+00 2.90000000e+02 5.40000000e-01
  1.00000000e+00 1.10413262e+09 1.51909407e+09 5.60000000e+01
  0.00000000e+00 9.95000000e+02 0.00000000e+00 4.50000000e+01
  3.00000000e+00 1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 4.18000000e+02
  1.00000000e+00 6.00000000e+00 3.00000000e+00 8.20000000e+02
  3.80000000e+01 1.16000000e+02 4.00000000e+00 1.93826832e+09
  6.80000000e-01 1.00000000e+00 8.30000000e+01 6.50000000e-01
  1.00000000e+00 1.73522337e+09 1.07511717e+09 3.00000000e+01
  1.00000000e+00 7.08000000e+02 0.00000000e+00 1.60000000e+01
  1.00000000e+00 3.48000000e+02 3.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.23000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.30000000e+02
  1.10000000e+02 9.30000000e+01 8.00000000e+00 2.07777510e+09
  6.00000024e-01 0.00000000e+00 6.60000000e+01 5.19999981e-01
  0.00000000e+00 2.06809728e+09 1.29937562e+09 6.80000000e+01
  1.00000000e+00 6.71000000e+02 1.00000000e+00 3.70000000e+01
  4.00000000e+00 3.37000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.18000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.32000000e+02
  1.13000000e+02 8.80000000e+01 8.00000000e+00 2.08237722e+09
  6.00000024e-01 0.00000000e+00 4.70000000e+01 5.19999981e-01
  0.00000000e+00 2.09726413e+09 1.27511526e+09 6.90000000e+01
  1.00000000e+00 6.72000000e+02 1.00000000e+00 3.60000000e+01
  4.00000000e+00 3.46000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.00000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.05000000e+02
  1.24000000e+02 9.60000000e+01 9.00000000e+00 2.14748314e+09
  5.79999983e-01 0.00000000e+00 4.70000000e+01 5.00000000e-01
  0.00000000e+00 2.14748365e+09 1.10328256e+09 7.20000000e+01
  1.00000000e+00 6.34000000e+02 1.00000000e+00 3.60000000e+01
  5.00000000e+00 3.50000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.19000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.35000000e+02
  1.13000000e+02 9.60000000e+01 8.00000000e+00 2.08296448e+09
  6.10000014e-01 0.00000000e+00 5.80000000e+01 5.19999981e-01
  0.00000000e+00 2.07199859e+09 1.27169229e+09 6.90000000e+01
  1.00000000e+00 6.70000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.32000000e+02 4.00000000e+00]
 [5.10000000e+01 0.00000000e+00 1.00000000e+00 2.31000000e+02
  4.00000000e+00 5.00000000e+00 5.00000000e+00 5.20000000e+02
  1.04000000e+02 9.50000000e+01 8.00000000e+00 1.99329152e+09
  6.29999995e-01 0.00000000e+00 7.90000000e+01 5.19999981e-01
  0.00000000e+00 2.04129626e+09 1.27802726e+09 6.30000000e+01
  1.00000000e+00 6.81000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 3.22000000e+02 4.00000000e+00]
 [5.00000000e+01 0.00000000e+00 1.00000000e+00 2.76000000e+02
  3.00000000e+00 6.00000000e+00 5.00000000e+00 5.53000000e+02
  9.40000000e+01 8.50000000e+01 8.00000000e+00 1.91729434e+09
  6.49999976e-01 0.00000000e+00 7.90000000e+01 6.49999976e-01
  0.00000000e+00 1.81782835e+09 1.38964339e+09 5.40000000e+01
  1.00000000e+00 6.75000000e+02 1.00000000e+00 3.50000000e+01
  4.00000000e+00 2.84000000e+02 3.00000000e+00]
 [3.60000000e+01 0.00000000e+00 0.00000000e+00 4.95000000e+02
  1.00000000e+00 6.00000000e+00 5.00000000e+00 6.35000000e+02
  8.70000000e+01 4.70000000e+01 4.00000000e+00 1.97918944e+09
  7.50000000e-01 1.00000000e+00 9.74000000e+02 5.30000000e-01
  1.00000000e+00 1.28133676e+09 1.75932172e+09 6.30000000e+01
  1.00000000e+00 9.06000000e+02 1.00000000e+00 3.00000000e+01
  2.00000000e+00 3.11000000e+02 1.00000000e+00]
 [4.30000000e+01 0.00000000e+00 1.00000000e+00 4.44000000e+02
  3.00000000e+00 6.00000000e+00 7.00000000e+00 7.30000000e+02
  3.70000000e+01 9.50000000e+01 6.00000000e+00 1.40604521e+09
  7.40000000e-01 0.00000000e+00 9.68000000e+02 6.20000000e-01
  0.00000000e+00 1.53587342e+09 1.66573756e+09 3.70000000e+01
  1.00000000e+00 6.13000000e+02 0.00000000e+00 1.80000000e+01
  1.00000000e+00 2.91000000e+02 3.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.93000000e+02
  4.00000000e+00 4.00000000e+00 4.00000000e+00 8.56000000e+02
  9.60000000e+01 5.70000000e+01 6.00000000e+00 1.48620439e+09
  8.10000000e-01 0.00000000e+00 6.40000000e+02 6.20000000e-01
  0.00000000e+00 1.37230738e+09 1.84372018e+09 3.00000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 1.80000000e+01
  3.00000000e+00 3.41000000e+02 2.00000000e+00]
 [4.16102324e+01 3.33477953e-01 5.93589441e-01 3.41248021e+02
  2.77104115e+00 6.05863738e+00 5.64034187e+00 6.59920159e+02
  6.58720532e+01 6.71844961e+01 7.55148387e+00 2.11984778e+09
  6.16254885e-01 2.44449723e-01 7.88330881e+01 6.63713769e-01
  4.37943571e-02 1.60067212e+09 2.01134495e+09 6.13794440e+01
  6.16384431e-01 5.68523835e+02 3.50368571e-01 3.13449326e+01
  2.45101694e+00 2.32513524e+02 2.75066182e+00]
 [5.55228837e+01 2.44122650e-02 9.18028373e-01 2.42711259e+02
  3.47487379e+00 6.27833397e+00 5.18546092e+00 5.23505839e+02
  1.04431845e+02 7.38534547e+01 9.03889179e+00 1.88645251e+09
  6.54124784e-01 1.96673527e-01 2.24028205e+02 5.44952476e-01
  6.31195502e-02 1.98230525e+09 1.37869923e+09 6.68620237e+01
  8.64138658e-01 7.55588444e+02 8.00590539e-01 4.03581397e+01
  4.20727348e+00 2.71769479e+02 3.61506238e+00]
 [5.58357663e+01 2.23135526e-01 9.08584118e-01 2.49948296e+02
  3.48210248e+00 5.57932307e+00 5.78193121e+00 5.27966152e+02
  9.83890482e+01 7.12997164e+01 8.27711104e+00 1.85131560e+09
  7.29067736e-01 1.92155820e-01 1.06598477e+02 5.12007468e-01
  4.39480287e-02 2.05886174e+09 1.27889448e+09 6.05710122e+01
  9.10007433e-01 6.75023305e+02 8.64312128e-01 4.15943067e+01
  4.62735024e+00 3.11235915e+02 3.67813674e+00]
 [4.96840546e+01 1.29674171e-02 8.80845863e-01 2.49697560e+02
  3.67272672e+00 5.84817136e+00 4.70997446e+00 5.01492341e+02
  1.14490853e+02 1.00069976e+02 7.36050087e+00 1.90457921e+09
  6.42708071e-01 1.13353591e-01 2.61813323e+02 5.49391514e-01
  7.46335709e-02 1.87610369e+09 1.51919140e+09 6.90241607e+01
  9.56368641e-01 7.23153392e+02 8.89928595e-01 3.53812099e+01
  3.98541068e+00 2.97374188e+02 3.58144122e+00]
 [4.84383204e+01 6.16249392e-02 9.54209309e-01 2.22131539e+02
  3.71402928e+00 5.54310657e+00 5.51249587e+00 4.59160208e+02
  1.08872509e+02 9.57181229e+01 7.55300604e+00 2.02192458e+09
  5.86533298e-01 1.01822046e-01 1.63345613e+02 5.50029782e-01
  1.03391023e-01 2.12002480e+09 1.55721506e+09 6.84183550e+01
  9.35268922e-01 6.20784356e+02 9.56878269e-01 3.62244654e+01
  3.93048949e+00 3.03647770e+02 3.50930541e+00]
 [5.65887531e+01 1.24144077e-01 9.63204352e-01 2.47557160e+02
  3.85093830e+00 4.53770737e+00 5.06608566e+00 4.13876029e+02
  1.11392235e+02 1.09396172e+02 6.89100328e+00 2.01592116e+09
  5.95711420e-01 1.08705503e-01 1.38329319e+02 5.14464092e-01
  1.39948414e-01 2.11333360e+09 1.40566175e+09 6.30825897e+01
  9.81476582e-01 6.71630948e+02 9.16581634e-01 3.28197434e+01
  3.56074001e+00 3.22940122e+02 3.72255945e+00]
 [4.88580337e+01 1.25349550e-01 8.97435694e-01 2.38386863e+02
  3.74560898e+00 5.44124182e+00 4.48031988e+00 5.81304419e+02
  1.19675380e+02 1.01170559e+02 8.42600048e+00 2.09289103e+09
  5.56449692e-01 1.20932549e-01 1.51180906e+02 5.27906991e-01
  7.16943334e-02 1.96475930e+09 1.36888951e+09 6.46171097e+01
  9.53820333e-01 6.90350362e+02 9.13955021e-01 4.07010696e+01
  3.38869707e+00 3.29676843e+02 3.61259197e+00]
 [5.28025463e+01 1.21753276e-01 9.12391751e-01 2.27131075e+02
  3.70282830e+00 5.07049387e+00 4.66703670e+00 5.08081750e+02
  1.21766435e+02 1.04827500e+02 7.39460632e+00 1.94557725e+09
  6.08929623e-01 5.71521762e-02 4.81715471e+01 5.28460250e-01
  7.75702651e-02 2.01458376e+09 1.28512242e+09 7.17350059e+01
  8.88248015e-01 7.10253537e+02 8.63664320e-01 3.72382914e+01
  3.75009882e+00 3.11706847e+02 3.55188771e+00]
 [5.17418503e+01 1.09904584e-01 9.32927013e-01 2.26880396e+02
  3.80068519e+00 4.90969357e+00 5.26516165e+00 4.88587359e+02
  1.10194665e+02 1.11496010e+02 8.42768047e+00 1.95636934e+09
  6.00606106e-01 1.47965882e-01 1.31733434e+01 5.90843928e-01
  8.11782822e-02 2.00164097e+09 1.34549215e+09 6.80261474e+01
  9.13506621e-01 6.84422851e+02 9.10298973e-01 3.65758009e+01
  3.62579013e+00 3.22342263e+02 3.78770466e+00]
 [4.93158909e+01 7.20456485e-02 8.91706482e-01 2.24126583e+02
  3.81607818e+00 5.10130210e+00 5.14774338e+00 5.31191923e+02
  1.14703572e+02 9.53311009e+01 7.91229798e+00 2.06924578e+09
  5.89304146e-01 3.96147874e-02 1.34355108e+02 5.35364429e-01
  4.76267354e-02 2.14168187e+09 1.26875308e+09 7.17275275e+01
  9.33019431e-01 6.63733172e+02 9.45019953e-01 3.95959123e+01
  3.95600676e+00 3.30279974e+02 3.79292020e+00]
 [5.31092609e+01 4.42728177e-02 9.36721334e-01 2.03830127e+02
  3.87469693e+00 4.47590606e+00 5.08966055e+00 4.89628022e+02
  1.19707929e+02 1.00492775e+02 7.31095693e+00 2.12669622e+09
  5.70561514e-01 5.39974419e-02 8.65240624e+01 5.27312522e-01
  1.69116186e-02 2.03079555e+09 1.25446633e+09 6.90376385e+01
  9.42992583e-01 6.82970535e+02 9.55991066e-01 3.36197113e+01
  3.42713031e+00 3.36891164e+02 3.80375083e+00]
 [5.23478144e+01 8.04064818e-02 9.32037452e-01 2.23477266e+02
  3.88480342e+00 4.98801788e+00 5.23719244e+00 5.39040945e+02
  1.14986058e+02 8.39396996e+01 7.45433419e+00 2.09722501e+09
  6.02437909e-01 3.66870977e-02 8.68839384e+00 5.38108599e-01
  4.93547564e-02 1.96448934e+09 1.23338896e+09 6.91745511e+01
  9.43957150e-01 6.77357684e+02 9.65839971e-01 3.62028866e+01
  4.19453138e+00 3.37310595e+02 3.96324901e+00]
 [5.00086997e+01 3.82201730e-02 9.55904308e-01 2.28069761e+02
  3.90941729e+00 4.80270659e+00 5.23710181e+00 5.01953766e+02
  1.14090412e+02 8.93241407e+01 7.50493474e+00 2.07600064e+09
  6.11416676e-01 2.67292755e-02 1.06848612e+02 5.54679468e-01
  4.20382309e-02 1.99492493e+09 1.17070163e+09 6.91200140e+01
  9.41390432e-01 6.52416337e+02 9.19096219e-01 3.60268470e+01
  3.79664483e+00 3.40120797e+02 3.87791767e+00]
 [5.29070964e+01 7.95638355e-02 9.64259260e-01 2.11339387e+02
  3.94221644e+00 4.69044750e+00 4.86429974e+00 5.56720488e+02
  1.09555910e+02 9.13812589e+01 7.62326998e+00 1.98659794e+09
  5.79662430e-01 5.98775812e-02 6.05866729e+01 5.19704300e-01
  6.62022006e-02 2.07783013e+09 1.29162467e+09 6.92978591e+01
  9.42326370e-01 6.72128475e+02 9.70232548e-01 3.58118640e+01
  3.98103918e+00 3.43870975e+02 3.92155727e+00]
 [5.09521918e+01 5.85069852e-02 9.53128945e-01 2.31574020e+02
  3.93500341e+00 4.83471905e+00 4.97288129e+00 5.28269422e+02
  1.05903246e+02 9.71140006e+01 7.70812182e+00 2.13742233e+09
  6.30286885e-01 5.37320330e-02 5.67236811e+01 5.24106509e-01
  6.00584017e-02 2.07836188e+09 1.26302196e+09 7.14992644e+01
  9.41625858e-01 6.90045271e+02 9.78820185e-01 3.81014929e+01
  3.99296909e+00 3.29891441e+02 3.85107457e+00]
 [5.18138914e+01 7.32162940e-02 9.70447775e-01 2.34715312e+02
  3.85441591e+00 4.91412392e+00 5.18160517e+00 5.37636040e+02
  1.02886888e+02 9.73249314e+01 7.54133920e+00 2.10466088e+09
  6.28612408e-01 3.04503028e-02 8.97455536e+00 5.02235922e-01
  9.00473960e-02 2.10905222e+09 1.28332900e+09 7.16139095e+01
  9.32675291e-01 7.01260995e+02 9.65928711e-01 3.78878183e+01
  3.82539761e+00 3.20559926e+02 3.73667538e+00]
 [5.08552424e+01 7.02536082e-02 9.37190526e-01 2.16065724e+02
  3.78571231e+00 4.58263516e+00 4.90417382e+00 5.40473863e+02
  1.06000729e+02 9.45934004e+01 7.29261524e+00 2.11861009e+09
  6.50409634e-01 7.05382486e-02 6.53785093e+01 5.19348490e-01
  7.18737172e-02 2.06109913e+09 1.31135719e+09 7.10883205e+01
  9.59364859e-01 6.71001026e+02 9.39988703e-01 3.82567810e+01
  3.88285161e+00 3.32869014e+02 3.76159792e+00]
 [5.03899352e+01 5.28949923e-02 9.54216820e-01 2.23762517e+02
  3.96158473e+00 4.89749031e+00 5.16063910e+00 4.99578845e+02
  1.10077719e+02 9.65370568e+01 7.47826001e+00 2.12910966e+09
  6.30857433e-01 9.41835015e-02 4.12132627e+01 5.26323793e-01
  1.08195665e-02 2.09275859e+09 1.32125038e+09 7.05481352e+01
  9.59796014e-01 6.84301683e+02 9.48692336e-01 3.88522332e+01
  3.77891863e+00 3.40886461e+02 3.86198691e+00]
 [5.01558507e+01 3.07324334e-02 9.94372965e-01 2.27135137e+02
  3.90540783e+00 4.86460406e+00 4.77621000e+00 5.23564798e+02
  1.10341387e+02 9.65045337e+01 7.63186196e+00 2.12071782e+09
  6.13994939e-01 1.30728776e-02 6.55934995e+01 5.26878315e-01
  1.15393622e-02 2.11049971e+09 1.25798811e+09 7.03208183e+01
  9.41516192e-01 7.00193015e+02 9.83068956e-01 3.96800975e+01
  3.74346294e+00 3.36523966e+02 3.88604765e+00]
 [5.13691857e+01 3.03672541e-02 9.37814792e-01 2.25348820e+02
  3.92676716e+00 4.93502611e+00 4.90411917e+00 5.49698123e+02
  1.06959775e+02 9.48261703e+01 7.67001070e+00 2.11795207e+09
  6.32201910e-01 1.50057476e-02 6.50587548e+01 5.33153057e-01
  7.46701972e-02 2.10210024e+09 1.31489326e+09 7.08424278e+01
  9.39500062e-01 6.84646218e+02 9.51191066e-01 3.63195754e+01
  3.97533285e+00 3.32898617e+02 3.89329167e+00]
 [5.06742851e+01 5.73284951e-02 9.22708752e-01 2.35475088e+02
  3.91294748e+00 4.93225193e+00 5.02564511e+00 5.27186712e+02
  1.04900808e+02 9.34646491e+01 7.60075856e+00 2.11114270e+09
  6.29077238e-01 4.04658105e-02 5.10754327e+01 5.09791521e-01
  7.52264037e-02 2.09532985e+09 1.25593854e+09 7.13909770e+01
  9.32584770e-01 6.92196850e+02 9.86675360e-01 3.95859710e+01
  3.88347277e+00 3.23488146e+02 3.85834755e+00]
 [5.11000956e+01 6.36187310e-02 9.58183982e-01 2.34095252e+02
  3.97760892e+00 4.81041356e+00 5.03788103e+00 5.18251667e+02
  1.08477804e+02 9.38332344e+01 7.69851844e+00 2.13287191e+09
  6.21366344e-01 3.55369250e-02 3.27531372e+01 5.31909969e-01
  3.42651650e-02 2.06785513e+09 1.26233200e+09 7.15003012e+01
  9.66004829e-01 6.82517862e+02 9.70692494e-01 3.81160471e+01
  3.92295556e+00 3.30146103e+02 3.90710216e+00]
 [5.04577765e+01 6.53271224e-02 9.48411184e-01 2.40905088e+02
  3.93254668e+00 4.72280744e+00 4.95012818e+00 5.35494304e+02
  1.05567287e+02 9.75685113e+01 7.61282045e+00 2.12205402e+09
  6.22126963e-01 5.28136350e-02 4.98977984e+01 5.14226311e-01
  7.65489565e-02 2.06567010e+09 1.27052631e+09 7.17550971e+01
  9.35314096e-01 6.78825743e+02 9.72001174e-01 3.84778279e+01
  3.91323807e+00 3.28759860e+02 3.84795038e+00]
 [5.01640695e+01 5.63105044e-02 9.66124538e-01 2.28705605e+02
  3.84461431e+00 4.85396451e+00 4.98941345e+00 5.23970161e+02
  1.07793896e+02 9.57884876e+01 7.69625861e+00 2.11837201e+09
  6.23204814e-01 6.37644221e-02 7.19346193e+01 5.19232956e-01
  7.46905714e-02 2.06997561e+09 1.25961354e+09 7.14684150e+01
  9.43200062e-01 7.08706853e+02 9.75441025e-01 3.81983278e+01
  3.91173188e+00 3.29043277e+02 3.85649073e+00]
 [5.03737765e+01 2.66058442e-02 9.62930965e-01 2.34200570e+02
  3.94615235e+00 4.87638809e+00 5.03119573e+00 5.30775851e+02
  1.08280190e+02 9.60429002e+01 7.69074701e+00 2.12294814e+09
  6.34730806e-01 6.47136472e-02 6.39675906e+01 5.28226873e-01
  6.28857890e-02 2.08108888e+09 1.27520351e+09 7.05715767e+01
  9.44292921e-01 6.91825461e+02 9.93878971e-01 3.75878606e+01
  3.92749703e+00 3.28650066e+02 3.89389916e+00]]
标准化后的train_x = 
[[ 1.67844803e-01 -4.89400914e-01  4.91583416e-01 -5.24974868e-01
   5.61423354e-01 -2.94162533e-01 -8.60850849e-02 -1.58714666e-01
   2.64270169e-01  2.12852495e-01  4.93620493e-01  3.43400057e-01
  -3.50096075e-01 -5.16544252e-01 -3.87488178e-01 -3.23243011e-01
  -4.69455104e-01  3.93755679e-01 -4.96993298e-01  1.93792900e-01
   4.69464290e-01 -2.84453938e-01  4.97204416e-01 -6.96589036e-02
   4.44682956e-01  4.66770498e-01  6.89762400e-01]
 [-7.21797387e-01 -4.89400914e-01 -3.25661269e+00  1.80411342e+00
  -2.14067799e+00  4.03088995e+00  1.66524900e+00 -1.65950336e+00
  -1.20231380e+00  3.61563879e-01  4.93620493e-01 -2.50954052e+00
  -1.66301145e+00  3.27976902e+00  6.23843444e-01 -8.51731605e-02
   3.33635086e+00 -3.39245141e+00  8.51335996e-01 -8.39568570e-01
  -4.00597932e+00  4.33533418e+00 -3.10229779e+00  1.58683834e+00
  -7.86853549e-01 -4.60621045e+00 -9.59236487e-01]
 [ 2.61436082e+00  3.99668836e+00 -3.25661269e+00  1.96866857e+00
  -3.49172866e+00  1.14752163e+00 -3.58875325e+00  3.05566111e+00
  -3.40218976e+00  1.77432202e+00 -3.42303422e+00 -3.88716464e-01
   9.62819302e-01  3.27976902e+00 -2.98384071e-01  2.53359519e+00
   3.33635086e+00 -8.65285198e-01 -1.47173873e+00 -3.28205932e+00
   4.69464290e-01  2.30445048e-01 -3.10229779e+00 -3.21700367e+00
  -3.24992656e+00  8.29126280e-01 -9.59236487e-01]
 [ 1.67844803e-01 -4.89400914e-01  4.91583416e-01 -4.99658691e-01
   5.61423354e-01 -2.94162533e-01 -8.60850849e-02 -1.92314413e-01
   3.69026167e-01  6.41411109e-02  4.93620493e-01  4.09030291e-01
  -5.37654967e-01 -5.16544252e-01 -3.74122562e-01 -5.61313315e-01
  -4.69455104e-01  4.67689013e-01 -2.98323798e-01  2.87734852e-01
   4.69464290e-01 -2.98756687e-01  4.97204416e-01  2.61640545e-01
   4.44682956e-01  5.22517541e-01  6.89762400e-01]
 [ 1.67844803e-01 -4.89400914e-01  4.91583416e-01 -5.62949134e-01
   5.61423354e-01 -2.94162533e-01 -8.60850849e-02 -1.69914582e-01
   5.26160164e-01 -3.07637349e-01  4.93620493e-01  4.35346715e-01
  -5.37654967e-01 -5.16544252e-01 -4.58771464e-01 -5.61313315e-01
  -4.69455104e-01  5.84485960e-01 -4.25264210e-01  3.81676804e-01
   4.69464290e-01 -2.84453938e-01  4.97204416e-01  9.59908208e-02
   4.44682956e-01  7.73379237e-01  6.89762400e-01]
 [ 1.67844803e-01 -4.89400914e-01  4.91583416e-01 -7.90794727e-01
   5.61423354e-01 -2.94162533e-01 -8.60850849e-02 -4.72312303e-01
   1.10231815e+00  2.87208187e-01  1.47278417e+00  8.07644270e-01
  -9.12774407e-01 -5.16544252e-01 -4.58771464e-01 -1.03745256e+00
  -4.69455104e-01  7.85587108e-01 -1.32436552e+00  6.63502659e-01
   4.69464290e-01 -8.27958422e-01  4.97204416e-01  9.59908208e-02
   1.67621946e+00  8.84873323e-01  6.89762400e-01]
 [-5.45657446e-02 -4.89400914e-01  4.91583416e-01 -5.50291045e-01
   5.61423354e-01 -2.94162533e-01 -8.60850849e-02 -1.36314835e-01
   5.26160164e-01  2.87208187e-01  4.93620493e-01  4.38704889e-01
  -3.50095807e-01 -5.16544252e-01 -4.09764205e-01 -5.61313315e-01
  -4.69455104e-01  4.83311590e-01 -4.43174667e-01  3.81676804e-01
   4.69464290e-01 -3.13059437e-01  4.97204416e-01 -6.96589036e-02
   4.44682956e-01  3.83149933e-01  6.89762400e-01]
 [ 1.67844803e-01 -4.89400914e-01  4.91583416e-01 -3.98393983e-01
   5.61423354e-01 -2.94162533e-01 -8.60850849e-02 -3.04313569e-01
   5.47581729e-02  2.12852495e-01  4.93620493e-01 -7.40752661e-02
   2.50225150e-02 -5.16544252e-01 -3.16204892e-01 -5.61313315e-01
  -4.69455104e-01  3.60365870e-01 -4.10027396e-01 -1.81974907e-01
   4.69464290e-01 -1.55729191e-01  4.97204416e-01 -6.96589036e-02
   4.44682956e-01  1.04414716e-01  6.89762400e-01]
 [-5.45657446e-02 -4.89400914e-01  4.91583416e-01  1.71220002e-01
  -7.89627319e-01  1.14752163e+00 -8.60850849e-02  6.52836457e-02
  -4.69021817e-01 -5.30704424e-01  4.93620493e-01 -5.08652733e-01
   4.00140836e-01 -5.16544252e-01 -3.16204892e-01  2.53359463e+00
  -4.69455104e-01 -5.34498359e-01  1.73995344e-01 -1.02745247e+00
   4.69464290e-01 -2.41545689e-01  4.97204416e-01 -6.96589036e-02
   4.44682956e-01 -9.54779109e-01 -9.59236487e-01]
 [-3.16831341e+00 -4.89400914e-01 -3.25661269e+00  2.94334139e+00
  -3.49172866e+00  1.14752163e+00 -8.60850849e-02  9.83676724e-01
  -8.35667810e-01 -3.35622072e+00 -3.42303422e+00 -1.54715687e-01
   2.27573468e+00  3.27976902e+00  3.67120393e+00 -3.23243011e-01
   3.33635086e+00 -2.68284773e+00  2.10830853e+00 -1.81974907e-01
   4.69464290e-01  3.06238947e+00  4.97204416e-01 -8.97907526e-01
  -2.01839005e+00 -2.02194023e-01 -4.25723426e+00]
 [-1.61143958e+00 -4.89400914e-01  4.91583416e-01  2.29777888e+00
  -7.89627319e-01  1.14752163e+00  3.41658308e+00  2.04766871e+00
  -3.45456776e+00  2.12852495e-01 -1.46470686e+00 -3.43214722e+00
   2.08817534e+00 -5.16544252e-01  3.64447269e+00  1.81938564e+00
  -4.69455104e-01 -1.66357049e+00  1.61863667e+00 -2.62446565e+00
   4.69464290e-01 -1.12831616e+00 -3.10229779e+00 -2.88570422e+00
  -3.24992656e+00 -7.59664457e-01 -9.59236487e-01]
 [-2.50108177e+00  3.99668836e+00  4.91583416e-01  2.91802521e+00
   5.61423354e-01 -1.73584669e+00 -1.83741917e+00  3.45885807e+00
  -3.64265819e-01 -2.61266380e+00 -1.46470686e+00 -2.97377009e+00
   3.40109072e+00 -5.16544252e-01  2.18316533e+00  1.81938564e+00
  -4.69455104e-01 -2.31856121e+00  2.54991695e+00 -3.28205932e+00
  -4.00597932e+00 -3.27362186e-01  4.97204416e-01 -2.88570422e+00
  -7.86853549e-01  6.34011628e-01 -2.60823537e+00]
 [-1.92053855e+00  1.00661095e+00 -1.03172306e+00  9.97135222e-01
  -1.09896233e+00  1.23205821e+00  1.03536746e+00  1.26278040e+00
  -1.94230738e+00 -1.85538855e+00  5.44497888e-02  6.49616025e-01
  -2.32779857e-01  4.11463475e-01 -3.16948519e-01  2.86007868e+00
  -3.02782278e-01 -1.40408785e+00  3.42700057e+00 -3.34213101e-01
  -1.24738556e+00 -1.76444762e+00 -1.84114534e+00 -6.75119811e-01
  -1.46294622e+00 -2.38988851e+00 -1.37039487e+00]
 [ 1.17378183e+00 -3.79885314e-01  1.84337684e-01 -2.50151823e-01
  -1.48048759e-01  1.54879130e+00  2.38718948e-01 -2.65048462e-01
   7.73773498e-02 -1.35951351e+00  1.51086560e+00 -6.85016648e-01
   4.77505459e-01  2.30090069e-01  3.29925547e-01  3.27303706e-02
  -2.29234343e-01  1.24139830e-01  1.16730873e-01  1.80831134e-01
  -1.38575485e-01  9.11090642e-01 -2.20570379e-01  8.17915466e-01
   6.99947810e-01 -1.29568682e+00  5.50006892e-02]
 [ 1.24337024e+00  5.11604977e-01  1.48938764e-01 -1.58544769e-01
  -1.38282435e-01  5.41038369e-01  1.28333770e+00 -2.15093335e-01
  -2.39132257e-01 -1.54939849e+00  7.64957554e-01 -8.85941350e-01
   1.88313052e+00  2.12939437e-01 -1.93248010e-01 -7.51590945e-01
  -3.02197434e-01  4.30705838e-01 -4.05489743e-01 -4.10158762e-01
   6.67076336e-02 -2.41212367e-01  8.79562280e-03  1.02268619e+00
   1.21728767e+00 -1.95618231e-01  1.59010245e-01]
 [-1.24835333e-01 -4.31227923e-01  4.49703440e-02 -1.61718615e-01
   1.19260570e-01  9.28632688e-01 -5.94016696e-01 -5.11597792e-01
   6.04248079e-01  5.89834070e-01 -1.32553824e-01 -5.81362089e-01
   2.63374345e-01 -8.62185103e-02  4.98266009e-01  1.38410463e-01
  -1.85414214e-01 -3.01138144e-01  8.51845231e-01  3.83946509e-01
   2.74194602e-01  4.47180213e-01  1.01002150e-01 -6.51158492e-03
   4.26715682e-01 -5.81993388e-01 -4.40554660e-04]
 [-4.01899751e-01 -2.12945935e-01  3.19950927e-01 -5.10651746e-01
   1.75062420e-01  4.88825605e-01  8.11466407e-01 -9.85714098e-01
   3.09970441e-01  2.66249023e-01  5.59402413e-02  8.96582180e-02
  -7.90235983e-01 -1.29995867e-01  5.95721355e-02  1.53605704e-01
  -7.59689312e-02  6.75629764e-01  1.05080112e+00  3.27035935e-01
   1.79763999e-01 -1.01697847e+00  3.41987652e-01  1.33173452e-01
   3.59078223e-01 -4.07126556e-01 -1.19392433e-01]
 [ 1.41084245e+00  6.75204982e-02  3.53666112e-01 -1.88811991e-01
   3.60033447e-01 -9.60642496e-01  2.96529770e-02 -1.49289308e+00
   4.41948657e-01  1.28328985e+00 -5.92268815e-01  5.53286462e-02
  -6.18091730e-01 -1.03864110e-01 -5.18805901e-02 -6.93106130e-01
   6.31614035e-02  6.48835232e-01  2.57810185e-01 -1.74216272e-01
   3.86563777e-01 -2.89732395e-01  1.96939825e-01 -4.30817815e-01
  -9.62817587e-02  1.30619231e-01  2.32263237e-01]
 [-3.08551093e-01  7.29283589e-02  1.07152285e-01 -3.04890413e-01
   2.17728192e-01  3.41968805e-01 -9.96218597e-01  3.82290744e-01
   8.75803235e-01  6.71668669e-01  9.10744693e-01  4.95468249e-01
  -1.35448212e+00 -5.74464112e-02  5.37586960e-03 -3.73071237e-01
  -1.96600382e-01  5.38780796e-02  6.54022832e-02 -3.00604620e-02
   2.62789796e-01 -2.19933112e-02  1.87485323e-01  8.74721712e-01
  -3.08158917e-01  3.18395355e-01  5.09269873e-02]
 [ 5.68750119e-01  5.67951505e-02  1.63210519e-01 -4.47367178e-01
   1.59929331e-01 -1.92532635e-01 -6.69215064e-01 -4.37796959e-01
   9.85328461e-01  9.43583073e-01 -9.91590052e-02 -3.46921491e-01
  -3.70171990e-01 -2.99576687e-01 -4.53551981e-01 -3.59899815e-01
  -1.74237726e-01  2.53397240e-01 -3.72902554e-01  6.38608598e-01
  -3.06754149e-02  2.62676826e-01  6.46383504e-03  3.01113446e-01
   1.36920525e-01 -1.82491705e-01 -4.91742755e-02]
 [ 3.32840139e-01  3.64086114e-03  2.40180708e-01 -4.50540293e-01
   2.92138949e-01 -4.24355877e-01  3.78301550e-01 -6.56132500e-01
   3.79222345e-01  1.43942474e+00  9.12389677e-01 -2.85208731e-01
  -5.26287332e-01  4.51805885e-02 -6.09476167e-01  1.12526748e+00
  -1.60506313e-01  2.01568588e-01 -5.70226014e-02  2.90191187e-01
   8.23680513e-02 -1.06773008e-01  1.74325372e-01  1.91372077e-01
  -1.61701608e-02  1.13954778e-01  3.39687617e-01]
 [-2.06718829e-01 -1.66197703e-01  8.56780717e-02 -4.85398306e-01
   3.12935650e-01 -1.48116894e-01  1.72662924e-01 -1.78964977e-01
   6.15389877e-01  2.37471730e-01  4.07745858e-01  3.60256760e-01
  -7.38266142e-01 -3.66154109e-01 -6.95865168e-02 -1.95532140e-01
  -2.88196990e-01  7.62354235e-01 -4.58553865e-01  6.37906059e-01
   1.69696529e-01 -4.02692312e-01  2.99303615e-01  6.91652700e-01
   3.90503681e-01  3.35206750e-01  3.48288048e-01]
 [ 6.36966677e-01 -2.90789101e-01  2.54402566e-01 -7.42312636e-01
   3.92132561e-01 -1.04974047e+00  7.09404939e-02 -6.44477162e-01
   8.77508064e-01  6.21271613e-01 -1.81065458e-01  6.88777676e-01
  -1.08980171e+00 -3.11553047e-01 -2.82683649e-01 -3.87223749e-01
  -4.05092765e-01  3.18316405e-01 -5.33308131e-01  3.85212635e-01
   2.14330813e-01 -1.27545126e-01  3.38794163e-01 -2.98303355e-01
  -2.60826980e-01  5.19483898e-01  3.66147738e-01]
 [ 4.67612949e-01 -1.28690258e-01  2.36846459e-01 -4.93617415e-01
   4.05786943e-01 -3.11436960e-01  3.29318117e-01 -9.10565945e-02
   6.30185887e-01 -6.09543798e-01 -4.06756490e-02  5.20251394e-01
  -4.91930161e-01 -3.77268536e-01 -6.29457538e-01 -1.30201705e-01
  -2.81620477e-01  5.27970491e-02 -6.43593856e-01  3.98074474e-01
   2.18647676e-01 -2.07824328e-01  3.74245316e-01  1.29598927e-01
   6.84255446e-01  5.31174906e-01  6.29160058e-01]
 [-5.26308350e-02 -3.17941806e-01  3.26304116e-01 -4.35485212e-01
   4.39041523e-01 -5.78597320e-01  3.29159392e-01 -5.06429866e-01
   5.83273786e-01 -2.09179948e-01  8.87057541e-03  3.98883336e-01
  -3.23524991e-01 -4.15071549e-01 -1.92133606e-01  2.64300719e-01
  -3.09465754e-01  1.74674580e-01 -9.71600447e-01  3.92951152e-01
   2.07160472e-01 -5.64554163e-01  2.05991078e-01  1.00438015e-01
   1.94243642e-01  6.09505133e-01  4.88448771e-01]
 [ 5.92003158e-01 -1.32470445e-01  3.57620115e-01 -6.47259759e-01
   4.83354831e-01 -7.40439470e-01 -3.23741569e-01  1.06952802e-01
   3.45765612e-01 -5.62215055e-02  1.24740145e-01 -1.12351381e-01
  -9.19105535e-01 -2.89230196e-01 -3.98240046e-01 -5.68352588e-01
  -2.17502374e-01  5.06663643e-01 -3.38880004e-01  4.09658271e-01
   2.11349211e-01 -2.82616387e-01  3.90056407e-01  6.48261483e-02
   4.21332015e-01  7.14035799e-01  5.60410429e-01]
 [ 1.57211760e-01 -2.26933355e-01  3.15901511e-01 -3.91127990e-01
   4.73609664e-01 -5.32445463e-01 -1.33579012e-01 -2.11696740e-01
   1.54446414e-01  3.70040472e-01  2.07823980e-01  7.50113213e-01
   3.04034023e-02 -3.12560622e-01 -4.15450468e-01 -4.63549260e-01
  -2.40884480e-01  5.08793012e-01 -4.88541470e-01  6.16462579e-01
   2.08214112e-01 -2.63569401e-02  4.20967624e-01  4.44102545e-01
   4.36024130e-01  3.24376966e-01  4.44184532e-01]
 [ 3.48862839e-01 -1.60946083e-01  3.80815883e-01 -3.51365231e-01
   3.64731873e-01 -4.17968715e-01  2.31966236e-01 -1.06791405e-01
  -3.54438632e-03  3.85724376e-01  4.45165008e-02  5.62772230e-01
  -1.00298676e-03 -4.00945363e-01 -6.28182630e-01 -9.84221992e-01
  -1.26752187e-01  6.31690672e-01 -3.82286473e-01  6.27232565e-01
   1.68156352e-01  1.34058752e-01  3.74564737e-01  4.08707401e-01
   2.29653744e-01  6.42747876e-02  2.55540395e-01]
 [ 1.35649187e-01 -1.74236956e-01  2.56161189e-01 -5.87433364e-01
   2.71909823e-01 -8.95870815e-01 -2.53908733e-01 -7.50080268e-02
   1.59552334e-01  1.82619497e-01 -1.99024969e-01  6.42538468e-01
   4.07824343e-01 -2.48758962e-01 -3.76891431e-01 -5.76823344e-01
  -1.95917682e-01  4.39665340e-01 -2.35631151e-01  5.77857712e-01
   2.87604007e-01 -2.98742011e-01  2.81193620e-01  4.69825976e-01
   3.00410433e-01  4.07372421e-01  2.96637638e-01]
 [ 3.21599615e-02 -2.52109256e-01  3.19979078e-01 -4.90006686e-01
   5.09522384e-01 -4.41949136e-01  1.95247651e-01 -5.33028777e-01
   3.73096957e-01  3.27141420e-01 -1.72483585e-02  7.02578568e-01
   4.11045693e-02 -1.58994175e-01 -4.84552567e-01 -4.10762405e-01
  -4.28277933e-01  5.66443793e-01 -1.83865780e-01  5.27111648e-01
   2.89533619e-01 -1.08506049e-01  3.12522367e-01  5.68462458e-01
   1.72413184e-01  6.30846901e-01  4.62178964e-01]
 [-1.99029117e-02 -3.51532474e-01  4.70492185e-01 -4.47315758e-01
   4.33624533e-01 -4.89360714e-01 -4.78016142e-01 -2.64388127e-01
   3.86907343e-01  3.24723139e-01  1.33153098e-01  6.54591194e-01
  -2.75167263e-01 -4.66915513e-01 -3.75933605e-01 -3.97560927e-01
  -4.25538530e-01  6.37487072e-01 -5.14880732e-01  5.05757055e-01
   2.07723305e-01  1.18783693e-01  4.36261087e-01  7.05597953e-01
   1.28748204e-01  5.09248789e-01  5.01855100e-01]
 [ 2.49955587e-01 -3.53170701e-01  2.58501060e-01 -4.69927116e-01
   4.62482073e-01 -3.87834365e-01 -2.54004454e-01  2.83028976e-02
   2.09785251e-01  1.99927266e-01  1.70506958e-01  6.38775696e-01
   6.63214788e-02 -4.59577733e-01 -3.78316003e-01 -2.48178237e-01
  -1.85274822e-01  6.03851884e-01 -2.17128953e-01  5.54758065e-01
   1.98700230e-01 -1.03578242e-01  3.21516552e-01  1.48928403e-01
   4.14304460e-01  4.08197559e-01  5.13800476e-01]
 [ 9.54023631e-02 -2.32220167e-01  2.01880663e-01 -3.41747916e-01
   4.43810988e-01 -3.91833847e-01 -4.11719225e-02 -2.23823006e-01
   1.01940708e-01  9.86904148e-02  1.02697780e-01  5.99837411e-01
   7.71534989e-03 -3.62923358e-01 -4.40614575e-01 -8.04345960e-01
  -1.83158007e-01  5.76740263e-01 -5.25604937e-01  6.06289853e-01
   1.67751232e-01  4.41654676e-03  4.49242345e-01  6.90005924e-01
   3.01175424e-01  1.45894577e-01  4.56177659e-01]
 [ 1.90107114e-01 -2.04001607e-01  3.34848781e-01 -3.59214011e-01
   5.31171873e-01 -5.67486294e-01 -1.97427507e-02 -3.23894751e-01
   2.89296605e-01  1.26096833e-01  1.98420698e-01  7.24092342e-01
  -1.36909677e-01 -3.81634952e-01 -5.22244164e-01 -2.77772397e-01
  -3.39048534e-01  4.66719347e-01 -4.92151655e-01  6.16559978e-01
   3.17320820e-01 -1.34019592e-01  3.91711983e-01  4.46513446e-01
   3.49799917e-01  3.31475284e-01  5.36573973e-01]
 [ 4.72485768e-02 -1.96337611e-01  2.98218416e-01 -2.73014500e-01
   4.70290503e-01 -6.93786650e-01 -1.73427296e-01 -1.30778675e-01
   1.36849553e-01  4.03835933e-01  1.14508340e-01  6.62232054e-01
  -1.22643551e-01 -3.16047149e-01 -4.45861177e-01 -6.98766996e-01
  -1.78124628e-01  4.57969508e-01 -4.49275535e-01  6.40496007e-01
   1.79966174e-01 -1.86827047e-01  3.96422579e-01  5.06442333e-01
   3.37832473e-01  2.92835834e-01  4.39032745e-01]
 [-1.80749529e-02 -2.36786964e-01  3.64611541e-01 -4.27436638e-01
   3.51489417e-01 -5.04699582e-01 -1.04625667e-01 -2.59848099e-01
   2.53474865e-01  2.71481034e-01  1.96207952e-01  6.41177060e-01
  -1.02427454e-01 -2.74474530e-01 -3.47682614e-01 -5.79573872e-01
  -1.85197281e-01  4.75210681e-01 -5.06375757e-01  6.13564526e-01
   2.15259371e-01  2.40554995e-01  4.08804332e-01  4.60143216e-01
   3.35977545e-01  3.00735645e-01  4.53115777e-01]
 [ 2.85660950e-02 -3.70044722e-01  3.52641403e-01 -3.57880889e-01
   4.88672451e-01 -4.72371867e-01 -3.14509346e-02 -1.83624942e-01
   2.78945982e-01  2.90398063e-01  1.90811194e-01  6.67344905e-01
   1.13753296e-01 -2.70870974e-01 -3.83177363e-01 -3.65455815e-01
  -2.30123993e-01  5.19713106e-01 -4.24802488e-01  5.29313784e-01
   2.20150400e-01 -8.95340420e-04  4.75171760e-01  3.59019494e-01
   3.55392898e-01  2.89775480e-01  5.14802237e-01]]================= config38 =================
2022年 02月 19日 星期六 23:08:32 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (221563) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (151379) - 没有那个进程

train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291]
upper = 
[4781.31363328 5233.18569684 5250.45456312 ... 5308.63217192 4997.8633864
 5166.82502164]
upper.argmax() = 6715
all predict_target = 
[3811.89141392 2774.47078534 2719.92056948 ... 2527.68776076 3271.56355029
 2810.62428325]
upper.argmax() = 6715, sortnumber[0] = 6715
x_max = [5.09667194e+01 6.42861703e-02 9.66948707e-01 2.36463731e+02
 3.92150604e+00 4.83141274e+00 4.91710777e+00 5.33180032e+02
 1.05087115e+02 9.52341137e+01 7.61333867e+00 2.11420040e+09
 6.22000723e-01 4.92146060e-02 5.64401464e+01 5.19852728e-01
 5.05315076e-02 2.07941479e+09 1.25749648e+09 7.14218851e+01
 9.35192570e-01 6.83251978e+02 9.83323325e-01 3.82322787e+01
 3.96256549e+00 3.33781240e+02 3.82199032e+00]
black_box_function中schafferRun(i) 中的i为[50.96671935626022, 0.06428617028133547, 0.9669487071966553, 236.46373098218342, 3.9215060442049734, 4.831412736573831, 4.917107766075501, 533.1800320234767, 105.08711456249847, 95.23411369273056, 7.613338674448533, 2114200399.0593946, 0.6220007234915513, 0.049214606042917095, 56.440146409909744, 0.5198527275405178, 0.05053150764499887, 2079414793.889207, 1257496481.2823873, 71.42188511955598, 0.9351925699983739, 683.2519780378386, 0.983323325025013, 38.23227867867267, 3.962565488707471, 333.78124038215276, 3.8219903166718594]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.96671935626022
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06428617028133547
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9669487071966553
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 236.46373098218342
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9215060442049734
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.831412736573831
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.917107766075501
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 533.1800320234767
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 105.08711456249847
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.23411369273056
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.613338674448533
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2114200399.0593946
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6220007234915513
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.049214606042917095
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 56.440146409909744
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5198527275405178
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.05053150764499887
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2079414793.889207
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1257496481.2823873
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.42188511955598
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9351925699983739
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 683.2519780378386
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.983323325025013
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.23227867867267
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.962565488707471
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 333.78124038215276
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8219903166718594
configNum = 38	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 38 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.96671935626022, 'spark.broadcast.checksum': 0.06428617028133547, 'spark.broadcast.compress': 0.9669487071966553, 'spark.default.parallelism': 236.46373098218342, 'spark.executor.cores': 3.9215060442049734, 'spark.executor.instances': 4.831412736573831, 'spark.executor.memory': 4.917107766075501, 'spark.executor.memoryOverhead': 533.1800320234767, 'spark.kryoserializer.buffer': 105.08711456249847, 'spark.kryoserializer.buffer.max': 95.23411369273056, 'spark.locality.wait': 7.613338674448533, 'spark.maxRemoteBlockSizeFetchToMem': 2114200399.0593946, 'spark.memory.fraction': 0.6220007234915513, 'spark.memory.offHeap.enabled': 0.049214606042917095, 'spark.memory.offHeap.size': 56.440146409909744, 'spark.memory.storageFraction': 0.5198527275405178, 'spark.rdd.compress': 0.05053150764499887, 'spark.reducer.maxBlocksInFlightPerAddress': 2079414793.889207, 'spark.reducer.maxReqsInFlight': 1257496481.2823873, 'spark.reducer.maxSizeInFlight': 71.42188511955598, 'spark.scheduler.mode': 0.9351925699983739, 'spark.scheduler.revive.interval': 683.2519780378386, 'spark.shuffle.compress': 0.983323325025013, 'spark.shuffle.file.buffer': 38.23227867867267, 'spark.shuffle.io.numConnectionsPerPeer': 3.962565488707471, 'spark.shuffle.sort.bypassMergeThreshold': 333.78124038215276, 'spark.storage.memoryMapThreshold': 3.8219903166718594} target = -170.317
x_probe = {'spark.broadcast.blockSize': 50.96671935626022, 'spark.broadcast.checksum': 0.06428617028133547, 'spark.broadcast.compress': 0.9669487071966553, 'spark.default.parallelism': 236.46373098218342, 'spark.executor.cores': 3.9215060442049734, 'spark.executor.instances': 4.831412736573831, 'spark.executor.memory': 4.917107766075501, 'spark.executor.memoryOverhead': 533.1800320234767, 'spark.kryoserializer.buffer': 105.08711456249847, 'spark.kryoserializer.buffer.max': 95.23411369273056, 'spark.locality.wait': 7.613338674448533, 'spark.maxRemoteBlockSizeFetchToMem': 2114200399.0593946, 'spark.memory.fraction': 0.6220007234915513, 'spark.memory.offHeap.enabled': 0.049214606042917095, 'spark.memory.offHeap.size': 56.440146409909744, 'spark.memory.storageFraction': 0.5198527275405178, 'spark.rdd.compress': 0.05053150764499887, 'spark.reducer.maxBlocksInFlightPerAddress': 2079414793.889207, 'spark.reducer.maxReqsInFlight': 1257496481.2823873, 'spark.reducer.maxSizeInFlight': 71.42188511955598, 'spark.scheduler.mode': 0.9351925699983739, 'spark.scheduler.revive.interval': 683.2519780378386, 'spark.shuffle.compress': 0.983323325025013, 'spark.shuffle.file.buffer': 38.23227867867267, 'spark.shuffle.io.numConnectionsPerPeer': 3.962565488707471, 'spark.shuffle.sort.bypassMergeThreshold': 333.78124038215276, 'spark.storage.memoryMapThreshold': 3.8219903166718594}
target = -170.317
================= config39 =================
2022年 02月 19日 星期六 23:11:30 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (233115) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (165443) - 没有那个进程
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.00485685e+01 5.18848702e+01]
 [3.82130116e-02 9.03593290e-02]
 [9.41095003e-01 9.92802411e-01]
 [2.28614712e+02 2.44312750e+02]
 [3.84136037e+00 4.00000000e+00]
 [4.72146141e+00 4.94136406e+00]
 [4.80402248e+00 5.03019306e+00]
 [5.19515853e+02 5.46844211e+02]
 [1.02470139e+02 1.07704090e+02]
 [9.26239328e+01 9.78442946e+01]
 [7.45179783e+00 7.77487951e+00]
 [2.08689426e+09 2.14150654e+09]
 [6.11426450e-01 6.32574997e-01]
 [2.30034379e-02 7.54257742e-02]
 [2.83918176e+01 8.44884753e+01]
 [5.09138155e-01 5.30567301e-01]
 [2.46700770e-02 7.63929383e-02]
 [2.05027515e+09 2.10855444e+09]
 [1.22783267e+09 1.28716029e+09]
 [7.01689565e+01 7.20000000e+01]
 [9.09150032e-01 9.61235108e-01]
 [6.69617329e+02 6.96886628e+02]
 [9.56600681e-01 1.00000000e+00]
 [3.73678547e+01 3.90967026e+01]
 [3.85148600e+00 4.07364497e+00]
 [3.28546019e+02 3.39016461e+02]
 [3.74394088e+00 3.90003976e+00]]
before probe, param.shape = (38, 27)
before probe, target = (38,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.01640695e+01 5.63105044e-02 9.66124538e-01 ... 3.91173188e+00
  3.29043277e+02 3.85649073e+00]
 [5.03737765e+01 2.66058442e-02 9.62930965e-01 ... 3.92749703e+00
  3.28650066e+02 3.89389916e+00]
 [5.09667194e+01 6.42861703e-02 9.66948707e-01 ... 3.96256549e+00
  3.33781240e+02 3.82199032e+00]]
标准化后的train_x = 
[[ 0.16576286 -0.49034906  0.48750941 ...  0.43910542  0.46036057
   0.68703668]
 [-0.73551615 -0.49034906 -3.30426074 ... -0.80636176 -4.6680927
  -0.98065599]
 [ 2.64428014  4.05354384 -3.30426074 ... -3.29729613  0.82667866
  -0.98065599]
 ...
 [-0.02258879 -0.23448016  0.35906145 ...  0.32917038  0.29251015
   0.44770733]
 [ 0.02466234 -0.36945495  0.34695215 ...  0.34880535  0.28143013
   0.5100931 ]
 [ 0.15826408 -0.19823959  0.36218651 ...  0.39248197  0.42601797
   0.39017124]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317]
upper = 
[4934.06183132 5205.05750097 3985.52191736 ... 5039.44676141 5211.87858353
 5251.21086662]
upper.argmax() = 4003
all predict_target = 
[3205.5195663  2624.26020237 5640.70588422 ... 3025.88985826 2629.82073751
 2542.23436729]
upper.argmax() = 4003, sortnumber[0] = 4003
x_max = [5.05970612e+01 5.99525489e-02 9.52803544e-01 2.29359593e+02
 3.94684789e+00 4.86059138e+00 4.95741916e+00 5.27456308e+02
 1.06601445e+02 9.50778325e+01 7.58632918e+00 2.12638020e+09
 6.15439873e-01 6.00703224e-02 5.05519385e+01 5.23464267e-01
 3.65535721e-02 2.06236121e+09 1.26367379e+09 7.13369810e+01
 9.49779760e-01 6.84535659e+02 9.89235604e-01 3.75174887e+01
 3.87117975e+00 3.33336962e+02 3.82930862e+00]
black_box_function中schafferRun(i) 中的i为[50.59706120057736, 0.059952548946377734, 0.952803544461432, 229.35959262393052, 3.9468478860450316, 4.860591379475515, 4.9574191610497325, 527.4563076330571, 106.60144488661734, 95.07783252740101, 7.586329179721948, 2126380199.4175584, 0.6154398730071787, 0.060070322382135666, 50.55193853001869, 0.5234642668878291, 0.03655357207678934, 2062361207.289839, 1263673787.8619735, 71.33698103169966, 0.9497797601228584, 684.5356586127546, 0.9892356037193705, 37.5174887328601, 3.871179749057875, 333.336962304502, 3.8293086203887348]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.59706120057736
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.059952548946377734
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.952803544461432
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 229.35959262393052
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9468478860450316
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.860591379475515
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.9574191610497325
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 527.4563076330571
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.60144488661734
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.07783252740101
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.586329179721948
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2126380199.4175584
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6154398730071787
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.060070322382135666
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 50.55193853001869
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5234642668878291
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.03655357207678934
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2062361207.289839
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1263673787.8619735
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.33698103169966
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9497797601228584
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 684.5356586127546
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9892356037193705
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 37.5174887328601
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.871179749057875
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 333.336962304502
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8293086203887348
configNum = 39	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 39 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.59706120057736, 'spark.broadcast.checksum': 0.059952548946377734, 'spark.broadcast.compress': 0.952803544461432, 'spark.default.parallelism': 229.35959262393052, 'spark.executor.cores': 3.9468478860450316, 'spark.executor.instances': 4.860591379475515, 'spark.executor.memory': 4.9574191610497325, 'spark.executor.memoryOverhead': 527.4563076330571, 'spark.kryoserializer.buffer': 106.60144488661734, 'spark.kryoserializer.buffer.max': 95.07783252740101, 'spark.locality.wait': 7.586329179721948, 'spark.maxRemoteBlockSizeFetchToMem': 2126380199.4175584, 'spark.memory.fraction': 0.6154398730071787, 'spark.memory.offHeap.enabled': 0.060070322382135666, 'spark.memory.offHeap.size': 50.55193853001869, 'spark.memory.storageFraction': 0.5234642668878291, 'spark.rdd.compress': 0.03655357207678934, 'spark.reducer.maxBlocksInFlightPerAddress': 2062361207.289839, 'spark.reducer.maxReqsInFlight': 1263673787.8619735, 'spark.reducer.maxSizeInFlight': 71.33698103169966, 'spark.scheduler.mode': 0.9497797601228584, 'spark.scheduler.revive.interval': 684.5356586127546, 'spark.shuffle.compress': 0.9892356037193705, 'spark.shuffle.file.buffer': 37.5174887328601, 'spark.shuffle.io.numConnectionsPerPeer': 3.871179749057875, 'spark.shuffle.sort.bypassMergeThreshold': 333.336962304502, 'spark.storage.memoryMapThreshold': 3.8293086203887348} target = -218.479
x_probe = {'spark.broadcast.blockSize': 50.59706120057736, 'spark.broadcast.checksum': 0.059952548946377734, 'spark.broadcast.compress': 0.952803544461432, 'spark.default.parallelism': 229.35959262393052, 'spark.executor.cores': 3.9468478860450316, 'spark.executor.instances': 4.860591379475515, 'spark.executor.memory': 4.9574191610497325, 'spark.executor.memoryOverhead': 527.4563076330571, 'spark.kryoserializer.buffer': 106.60144488661734, 'spark.kryoserializer.buffer.max': 95.07783252740101, 'spark.locality.wait': 7.586329179721948, 'spark.maxRemoteBlockSizeFetchToMem': 2126380199.4175584, 'spark.memory.fraction': 0.6154398730071787, 'spark.memory.offHeap.enabled': 0.060070322382135666, 'spark.memory.offHeap.size': 50.55193853001869, 'spark.memory.storageFraction': 0.5234642668878291, 'spark.rdd.compress': 0.03655357207678934, 'spark.reducer.maxBlocksInFlightPerAddress': 2062361207.289839, 'spark.reducer.maxReqsInFlight': 1263673787.8619735, 'spark.reducer.maxSizeInFlight': 71.33698103169966, 'spark.scheduler.mode': 0.9497797601228584, 'spark.scheduler.revive.interval': 684.5356586127546, 'spark.shuffle.compress': 0.9892356037193705, 'spark.shuffle.file.buffer': 37.5174887328601, 'spark.shuffle.io.numConnectionsPerPeer': 3.871179749057875, 'spark.shuffle.sort.bypassMergeThreshold': 333.336962304502, 'spark.storage.memoryMapThreshold': 3.8293086203887348}
target = -218.479
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.01403836e+01 5.17930551e+01]
 [4.08203275e-02 8.77520131e-02]
 [9.43680374e-01 9.90217041e-01]
 [2.29399614e+02 2.43527848e+02]
 [3.84937494e+00 3.99363715e+00]
 [4.73245655e+00 4.93036893e+00]
 [4.81533100e+00 5.01888453e+00]
 [5.20882271e+02 5.45477793e+02]
 [1.02731836e+02 1.07442393e+02]
 [9.28849509e+01 9.75832765e+01]
 [7.46795192e+00 7.75872543e+00]
 [2.08962487e+09 2.13877593e+09]
 [6.12483878e-01 6.31517569e-01]
 [2.56245547e-02 7.28046573e-02]
 [3.11966504e+01 8.16836424e+01]
 [5.10209612e-01 5.29495843e-01]
 [2.72562200e-02 7.38067953e-02]
 [2.05318911e+09 2.10564047e+09]
 [1.23079905e+09 1.28419391e+09]
 [7.02942494e+01 7.20000000e+01]
 [9.11754286e-01 9.58630854e-01]
 [6.70980793e+02 6.95523163e+02]
 [9.59272945e-01 1.00000000e+00]
 [3.74542971e+01 3.90102602e+01]
 [3.86259395e+00 4.06253703e+00]
 [3.29069541e+02 3.38492939e+02]
 [3.75174582e+00 3.89223481e+00]]
before probe, param.shape = (39, 27)
before probe, target = (39,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.03737765e+01 2.66058442e-02 9.62930965e-01 ... 3.92749703e+00
  3.28650066e+02 3.89389916e+00]
 [5.09667194e+01 6.42861703e-02 9.66948707e-01 ... 3.96256549e+00
  3.33781240e+02 3.82199032e+00]
 [5.05970612e+01 5.99525489e-02 9.52803544e-01 ... 3.87117975e+00
  3.33336962e+02 3.82930862e+00]]
标准化后的train_x = 
[[ 0.16597032 -0.49079934  0.48527541 ...  0.43717196  0.45464195
   0.6841471 ]
 [-0.74702482 -0.49079934 -3.35138244 ... -0.82332227 -4.7295012
  -1.00185036]
 [ 2.67670697  4.109693   -3.35138244 ... -3.34431071  0.82493789
  -1.00185036]
 ...
 [ 0.02303557 -0.36839936  0.34305421 ...  0.34578238  0.27376851
   0.50526136]
 [ 0.15837405 -0.19505131  0.35846891 ...  0.38998597  0.41992643
   0.38402323]
 [ 0.07400003 -0.2149881   0.30419876 ...  0.27479477  0.40727148
   0.39636187]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479]
upper = 
[5090.323389   5201.91083373 4503.24981629 ... 5099.43421662 5043.77421699
 4842.46970015]
upper.argmax() = 3303
all predict_target = 
[2686.87103074 2440.78202285 4106.38290458 ... 2659.5913118  2775.18779515
 3277.69111108]
upper.argmax() = 3303, sortnumber[0] = 3303
x_max = [5.05154403e+01 6.63668840e-02 9.56747117e-01 2.35697187e+02
 3.91362296e+00 4.83388284e+00 5.00193354e+00 5.34541743e+02
 1.04401382e+02 9.59454931e+01 7.56746470e+00 2.10955632e+09
 6.22254856e-01 4.11411557e-02 5.24902436e+01 5.19783577e-01
 4.18016333e-02 2.06677405e+09 1.25437911e+09 7.10638184e+01
 9.31462841e-01 6.81914206e+02 9.68108673e-01 3.84723154e+01
 3.93827669e+00 3.34250636e+02 3.88784419e+00]
black_box_function中schafferRun(i) 中的i为[50.515440321302826, 0.06636688401633789, 0.9567471166692838, 235.69718702932812, 3.9136229580285296, 4.833882839029087, 5.001933537460104, 534.5417426269447, 104.40138195252494, 95.94549309087967, 7.567464696585556, 2109556317.4308798, 0.6222548560952362, 0.04114115571919002, 52.490243631307045, 0.5197835772899037, 0.0418016332772668, 2066774045.1306946, 1254379108.702571, 71.06381837316258, 0.9314628406125269, 681.9142058967017, 0.9681086725763939, 38.472315350371346, 3.93827668512654, 334.2506361301173, 3.8878441884156456]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.515440321302826
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06636688401633789
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9567471166692838
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 235.69718702932812
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9136229580285296
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.833882839029087
================= config40 =================
2022年 02月 19日 星期六 23:15:18 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (240382) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (177168) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.001933537460104
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 534.5417426269447
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 104.40138195252494
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.94549309087967
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.567464696585556
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2109556317.4308798
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6222548560952362
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.04114115571919002
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 52.490243631307045
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5197835772899037
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0418016332772668
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2066774045.1306946
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1254379108.702571
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.06381837316258
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9314628406125269
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 681.9142058967017
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9681086725763939
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.472315350371346
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.93827668512654
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 334.2506361301173
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8878441884156456
configNum = 40	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 40 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.515440321302826, 'spark.broadcast.checksum': 0.06636688401633789, 'spark.broadcast.compress': 0.9567471166692838, 'spark.default.parallelism': 235.69718702932812, 'spark.executor.cores': 3.9136229580285296, 'spark.executor.instances': 4.833882839029087, 'spark.executor.memory': 5.001933537460104, 'spark.executor.memoryOverhead': 534.5417426269447, 'spark.kryoserializer.buffer': 104.40138195252494, 'spark.kryoserializer.buffer.max': 95.94549309087967, 'spark.locality.wait': 7.567464696585556, 'spark.maxRemoteBlockSizeFetchToMem': 2109556317.4308798, 'spark.memory.fraction': 0.6222548560952362, 'spark.memory.offHeap.enabled': 0.04114115571919002, 'spark.memory.offHeap.size': 52.490243631307045, 'spark.memory.storageFraction': 0.5197835772899037, 'spark.rdd.compress': 0.0418016332772668, 'spark.reducer.maxBlocksInFlightPerAddress': 2066774045.1306946, 'spark.reducer.maxReqsInFlight': 1254379108.702571, 'spark.reducer.maxSizeInFlight': 71.06381837316258, 'spark.scheduler.mode': 0.9314628406125269, 'spark.scheduler.revive.interval': 681.9142058967017, 'spark.shuffle.compress': 0.9681086725763939, 'spark.shuffle.file.buffer': 38.472315350371346, 'spark.shuffle.io.numConnectionsPerPeer': 3.93827668512654, 'spark.shuffle.sort.bypassMergeThreshold': 334.2506361301173, 'spark.storage.memoryMapThreshold': 3.8878441884156456} target = -177.446
x_probe = {'spark.broadcast.blockSize': 50.515440321302826, 'spark.broadcast.checksum': 0.06636688401633789, 'spark.broadcast.compress': 0.9567471166692838, 'spark.default.parallelism': 235.69718702932812, 'spark.executor.cores': 3.9136229580285296, 'spark.executor.instances': 4.833882839029087, 'spark.executor.memory': 5.001933537460104, 'spark.executor.memoryOverhead': 534.5417426269447, 'spark.kryoserializer.buffer': 104.40138195252494, 'spark.kryoserializer.buffer.max': 95.94549309087967, 'spark.locality.wait': 7.567464696585556, 'spark.maxRemoteBlockSizeFetchToMem': 2109556317.4308798, 'spark.memory.fraction': 0.6222548560952362, 'spark.memory.offHeap.enabled': 0.04114115571919002, 'spark.memory.offHeap.size': 52.490243631307045, 'spark.memory.storageFraction': 0.5197835772899037, 'spark.rdd.compress': 0.0418016332772668, 'spark.reducer.maxBlocksInFlightPerAddress': 2066774045.1306946, 'spark.reducer.maxReqsInFlight': 1254379108.702571, 'spark.reducer.maxSizeInFlight': 71.06381837316258, 'spark.scheduler.mode': 0.9314628406125269, 'spark.scheduler.revive.interval': 681.9142058967017, 'spark.shuffle.compress': 0.9681086725763939, 'spark.shuffle.file.buffer': 38.472315350371346, 'spark.shuffle.io.numConnectionsPerPeer': 3.93827668512654, 'spark.shuffle.sort.bypassMergeThreshold': 334.2506361301173, 'spark.storage.memoryMapThreshold': 3.8878441884156456}
target = -177.446
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.02230172e+01 5.17104215e+01]
 [4.31669117e-02 8.54054288e-02]
 [9.46007207e-01 9.87890207e-01]
 [2.30106026e+02 2.42821436e+02]
 [3.85658805e+00 3.98642404e+00]
 [4.74235217e+00 4.92047331e+00]
 [4.82550868e+00 5.00870685e+00]
 [5.22112047e+02 5.44248017e+02]
 [1.02967364e+02 1.07206865e+02]
 [9.31198672e+01 9.73483602e+01]
 [7.48249059e+00 7.74418676e+00]
 [2.09208243e+09 2.13631837e+09]
 [6.13435562e-01 6.30565885e-01]
 [2.79835599e-02 7.04456522e-02]
 [3.37210000e+01 7.91592928e+01]
 [5.11173923e-01 5.28531532e-01]
 [2.95837488e-02 7.14792665e-02]
 [2.05581168e+09 2.10301791e+09]
 [1.23346879e+09 1.28152417e+09]
 [7.04070130e+01 7.20000000e+01]
 [9.14098114e-01 9.56287026e-01]
 [6.72207912e+02 6.94296044e+02]
 [9.61677983e-01 1.00000000e+00]
 [3.75320953e+01 3.89324621e+01]
 [3.87259111e+00 4.05253987e+00]
 [3.29540711e+02 3.38021769e+02]
 [3.75877027e+00 3.88521036e+00]]
before probe, param.shape = (40, 27)
before probe, target = (40,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.09667194e+01 6.42861703e-02 9.66948707e-01 ... 3.96256549e+00
  3.33781240e+02 3.82199032e+00]
 [5.05970612e+01 5.99525489e-02 9.52803544e-01 ... 3.87117975e+00
  3.33336962e+02 3.82930862e+00]
 [5.05154403e+01 6.63668840e-02 9.56747117e-01 ... 3.93827669e+00
  3.34250636e+02 3.88784419e+00]]
标准化后的train_x = 
[[ 0.1666764  -0.49214417  0.48275764 ...  0.43294419  0.44841227
   0.67825409]
 [-0.75791429 -0.49214417 -3.39783361 ... -0.84155212 -4.78949551
  -1.02401504]
 [ 2.7093008   4.16495326 -3.39783361 ... -3.39054475  0.82254854
  -1.02401504]
 ...
 [ 0.15898366 -0.19275722  0.35449909 ...  0.38523404  0.41333672
   0.3752337 ]
 [ 0.07353803 -0.21293931  0.29960749 ...  0.26876325  0.40055052
   0.38769142]
 [ 0.05467156 -0.18306713  0.31491088 ...  0.35427805  0.42684579
   0.48733471]]
================= config41 =================
2022年 02月 19日 星期六 23:18:24 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (249291) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (194567) - 没有那个进程
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446]
upper = 
[4859.65541031 5064.453572   5037.15354487 ... 4833.63654172 4409.28594683
 4843.69874748]
upper.argmax() = 2566
all predict_target = 
[3072.03808206 2606.16577396 2680.18178336 ... 3076.78194247 4088.09507149
 3074.5155851 ]
upper.argmax() = 2566, sortnumber[0] = 2566
x_max = [5.12907506e+01 7.91701051e-02 9.55848274e-01 2.36820232e+02
 3.90204988e+00 4.79687723e+00 4.94395564e+00 5.38662978e+02
 1.06911954e+02 9.43296208e+01 7.57520079e+00 2.09488313e+09
 6.13987499e-01 5.23531558e-02 5.25833825e+01 5.19416861e-01
 3.34992829e-02 2.08843083e+09 1.26408957e+09 7.19293035e+01
 9.41067354e-01 6.84313750e+02 9.73931662e-01 3.85069158e+01
 3.92316380e+00 3.33104910e+02 3.80523855e+00]
black_box_function中schafferRun(i) 中的i为[51.29075063708233, 0.07917010505769825, 0.9558482738710635, 236.82023172794536, 3.902049877421466, 4.796877226925804, 4.943955635448474, 538.6629775391077, 106.91195352010664, 94.32962082261353, 7.575200793417248, 2094883134.4930987, 0.6139874992290902, 0.0523531558323701, 52.58338252624014, 0.5194168605639314, 0.03349928294827521, 2088430833.2293565, 1264089569.2537231, 71.92930348823468, 0.9410673538400686, 684.3137503183373, 0.9739316623651334, 38.506915770704175, 3.9231638015376573, 333.1049099659016, 3.8052385540301223]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.29075063708233
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07917010505769825
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9558482738710635
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 236.82023172794536
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.902049877421466
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.796877226925804
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.943955635448474
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 538.6629775391077
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.91195352010664
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 94.32962082261353
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.575200793417248
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2094883134.4930987
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6139874992290902
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0523531558323701
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 52.58338252624014
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5194168605639314
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.03349928294827521
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2088430833.2293565
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1264089569.2537231
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.92930348823468
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9410673538400686
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 684.3137503183373
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9739316623651334
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.506915770704175
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.9231638015376573
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 333.1049099659016
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8052385540301223
configNum = 41	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 41 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.29075063708233, 'spark.broadcast.checksum': 0.07917010505769825, 'spark.broadcast.compress': 0.9558482738710635, 'spark.default.parallelism': 236.82023172794536, 'spark.executor.cores': 3.902049877421466, 'spark.executor.instances': 4.796877226925804, 'spark.executor.memory': 4.943955635448474, 'spark.executor.memoryOverhead': 538.6629775391077, 'spark.kryoserializer.buffer': 106.91195352010664, 'spark.kryoserializer.buffer.max': 94.32962082261353, 'spark.locality.wait': 7.575200793417248, 'spark.maxRemoteBlockSizeFetchToMem': 2094883134.4930987, 'spark.memory.fraction': 0.6139874992290902, 'spark.memory.offHeap.enabled': 0.0523531558323701, 'spark.memory.offHeap.size': 52.58338252624014, 'spark.memory.storageFraction': 0.5194168605639314, 'spark.rdd.compress': 0.03349928294827521, 'spark.reducer.maxBlocksInFlightPerAddress': 2088430833.2293565, 'spark.reducer.maxReqsInFlight': 1264089569.2537231, 'spark.reducer.maxSizeInFlight': 71.92930348823468, 'spark.scheduler.mode': 0.9410673538400686, 'spark.scheduler.revive.interval': 684.3137503183373, 'spark.shuffle.compress': 0.9739316623651334, 'spark.shuffle.file.buffer': 38.506915770704175, 'spark.shuffle.io.numConnectionsPerPeer': 3.9231638015376573, 'spark.shuffle.sort.bypassMergeThreshold': 333.1049099659016, 'spark.storage.memoryMapThreshold': 3.8052385540301223} target = -224.83
x_probe = {'spark.broadcast.blockSize': 51.29075063708233, 'spark.broadcast.checksum': 0.07917010505769825, 'spark.broadcast.compress': 0.9558482738710635, 'spark.default.parallelism': 236.82023172794536, 'spark.executor.cores': 3.902049877421466, 'spark.executor.instances': 4.796877226925804, 'spark.executor.memory': 4.943955635448474, 'spark.executor.memoryOverhead': 538.6629775391077, 'spark.kryoserializer.buffer': 106.91195352010664, 'spark.kryoserializer.buffer.max': 94.32962082261353, 'spark.locality.wait': 7.575200793417248, 'spark.maxRemoteBlockSizeFetchToMem': 2094883134.4930987, 'spark.memory.fraction': 0.6139874992290902, 'spark.memory.offHeap.enabled': 0.0523531558323701, 'spark.memory.offHeap.size': 52.58338252624014, 'spark.memory.storageFraction': 0.5194168605639314, 'spark.rdd.compress': 0.03349928294827521, 'spark.reducer.maxBlocksInFlightPerAddress': 2088430833.2293565, 'spark.reducer.maxReqsInFlight': 1264089569.2537231, 'spark.reducer.maxSizeInFlight': 71.92930348823468, 'spark.scheduler.mode': 0.9410673538400686, 'spark.scheduler.revive.interval': 684.3137503183373, 'spark.shuffle.compress': 0.9739316623651334, 'spark.shuffle.file.buffer': 38.506915770704175, 'spark.shuffle.io.numConnectionsPerPeer': 3.9231638015376573, 'spark.shuffle.sort.bypassMergeThreshold': 333.1049099659016, 'spark.storage.memoryMapThreshold': 3.8052385540301223}
target = -224.83
================= config42 =================
2022年 02月 19日 星期六 23:22:17 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (254200) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (198925) - 没有那个进程
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.02973874e+01 5.16360513e+01]
 [4.52788376e-02 8.32935030e-02]
 [9.48101357e-01 9.85796057e-01]
 [2.30741796e+02 2.42185666e+02]
 [3.86307985e+00 3.97993224e+00]
 [4.75125822e+00 4.91156725e+00]
 [4.83466859e+00 4.99954694e+00]
 [5.23218845e+02 5.43141219e+02]
 [1.03179339e+02 1.06994890e+02]
 [9.33312918e+01 9.71369356e+01]
 [7.49557540e+00 7.73110195e+00]
 [2.09429422e+09 2.13410658e+09]
 [6.14292078e-01 6.29709369e-01]
 [3.01066645e-02 6.83225476e-02]
 [3.59929147e+01 7.68873781e+01]
 [5.12041804e-01 5.27663651e-01]
 [3.16785247e-02 6.93844906e-02]
 [2.05817199e+09 2.10065759e+09]
 [1.23587156e+09 1.27912140e+09]
 [7.05085002e+01 7.20000000e+01]
 [9.16207560e-01 9.54177580e-01]
 [6.73312319e+02 6.93191638e+02]
 [9.63842518e-01 1.00000000e+00]
 [3.76021136e+01 3.88624438e+01]
 [3.88158854e+00 4.04354243e+00]
 [3.29964764e+02 3.37597717e+02]
 [3.76509228e+00 3.87888836e+00]]
before probe, param.shape = (41, 27)
before probe, target = (41,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.05970612e+01 5.99525489e-02 9.52803544e-01 ... 3.87117975e+00
  3.33336962e+02 3.82930862e+00]
 [5.05154403e+01 6.63668840e-02 9.56747117e-01 ... 3.93827669e+00
  3.34250636e+02 3.88784419e+00]
 [5.12907506e+01 7.91701051e-02 9.55848274e-01 ... 3.92316380e+00
  3.33104910e+02 3.80523855e+00]]
标准化后的train_x = 
[[ 0.16286306 -0.49511784  0.48049686 ...  0.42946252  0.44341873
   0.67712639]
 [-0.77258985 -0.49511784 -3.44366384 ... -0.85910415 -4.84955443
  -1.04376873]
 [ 2.73535857  4.21895804 -3.44366384 ... -3.4362375   0.82148825
  -1.04376873]
 ...
 [ 0.0686305  -0.21249697  0.29529038 ...  0.26346904  0.39505382
   0.38338443]
 [ 0.04954237 -0.18225931  0.31076559 ...  0.34992791  0.42162553
   0.484118  ]
 [ 0.23085895 -0.12190396  0.30723839 ...  0.33045395  0.38830521
   0.34196237]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83 ]
upper = 
[4459.67186305 5085.72438016 4618.89851915 ... 5092.94677115 5123.75305895
 5232.00125725]
upper.argmax() = 1760
all predict_target = 
[3840.71591098 2373.89235017 3394.39974397 ... 2374.97299365 2163.53676159
 2028.18439088]
upper.argmax() = 1760, sortnumber[0] = 1760
x_max = [5.10122053e+01 4.85645851e-02 9.62983866e-01 2.36013761e+02
 3.95066423e+00 4.82522473e+00 4.86915985e+00 5.39625533e+02
 1.05963266e+02 9.38769303e+01 7.54542432e+00 2.10267983e+09
 6.15157894e-01 4.11170028e-02 3.61589295e+01 5.19266075e-01
 4.28902029e-02 2.08262403e+09 1.25949307e+09 7.09695223e+01
 9.43089173e-01 6.83734346e+02 9.94873927e-01 3.83419903e+01
 3.92561730e+00 3.35524920e+02 3.84036914e+00]
black_box_function中schafferRun(i) 中的i为[51.012205297076044, 0.04856458506660242, 0.9629838660881386, 236.0137606568981, 3.950664228881631, 4.82522473099874, 4.869159847273281, 539.6255326062844, 105.96326556217261, 93.87693028282547, 7.545424317585952, 2102679831.225805, 0.6151578936083896, 0.04111700277800581, 36.158929471789364, 0.5192660749312675, 0.0428902028521078, 2082624028.8785906, 1259493066.182713, 70.96952226642594, 0.9430891734327791, 683.7343463499735, 0.9948739268480487, 38.341990315745974, 3.925617303690949, 335.52491957069293, 3.840369144114151]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.012205297076044
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.04856458506660242
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9629838660881386
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 236.0137606568981
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.950664228881631
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.82522473099874
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.869159847273281
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 539.6255326062844
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 105.96326556217261
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 93.87693028282547
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.545424317585952
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2102679831.225805
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6151578936083896
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.04111700277800581
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 36.158929471789364
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5192660749312675
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0428902028521078
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2082624028.8785906
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1259493066.182713
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 70.96952226642594
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9430891734327791
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 683.7343463499735
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9948739268480487
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.341990315745974
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.925617303690949
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 335.52491957069293
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.840369144114151
configNum = 42	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 42 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.012205297076044, 'spark.broadcast.checksum': 0.04856458506660242, 'spark.broadcast.compress': 0.9629838660881386, 'spark.default.parallelism': 236.0137606568981, 'spark.executor.cores': 3.950664228881631, 'spark.executor.instances': 4.82522473099874, 'spark.executor.memory': 4.869159847273281, 'spark.executor.memoryOverhead': 539.6255326062844, 'spark.kryoserializer.buffer': 105.96326556217261, 'spark.kryoserializer.buffer.max': 93.87693028282547, 'spark.locality.wait': 7.545424317585952, 'spark.maxRemoteBlockSizeFetchToMem': 2102679831.225805, 'spark.memory.fraction': 0.6151578936083896, 'spark.memory.offHeap.enabled': 0.04111700277800581, 'spark.memory.offHeap.size': 36.158929471789364, 'spark.memory.storageFraction': 0.5192660749312675, 'spark.rdd.compress': 0.0428902028521078, 'spark.reducer.maxBlocksInFlightPerAddress': 2082624028.8785906, 'spark.reducer.maxReqsInFlight': 1259493066.182713, 'spark.reducer.maxSizeInFlight': 70.96952226642594, 'spark.scheduler.mode': 0.9430891734327791, 'spark.scheduler.revive.interval': 683.7343463499735, 'spark.shuffle.compress': 0.9948739268480487, 'spark.shuffle.file.buffer': 38.341990315745974, 'spark.shuffle.io.numConnectionsPerPeer': 3.925617303690949, 'spark.shuffle.sort.bypassMergeThreshold': 335.52491957069293, 'spark.storage.memoryMapThreshold': 3.840369144114151} target = -172.652
x_probe = {'spark.broadcast.blockSize': 51.012205297076044, 'spark.broadcast.checksum': 0.04856458506660242, 'spark.broadcast.compress': 0.9629838660881386, 'spark.default.parallelism': 236.0137606568981, 'spark.executor.cores': 3.950664228881631, 'spark.executor.instances': 4.82522473099874, 'spark.executor.memory': 4.869159847273281, 'spark.executor.memoryOverhead': 539.6255326062844, 'spark.kryoserializer.buffer': 105.96326556217261, 'spark.kryoserializer.buffer.max': 93.87693028282547, 'spark.locality.wait': 7.545424317585952, 'spark.maxRemoteBlockSizeFetchToMem': 2102679831.225805, 'spark.memory.fraction': 0.6151578936083896, 'spark.memory.offHeap.enabled': 0.04111700277800581, 'spark.memory.offHeap.size': 36.158929471789364, 'spark.memory.storageFraction': 0.5192660749312675, 'spark.rdd.compress': 0.0428902028521078, 'spark.reducer.maxBlocksInFlightPerAddress': 2082624028.8785906, 'spark.reducer.maxReqsInFlight': 1259493066.182713, 'spark.reducer.maxSizeInFlight': 70.96952226642594, 'spark.scheduler.mode': 0.9430891734327791, 'spark.scheduler.revive.interval': 683.7343463499735, 'spark.shuffle.compress': 0.9948739268480487, 'spark.shuffle.file.buffer': 38.341990315745974, 'spark.shuffle.io.numConnectionsPerPeer': 3.925617303690949, 'spark.shuffle.sort.bypassMergeThreshold': 335.52491957069293, 'spark.storage.memoryMapThreshold': 3.840369144114151}
target = -172.652
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.03643206e+01 5.15691181e+01]
 [4.71795709e-02 8.13927697e-02]
 [9.49986092e-01 9.83911322e-01]
 [2.31313990e+02 2.41613472e+02]
 [3.86892247e+00 3.97408962e+00]
 [4.75927367e+00 4.90355180e+00]
 [4.84291251e+00 4.99130303e+00]
 [5.24214964e+02 5.42145100e+02]
 [1.03370117e+02 1.06804112e+02]
 [9.35215740e+01 9.69466534e+01]
 [7.50735173e+00 7.71932562e+00]
 [2.09628484e+09 2.13211596e+09]
 [6.15062943e-01 6.28938504e-01]
 [3.20174586e-02 6.64117534e-02]
 [3.80376378e+01 7.48426550e+01]
 [5.12822896e-01 5.26882559e-01]
 [3.35638230e-02 6.74991923e-02]
 [2.06029627e+09 2.09853331e+09]
 [1.23803405e+09 1.27695891e+09]
 [7.05998387e+01 7.20000000e+01]
 [9.18106061e-01 9.52279079e-01]
 [6.74306285e+02 6.92197672e+02]
 [9.65790598e-01 1.00000000e+00]
 [3.76651301e+01 3.87994272e+01]
 [3.88968624e+00 4.03544474e+00]
 [3.30346412e+02 3.37216069e+02]
 [3.77078208e+00 3.87319855e+00]]
before probe, param.shape = (42, 27)
before probe, target = (42,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.05154403e+01 6.63668840e-02 9.56747117e-01 ... 3.93827669e+00
  3.34250636e+02 3.88784419e+00]
 [5.12907506e+01 7.91701051e-02 9.55848274e-01 ... 3.92316380e+00
  3.33104910e+02 3.80523855e+00]
 [5.10122053e+01 4.85645851e-02 9.62983866e-01 ... 3.92561730e+00
  3.35524920e+02 3.84036914e+00]]
标准化后的train_x = 
[[ 0.16079119 -0.49428828  0.47760406 ...  0.42606465  0.43664797
   0.67433797]
 [-0.78569157 -0.49428828 -3.48882074 ... -0.87639698 -4.90711718
  -1.06406906]
 [ 2.76361879  4.27291066 -3.48882074 ... -3.48132022  0.81834548
  -1.06406906]
 ...
 [ 0.04613435 -0.17790414  0.30604475 ...  0.3456724   0.41464564
   0.47936552]
 [ 0.22958881 -0.11686864  0.30247955 ...  0.32598845  0.38100557
   0.3357633 ]
 [ 0.16367922 -0.26277124  0.33078234 ...  0.32918404  0.45206032
   0.39683457]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652]
upper = 
[4423.24419395 4911.3985052  4811.66874432 ... 5018.40781893 4217.22862005
 5049.86954978]
upper.argmax() = 306
all predict_target = 
[3787.92053527 2602.67155839 2828.1859042  ... 2388.98966654 4200.03627101
 2277.90034471]
upper.argmax() = 306, sortnumber[0] = 306
x_max = [5.13297863e+01 6.78022001e-02 9.80245932e-01 2.37705514e+02
 3.92477745e+00 4.87394611e+00 4.92883464e+00 5.38481657e+02
 1.05007649e+02 9.44402497e+01 7.58583363e+00 2.10344839e+09
 6.22905506e-01 4.22772009e-02 5.72526486e+01 5.20663624e-01
 4.20703494e-02 2.08106568e+09 1.26074240e+09 7.09608809e+01
 9.40410686e-01 6.88184680e+02 9.73823989e-01 3.83381279e+01
 3.91913401e+00 3.35403285e+02 3.83118748e+00]
black_box_function中schafferRun(i) 中的i为[51.32978634802774, 0.06780220008786902, 0.9802459318020225, 237.70551391972222, 3.924777445562812, 4.873946112746166, 4.928834638923654, 538.4816571953165, 105.00764865553361, 94.44024973356103, 7.585833625288965, 2103448390.310024, 0.6229055057176587, 0.042277200860200044, 57.25264861883838, 0.5206636237035138, 0.04207034942518879, 2081065678.318516, 1260742404.152311, 70.96088093162473, 0.940410686350342, 688.1846802696829, 0.9738239885532188, 38.33812789743686, 3.919134007331786, 335.4032848581264, 3.831187482932415]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.32978634802774
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06780220008786902
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9802459318020225
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 237.70551391972222
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.924777445562812
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.873946112746166
================= config43 =================
2022年 02月 19日 星期六 23:25:21 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (262328) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (206244) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.928834638923654
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 538.4816571953165
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 105.00764865553361
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 94.44024973356103
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.585833625288965
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2103448390.310024
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6229055057176587
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.042277200860200044
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 57.25264861883838
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5206636237035138
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04207034942518879
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2081065678.318516
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1260742404.152311
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 70.96088093162473
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.940410686350342
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 688.1846802696829
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9738239885532188
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.33812789743686
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.919134007331786
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 335.4032848581264
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.831187482932415
configNum = 43	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 43 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.32978634802774, 'spark.broadcast.checksum': 0.06780220008786902, 'spark.broadcast.compress': 0.9802459318020225, 'spark.default.parallelism': 237.70551391972222, 'spark.executor.cores': 3.924777445562812, 'spark.executor.instances': 4.873946112746166, 'spark.executor.memory': 4.928834638923654, 'spark.executor.memoryOverhead': 538.4816571953165, 'spark.kryoserializer.buffer': 105.00764865553361, 'spark.kryoserializer.buffer.max': 94.44024973356103, 'spark.locality.wait': 7.585833625288965, 'spark.maxRemoteBlockSizeFetchToMem': 2103448390.310024, 'spark.memory.fraction': 0.6229055057176587, 'spark.memory.offHeap.enabled': 0.042277200860200044, 'spark.memory.offHeap.size': 57.25264861883838, 'spark.memory.storageFraction': 0.5206636237035138, 'spark.rdd.compress': 0.04207034942518879, 'spark.reducer.maxBlocksInFlightPerAddress': 2081065678.318516, 'spark.reducer.maxReqsInFlight': 1260742404.152311, 'spark.reducer.maxSizeInFlight': 70.96088093162473, 'spark.scheduler.mode': 0.940410686350342, 'spark.scheduler.revive.interval': 688.1846802696829, 'spark.shuffle.compress': 0.9738239885532188, 'spark.shuffle.file.buffer': 38.33812789743686, 'spark.shuffle.io.numConnectionsPerPeer': 3.919134007331786, 'spark.shuffle.sort.bypassMergeThreshold': 335.4032848581264, 'spark.storage.memoryMapThreshold': 3.831187482932415} target = -217.039
x_probe = {'spark.broadcast.blockSize': 51.32978634802774, 'spark.broadcast.checksum': 0.06780220008786902, 'spark.broadcast.compress': 0.9802459318020225, 'spark.default.parallelism': 237.70551391972222, 'spark.executor.cores': 3.924777445562812, 'spark.executor.instances': 4.873946112746166, 'spark.executor.memory': 4.928834638923654, 'spark.executor.memoryOverhead': 538.4816571953165, 'spark.kryoserializer.buffer': 105.00764865553361, 'spark.kryoserializer.buffer.max': 94.44024973356103, 'spark.locality.wait': 7.585833625288965, 'spark.maxRemoteBlockSizeFetchToMem': 2103448390.310024, 'spark.memory.fraction': 0.6229055057176587, 'spark.memory.offHeap.enabled': 0.042277200860200044, 'spark.memory.offHeap.size': 57.25264861883838, 'spark.memory.storageFraction': 0.5206636237035138, 'spark.rdd.compress': 0.04207034942518879, 'spark.reducer.maxBlocksInFlightPerAddress': 2081065678.318516, 'spark.reducer.maxReqsInFlight': 1260742404.152311, 'spark.reducer.maxSizeInFlight': 70.96088093162473, 'spark.scheduler.mode': 0.940410686350342, 'spark.scheduler.revive.interval': 688.1846802696829, 'spark.shuffle.compress': 0.9738239885532188, 'spark.shuffle.file.buffer': 38.33812789743686, 'spark.shuffle.io.numConnectionsPerPeer': 3.919134007331786, 'spark.shuffle.sort.bypassMergeThreshold': 335.4032848581264, 'spark.storage.memoryMapThreshold': 3.831187482932415}
target = -217.039
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.04245605e+01 5.15088782e+01]
 [4.88902308e-02 7.96821098e-02]
 [9.51682354e-01 9.82215061e-01]
 [2.31828964e+02 2.41098498e+02]
 [3.87418083e+00 3.96883126e+00]
 [4.76648758e+00 4.89633789e+00]
 [4.85033203e+00 4.98388350e+00]
 [5.25111471e+02 5.41248593e+02]
 [1.03541816e+02 1.06632413e+02]
 [9.36928280e+01 9.67753994e+01]
 [7.51795042e+00 7.70872693e+00]
 [2.09807640e+09 2.13032440e+09]
 [6.15756721e-01 6.28244726e-01]
 [3.37371734e-02 6.46920387e-02]
 [3.98778887e+01 7.30024041e+01]
 [5.13525879e-01 5.26179576e-01]
 [3.52605914e-02 6.58024239e-02]
 [2.06220813e+09 2.09662146e+09]
 [1.23998030e+09 1.27501267e+09]
 [7.06820433e+01 7.20000000e+01]
 [9.19814712e-01 9.50570428e-01]
 [6.75200854e+02 6.91303102e+02]
 [9.67543871e-01 9.99102779e-01]
 [3.77218450e+01 3.87427124e+01]
 [3.89697416e+00 4.02815681e+00]
 [3.30689895e+02 3.36872586e+02]
 [3.77590290e+00 3.86807773e+00]]
before probe, param.shape = (43, 27)
before probe, target = (43,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.12907506e+01 7.91701051e-02 9.55848274e-01 ... 3.92316380e+00
  3.33104910e+02 3.80523855e+00]
 [5.10122053e+01 4.85645851e-02 9.62983866e-01 ... 3.92561730e+00
  3.35524920e+02 3.84036914e+00]
 [5.13297863e+01 6.78022001e-02 9.80245932e-01 ... 3.91913401e+00
  3.35403285e+02 3.83118748e+00]]
标准化后的train_x = 
[[ 0.15697023 -0.49594407  0.47298571 ...  0.42305391  0.43025703
   0.67222329]
 [-0.80007937 -0.49594407 -3.53296248 ... -0.89324837 -4.96414809
  -1.08379777]
 [ 2.78885663  4.32603296 -3.53296248 ... -3.52585292  0.81557168
  -1.08379777]
 ...
 [ 0.22653593 -0.11418764  0.29611618 ...  0.32191424  0.37408734
   0.33021809]
 [ 0.1598905  -0.26176676  0.32470099 ...  0.32514379  0.44581543
   0.39190815]
 [ 0.2358757  -0.16900342  0.39385194 ...  0.31660982  0.44221023
   0.37578496]]
================= config44 =================
2022年 02月 19日 星期六 23:29:07 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (277559) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (222966) - 没有那个进程
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039]
upper = 
[4886.20227009 4748.50938636 4937.97204978 ... 4816.9702093  5113.7954302
 4915.34001354]
upper.argmax() = 6085
all predict_target = 
[2499.47805772 2763.1217751  2387.66610143 ... 2639.4791098  1955.14171332
 2430.16450466]
upper.argmax() = 6085, sortnumber[0] = 6085
x_max = [5.09714174e+01 5.34252282e-02 9.77075593e-01 2.36597305e+02
 3.93988063e+00 4.86199887e+00 4.93086136e+00 5.37989818e+02
 1.05689288e+02 9.48611041e+01 7.61635797e+00 2.10481350e+09
 6.18342611e-01 5.41611899e-02 4.88444149e+01 5.19020416e-01
 4.36585658e-02 2.07390654e+09 1.27083526e+09 7.15025086e+01
 9.40102642e-01 6.84111378e+02 9.95270372e-01 3.83260993e+01
 3.93270254e+00 3.33788751e+02 3.84115010e+00]
black_box_function中schafferRun(i) 中的i为[50.971417433158464, 0.05342522818142841, 0.9770755929579118, 236.59730516064968, 3.939880628758047, 4.8619988662864735, 4.930861358036532, 537.9898183033821, 105.68928784874797, 94.8611041201917, 7.616357965995401, 2104813498.1849194, 0.6183426108396852, 0.05416118989757929, 48.84441491569447, 0.519020415502297, 0.043658565828297836, 2073906543.8602335, 1270835262.7090652, 71.50250860256824, 0.9401026418475902, 684.111378258515, 0.9952703718135485, 38.3260992848356, 3.932702538259793, 333.7887510313336, 3.84115010124301]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.971417433158464
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.05342522818142841
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9770755929579118
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 236.59730516064968
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.939880628758047
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.8619988662864735
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.930861358036532
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 537.9898183033821
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 105.68928784874797
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 94.8611041201917
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.616357965995401
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2104813498.1849194
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6183426108396852
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.05416118989757929
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 48.84441491569447
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.519020415502297
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.043658565828297836
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2073906543.8602335
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1270835262.7090652
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.50250860256824
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9401026418475902
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 684.111378258515
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9952703718135485
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.3260992848356
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.932702538259793
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 333.7887510313336
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.84115010124301
configNum = 44	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 44 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.971417433158464, 'spark.broadcast.checksum': 0.05342522818142841, 'spark.broadcast.compress': 0.9770755929579118, 'spark.default.parallelism': 236.59730516064968, 'spark.executor.cores': 3.939880628758047, 'spark.executor.instances': 4.8619988662864735, 'spark.executor.memory': 4.930861358036532, 'spark.executor.memoryOverhead': 537.9898183033821, 'spark.kryoserializer.buffer': 105.68928784874797, 'spark.kryoserializer.buffer.max': 94.8611041201917, 'spark.locality.wait': 7.616357965995401, 'spark.maxRemoteBlockSizeFetchToMem': 2104813498.1849194, 'spark.memory.fraction': 0.6183426108396852, 'spark.memory.offHeap.enabled': 0.05416118989757929, 'spark.memory.offHeap.size': 48.84441491569447, 'spark.memory.storageFraction': 0.519020415502297, 'spark.rdd.compress': 0.043658565828297836, 'spark.reducer.maxBlocksInFlightPerAddress': 2073906543.8602335, 'spark.reducer.maxReqsInFlight': 1270835262.7090652, 'spark.reducer.maxSizeInFlight': 71.50250860256824, 'spark.scheduler.mode': 0.9401026418475902, 'spark.scheduler.revive.interval': 684.111378258515, 'spark.shuffle.compress': 0.9952703718135485, 'spark.shuffle.file.buffer': 38.3260992848356, 'spark.shuffle.io.numConnectionsPerPeer': 3.932702538259793, 'spark.shuffle.sort.bypassMergeThreshold': 333.7887510313336, 'spark.storage.memoryMapThreshold': 3.84115010124301} target = -188.726
x_probe = {'spark.broadcast.blockSize': 50.971417433158464, 'spark.broadcast.checksum': 0.05342522818142841, 'spark.broadcast.compress': 0.9770755929579118, 'spark.default.parallelism': 236.59730516064968, 'spark.executor.cores': 3.939880628758047, 'spark.executor.instances': 4.8619988662864735, 'spark.executor.memory': 4.930861358036532, 'spark.executor.memoryOverhead': 537.9898183033821, 'spark.kryoserializer.buffer': 105.68928784874797, 'spark.kryoserializer.buffer.max': 94.8611041201917, 'spark.locality.wait': 7.616357965995401, 'spark.maxRemoteBlockSizeFetchToMem': 2104813498.1849194, 'spark.memory.fraction': 0.6183426108396852, 'spark.memory.offHeap.enabled': 0.05416118989757929, 'spark.memory.offHeap.size': 48.84441491569447, 'spark.memory.storageFraction': 0.519020415502297, 'spark.rdd.compress': 0.043658565828297836, 'spark.reducer.maxBlocksInFlightPerAddress': 2073906543.8602335, 'spark.reducer.maxReqsInFlight': 1270835262.7090652, 'spark.reducer.maxSizeInFlight': 71.50250860256824, 'spark.scheduler.mode': 0.9401026418475902, 'spark.scheduler.revive.interval': 684.111378258515, 'spark.shuffle.compress': 0.9952703718135485, 'spark.shuffle.file.buffer': 38.3260992848356, 'spark.shuffle.io.numConnectionsPerPeer': 3.932702538259793, 'spark.shuffle.sort.bypassMergeThreshold': 333.7887510313336, 'spark.storage.memoryMapThreshold': 3.84115010124301}
target = -188.726
================= config45 =================
2022年 02月 19日 星期六 23:32:24 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (284225) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (236988) - 没有那个进程
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.04787764e+01 5.14546623e+01]
 [5.04298248e-02 7.81425158e-02]
 [9.53208989e-01 9.80688425e-01]
 [2.32292441e+02 2.40635021e+02]
 [3.87891335e+00 3.96409874e+00]
 [4.77298010e+00 4.88984538e+00]
 [4.85700961e+00 4.97720593e+00]
 [5.25918327e+02 5.40441737e+02]
 [1.03696346e+02 1.06477883e+02]
 [9.38469565e+01 9.66212708e+01]
 [7.52748925e+00 7.69918810e+00]
 [2.09968880e+09 2.12871200e+09]
 [6.16381121e-01 6.27620326e-01]
 [3.52849166e-02 6.31442954e-02]
 [4.15341145e+01 7.13461783e+01]
 [5.14158564e-01 5.25546891e-01]
 [3.67876831e-02 6.42753322e-02]
 [2.06392879e+09 2.09490080e+09]
 [1.24173192e+09 1.27326105e+09]
 [7.07560275e+01 7.20000000e+01]
 [9.21352498e-01 9.49032642e-01]
 [6.76005966e+02 6.90497990e+02]
 [9.69121816e-01 9.97524834e-01]
 [3.77728883e+01 3.86916690e+01]
 [3.90353330e+00 4.02159768e+00]
 [3.30999029e+02 3.36563452e+02]
 [3.78051164e+00 3.86346899e+00]]
before probe, param.shape = (44, 27)
before probe, target = (44,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.10122053e+01 4.85645851e-02 9.62983866e-01 ... 3.92561730e+00
  3.35524920e+02 3.84036914e+00]
 [5.13297863e+01 6.78022001e-02 9.80245932e-01 ... 3.91913401e+00
  3.35403285e+02 3.83118748e+00]
 [5.09714174e+01 5.34252282e-02 9.77075593e-01 ... 3.93270254e+00
  3.33788751e+02 3.84115010e+00]]
标准化后的train_x = 
[[ 0.15529368 -0.49587857  0.46891776 ...  0.41972216  0.42541387
   0.66977724]
 [-0.81257258 -0.49587857 -3.57667027 ... -0.91010851 -5.02173848
  -1.10343146]
 [ 2.81692589  4.37870037 -3.57667027 ... -3.56976985  0.81449618
  -1.10343146]
 ...
 [ 0.15824695 -0.25914666  0.31916573 ...  0.32080576  0.4411244
   0.38671842]
 [ 0.23509095 -0.16537139  0.38900094 ...  0.31218408  0.43748394
   0.37043742]
 [ 0.14837765 -0.23545307  0.37617506 ...  0.33022793  0.3891619
   0.38810322]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726]
upper = 
[4889.15544705 4826.996418   4801.09334228 ... 4909.8095149  4901.4989021
 4003.60116265]
upper.argmax() = 2070
all predict_target = 
[2228.69764676 2354.2527368  2526.35147453 ... 2312.59592224 2277.88184819
 4205.96094611]
upper.argmax() = 2070, sortnumber[0] = 2070
x_max = [5.09717908e+01 7.20542979e-02 9.66422799e-01 2.35162214e+02
 3.93604251e+00 4.78613134e+00 4.94109109e+00 5.33695050e+02
 1.05972009e+02 9.64679681e+01 7.57647170e+00 2.10543824e+09
 6.19206352e-01 4.88949282e-02 5.82603229e+01 5.19486689e-01
 4.82999961e-02 2.08944204e+09 1.27060732e+09 7.13112470e+01
 9.34320890e-01 6.77406444e+02 9.86436898e-01 3.82250822e+01
 3.92163331e+00 3.34270287e+02 3.85873811e+00]
black_box_function中schafferRun(i) 中的i为[50.971790798609526, 0.07205429792383052, 0.9664227993846862, 235.16221350259474, 3.9360425114225595, 4.7861313355780775, 4.941091087288426, 533.6950501652378, 105.97200905541555, 96.46796810521533, 7.576471704289212, 2105438236.857976, 0.6192063517088593, 0.04889492818165384, 58.260322875505295, 0.5194866892800173, 0.0482999961318257, 2089442042.1087844, 1270607317.1723292, 71.31124702544916, 0.9343208901332553, 677.4064438885749, 0.9864368978819783, 38.225082213875346, 3.9216333115596504, 334.27028746632993, 3.858738110616782]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.971790798609526
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07205429792383052
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9664227993846862
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 235.16221350259474
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9360425114225595
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.7861313355780775
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.941091087288426
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 533.6950501652378
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 105.97200905541555
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.46796810521533
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.576471704289212
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2105438236.857976
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6192063517088593
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.04889492818165384
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 58.260322875505295
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5194866892800173
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0482999961318257
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2089442042.1087844
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1270607317.1723292
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.31124702544916
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9343208901332553
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 677.4064438885749
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9864368978819783
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.225082213875346
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.9216333115596504
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 334.27028746632993
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.858738110616782
configNum = 45	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 45 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.971790798609526, 'spark.broadcast.checksum': 0.07205429792383052, 'spark.broadcast.compress': 0.9664227993846862, 'spark.default.parallelism': 235.16221350259474, 'spark.executor.cores': 3.9360425114225595, 'spark.executor.instances': 4.7861313355780775, 'spark.executor.memory': 4.941091087288426, 'spark.executor.memoryOverhead': 533.6950501652378, 'spark.kryoserializer.buffer': 105.97200905541555, 'spark.kryoserializer.buffer.max': 96.46796810521533, 'spark.locality.wait': 7.576471704289212, 'spark.maxRemoteBlockSizeFetchToMem': 2105438236.857976, 'spark.memory.fraction': 0.6192063517088593, 'spark.memory.offHeap.enabled': 0.04889492818165384, 'spark.memory.offHeap.size': 58.260322875505295, 'spark.memory.storageFraction': 0.5194866892800173, 'spark.rdd.compress': 0.0482999961318257, 'spark.reducer.maxBlocksInFlightPerAddress': 2089442042.1087844, 'spark.reducer.maxReqsInFlight': 1270607317.1723292, 'spark.reducer.maxSizeInFlight': 71.31124702544916, 'spark.scheduler.mode': 0.9343208901332553, 'spark.scheduler.revive.interval': 677.4064438885749, 'spark.shuffle.compress': 0.9864368978819783, 'spark.shuffle.file.buffer': 38.225082213875346, 'spark.shuffle.io.numConnectionsPerPeer': 3.9216333115596504, 'spark.shuffle.sort.bypassMergeThreshold': 334.27028746632993, 'spark.storage.memoryMapThreshold': 3.858738110616782} target = -168.733
x_probe = {'spark.broadcast.blockSize': 50.971790798609526, 'spark.broadcast.checksum': 0.07205429792383052, 'spark.broadcast.compress': 0.9664227993846862, 'spark.default.parallelism': 235.16221350259474, 'spark.executor.cores': 3.9360425114225595, 'spark.executor.instances': 4.7861313355780775, 'spark.executor.memory': 4.941091087288426, 'spark.executor.memoryOverhead': 533.6950501652378, 'spark.kryoserializer.buffer': 105.97200905541555, 'spark.kryoserializer.buffer.max': 96.46796810521533, 'spark.locality.wait': 7.576471704289212, 'spark.maxRemoteBlockSizeFetchToMem': 2105438236.857976, 'spark.memory.fraction': 0.6192063517088593, 'spark.memory.offHeap.enabled': 0.04889492818165384, 'spark.memory.offHeap.size': 58.260322875505295, 'spark.memory.storageFraction': 0.5194866892800173, 'spark.rdd.compress': 0.0482999961318257, 'spark.reducer.maxBlocksInFlightPerAddress': 2089442042.1087844, 'spark.reducer.maxReqsInFlight': 1270607317.1723292, 'spark.reducer.maxSizeInFlight': 71.31124702544916, 'spark.scheduler.mode': 0.9343208901332553, 'spark.scheduler.revive.interval': 677.4064438885749, 'spark.shuffle.compress': 0.9864368978819783, 'spark.shuffle.file.buffer': 38.225082213875346, 'spark.shuffle.io.numConnectionsPerPeer': 3.9216333115596504, 'spark.shuffle.sort.bypassMergeThreshold': 334.27028746632993, 'spark.storage.memoryMapThreshold': 3.858738110616782}
target = -168.733
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.05328957e+01 5.14106859e+01]
 [5.99719933e-02 8.41366025e-02]
 [9.54083348e-01 9.78762250e-01]
 [2.31473128e+02 2.38851299e+02]
 [3.89843591e+00 3.97364911e+00]
 [4.73580603e+00 4.83645664e+00]
 [4.88820191e+00 4.99398027e+00]
 [5.27185267e+02 5.40204834e+02]
 [1.04764562e+02 1.07179456e+02]
 [9.52812194e+01 9.76547168e+01]
 [7.50105057e+00 7.65189284e+00]
 [2.09281590e+09 2.11806057e+09]
 [6.14288428e-01 6.24124275e-01]
 [3.63741916e-02 6.14156647e-02]
 [4.49359030e+01 7.15847428e+01]
 [5.14380244e-01 5.24593134e-01]
 [3.60421296e-02 6.05578627e-02]
 [2.07600600e+09 2.10287808e+09]
 [1.25707475e+09 1.28413988e+09]
 [7.07175071e+01 7.19049870e+01]
 [9.21908409e-01 9.46733371e-01]
 [6.71177310e+02 6.83635578e+02]
 [9.73811219e-01 9.99062577e-01]
 [3.78119907e+01 3.86381737e+01]
 [3.87055095e+00 3.97271568e+00]
 [3.31790750e+02 3.36749825e+02]
 [3.82324470e+00 3.89423153e+00]]
before probe, param.shape = (45, 27)
before probe, target = (45,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.13297863e+01 6.78022001e-02 9.80245932e-01 ... 3.91913401e+00
  3.35403285e+02 3.83118748e+00]
 [5.09714174e+01 5.34252282e-02 9.77075593e-01 ... 3.93270254e+00
  3.33788751e+02 3.84115010e+00]
 [5.09717908e+01 7.20542979e-02 9.66422799e-01 ... 3.92163331e+00
  3.34270287e+02 3.85873811e+00]]
标准化后的train_x = 
[[ 0.15367426 -0.49811547  0.46615679 ...  0.41691354  0.42039121
   0.66662184]
 [-0.82488905 -0.49811547 -3.62011159 ... -0.92645891 -5.07837077
  -1.12313109]
 [ 2.84472335  4.43039962 -3.62011159 ... -3.61320382  0.81315993
  -1.12313109]
 ...
 [ 0.23435347 -0.16395131  0.38543637 ...  0.3082804   0.43257565
   0.36448914]
 [ 0.1466818  -0.23480843  0.37248151 ...  0.32650799  0.38379578
   0.38231977]
 [ 0.14677314 -0.14299478  0.32895134 ...  0.31163789  0.39834443
   0.41379796]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733]
upper = 
[4886.00270367 4949.21748267 4297.05085451 ... 4841.67389381 4710.56282851
 4897.746507  ]
upper.argmax() = 1997
all predict_target = 
[2152.93811174 2048.23574394 3521.52916287 ... 2135.86672161 2511.16620094
 2180.80782443]
upper.argmax() = 1997, sortnumber[0] = 1997
x_max = [5.10451418e+01 6.36885429e-02 9.67345679e-01 2.36192013e+02
 3.94823214e+00 4.76952836e+00 4.98706182e+00 5.34694343e+02
 1.07102256e+02 9.57781095e+01 7.54166201e+00 2.10787242e+09
 6.14454688e-01 4.13033979e-02 6.18335736e+01 5.17687866e-01
 4.36125050e-02 2.09722136e+09 1.28096910e+09 7.13462780e+01
 9.28967625e-01 6.76482260e+02 9.98028154e-01 3.79597387e+01
 3.88918438e+00 3.34828500e+02 3.86414627e+00]
black_box_function中schafferRun(i) 中的i为[51.04514180045042, 0.06368854287913465, 0.9673456792316826, 236.1920132322267, 3.9482321421744158, 4.769528357492448, 4.987061821078418, 534.6943426517665, 107.10225557174597, 95.77810951103316, 7.541662007724547, 2107872420.2190378, 0.6144546875492358, 0.04130339793830776, 61.83357356613509, 0.5176878658660107, 0.04361250500983892, 2097221363.6300757, 1280969099.1120872, 71.34627798741353, 0.9289676246385713, 676.4822602141392, 0.9980281536321126, 37.95973869076195, 3.889184382671498, 334.82850011336836, 3.864146272665692]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.04514180045042
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06368854287913465
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9673456792316826
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 236.1920132322267
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9482321421744158
================= config46 =================
2022年 02月 19日 星期六 23:35:21 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (291706) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (249222) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.769528357492448
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.987061821078418
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 534.6943426517665
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 107.10225557174597
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.77810951103316
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.541662007724547
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2107872420.2190378
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6144546875492358
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.04130339793830776
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 61.83357356613509
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5176878658660107
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04361250500983892
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2097221363.6300757
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1280969099.1120872
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.34627798741353
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9289676246385713
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 676.4822602141392
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9980281536321126
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 37.95973869076195
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.889184382671498
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 334.82850011336836
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.864146272665692
configNum = 46	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 46 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.04514180045042, 'spark.broadcast.checksum': 0.06368854287913465, 'spark.broadcast.compress': 0.9673456792316826, 'spark.default.parallelism': 236.1920132322267, 'spark.executor.cores': 3.9482321421744158, 'spark.executor.instances': 4.769528357492448, 'spark.executor.memory': 4.987061821078418, 'spark.executor.memoryOverhead': 534.6943426517665, 'spark.kryoserializer.buffer': 107.10225557174597, 'spark.kryoserializer.buffer.max': 95.77810951103316, 'spark.locality.wait': 7.541662007724547, 'spark.maxRemoteBlockSizeFetchToMem': 2107872420.2190378, 'spark.memory.fraction': 0.6144546875492358, 'spark.memory.offHeap.enabled': 0.04130339793830776, 'spark.memory.offHeap.size': 61.83357356613509, 'spark.memory.storageFraction': 0.5176878658660107, 'spark.rdd.compress': 0.04361250500983892, 'spark.reducer.maxBlocksInFlightPerAddress': 2097221363.6300757, 'spark.reducer.maxReqsInFlight': 1280969099.1120872, 'spark.reducer.maxSizeInFlight': 71.34627798741353, 'spark.scheduler.mode': 0.9289676246385713, 'spark.scheduler.revive.interval': 676.4822602141392, 'spark.shuffle.compress': 0.9980281536321126, 'spark.shuffle.file.buffer': 37.95973869076195, 'spark.shuffle.io.numConnectionsPerPeer': 3.889184382671498, 'spark.shuffle.sort.bypassMergeThreshold': 334.82850011336836, 'spark.storage.memoryMapThreshold': 3.864146272665692} target = -176.912
x_probe = {'spark.broadcast.blockSize': 51.04514180045042, 'spark.broadcast.checksum': 0.06368854287913465, 'spark.broadcast.compress': 0.9673456792316826, 'spark.default.parallelism': 236.1920132322267, 'spark.executor.cores': 3.9482321421744158, 'spark.executor.instances': 4.769528357492448, 'spark.executor.memory': 4.987061821078418, 'spark.executor.memoryOverhead': 534.6943426517665, 'spark.kryoserializer.buffer': 107.10225557174597, 'spark.kryoserializer.buffer.max': 95.77810951103316, 'spark.locality.wait': 7.541662007724547, 'spark.maxRemoteBlockSizeFetchToMem': 2107872420.2190378, 'spark.memory.fraction': 0.6144546875492358, 'spark.memory.offHeap.enabled': 0.04130339793830776, 'spark.memory.offHeap.size': 61.83357356613509, 'spark.memory.storageFraction': 0.5176878658660107, 'spark.rdd.compress': 0.04361250500983892, 'spark.reducer.maxBlocksInFlightPerAddress': 2097221363.6300757, 'spark.reducer.maxReqsInFlight': 1280969099.1120872, 'spark.reducer.maxSizeInFlight': 71.34627798741353, 'spark.scheduler.mode': 0.9289676246385713, 'spark.scheduler.revive.interval': 676.4822602141392, 'spark.shuffle.compress': 0.9980281536321126, 'spark.shuffle.file.buffer': 37.95973869076195, 'spark.shuffle.io.numConnectionsPerPeer': 3.889184382671498, 'spark.shuffle.sort.bypassMergeThreshold': 334.82850011336836, 'spark.storage.memoryMapThreshold': 3.864146272665692}
target = -176.912
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.05767852e+01 5.13667964e+01]
 [6.11802238e-02 8.29283721e-02]
 [9.55317294e-01 9.77528305e-01]
 [2.31842037e+02 2.38482390e+02]
 [3.90219657e+00 3.96988845e+00]
 [4.74083856e+00 4.83142411e+00]
 [4.89349083e+00 4.98869135e+00]
 [5.27836245e+02 5.39553855e+02]
 [1.04885307e+02 1.07058711e+02]
 [9.53998943e+01 9.75360419e+01]
 [7.50859268e+00 7.64435073e+00]
 [2.09407814e+09 2.11679834e+09]
 [6.14780221e-01 6.23632483e-01]
 [3.76262653e-02 6.01635911e-02]
 [4.62683449e+01 7.02523008e+01]
 [5.14890889e-01 5.24082490e-01]
 [3.72679162e-02 5.93320760e-02]
 [2.07734961e+09 2.10153448e+09]
 [1.25842801e+09 1.28278663e+09]
 [7.07768811e+01 7.18456130e+01]
 [9.23149657e-01 9.45492123e-01]
 [6.71800223e+02 6.83012664e+02]
 [9.75073787e-01 9.97800009e-01]
 [3.78532999e+01 3.85968645e+01]
 [3.87565918e+00 3.96760744e+00]
 [3.32038704e+02 3.36501871e+02]
 [3.82679404e+00 3.89068218e+00]]
before probe, param.shape = (46, 27)
before probe, target = (46,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.09714174e+01 5.34252282e-02 9.77075593e-01 ... 3.93270254e+00
  3.33788751e+02 3.84115010e+00]
 [5.09717908e+01 7.20542979e-02 9.66422799e-01 ... 3.92163331e+00
  3.34270287e+02 3.85873811e+00]
 [5.10451418e+01 6.36885429e-02 9.67345679e-01 ... 3.88918438e+00
  3.34828500e+02 3.86414627e+00]]
================= config47 =================
2022年 02月 19日 星期六 23:38:27 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (301407) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (266737) - 没有那个进程
标准化后的train_x = 
[[ 0.15170725 -0.49938633  0.46343751 ...  0.41530475  0.41513333
   0.66338843]
 [-0.83737759 -0.49938633 -3.66302197 ... -0.94185256 -5.13400148
  -1.14262439]
 [ 2.87169055  4.48175193 -3.66302197 ... -3.6561672   0.8115001
  -1.14262439]
 ...
 [ 0.1446396  -0.23326788  0.36884087 ...  0.32397151  0.37820265
   0.37650348]
 [ 0.14473192 -0.14047391  0.32488255 ...  0.30894883  0.39288458
   0.40826765]
 [ 0.16286951 -0.18214489  0.32869077 ...  0.26491053  0.40990434
   0.41803486]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733    -176.912]
upper = 
[4190.38026628 4878.22194903 4823.78116946 ... 4634.52749786 4732.5106646
 4718.55561367]
upper.argmax() = 6507
all predict_target = 
[3645.34689893 2043.41230881 2149.87009765 ... 2328.01631271 2371.51375748
 2288.70287914]
upper.argmax() = 6507, sortnumber[0] = 6507
x_max = [5.06493425e+01 6.79188495e-02 9.74273163e-01 2.36182170e+02
 3.94308549e+00 4.78113431e+00 4.94555464e+00 5.30311599e+02
 1.06966947e+02 9.55749953e+01 7.57848420e+00 2.10874638e+09
 6.19048284e-01 3.96351001e-02 6.40224417e+01 5.17439619e-01
 4.59202605e-02 2.09634839e+09 1.28005095e+09 7.16239061e+01
 9.36883691e-01 6.76176543e+02 9.87922785e-01 3.78905268e+01
 3.88245500e+00 3.34845581e+02 3.88125106e+00]
black_box_function中schafferRun(i) 中的i为[50.649342451449385, 0.06791884945363286, 0.9742731634100119, 236.182169817951, 3.94308549415293, 4.781134313486685, 4.9455546408823565, 530.3115989894437, 106.96694718901097, 95.57499529601952, 7.578484195949988, 2108746384.5234075, 0.6190482843868738, 0.03963510007568501, 64.02244167453306, 0.5174396194804136, 0.04592026049824434, 2096348385.8515205, 1280050948.3511672, 71.62390612598355, 0.9368836910676576, 676.1765432729768, 0.9879227853110911, 37.89052676282609, 3.8824549963998014, 334.8455810806453, 3.881251061388254]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.649342451449385
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06791884945363286
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9742731634100119
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 236.182169817951
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.94308549415293
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.781134313486685
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.9455546408823565
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 530.3115989894437
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.96694718901097
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.57499529601952
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.578484195949988
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2108746384.5234075
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6190482843868738
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.03963510007568501
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 64.02244167453306
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5174396194804136
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04592026049824434
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2096348385.8515205
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1280050948.3511672
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.62390612598355
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9368836910676576
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 676.1765432729768
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9879227853110911
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 37.89052676282609
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.8824549963998014
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 334.8455810806453
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.881251061388254
configNum = 47	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 47 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.649342451449385, 'spark.broadcast.checksum': 0.06791884945363286, 'spark.broadcast.compress': 0.9742731634100119, 'spark.default.parallelism': 236.182169817951, 'spark.executor.cores': 3.94308549415293, 'spark.executor.instances': 4.781134313486685, 'spark.executor.memory': 4.9455546408823565, 'spark.executor.memoryOverhead': 530.3115989894437, 'spark.kryoserializer.buffer': 106.96694718901097, 'spark.kryoserializer.buffer.max': 95.57499529601952, 'spark.locality.wait': 7.578484195949988, 'spark.maxRemoteBlockSizeFetchToMem': 2108746384.5234075, 'spark.memory.fraction': 0.6190482843868738, 'spark.memory.offHeap.enabled': 0.03963510007568501, 'spark.memory.offHeap.size': 64.02244167453306, 'spark.memory.storageFraction': 0.5174396194804136, 'spark.rdd.compress': 0.04592026049824434, 'spark.reducer.maxBlocksInFlightPerAddress': 2096348385.8515205, 'spark.reducer.maxReqsInFlight': 1280050948.3511672, 'spark.reducer.maxSizeInFlight': 71.62390612598355, 'spark.scheduler.mode': 0.9368836910676576, 'spark.scheduler.revive.interval': 676.1765432729768, 'spark.shuffle.compress': 0.9879227853110911, 'spark.shuffle.file.buffer': 37.89052676282609, 'spark.shuffle.io.numConnectionsPerPeer': 3.8824549963998014, 'spark.shuffle.sort.bypassMergeThreshold': 334.8455810806453, 'spark.storage.memoryMapThreshold': 3.881251061388254} target = -177.729
x_probe = {'spark.broadcast.blockSize': 50.649342451449385, 'spark.broadcast.checksum': 0.06791884945363286, 'spark.broadcast.compress': 0.9742731634100119, 'spark.default.parallelism': 236.182169817951, 'spark.executor.cores': 3.94308549415293, 'spark.executor.instances': 4.781134313486685, 'spark.executor.memory': 4.9455546408823565, 'spark.executor.memoryOverhead': 530.3115989894437, 'spark.kryoserializer.buffer': 106.96694718901097, 'spark.kryoserializer.buffer.max': 95.57499529601952, 'spark.locality.wait': 7.578484195949988, 'spark.maxRemoteBlockSizeFetchToMem': 2108746384.5234075, 'spark.memory.fraction': 0.6190482843868738, 'spark.memory.offHeap.enabled': 0.03963510007568501, 'spark.memory.offHeap.size': 64.02244167453306, 'spark.memory.storageFraction': 0.5174396194804136, 'spark.rdd.compress': 0.04592026049824434, 'spark.reducer.maxBlocksInFlightPerAddress': 2096348385.8515205, 'spark.reducer.maxReqsInFlight': 1280050948.3511672, 'spark.reducer.maxSizeInFlight': 71.62390612598355, 'spark.scheduler.mode': 0.9368836910676576, 'spark.scheduler.revive.interval': 676.1765432729768, 'spark.shuffle.compress': 0.9879227853110911, 'spark.shuffle.file.buffer': 37.89052676282609, 'spark.shuffle.io.numConnectionsPerPeer': 3.8824549963998014, 'spark.shuffle.sort.bypassMergeThreshold': 334.8455810806453, 'spark.storage.memoryMapThreshold': 3.881251061388254}
target = -177.729
================= config48 =================
2022年 02月 19日 星期六 23:41:33 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (3429) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (281704) - 没有那个进程
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.06162858e+01 5.13272958e+01]
 [6.22676312e-02 8.18409646e-02]
 [9.56427844e-01 9.76417755e-01]
 [2.32174054e+02 2.38150373e+02]
 [3.90558116e+00 3.96650386e+00]
 [4.74536784e+00 4.82689483e+00]
 [4.89825085e+00 4.98393132e+00]
 [5.28422125e+02 5.38967975e+02]
 [1.04993977e+02 1.06950041e+02]
 [9.55067017e+01 9.74292346e+01]
 [7.51538059e+00 7.63756282e+00]
 [2.09521415e+09 2.11566233e+09]
 [6.15222834e-01 6.23189870e-01]
 [3.87531316e-02 5.90367248e-02]
 [4.74675427e+01 6.90531030e+01]
 [5.15350469e-01 5.23622910e-01]
 [3.83711242e-02 5.82288680e-02]
 [2.07855885e+09 2.10032523e+09]
 [1.25964594e+09 1.28156870e+09]
 [7.08303177e+01 7.17921764e+01]
 [9.24266780e-01 9.44375000e-01]
 [6.72360845e+02 6.82452042e+02]
 [9.76210098e-01 9.96663698e-01]
 [3.78904781e+01 3.85596863e+01]
 [3.88025660e+00 3.96301003e+00]
 [3.32261862e+02 3.36278713e+02]
 [3.82998844e+00 3.88748778e+00]]
before probe, param.shape = (47, 27)
before probe, target = (47,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.09717908e+01 7.20542979e-02 9.66422799e-01 ... 3.92163331e+00
  3.34270287e+02 3.85873811e+00]
 [5.10451418e+01 6.36885429e-02 9.67345679e-01 ... 3.88918438e+00
  3.34828500e+02 3.86414627e+00]
 [5.06493425e+01 6.79188495e-02 9.74273163e-01 ... 3.88245500e+00
  3.34845581e+02 3.88125106e+00]]
标准化后的train_x = 
[[ 0.15194262 -0.50118281  0.46013955 ...  0.41400571  0.41006036
   0.65949308]
 [-0.84779041 -0.50118281 -3.70527903 ... -0.95687023 -5.18904218
  -1.16214338]
 [ 2.90120844  4.53241805 -3.70527903 ... -3.69862211  0.80999625
  -1.16214338]
 ...
 [ 0.1448922  -0.13849023  0.32027646 ...  0.3065747   0.38761126
   0.40216528]
 [ 0.16322506 -0.18060011  0.32412064 ...  0.26209125  0.40478428
   0.41201698]
 [ 0.06430164 -0.15930643  0.35297651 ...  0.25286609  0.40530977
   0.44317569]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733    -176.912    -177.729]
upper = 
[3126.70581146 3984.02144029 4833.78042671 ... 4652.30435144 4542.94670981
 4837.68796497]
upper.argmax() = 660
all predict_target = 
[6320.23861528 4074.91276502 1976.71642872 ... 2383.57530988 2407.61227375
 1991.80552044]
upper.argmax() = 660, sortnumber[0] = 660
x_max = [5.10157458e+01 6.84192755e-02 9.66876714e-01 2.36548115e+02
 3.94232553e+00 4.79851105e+00 4.97946820e+00 5.33327497e+02
 1.06850674e+02 9.60384131e+01 7.54725149e+00 2.10040198e+09
 6.17218185e-01 4.18898202e-02 4.93503046e+01 5.22912662e-01
 4.25820028e-02 2.09355837e+09 1.28031234e+09 7.10418099e+01
 9.35881970e-01 6.76412125e+02 9.88058491e-01 3.80907682e+01
 3.90770755e+00 3.33874604e+02 3.85284121e+00]
black_box_function中schafferRun(i) 中的i为[51.015745760737616, 0.0684192755288326, 0.966876714292228, 236.54811454208027, 3.942325525125979, 4.7985110484612195, 4.9794681975525785, 533.3274965671962, 106.85067430523097, 96.03841306427022, 7.5472514942293465, 2100401977.9047675, 0.6172181849926452, 0.04188982019229895, 49.35030463395482, 0.5229126624687099, 0.04258200278602581, 2093558369.4779081, 1280312338.5610983, 71.04180987436428, 0.9358819699765115, 676.4121252623167, 0.9880584906237981, 38.0907681509577, 3.9077075489019055, 333.8746044313716, 3.8528412103325533]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.015745760737616
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0684192755288326
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.966876714292228
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 236.54811454208027
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.942325525125979
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.7985110484612195
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.9794681975525785
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 533.3274965671962
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.85067430523097
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.03841306427022
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.5472514942293465
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2100401977.9047675
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6172181849926452
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.04188982019229895
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 49.35030463395482
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5229126624687099
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04258200278602581
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2093558369.4779081
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1280312338.5610983
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.04180987436428
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9358819699765115
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 676.4121252623167
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9880584906237981
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.0907681509577
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.9077075489019055
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 333.8746044313716
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8528412103325533
configNum = 48	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 48 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.015745760737616, 'spark.broadcast.checksum': 0.0684192755288326, 'spark.broadcast.compress': 0.966876714292228, 'spark.default.parallelism': 236.54811454208027, 'spark.executor.cores': 3.942325525125979, 'spark.executor.instances': 4.7985110484612195, 'spark.executor.memory': 4.9794681975525785, 'spark.executor.memoryOverhead': 533.3274965671962, 'spark.kryoserializer.buffer': 106.85067430523097, 'spark.kryoserializer.buffer.max': 96.03841306427022, 'spark.locality.wait': 7.5472514942293465, 'spark.maxRemoteBlockSizeFetchToMem': 2100401977.9047675, 'spark.memory.fraction': 0.6172181849926452, 'spark.memory.offHeap.enabled': 0.04188982019229895, 'spark.memory.offHeap.size': 49.35030463395482, 'spark.memory.storageFraction': 0.5229126624687099, 'spark.rdd.compress': 0.04258200278602581, 'spark.reducer.maxBlocksInFlightPerAddress': 2093558369.4779081, 'spark.reducer.maxReqsInFlight': 1280312338.5610983, 'spark.reducer.maxSizeInFlight': 71.04180987436428, 'spark.scheduler.mode': 0.9358819699765115, 'spark.scheduler.revive.interval': 676.4121252623167, 'spark.shuffle.compress': 0.9880584906237981, 'spark.shuffle.file.buffer': 38.0907681509577, 'spark.shuffle.io.numConnectionsPerPeer': 3.9077075489019055, 'spark.shuffle.sort.bypassMergeThreshold': 333.8746044313716, 'spark.storage.memoryMapThreshold': 3.8528412103325533} target = -179.805
x_probe = {'spark.broadcast.blockSize': 51.015745760737616, 'spark.broadcast.checksum': 0.0684192755288326, 'spark.broadcast.compress': 0.966876714292228, 'spark.default.parallelism': 236.54811454208027, 'spark.executor.cores': 3.942325525125979, 'spark.executor.instances': 4.7985110484612195, 'spark.executor.memory': 4.9794681975525785, 'spark.executor.memoryOverhead': 533.3274965671962, 'spark.kryoserializer.buffer': 106.85067430523097, 'spark.kryoserializer.buffer.max': 96.03841306427022, 'spark.locality.wait': 7.5472514942293465, 'spark.maxRemoteBlockSizeFetchToMem': 2100401977.9047675, 'spark.memory.fraction': 0.6172181849926452, 'spark.memory.offHeap.enabled': 0.04188982019229895, 'spark.memory.offHeap.size': 49.35030463395482, 'spark.memory.storageFraction': 0.5229126624687099, 'spark.rdd.compress': 0.04258200278602581, 'spark.reducer.maxBlocksInFlightPerAddress': 2093558369.4779081, 'spark.reducer.maxReqsInFlight': 1280312338.5610983, 'spark.reducer.maxSizeInFlight': 71.04180987436428, 'spark.scheduler.mode': 0.9358819699765115, 'spark.scheduler.revive.interval': 676.4121252623167, 'spark.shuffle.compress': 0.9880584906237981, 'spark.shuffle.file.buffer': 38.0907681509577, 'spark.shuffle.io.numConnectionsPerPeer': 3.9077075489019055, 'spark.shuffle.sort.bypassMergeThreshold': 333.8746044313716, 'spark.storage.memoryMapThreshold': 3.8528412103325533}
target = -179.805
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.06518363e+01 5.12917453e+01]
 [6.32462979e-02 8.08622980e-02]
 [9.57427340e-01 9.75418259e-01]
 [2.32472870e+02 2.37851557e+02]
 [3.90862730e+00 3.96345772e+00]
 [4.74944419e+00 4.82281848e+00]
 [4.90253488e+00 4.97964730e+00]
 [5.28949418e+02 5.38440682e+02]
 [1.05091780e+02 1.06852238e+02]
 [9.56028283e+01 9.73331079e+01]
 [7.52148970e+00 7.63145371e+00]
 [2.09623656e+09 2.11463992e+09]
 [6.15621185e-01 6.22791518e-01]
 [3.97673112e-02 5.80225451e-02]
 [4.85468208e+01 6.79738250e+01]
 [5.15764091e-01 5.23209288e-01]
 [3.93640114e-02 5.72359808e-02]
 [2.07964717e+09 2.09923691e+09]
 [1.26074208e+09 1.28047256e+09]
 [7.08784106e+01 7.17440834e+01]
 [9.25272191e-01 9.43369589e-01]
 [6.72865405e+02 6.81947482e+02]
 [9.77232778e-01 9.95641018e-01]
 [3.79239385e+01 3.85262259e+01]
 [3.88439427e+00 3.95887236e+00]
 [3.32462705e+02 3.36077870e+02]
 [3.83286341e+00 3.88461281e+00]]
before probe, param.shape = (48, 27)
before probe, target = (48,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.10451418e+01 6.36885429e-02 9.67345679e-01 ... 3.88918438e+00
  3.34828500e+02 3.86414627e+00]
 [5.06493425e+01 6.79188495e-02 9.74273163e-01 ... 3.88245500e+00
  3.34845581e+02 3.88125106e+00]
 [5.10157458e+01 6.84192755e-02 9.66876714e-01 ... 3.90770755e+00
  3.33874604e+02 3.85284121e+00]]
标准化后的train_x = 
[[ 0.15023068 -0.50305671  0.45773143 ...  0.41197969  0.4058998
   0.65718309]
 [-0.85982621 -0.50305671 -3.74722309 ... -0.97221213 -5.2441644
  -1.18079947]
 [ 2.92788712  4.58250918 -3.74722309 ... -3.74059577  0.80947582
  -1.18079947]
 ...
 [ 0.16162963 -0.17916443  0.3204215  ...  0.25858962  0.40057571
   0.40748631]
 [ 0.06168466 -0.15765092  0.34955125 ...  0.24927486  0.40110598
   0.43892461]
 [ 0.15420671 -0.15510597  0.31844952 ...  0.28422923  0.37096268
   0.3867078 ]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733    -176.912    -177.729    -179.805]
upper = 
[4600.59971102 4511.36570641 4704.65046663 ... 4069.90606601 4532.61998922
 4236.23275447]
upper.argmax() = 7641
all predict_target = 
[2389.91400684 2598.66124254 2162.27381136 ... 3619.31411522 2515.77325466
 3144.26129387]
upper.argmax() = 7641, sortnumber[0] = 7641
x_max = [5.10202138e+01 6.79617696e-02 9.64573497e-01 2.33679100e+02
 3.95469776e+00 4.81033101e+00 4.92056415e+00 5.36348258e+02
 1.06758607e+02 9.57982502e+01 7.54009154e+00 2.10306777e+09
 6.16835130e-01 4.09113416e-02 5.41636524e+01 5.19779951e-01
 4.66894455e-02 2.09177789e+09 1.27046385e+09 7.11336073e+01
 9.39516624e-01 6.81555778e+02 9.83805523e-01 3.81962513e+01
 3.90629630e+00 3.34639764e+02 3.87555721e+00]
black_box_function中schafferRun(i) 中的i为[51.02021378386751, 0.06796176963783201, 0.9645734968793686, 233.67910018551814, 3.954697763745462, 4.8103310113881514, 4.9205641458198635, 536.3482583015191, 106.75860736459408, 95.79825018297036, 7.5400915355644145, 2103067767.1928203, 0.6168351298860443, 0.04091134158380499, 54.16365243074729, 0.5197799508468927, 0.04668944554370491, 2091777888.3443515, 1270463848.993296, 71.13360726335736, 0.93951662373225, 681.5557783607735, 0.9838055229941133, 38.19625133231949, 3.9062962998993878, 334.63976368079483, 3.875557213616893]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.02021378386751
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06796176963783201
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9645734968793686
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 233.67910018551814
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.954697763745462
================= config49 =================
2022年 02月 19日 星期六 23:44:42 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (14224) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (302438) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.8103310113881514
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.9205641458198635
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 536.3482583015191
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.75860736459408
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.79825018297036
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.5400915355644145
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2103067767.1928203
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6168351298860443
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.04091134158380499
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 54.16365243074729
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5197799508468927
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04668944554370491
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2091777888.3443515
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1270463848.993296
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.13360726335736
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.93951662373225
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 681.5557783607735
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9838055229941133
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.19625133231949
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.9062962998993878
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 334.63976368079483
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.875557213616893
configNum = 49	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 49 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.02021378386751, 'spark.broadcast.checksum': 0.06796176963783201, 'spark.broadcast.compress': 0.9645734968793686, 'spark.default.parallelism': 233.67910018551814, 'spark.executor.cores': 3.954697763745462, 'spark.executor.instances': 4.8103310113881514, 'spark.executor.memory': 4.9205641458198635, 'spark.executor.memoryOverhead': 536.3482583015191, 'spark.kryoserializer.buffer': 106.75860736459408, 'spark.kryoserializer.buffer.max': 95.79825018297036, 'spark.locality.wait': 7.5400915355644145, 'spark.maxRemoteBlockSizeFetchToMem': 2103067767.1928203, 'spark.memory.fraction': 0.6168351298860443, 'spark.memory.offHeap.enabled': 0.04091134158380499, 'spark.memory.offHeap.size': 54.16365243074729, 'spark.memory.storageFraction': 0.5197799508468927, 'spark.rdd.compress': 0.04668944554370491, 'spark.reducer.maxBlocksInFlightPerAddress': 2091777888.3443515, 'spark.reducer.maxReqsInFlight': 1270463848.993296, 'spark.reducer.maxSizeInFlight': 71.13360726335736, 'spark.scheduler.mode': 0.93951662373225, 'spark.scheduler.revive.interval': 681.5557783607735, 'spark.shuffle.compress': 0.9838055229941133, 'spark.shuffle.file.buffer': 38.19625133231949, 'spark.shuffle.io.numConnectionsPerPeer': 3.9062962998993878, 'spark.shuffle.sort.bypassMergeThreshold': 334.63976368079483, 'spark.storage.memoryMapThreshold': 3.875557213616893} target = -173.008
x_probe = {'spark.broadcast.blockSize': 51.02021378386751, 'spark.broadcast.checksum': 0.06796176963783201, 'spark.broadcast.compress': 0.9645734968793686, 'spark.default.parallelism': 233.67910018551814, 'spark.executor.cores': 3.954697763745462, 'spark.executor.instances': 4.8103310113881514, 'spark.executor.memory': 4.9205641458198635, 'spark.executor.memoryOverhead': 536.3482583015191, 'spark.kryoserializer.buffer': 106.75860736459408, 'spark.kryoserializer.buffer.max': 95.79825018297036, 'spark.locality.wait': 7.5400915355644145, 'spark.maxRemoteBlockSizeFetchToMem': 2103067767.1928203, 'spark.memory.fraction': 0.6168351298860443, 'spark.memory.offHeap.enabled': 0.04091134158380499, 'spark.memory.offHeap.size': 54.16365243074729, 'spark.memory.storageFraction': 0.5197799508468927, 'spark.rdd.compress': 0.04668944554370491, 'spark.reducer.maxBlocksInFlightPerAddress': 2091777888.3443515, 'spark.reducer.maxReqsInFlight': 1270463848.993296, 'spark.reducer.maxSizeInFlight': 71.13360726335736, 'spark.scheduler.mode': 0.93951662373225, 'spark.scheduler.revive.interval': 681.5557783607735, 'spark.shuffle.compress': 0.9838055229941133, 'spark.shuffle.file.buffer': 38.19625133231949, 'spark.shuffle.io.numConnectionsPerPeer': 3.9062962998993878, 'spark.shuffle.sort.bypassMergeThreshold': 334.63976368079483, 'spark.storage.memoryMapThreshold': 3.875557213616893}
target = -173.008
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.06838317e+01 5.12597499e+01]
 [6.41270979e-02 7.99814980e-02]
 [9.58326886e-01 9.74518713e-01]
 [2.32741805e+02 2.37582622e+02]
 [3.91136882e+00 3.96071620e+00]
 [4.75311290e+00 4.81914977e+00]
 [4.90639050e+00 4.97579168e+00]
 [5.29423981e+02 5.37966119e+02]
 [1.05179803e+02 1.06764215e+02]
 [9.56893423e+01 9.72465939e+01]
 [7.52698790e+00 7.62595551e+00]
 [2.09715672e+09 2.11371975e+09]
 [6.15979702e-01 6.22433001e-01]
 [4.06800729e-02 5.71097834e-02]
 [4.95181710e+01 6.70024748e+01]
 [5.16136351e-01 5.22837028e-01]
 [4.02576099e-02 5.63423824e-02]
 [2.08062666e+09 2.09825743e+09]
 [1.26172860e+09 1.27948603e+09]
 [7.09216942e+01 7.17007998e+01]
 [9.26177061e-01 9.42464719e-01]
 [6.73319509e+02 6.81493379e+02]
 [9.78153190e-01 9.94720606e-01]
 [3.79540529e+01 3.84961115e+01]
 [3.88811817e+00 3.95514845e+00]
 [3.32643463e+02 3.35897112e+02]
 [3.83545088e+00 3.88202534e+00]]
before probe, param.shape = (49, 27)
before probe, target = (49,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.06493425e+01 6.79188495e-02 9.74273163e-01 ... 3.88245500e+00
  3.34845581e+02 3.88125106e+00]
 [5.10157458e+01 6.84192755e-02 9.66876714e-01 ... 3.90770755e+00
  3.33874604e+02 3.85284121e+00]
 [5.10202138e+01 6.79617696e-02 9.64573497e-01 ... 3.90629630e+00
  3.34639764e+02 3.87555721e+00]]
================= config50 =================
2022年 02月 19日 星期六 23:47:44 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (22284) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (2904) - 没有那个进程
标准化后的train_x = 
[[ 0.14854799 -0.50489599  0.45566521 ...  0.4100953   0.40132968
   0.65393495]
 [-0.87172491 -0.50489599 -3.78873814 ... -0.98730516 -5.29823196
  -1.19962566]
 [ 2.95429848  4.63207245 -3.78873814 ... -3.78210607  0.80844123
  -1.19962566]
 ...
 [ 0.05910639 -0.155999    0.34647014 ...  0.24583786  0.39649386
   0.43382659]
 [ 0.15256424 -0.15342833  0.31507662 ...  0.28112578  0.36608649
   0.38116721]
 [ 0.15370389 -0.15577852  0.30530084 ...  0.2791537   0.39004843
   0.4232727 ]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733    -176.912    -177.729    -179.805
    -173.008]
upper = 
[4581.09458051 4857.85858041 4369.57272052 ... 4403.67679543 4721.39297683
 4494.3677802 ]
upper.argmax() = 2612
all predict_target = 
[2372.19019449 1595.4226456  2718.43441972 ... 2531.99188054 2003.72204122
 2459.21576885]
upper.argmax() = 2612, sortnumber[0] = 2612
x_max = [5.07095491e+01 6.44118700e-02 9.67376359e-01 2.34101627e+02
 3.92010632e+00 4.79128981e+00 4.92739747e+00 5.30978406e+02
 1.06098508e+02 9.64101454e+01 7.56748251e+00 2.10523580e+09
 6.17798447e-01 4.22733920e-02 5.95974573e+01 5.20123366e-01
 4.94234791e-02 2.09625207e+09 1.27409821e+09 7.12746223e+01
 9.36440121e-01 6.78088988e+02 9.86693290e-01 3.82150457e+01
 3.88870283e+00 3.33482626e+02 3.87045876e+00]
black_box_function中schafferRun(i) 中的i为[50.70954914838294, 0.06441186997598627, 0.9673763585108335, 234.1016265183658, 3.9201063238504985, 4.791289809329726, 4.927397471643056, 530.9784063339124, 106.0985079362547, 96.4101454407254, 7.56748251219055, 2105235804.221807, 0.6177984472124888, 0.04227339195888441, 59.59745727406031, 0.5201233662982525, 0.04942347910840213, 2096252072.3198469, 1274098208.1656065, 71.27462234720963, 0.9364401211968928, 678.0889880225087, 0.9866932904838975, 38.215045710221666, 3.8887028274390363, 333.48262645880726, 3.8704587631447858]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.70954914838294
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06441186997598627
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9673763585108335
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 234.1016265183658
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9201063238504985
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.791289809329726
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.927397471643056
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 530.9784063339124
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.0985079362547
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.4101454407254
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.56748251219055
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2105235804.221807
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6177984472124888
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.04227339195888441
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 59.59745727406031
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5201233662982525
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04942347910840213
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2096252072.3198469
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1274098208.1656065
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.27462234720963
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9364401211968928
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 678.0889880225087
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9866932904838975
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.215045710221666
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.8887028274390363
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 333.48262645880726
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8704587631447858
configNum = 50	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 50 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.70954914838294, 'spark.broadcast.checksum': 0.06441186997598627, 'spark.broadcast.compress': 0.9673763585108335, 'spark.default.parallelism': 234.1016265183658, 'spark.executor.cores': 3.9201063238504985, 'spark.executor.instances': 4.791289809329726, 'spark.executor.memory': 4.927397471643056, 'spark.executor.memoryOverhead': 530.9784063339124, 'spark.kryoserializer.buffer': 106.0985079362547, 'spark.kryoserializer.buffer.max': 96.4101454407254, 'spark.locality.wait': 7.56748251219055, 'spark.maxRemoteBlockSizeFetchToMem': 2105235804.221807, 'spark.memory.fraction': 0.6177984472124888, 'spark.memory.offHeap.enabled': 0.04227339195888441, 'spark.memory.offHeap.size': 59.59745727406031, 'spark.memory.storageFraction': 0.5201233662982525, 'spark.rdd.compress': 0.04942347910840213, 'spark.reducer.maxBlocksInFlightPerAddress': 2096252072.3198469, 'spark.reducer.maxReqsInFlight': 1274098208.1656065, 'spark.reducer.maxSizeInFlight': 71.27462234720963, 'spark.scheduler.mode': 0.9364401211968928, 'spark.scheduler.revive.interval': 678.0889880225087, 'spark.shuffle.compress': 0.9866932904838975, 'spark.shuffle.file.buffer': 38.215045710221666, 'spark.shuffle.io.numConnectionsPerPeer': 3.8887028274390363, 'spark.shuffle.sort.bypassMergeThreshold': 333.48262645880726, 'spark.storage.memoryMapThreshold': 3.8704587631447858} target = -173.615
x_probe = {'spark.broadcast.blockSize': 50.70954914838294, 'spark.broadcast.checksum': 0.06441186997598627, 'spark.broadcast.compress': 0.9673763585108335, 'spark.default.parallelism': 234.1016265183658, 'spark.executor.cores': 3.9201063238504985, 'spark.executor.instances': 4.791289809329726, 'spark.executor.memory': 4.927397471643056, 'spark.executor.memoryOverhead': 530.9784063339124, 'spark.kryoserializer.buffer': 106.0985079362547, 'spark.kryoserializer.buffer.max': 96.4101454407254, 'spark.locality.wait': 7.56748251219055, 'spark.maxRemoteBlockSizeFetchToMem': 2105235804.221807, 'spark.memory.fraction': 0.6177984472124888, 'spark.memory.offHeap.enabled': 0.04227339195888441, 'spark.memory.offHeap.size': 59.59745727406031, 'spark.memory.storageFraction': 0.5201233662982525, 'spark.rdd.compress': 0.04942347910840213, 'spark.reducer.maxBlocksInFlightPerAddress': 2096252072.3198469, 'spark.reducer.maxReqsInFlight': 1274098208.1656065, 'spark.reducer.maxSizeInFlight': 71.27462234720963, 'spark.scheduler.mode': 0.9364401211968928, 'spark.scheduler.revive.interval': 678.0889880225087, 'spark.shuffle.compress': 0.9866932904838975, 'spark.shuffle.file.buffer': 38.215045710221666, 'spark.shuffle.io.numConnectionsPerPeer': 3.8887028274390363, 'spark.shuffle.sort.bypassMergeThreshold': 333.48262645880726, 'spark.storage.memoryMapThreshold': 3.8704587631447858}
target = -173.615
================= config51 =================
2022年 02月 19日 星期六 23:50:46 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (29672) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (18206) - 没有那个进程
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.07126276e+01 5.12309540e+01]
 [6.49198179e-02 7.91887780e-02]
 [9.59136477e-01 9.73709122e-01]
 [2.32983845e+02 2.37340582e+02]
 [3.91383619e+00 3.95824883e+00]
 [4.75641475e+00 4.81584793e+00]
 [4.90986056e+00 4.97232162e+00]
 [5.29851088e+02 5.37539012e+02]
 [1.05259024e+02 1.06684994e+02]
 [9.57672049e+01 9.71687314e+01]
 [7.53193628e+00 7.62100713e+00]
 [2.09798487e+09 2.11289160e+09]
 [6.16302367e-01 6.22110336e-01]
 [4.15015584e-02 5.62882979e-02]
 [5.03923862e+01 6.61282596e+01]
 [5.16471384e-01 5.22501994e-01]
 [4.10618485e-02 5.55381438e-02]
 [2.08150820e+09 2.09737589e+09]
 [1.26261647e+09 1.27859816e+09]
 [7.09606495e+01 7.16618445e+01]
 [9.26991444e-01 9.41650336e-01]
 [6.73728203e+02 6.81084685e+02]
 [9.78981561e-01 9.93892235e-01]
 [3.79811558e+01 3.84690086e+01]
 [3.89146969e+00 3.95179694e+00]
 [3.32806145e+02 3.35734430e+02]
 [3.83777960e+00 3.87969662e+00]]
before probe, param.shape = (50, 27)
before probe, target = (50,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.10157458e+01 6.84192755e-02 9.66876714e-01 ... 3.90770755e+00
  3.33874604e+02 3.85284121e+00]
 [5.10202138e+01 6.79617696e-02 9.64573497e-01 ... 3.90629630e+00
  3.34639764e+02 3.87555721e+00]
 [5.07095491e+01 6.44118700e-02 9.67376359e-01 ... 3.88870283e+00
  3.33482626e+02 3.87045876e+00]]
标准化后的train_x = 
[[ 0.14854351 -0.50635304  0.45342703 ...  0.40885088  0.39775852
   0.65109953]
 [-0.88203062 -0.50635304 -3.82976048 ... -1.00182286 -5.3524744
  -1.21808122]
 [ 2.98262237  4.6811981  -3.82976048 ... -3.82317032  0.80848945
  -1.21808122]
 ...
 [ 0.15260031 -0.15142455  0.31155379 ...  0.27865634  0.362202
   0.37603315]
 [ 0.15375146 -0.15379789  0.30168868 ...  0.27666553  0.38637697
   0.41849347]
 [ 0.07371073 -0.17221317  0.31369386 ...  0.25184688  0.34981758
   0.40896354]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733    -176.912    -177.729    -179.805
    -173.008    -173.615]
upper = 
[4455.46421202 4223.8782521  4400.78192397 ... 4394.06834192 4647.04119728
 4553.18034212]
upper.argmax() = 9707
all predict_target = 
[2338.09242536 2926.40020489 2607.71157087 ... 2492.46614512 2023.45085996
 2233.02912307]
upper.argmax() = 9707, sortnumber[0] = 9707
x_max = [5.08720755e+01 7.22587869e-02 9.67614813e-01 2.34461258e+02
 3.94984100e+00 4.79036643e+00 4.92495656e+00 5.35588893e+02
 1.06587748e+02 9.59008002e+01 7.54716584e+00 2.10124598e+09
 6.17095803e-01 4.72036557e-02 6.31004003e+01 5.20904829e-01
 4.71855381e-02 2.09008256e+09 1.27602351e+09 7.11301630e+01
 9.31334832e-01 6.77538711e+02 9.84831917e-01 3.82586302e+01
 3.89730020e+00 3.33843383e+02 3.85610134e+00]
black_box_function中schafferRun(i) 中的i为[50.87207551478744, 0.07225878694027288, 0.9676148132808622, 234.46125828728316, 3.949840995345811, 4.790366426363634, 4.924956562132342, 535.5888928308991, 106.5877484695951, 95.90080021884383, 7.547165835662429, 2101245975.6912117, 0.617095803474323, 0.047203655733412286, 63.10040033984602, 0.5209048290781826, 0.04718553809891135, 2090082561.1541893, 1276023509.156714, 71.130163031617, 0.9313348316667319, 677.538711286515, 0.9848319171028941, 38.258630219002725, 3.8973002045587535, 333.84338266326336, 3.856101342591543]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.87207551478744
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07225878694027288
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9676148132808622
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 234.46125828728316
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.949840995345811
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.790366426363634
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.924956562132342
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 535.5888928308991
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.5877484695951
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.90080021884383
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.547165835662429
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2101245975.6912117
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.617095803474323
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.047203655733412286
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 63.10040033984602
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5209048290781826
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04718553809891135
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2090082561.1541893
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1276023509.156714
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.130163031617
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9313348316667319
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 677.538711286515
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9848319171028941
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.258630219002725
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.8973002045587535
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 333.84338266326336
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.856101342591543
configNum = 51	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 51 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.87207551478744, 'spark.broadcast.checksum': 0.07225878694027288, 'spark.broadcast.compress': 0.9676148132808622, 'spark.default.parallelism': 234.46125828728316, 'spark.executor.cores': 3.949840995345811, 'spark.executor.instances': 4.790366426363634, 'spark.executor.memory': 4.924956562132342, 'spark.executor.memoryOverhead': 535.5888928308991, 'spark.kryoserializer.buffer': 106.5877484695951, 'spark.kryoserializer.buffer.max': 95.90080021884383, 'spark.locality.wait': 7.547165835662429, 'spark.maxRemoteBlockSizeFetchToMem': 2101245975.6912117, 'spark.memory.fraction': 0.617095803474323, 'spark.memory.offHeap.enabled': 0.047203655733412286, 'spark.memory.offHeap.size': 63.10040033984602, 'spark.memory.storageFraction': 0.5209048290781826, 'spark.rdd.compress': 0.04718553809891135, 'spark.reducer.maxBlocksInFlightPerAddress': 2090082561.1541893, 'spark.reducer.maxReqsInFlight': 1276023509.156714, 'spark.reducer.maxSizeInFlight': 71.130163031617, 'spark.scheduler.mode': 0.9313348316667319, 'spark.scheduler.revive.interval': 677.538711286515, 'spark.shuffle.compress': 0.9848319171028941, 'spark.shuffle.file.buffer': 38.258630219002725, 'spark.shuffle.io.numConnectionsPerPeer': 3.8973002045587535, 'spark.shuffle.sort.bypassMergeThreshold': 333.84338266326336, 'spark.storage.memoryMapThreshold': 3.856101342591543} target = -178.906
x_probe = {'spark.broadcast.blockSize': 50.87207551478744, 'spark.broadcast.checksum': 0.07225878694027288, 'spark.broadcast.compress': 0.9676148132808622, 'spark.default.parallelism': 234.46125828728316, 'spark.executor.cores': 3.949840995345811, 'spark.executor.instances': 4.790366426363634, 'spark.executor.memory': 4.924956562132342, 'spark.executor.memoryOverhead': 535.5888928308991, 'spark.kryoserializer.buffer': 106.5877484695951, 'spark.kryoserializer.buffer.max': 95.90080021884383, 'spark.locality.wait': 7.547165835662429, 'spark.maxRemoteBlockSizeFetchToMem': 2101245975.6912117, 'spark.memory.fraction': 0.617095803474323, 'spark.memory.offHeap.enabled': 0.047203655733412286, 'spark.memory.offHeap.size': 63.10040033984602, 'spark.memory.storageFraction': 0.5209048290781826, 'spark.rdd.compress': 0.04718553809891135, 'spark.reducer.maxBlocksInFlightPerAddress': 2090082561.1541893, 'spark.reducer.maxReqsInFlight': 1276023509.156714, 'spark.reducer.maxSizeInFlight': 71.130163031617, 'spark.scheduler.mode': 0.9313348316667319, 'spark.scheduler.revive.interval': 677.538711286515, 'spark.shuffle.compress': 0.9848319171028941, 'spark.shuffle.file.buffer': 38.258630219002725, 'spark.shuffle.io.numConnectionsPerPeer': 3.8973002045587535, 'spark.shuffle.sort.bypassMergeThreshold': 333.84338266326336, 'spark.storage.memoryMapThreshold': 3.856101342591543}
target = -178.906
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.07385439e+01 5.12050377e+01]
 [6.56332659e-02 7.84753300e-02]
 [9.59865109e-01 9.72980490e-01]
 [2.33201682e+02 2.37122745e+02]
 [3.91605682e+00 3.95602820e+00]
 [4.75938640e+00 4.81287627e+00]
 [4.91298361e+00 4.96919856e+00]
 [5.30235484e+02 5.37154616e+02]
 [1.05330322e+02 1.06613696e+02]
 [9.58372812e+01 9.70986550e+01]
 [7.53638982e+00 7.61655359e+00]
 [2.09873021e+09 2.11214626e+09]
 [6.16592766e-01 6.21819938e-01]
 [4.22408954e-02 5.55489609e-02]
 [5.11791798e+01 6.53414659e+01]
 [5.16772915e-01 5.22200464e-01]
 [4.17856633e-02 5.48143290e-02]
 [2.08230158e+09 2.09658250e+09]
 [1.26341556e+09 1.27779908e+09]
 [7.09957093e+01 7.16267848e+01]
 [9.27724389e-01 9.40917392e-01]
 [6.74096027e+02 6.80716861e+02]
 [9.79727094e-01 9.93146701e-01]
 [3.80055485e+01 3.84446160e+01]
 [3.89448605e+00 3.94878057e+00]
 [3.32952559e+02 3.35588015e+02]
 [3.83987545e+00 3.87760077e+00]]
before probe, param.shape = (51, 27)
before probe, target = (51,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.10202138e+01 6.79617696e-02 9.64573497e-01 ... 3.90629630e+00
  3.34639764e+02 3.87555721e+00]
 [5.07095491e+01 6.44118700e-02 9.67376359e-01 ... 3.88870283e+00
  3.33482626e+02 3.87045876e+00]
 [5.08720755e+01 7.22587869e-02 9.67614813e-01 ... 3.89730020e+00
  3.33843383e+02 3.85610134e+00]]
标准化后的train_x = 
[[ 0.14771333 -0.50870104  0.45126858 ...  0.40741343  0.39405953
   0.6490825 ]
 [-0.89297922 -0.50870104 -3.87034436 ... -1.01632489 -5.40597648
  -1.23600081]
 [ 3.00961785  4.72958073 -3.87034436 ... -3.86380153  0.80834782
  -1.23600081]
 ...
 [ 0.15297242 -0.15269814  0.29816895 ...  0.27400388  0.3825794
   0.41449748]
 [ 0.07214582 -0.17129351  0.31028183 ...  0.24895538  0.34570337
   0.40488648]
 [ 0.11443082 -0.13018915  0.31131234 ...  0.26119579  0.35720007
   0.37782154]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733    -176.912    -177.729    -179.805
    -173.008    -173.615    -178.906]
upper = 
[4568.80360437 4770.91406772 4687.60144784 ... 4461.63068145 2592.95828728
 3711.46047332]
upper.argmax() = 5595
all predict_target = 
[1892.17979679 1378.07468266 1714.82594249 ... 2253.94950991 7113.35240739
 3951.00475341]
upper.argmax() = 5595, sortnumber[0] = 5595
x_max = [5.08958254e+01 6.78761268e-02 9.67619533e-01 2.34577013e+02
 3.94459491e+00 4.76340346e+00 4.96783034e+00 5.34050512e+02
 1.06285822e+02 9.66516021e+01 7.56070287e+00 2.10351398e+09
 6.17994123e-01 4.89308366e-02 5.62227434e+01 5.20308724e-01
 4.43427963e-02 2.08775701e+09 1.27412322e+09 7.10957079e+01
 9.40496145e-01 6.77463875e+02 9.84951427e-01 3.80467222e+01
 3.91150949e+00 3.34013458e+02 3.86887448e+00]
black_box_function中schafferRun(i) 中的i为[50.89582540712561, 0.06787612682143664, 0.9676195326283918, 234.5770133088704, 3.944594911765124, 4.76340346058576, 4.967830339921892, 534.0505119993447, 106.28582156224336, 96.65160207137451, 7.5607028732505634, 2103513979.5633032, 0.6179941225203132, 0.04893083658651514, 56.22274340838805, 0.5203087236739771, 0.044342796324980074, 2087757013.4999986, 1274123222.3261101, 71.09570791902826, 0.9404961452389274, 677.4638749215989, 0.9849514269745749, 38.04672219575596, 3.9115094892457867, 334.01345774981326, 3.8688744770209715]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.89582540712561
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06787612682143664
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9676195326283918
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 234.5770133088704
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.944594911765124
================= config52 =================
2022年 02月 19日 星期六 23:53:54 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (37426) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (34226) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.76340346058576
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.967830339921892
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 534.0505119993447
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.28582156224336
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.65160207137451
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.5607028732505634
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2103513979.5633032
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6179941225203132
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.04893083658651514
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 56.22274340838805
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5203087236739771
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.044342796324980074
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2087757013.4999986
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1274123222.3261101
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.09570791902826
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9404961452389274
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 677.4638749215989
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9849514269745749
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.04672219575596
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.9115094892457867
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 334.01345774981326
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8688744770209715
configNum = 52	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 52 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.89582540712561, 'spark.broadcast.checksum': 0.06787612682143664, 'spark.broadcast.compress': 0.9676195326283918, 'spark.default.parallelism': 234.5770133088704, 'spark.executor.cores': 3.944594911765124, 'spark.executor.instances': 4.76340346058576, 'spark.executor.memory': 4.967830339921892, 'spark.executor.memoryOverhead': 534.0505119993447, 'spark.kryoserializer.buffer': 106.28582156224336, 'spark.kryoserializer.buffer.max': 96.65160207137451, 'spark.locality.wait': 7.5607028732505634, 'spark.maxRemoteBlockSizeFetchToMem': 2103513979.5633032, 'spark.memory.fraction': 0.6179941225203132, 'spark.memory.offHeap.enabled': 0.04893083658651514, 'spark.memory.offHeap.size': 56.22274340838805, 'spark.memory.storageFraction': 0.5203087236739771, 'spark.rdd.compress': 0.044342796324980074, 'spark.reducer.maxBlocksInFlightPerAddress': 2087757013.4999986, 'spark.reducer.maxReqsInFlight': 1274123222.3261101, 'spark.reducer.maxSizeInFlight': 71.09570791902826, 'spark.scheduler.mode': 0.9404961452389274, 'spark.scheduler.revive.interval': 677.4638749215989, 'spark.shuffle.compress': 0.9849514269745749, 'spark.shuffle.file.buffer': 38.04672219575596, 'spark.shuffle.io.numConnectionsPerPeer': 3.9115094892457867, 'spark.shuffle.sort.bypassMergeThreshold': 334.01345774981326, 'spark.storage.memoryMapThreshold': 3.8688744770209715} target = -215.692
x_probe = {'spark.broadcast.blockSize': 50.89582540712561, 'spark.broadcast.checksum': 0.06787612682143664, 'spark.broadcast.compress': 0.9676195326283918, 'spark.default.parallelism': 234.5770133088704, 'spark.executor.cores': 3.944594911765124, 'spark.executor.instances': 4.76340346058576, 'spark.executor.memory': 4.967830339921892, 'spark.executor.memoryOverhead': 534.0505119993447, 'spark.kryoserializer.buffer': 106.28582156224336, 'spark.kryoserializer.buffer.max': 96.65160207137451, 'spark.locality.wait': 7.5607028732505634, 'spark.maxRemoteBlockSizeFetchToMem': 2103513979.5633032, 'spark.memory.fraction': 0.6179941225203132, 'spark.memory.offHeap.enabled': 0.04893083658651514, 'spark.memory.offHeap.size': 56.22274340838805, 'spark.memory.storageFraction': 0.5203087236739771, 'spark.rdd.compress': 0.044342796324980074, 'spark.reducer.maxBlocksInFlightPerAddress': 2087757013.4999986, 'spark.reducer.maxReqsInFlight': 1274123222.3261101, 'spark.reducer.maxSizeInFlight': 71.09570791902826, 'spark.scheduler.mode': 0.9404961452389274, 'spark.scheduler.revive.interval': 677.4638749215989, 'spark.shuffle.compress': 0.9849514269745749, 'spark.shuffle.file.buffer': 38.04672219575596, 'spark.shuffle.io.numConnectionsPerPeer': 3.9115094892457867, 'spark.shuffle.sort.bypassMergeThreshold': 334.01345774981326, 'spark.storage.memoryMapThreshold': 3.8688744770209715}
target = -215.692
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.07618686e+01 5.11817130e+01]
 [6.62753691e-02 7.78332268e-02]
 [9.60520878e-01 9.72324721e-01]
 [2.33397735e+02 2.36926692e+02]
 [3.91805539e+00 3.95402963e+00]
 [4.76206090e+00 4.81020177e+00]
 [4.91579436e+00 4.96638782e+00]
 [5.30581441e+02 5.36808659e+02]
 [1.05394491e+02 1.06549527e+02]
 [9.59003499e+01 9.70355863e+01]
 [7.54039801e+00 7.61254540e+00]
 [2.09940101e+09 2.11147546e+09]
 [6.16854124e-01 6.21558579e-01]
 [4.29062987e-02 5.48835577e-02]
 [5.18872941e+01 6.46333516e+01]
 [5.17044292e-01 5.21929086e-01]
 [4.24370966e-02 5.41628957e-02]
 [2.08301563e+09 2.09586846e+09]
 [1.26413473e+09 1.27707990e+09]
 [7.10272630e+01 7.15952310e+01]
 [9.28384039e-01 9.40257741e-01]
 [6.74427068e+02 6.80385819e+02]
 [9.80398075e-01 9.92475721e-01]
 [3.80275018e+01 3.84226626e+01]
 [3.89720077e+00 3.94606585e+00]
 [3.33084332e+02 3.35456243e+02]
 [3.84176172e+00 3.87571450e+00]]
before probe, param.shape = (52, 27)
before probe, target = (52,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.07095491e+01 6.44118700e-02 9.67376359e-01 ... 3.88870283e+00
  3.33482626e+02 3.87045876e+00]
 [5.08720755e+01 7.22587869e-02 9.67614813e-01 ... 3.89730020e+00
  3.33843383e+02 3.85610134e+00]
 [5.08958254e+01 6.78761268e-02 9.67619533e-01 ... 3.91150949e+00
  3.34013458e+02 3.86887448e+00]]
================= config53 =================
2022年 02月 19日 星期六 23:57:38 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (44124) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (43009) - 没有那个进程
标准化后的train_x = 
[[ 0.14679189 -0.5105751   0.44920726 ...  0.40561467  0.39036935
   0.64660744]
 [-0.90390704 -0.5105751  -3.91050739 ... -1.03092054 -5.45886286
  -1.25391792]
 [ 3.03621396  4.77762061 -3.91050739 ... -3.90399095  0.80817165
  -1.25391792]
 ...
 [ 0.07049779 -0.16995252  0.30697749 ...  0.24573236  0.34160303
   0.40041103]
 [ 0.11318936 -0.12845649  0.30801708 ...  0.25808279  0.35319725
   0.37312439]
 [ 0.11942786 -0.15163285  0.30803766 ...  0.27849493  0.35866323
   0.39740005]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733    -176.912    -177.729    -179.805
    -173.008    -173.615    -178.906    -215.692]
upper = 
[4451.20892852 4086.60532214 4566.26977488 ... 4574.21057556 4576.93571589
 4636.11185912]
upper.argmax() = 8742
all predict_target = 
[1990.05663507 3093.71835764 1892.1073634  ... 1983.44773751 1840.23694454
 1799.01921277]
upper.argmax() = 8742, sortnumber[0] = 8742
x_max = [5.10239973e+01 7.07263154e-02 9.66855163e-01 2.35252354e+02
 3.93400964e+00 4.76591950e+00 4.94876020e+00 5.32531660e+02
 1.06212197e+02 9.59432002e+01 7.56952958e+00 2.10626166e+09
 6.18338314e-01 4.63403218e-02 5.53087020e+01 5.19769092e-01
 4.91852743e-02 2.09148361e+09 1.27484362e+09 7.12935795e+01
 9.39393853e-01 6.78930312e+02 9.90374106e-01 3.80843617e+01
 3.90019304e+00 3.33678115e+02 3.86455756e+00]
black_box_function中schafferRun(i) 中的i为[51.02399728543563, 0.07072631539591012, 0.9668551634189854, 235.25235410471507, 3.934009637580428, 4.7659195044533424, 4.94876020279727, 532.5316601528591, 106.21219731513517, 95.94320020883656, 7.569529580736894, 2106261662.1399894, 0.6183383136048964, 0.046340321776189866, 55.3087020219585, 0.5197690920268019, 0.04918527427596001, 2091483610.618822, 1274843620.0130057, 71.29357954785795, 0.9393938534029427, 678.930311502755, 0.9903741064880522, 38.08436172295032, 3.900193041027599, 333.678114948416, 3.864557558115294]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 51.02399728543563
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07072631539591012
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9668551634189854
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 235.25235410471507
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.934009637580428
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.7659195044533424
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.94876020279727
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 532.5316601528591
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.21219731513517
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 95.94320020883656
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.569529580736894
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2106261662.1399894
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6183383136048964
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.046340321776189866
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 55.3087020219585
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5197690920268019
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04918527427596001
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2091483610.618822
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1274843620.0130057
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.29357954785795
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9393938534029427
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 678.930311502755
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9903741064880522
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.08436172295032
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.900193041027599
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 333.678114948416
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.864557558115294
configNum = 53	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 53 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 51.02399728543563, 'spark.broadcast.checksum': 0.07072631539591012, 'spark.broadcast.compress': 0.9668551634189854, 'spark.default.parallelism': 235.25235410471507, 'spark.executor.cores': 3.934009637580428, 'spark.executor.instances': 4.7659195044533424, 'spark.executor.memory': 4.94876020279727, 'spark.executor.memoryOverhead': 532.5316601528591, 'spark.kryoserializer.buffer': 106.21219731513517, 'spark.kryoserializer.buffer.max': 95.94320020883656, 'spark.locality.wait': 7.569529580736894, 'spark.maxRemoteBlockSizeFetchToMem': 2106261662.1399894, 'spark.memory.fraction': 0.6183383136048964, 'spark.memory.offHeap.enabled': 0.046340321776189866, 'spark.memory.offHeap.size': 55.3087020219585, 'spark.memory.storageFraction': 0.5197690920268019, 'spark.rdd.compress': 0.04918527427596001, 'spark.reducer.maxBlocksInFlightPerAddress': 2091483610.618822, 'spark.reducer.maxReqsInFlight': 1274843620.0130057, 'spark.reducer.maxSizeInFlight': 71.29357954785795, 'spark.scheduler.mode': 0.9393938534029427, 'spark.scheduler.revive.interval': 678.930311502755, 'spark.shuffle.compress': 0.9903741064880522, 'spark.shuffle.file.buffer': 38.08436172295032, 'spark.shuffle.io.numConnectionsPerPeer': 3.900193041027599, 'spark.shuffle.sort.bypassMergeThreshold': 333.678114948416, 'spark.storage.memoryMapThreshold': 3.864557558115294} target = -218.212
x_probe = {'spark.broadcast.blockSize': 51.02399728543563, 'spark.broadcast.checksum': 0.07072631539591012, 'spark.broadcast.compress': 0.9668551634189854, 'spark.default.parallelism': 235.25235410471507, 'spark.executor.cores': 3.934009637580428, 'spark.executor.instances': 4.7659195044533424, 'spark.executor.memory': 4.94876020279727, 'spark.executor.memoryOverhead': 532.5316601528591, 'spark.kryoserializer.buffer': 106.21219731513517, 'spark.kryoserializer.buffer.max': 95.94320020883656, 'spark.locality.wait': 7.569529580736894, 'spark.maxRemoteBlockSizeFetchToMem': 2106261662.1399894, 'spark.memory.fraction': 0.6183383136048964, 'spark.memory.offHeap.enabled': 0.046340321776189866, 'spark.memory.offHeap.size': 55.3087020219585, 'spark.memory.storageFraction': 0.5197690920268019, 'spark.rdd.compress': 0.04918527427596001, 'spark.reducer.maxBlocksInFlightPerAddress': 2091483610.618822, 'spark.reducer.maxReqsInFlight': 1274843620.0130057, 'spark.reducer.maxSizeInFlight': 71.29357954785795, 'spark.scheduler.mode': 0.9393938534029427, 'spark.scheduler.revive.interval': 678.930311502755, 'spark.shuffle.compress': 0.9903741064880522, 'spark.shuffle.file.buffer': 38.08436172295032, 'spark.shuffle.io.numConnectionsPerPeer': 3.900193041027599, 'spark.shuffle.sort.bypassMergeThreshold': 333.678114948416, 'spark.storage.memoryMapThreshold': 3.864557558115294}
target = -218.212
================= config54 =================
2022年 02月 20日 星期日 00:01:25 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (49667) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (49724) - 没有那个进程
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.07828608e+01 5.11607208e+01]
 [6.68532620e-02 7.72553339e-02]
 [9.61111070e-01 9.71734528e-01]
 [2.33574183e+02 2.36750244e+02]
 [3.91985410e+00 3.95223092e+00]
 [4.76446794e+00 4.80779473e+00]
 [4.91832403e+00 4.96385814e+00]
 [5.30892802e+02 5.36497299e+02]
 [1.05452243e+02 1.06491775e+02]
 [9.59571117e+01 9.69788245e+01]
 [7.54400538e+00 7.60893803e+00]
 [2.10000474e+09 2.11087174e+09]
 [6.17089347e-01 6.21323357e-01]
 [4.35051616e-02 5.42846947e-02]
 [5.25245970e+01 6.39960487e+01]
 [5.17288532e-01 5.21684846e-01]
 [4.30233865e-02 5.35766057e-02]
 [2.08365827e+09 2.09522582e+09]
 [1.26478199e+09 1.27643264e+09]
 [7.10556614e+01 7.15668326e+01]
 [9.28977724e-01 9.39664056e-01]
 [6.74725006e+02 6.80087882e+02]
 [9.81001957e-01 9.91871839e-01]
 [3.80472599e+01 3.84029046e+01]
 [3.89964403e+00 3.94362259e+00]
 [3.33202928e+02 3.35337647e+02]
 [3.84345936e+00 3.87401686e+00]]
before probe, param.shape = (53, 27)
before probe, target = (53,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.08720755e+01 7.22587869e-02 9.67614813e-01 ... 3.89730020e+00
  3.33843383e+02 3.85610134e+00]
 [5.08958254e+01 6.78761268e-02 9.67619533e-01 ... 3.91150949e+00
  3.34013458e+02 3.86887448e+00]
 [5.10239973e+01 7.07263154e-02 9.66855163e-01 ... 3.90019304e+00
  3.33678115e+02 3.86455756e+00]]
标准化后的train_x = 
[[ 0.14524828 -0.51276962  0.44731019 ...  0.40423882  0.38703669
   0.64446135]
 [-0.91527095 -0.51276962 -3.95027501 ... -1.04510347 -5.51143962
  -1.27151531]
 [ 3.06167616  4.82509297 -3.95027501 ... -3.94378805  0.80835643
  -1.27151531]
 ...
 [ 0.11133169 -0.12706214  0.30489357 ...  0.25539166  0.34955163
   0.36875488]
 [ 0.11762849 -0.15045618  0.30491433 ...  0.27598578  0.35506363
   0.39322791]
 [ 0.15161068 -0.13524227  0.30155295 ...  0.25958437  0.34419544
   0.38495679]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733    -176.912    -177.729    -179.805
    -173.008    -173.615    -178.906    -215.692    -218.212]
upper = 
[4372.58088471 4452.48472499 4169.19151262 ... 4324.75124018 4596.33242602
 3914.92059434]
upper.argmax() = 4516
all predict_target = 
[2302.38752375 2028.14396327 2807.10991234 ... 2438.85323927 1793.7869275
 3039.48763129]
upper.argmax() = 4516, sortnumber[0] = 4516
x_max = [5.09727607e+01 6.94228613e-02 9.65856033e-01 2.34770588e+02
 3.93052127e+00 4.78824829e+00 4.95865689e+00 5.32351950e+02
 1.06164732e+02 9.63217734e+01 7.55446539e+00 2.10102659e+09
 6.18181324e-01 4.61934469e-02 5.66518468e+01 5.19558316e-01
 4.71571912e-02 2.08757034e+09 1.26952666e+09 7.14496058e+01
 9.32041729e-01 6.77369139e+02 9.85003505e-01 3.82240542e+01
 3.90674378e+00 3.33957466e+02 3.86304797e+00]
black_box_function中schafferRun(i) 中的i为[50.97276067810559, 0.06942286125218312, 0.9658560331699535, 234.77058813199025, 3.9305212701901255, 4.788248292816442, 4.958656887968762, 532.3519497838109, 106.16473192304971, 96.32177339942713, 7.554465386597778, 2101026587.031342, 0.6181813239519139, 0.04619344694524023, 56.65184682414575, 0.5195583158420769, 0.047157191232649366, 2087570339.1704576, 1269526662.6106584, 71.44960581964644, 0.9320417286762844, 677.3691387568759, 0.9850035046958905, 38.22405420411766, 3.906743784617843, 333.9574662715707, 3.8630479660266603]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.97276067810559
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.06942286125218312
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9658560331699535
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 234.77058813199025
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9305212701901255
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.788248292816442
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.958656887968762
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 532.3519497838109
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.16473192304971
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.32177339942713
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.554465386597778
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2101026587.031342
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6181813239519139
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.04619344694524023
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 56.65184682414575
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5195583158420769
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.047157191232649366
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2087570339.1704576
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1269526662.6106584
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.44960581964644
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9320417286762844
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 677.3691387568759
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9850035046958905
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.22405420411766
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.906743784617843
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 333.9574662715707
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8630479660266603
configNum = 54	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 54 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.97276067810559, 'spark.broadcast.checksum': 0.06942286125218312, 'spark.broadcast.compress': 0.9658560331699535, 'spark.default.parallelism': 234.77058813199025, 'spark.executor.cores': 3.9305212701901255, 'spark.executor.instances': 4.788248292816442, 'spark.executor.memory': 4.958656887968762, 'spark.executor.memoryOverhead': 532.3519497838109, 'spark.kryoserializer.buffer': 106.16473192304971, 'spark.kryoserializer.buffer.max': 96.32177339942713, 'spark.locality.wait': 7.554465386597778, 'spark.maxRemoteBlockSizeFetchToMem': 2101026587.031342, 'spark.memory.fraction': 0.6181813239519139, 'spark.memory.offHeap.enabled': 0.04619344694524023, 'spark.memory.offHeap.size': 56.65184682414575, 'spark.memory.storageFraction': 0.5195583158420769, 'spark.rdd.compress': 0.047157191232649366, 'spark.reducer.maxBlocksInFlightPerAddress': 2087570339.1704576, 'spark.reducer.maxReqsInFlight': 1269526662.6106584, 'spark.reducer.maxSizeInFlight': 71.44960581964644, 'spark.scheduler.mode': 0.9320417286762844, 'spark.scheduler.revive.interval': 677.3691387568759, 'spark.shuffle.compress': 0.9850035046958905, 'spark.shuffle.file.buffer': 38.22405420411766, 'spark.shuffle.io.numConnectionsPerPeer': 3.906743784617843, 'spark.shuffle.sort.bypassMergeThreshold': 333.9574662715707, 'spark.storage.memoryMapThreshold': 3.8630479660266603} target = -207.41
x_probe = {'spark.broadcast.blockSize': 50.97276067810559, 'spark.broadcast.checksum': 0.06942286125218312, 'spark.broadcast.compress': 0.9658560331699535, 'spark.default.parallelism': 234.77058813199025, 'spark.executor.cores': 3.9305212701901255, 'spark.executor.instances': 4.788248292816442, 'spark.executor.memory': 4.958656887968762, 'spark.executor.memoryOverhead': 532.3519497838109, 'spark.kryoserializer.buffer': 106.16473192304971, 'spark.kryoserializer.buffer.max': 96.32177339942713, 'spark.locality.wait': 7.554465386597778, 'spark.maxRemoteBlockSizeFetchToMem': 2101026587.031342, 'spark.memory.fraction': 0.6181813239519139, 'spark.memory.offHeap.enabled': 0.04619344694524023, 'spark.memory.offHeap.size': 56.65184682414575, 'spark.memory.storageFraction': 0.5195583158420769, 'spark.rdd.compress': 0.047157191232649366, 'spark.reducer.maxBlocksInFlightPerAddress': 2087570339.1704576, 'spark.reducer.maxReqsInFlight': 1269526662.6106584, 'spark.reducer.maxSizeInFlight': 71.44960581964644, 'spark.scheduler.mode': 0.9320417286762844, 'spark.scheduler.revive.interval': 677.3691387568759, 'spark.shuffle.compress': 0.9850035046958905, 'spark.shuffle.file.buffer': 38.22405420411766, 'spark.shuffle.io.numConnectionsPerPeer': 3.906743784617843, 'spark.shuffle.sort.bypassMergeThreshold': 333.9574662715707, 'spark.storage.memoryMapThreshold': 3.8630479660266603}
target = -207.41
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.08017538e+01 5.11418278e+01]
 [6.73733656e-02 7.67352303e-02]
 [9.61642243e-01 9.71203356e-01]
 [2.33732986e+02 2.36591441e+02]
 [3.92147294e+00 3.95061208e+00]
 [4.76663428e+00 4.80562839e+00]
 [4.92060074e+00 4.96158144e+00]
 [5.31173027e+02 5.36217074e+02]
 [1.05504219e+02 1.06439799e+02]
 [9.60081973e+01 9.69277389e+01]
 [7.54725201e+00 7.60569140e+00]
 [2.10054809e+09 2.11032839e+09]
 [6.17301047e-01 6.21111656e-01]
 [4.40441383e-02 5.37457181e-02]
 [5.30981696e+01 6.34224762e+01]
 [5.17508348e-01 5.21465031e-01]
 [4.35510475e-02 5.30489448e-02]
 [2.08423665e+09 2.09464744e+09]
 [1.26536452e+09 1.27585011e+09]
 [7.10812200e+01 7.15412740e+01]
 [9.29512041e-01 9.39129740e-01]
 [6.74993150e+02 6.79819738e+02]
 [9.81545451e-01 9.91328345e-01]
 [3.80650421e+01 3.83851223e+01]
 [3.90184296e+00 3.94142367e+00]
 [3.33309664e+02 3.35230911e+02]
 [3.84498723e+00 3.87248899e+00]]
before probe, param.shape = (54, 27)
before probe, target = (54,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.08958254e+01 6.78761268e-02 9.67619533e-01 ... 3.91150949e+00
  3.34013458e+02 3.86887448e+00]
 [5.10239973e+01 7.07263154e-02 9.66855163e-01 ... 3.90019304e+00
  3.33678115e+02 3.86455756e+00]
 [5.09727607e+01 6.94228613e-02 9.65856033e-01 ... 3.90674378e+00
  3.33957466e+02 3.86304797e+00]]
标准化后的train_x = 
[[ 0.1440067  -0.51483002  0.44559158 ...  0.40273494  0.38362485
   0.64250323]
 [-0.92628189 -0.51483002 -3.98966151 ... -1.05923672 -5.56337014
  -1.28885554]
 [ 3.08730033  4.87214593 -3.98966151 ... -3.98318003  0.80841021
  -1.28885554]
 ...
 [ 0.11613248 -0.14918296  0.30197601 ...  0.27336432  0.3513888
   0.3892528 ]
 [ 0.15042771 -0.13382906  0.29858584 ...  0.25682     0.34043121
   0.38091529]
 [ 0.13671822 -0.14085074  0.29415445 ...  0.266397    0.34955923
   0.37799972]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733    -176.912    -177.729    -179.805
    -173.008    -173.615    -178.906    -215.692    -218.212    -207.41 ]
upper = 
[4554.6500073  4550.45461207 4128.13697404 ... 4545.70122736 3162.04871814
 4548.60394225]
upper.argmax() = 7476
all predict_target = 
[1712.11196546 1723.58743176 2613.46210127 ... 1695.74506199 4604.81123152
 1683.1340425 ]
upper.argmax() = 7476, sortnumber[0] = 7476
x_max = [5.09651461e+01 7.50914999e-02 9.67487093e-01 2.34081791e+02
 3.94272774e+00 4.78090034e+00 4.94545052e+00 5.34025548e+02
 1.06102889e+02 9.61442228e+01 7.58781728e+00 2.10112162e+09
 6.18991731e-01 4.71110598e-02 6.08232640e+01 5.19240916e-01
 4.89022032e-02 2.09082699e+09 1.27253456e+09 7.13007966e+01
 9.38228979e-01 6.75545774e+02 9.90242366e-01 3.81686071e+01
 3.90867798e+00 3.34406485e+02 3.85676500e+00]
black_box_function中schafferRun(i) 中的i为[50.965146096374504, 0.07509149985499669, 0.9674870932726736, 234.081791263605, 3.9427277421403026, 4.780900341861751, 4.945450515855753, 534.0255483341664, 106.10288882413742, 96.14422276888511, 7.587817282754084, 2101121619.596608, 0.618991731269861, 0.04711105984391162, 60.82326399478056, 0.5192409164561609, 0.048902203228264274, 2090826994.0586064, 1272534558.859772, 71.30079661194719, 0.9382289793925317, 675.545773960092, 0.9902423660747166, 38.16860710013742, 3.908677976645218, 334.40648505128223, 3.8567649958793395]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.965146096374504
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07509149985499669
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.9674870932726736
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 234.081791263605
================= config55 =================
2022年 02月 20日 星期日 00:05:01 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (55332) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (59414) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9427277421403026
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.780900341861751
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.945450515855753
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 534.0255483341664
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.10288882413742
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.14422276888511
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.587817282754084
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2101121619.596608
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.618991731269861
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.04711105984391162
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 60.82326399478056
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5192409164561609
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.048902203228264274
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2090826994.0586064
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1272534558.859772
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.30079661194719
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9382289793925317
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 675.545773960092
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9902423660747166
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.16860710013742
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.908677976645218
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 334.40648505128223
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8567649958793395
configNum = 55	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 55 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.965146096374504, 'spark.broadcast.checksum': 0.07509149985499669, 'spark.broadcast.compress': 0.9674870932726736, 'spark.default.parallelism': 234.081791263605, 'spark.executor.cores': 3.9427277421403026, 'spark.executor.instances': 4.780900341861751, 'spark.executor.memory': 4.945450515855753, 'spark.executor.memoryOverhead': 534.0255483341664, 'spark.kryoserializer.buffer': 106.10288882413742, 'spark.kryoserializer.buffer.max': 96.14422276888511, 'spark.locality.wait': 7.587817282754084, 'spark.maxRemoteBlockSizeFetchToMem': 2101121619.596608, 'spark.memory.fraction': 0.618991731269861, 'spark.memory.offHeap.enabled': 0.04711105984391162, 'spark.memory.offHeap.size': 60.82326399478056, 'spark.memory.storageFraction': 0.5192409164561609, 'spark.rdd.compress': 0.048902203228264274, 'spark.reducer.maxBlocksInFlightPerAddress': 2090826994.0586064, 'spark.reducer.maxReqsInFlight': 1272534558.859772, 'spark.reducer.maxSizeInFlight': 71.30079661194719, 'spark.scheduler.mode': 0.9382289793925317, 'spark.scheduler.revive.interval': 675.545773960092, 'spark.shuffle.compress': 0.9902423660747166, 'spark.shuffle.file.buffer': 38.16860710013742, 'spark.shuffle.io.numConnectionsPerPeer': 3.908677976645218, 'spark.shuffle.sort.bypassMergeThreshold': 334.40648505128223, 'spark.storage.memoryMapThreshold': 3.8567649958793395} target = -220.344
x_probe = {'spark.broadcast.blockSize': 50.965146096374504, 'spark.broadcast.checksum': 0.07509149985499669, 'spark.broadcast.compress': 0.9674870932726736, 'spark.default.parallelism': 234.081791263605, 'spark.executor.cores': 3.9427277421403026, 'spark.executor.instances': 4.780900341861751, 'spark.executor.memory': 4.945450515855753, 'spark.executor.memoryOverhead': 534.0255483341664, 'spark.kryoserializer.buffer': 106.10288882413742, 'spark.kryoserializer.buffer.max': 96.14422276888511, 'spark.locality.wait': 7.587817282754084, 'spark.maxRemoteBlockSizeFetchToMem': 2101121619.596608, 'spark.memory.fraction': 0.618991731269861, 'spark.memory.offHeap.enabled': 0.04711105984391162, 'spark.memory.offHeap.size': 60.82326399478056, 'spark.memory.storageFraction': 0.5192409164561609, 'spark.rdd.compress': 0.048902203228264274, 'spark.reducer.maxBlocksInFlightPerAddress': 2090826994.0586064, 'spark.reducer.maxReqsInFlight': 1272534558.859772, 'spark.reducer.maxSizeInFlight': 71.30079661194719, 'spark.scheduler.mode': 0.9382289793925317, 'spark.scheduler.revive.interval': 675.545773960092, 'spark.shuffle.compress': 0.9902423660747166, 'spark.shuffle.file.buffer': 38.16860710013742, 'spark.shuffle.io.numConnectionsPerPeer': 3.908677976645218, 'spark.shuffle.sort.bypassMergeThreshold': 334.40648505128223, 'spark.storage.memoryMapThreshold': 3.8567649958793395}
target = -220.344
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[5.08187575e+01 5.11248241e+01]
 [6.78414588e-02 7.62671370e-02]
 [9.62120299e-01 9.70725300e-01]
 [2.33875909e+02 2.36448518e+02]
 [3.92292990e+00 3.94915512e+00]
 [4.76858399e+00 4.80367869e+00]
 [4.92264977e+00 4.95953240e+00]
 [5.31425229e+02 5.35964871e+02]
 [1.05550998e+02 1.06393020e+02]
 [9.60541744e+01 9.68817618e+01]
 [7.55017398e+00 7.60276943e+00]
 [2.10103710e+09 2.10983937e+09]
 [6.17491578e-01 6.20921126e-01]
 [4.45292173e-02 5.32606391e-02]
 [5.36143849e+01 6.29062608e+01]
 [5.17706182e-01 5.21267197e-01]
 [4.40259423e-02 5.25740499e-02]
 [2.08475718e+09 2.09412690e+09]
 [1.26588880e+09 1.27532583e+09]
 [7.11042227e+01 7.15182713e+01]
 [9.29992926e-01 9.38648855e-01]
 [6.75234479e+02 6.79578409e+02]
 [9.82034596e-01 9.90839200e-01]
 [3.80810461e+01 3.83691183e+01]
 [3.90382199e+00 3.93944463e+00]
 [3.33405726e+02 3.35134849e+02]
 [3.84636232e+00 3.87111390e+00]]
before probe, param.shape = (55, 27)
before probe, target = (55,)
标准化前的train_x = 
[[5.10000000e+01 0.00000000e+00 1.00000000e+00 ... 4.00000000e+00
  3.35000000e+02 4.00000000e+00]
 [4.70000000e+01 0.00000000e+00 0.00000000e+00 ... 3.00000000e+00
  1.53000000e+02 3.00000000e+00]
 [6.20000000e+01 1.00000000e+00 0.00000000e+00 ... 1.00000000e+00
  3.48000000e+02 3.00000000e+00]
 ...
 [5.10239973e+01 7.07263154e-02 9.66855163e-01 ... 3.90019304e+00
  3.33678115e+02 3.86455756e+00]
 [5.09727607e+01 6.94228613e-02 9.65856033e-01 ... 3.90674378e+00
  3.33957466e+02 3.86304797e+00]
 [5.09651461e+01 7.50914999e-02 9.67487093e-01 ... 3.90867798e+00
  3.34406485e+02 3.85676500e+00]]
================= config56 =================
2022年 02月 20日 星期日 00:08:50 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (63146) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (68720) - 没有那个进程
标准化后的train_x = 
[[ 0.14283912 -0.51749366  0.44380187 ...  0.40124245  0.38001917
   0.64093218]
 [-0.93713602 -0.51749366 -4.02863829 ... -1.07323264 -5.61456264
  -1.30585993]
 [ 3.11277075  4.91853155 -4.02863829 ... -4.02218281  0.80820359
  -1.30585993]
 ...
 [ 0.14931824 -0.13302363  0.29556358 ...  0.25407958  0.3364799
   0.3772539 ]
 [ 0.13548467 -0.14010924  0.29109503 ...  0.26373848  0.34568097
   0.37431504]
 [ 0.13342878 -0.10929437  0.29838984 ...  0.2665904   0.36047042
   0.3620834 ]]
train_y = 
[   -172.458    -224.205    -366.089    -223.146    -175.051 -100000.
    -223.982    -224.47     -211.682    -378.424    -204.288    -229.653
    -195.389    -219.319    -198.909    -181.096    -179.602    -223.174
    -217.516    -177.162    -214.714    -175.236    -213.154    -180.247
    -176.99     -208.065    -170.828    -178.658    -221.268    -226.546
    -175.379    -174.447    -224.36     -215.284    -217.677    -213.312
    -182.291    -170.317    -218.479    -177.446    -224.83     -172.652
    -217.039    -188.726    -168.733    -176.912    -177.729    -179.805
    -173.008    -173.615    -178.906    -215.692    -218.212    -207.41
    -220.344]
upper = 
[4436.51322807 4411.36480008 4475.20017557 ... 4625.6353047  4051.93594748
 3746.94191018]
upper.argmax() = 4328
all predict_target = 
[1928.808503   1861.88655468 1853.40259067 ... 1484.40504985 2687.11984141
 3176.99684794]
upper.argmax() = 4328, sortnumber[0] = 4328
x_max = [5.09672605e+01 7.20278425e-02 9.65010030e-01 2.34990081e+02
 3.94273284e+00 4.77521269e+00 4.94967480e+00 5.34309030e+02
 1.06263440e+02 9.65155353e+01 7.57969681e+00 2.10353493e+09
 6.18350121e-01 4.64819201e-02 5.83158923e+01 5.19781289e-01
 4.58492242e-02 2.08886468e+09 1.27221889e+09 7.11060217e+01
 9.34386216e-01 6.77377406e+02 9.90135515e-01 3.82508491e+01
 3.90696417e+00 3.34055806e+02 3.87084440e+00]
black_box_function中schafferRun(i) 中的i为[50.967260494324854, 0.07202784254372906, 0.965010030186423, 234.99008129030958, 3.942732838003976, 4.775212693624673, 4.949674795244382, 534.3090299327823, 106.26344029855322, 96.51553531311076, 7.579696806013982, 2103534927.4302487, 0.618350120889818, 0.046481920080522876, 58.315892253952754, 0.5197812892754416, 0.04584922418245608, 2088864675.2354498, 1272218892.4558835, 71.10602167576921, 0.9343862160304758, 677.3774064787885, 0.9901355151649348, 38.25084911352157, 3.906964169708608, 334.05580607014366, 3.870844395585168]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 50.967260494324854
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07202784254372906
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.965010030186423
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 234.99008129030958
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.942732838003976
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.775212693624673
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.949674795244382
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 534.3090299327823
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.26344029855322
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.51553531311076
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7.579696806013982
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2103534927.4302487
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.618350120889818
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.046481920080522876
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 58.315892253952754
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5197812892754416
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.04584922418245608
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 2088864675.2354498
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1272218892.4558835
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.10602167576921
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9343862160304758
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 677.3774064787885
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9901355151649348
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 38.25084911352157
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.906964169708608
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 334.05580607014366
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.870844395585168
configNum = 56	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 56 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 50.967260494324854, 'spark.broadcast.checksum': 0.07202784254372906, 'spark.broadcast.compress': 0.965010030186423, 'spark.default.parallelism': 234.99008129030958, 'spark.executor.cores': 3.942732838003976, 'spark.executor.instances': 4.775212693624673, 'spark.executor.memory': 4.949674795244382, 'spark.executor.memoryOverhead': 534.3090299327823, 'spark.kryoserializer.buffer': 106.26344029855322, 'spark.kryoserializer.buffer.max': 96.51553531311076, 'spark.locality.wait': 7.579696806013982, 'spark.maxRemoteBlockSizeFetchToMem': 2103534927.4302487, 'spark.memory.fraction': 0.618350120889818, 'spark.memory.offHeap.enabled': 0.046481920080522876, 'spark.memory.offHeap.size': 58.315892253952754, 'spark.memory.storageFraction': 0.5197812892754416, 'spark.rdd.compress': 0.04584922418245608, 'spark.reducer.maxBlocksInFlightPerAddress': 2088864675.2354498, 'spark.reducer.maxReqsInFlight': 1272218892.4558835, 'spark.reducer.maxSizeInFlight': 71.10602167576921, 'spark.scheduler.mode': 0.9343862160304758, 'spark.scheduler.revive.interval': 677.3774064787885, 'spark.shuffle.compress': 0.9901355151649348, 'spark.shuffle.file.buffer': 38.25084911352157, 'spark.shuffle.io.numConnectionsPerPeer': 3.906964169708608, 'spark.shuffle.sort.bypassMergeThreshold': 334.05580607014366, 'spark.storage.memoryMapThreshold': 3.870844395585168} target = -173.068
x_probe = {'spark.broadcast.blockSize': 50.967260494324854, 'spark.broadcast.checksum': 0.07202784254372906, 'spark.broadcast.compress': 0.965010030186423, 'spark.default.parallelism': 234.99008129030958, 'spark.executor.cores': 3.942732838003976, 'spark.executor.instances': 4.775212693624673, 'spark.executor.memory': 4.949674795244382, 'spark.executor.memoryOverhead': 534.3090299327823, 'spark.kryoserializer.buffer': 106.26344029855322, 'spark.kryoserializer.buffer.max': 96.51553531311076, 'spark.locality.wait': 7.579696806013982, 'spark.maxRemoteBlockSizeFetchToMem': 2103534927.4302487, 'spark.memory.fraction': 0.618350120889818, 'spark.memory.offHeap.enabled': 0.046481920080522876, 'spark.memory.offHeap.size': 58.315892253952754, 'spark.memory.storageFraction': 0.5197812892754416, 'spark.rdd.compress': 0.04584922418245608, 'spark.reducer.maxBlocksInFlightPerAddress': 2088864675.2354498, 'spark.reducer.maxReqsInFlight': 1272218892.4558835, 'spark.reducer.maxSizeInFlight': 71.10602167576921, 'spark.scheduler.mode': 0.9343862160304758, 'spark.scheduler.revive.interval': 677.3774064787885, 'spark.shuffle.compress': 0.9901355151649348, 'spark.shuffle.file.buffer': 38.25084911352157, 'spark.shuffle.io.numConnectionsPerPeer': 3.906964169708608, 'spark.shuffle.sort.bypassMergeThreshold': 334.05580607014366, 'spark.storage.memoryMapThreshold': 3.870844395585168}
target = -173.068
8984s
{'maxIndex': 45, 'target': -168.733, 'params': {'spark.broadcast.blockSize': 50.971790798609526, 'spark.broadcast.checksum': 0.07205429792383052, 'spark.broadcast.compress': 0.9664227993846862, 'spark.default.parallelism': 235.16221350259474, 'spark.executor.cores': 3.9360425114225595, 'spark.executor.instances': 4.7861313355780775, 'spark.executor.memory': 4.941091087288426, 'spark.executor.memoryOverhead': 533.6950501652378, 'spark.kryoserializer.buffer': 105.97200905541555, 'spark.kryoserializer.buffer.max': 96.46796810521533, 'spark.locality.wait': 7.576471704289212, 'spark.maxRemoteBlockSizeFetchToMem': 2105438236.857976, 'spark.memory.fraction': 0.6192063517088593, 'spark.memory.offHeap.enabled': 0.04889492818165384, 'spark.memory.offHeap.size': 58.260322875505295, 'spark.memory.storageFraction': 0.5194866892800173, 'spark.rdd.compress': 0.0482999961318257, 'spark.reducer.maxBlocksInFlightPerAddress': 2089442042.1087844, 'spark.reducer.maxReqsInFlight': 1270607317.1723292, 'spark.reducer.maxSizeInFlight': 71.31124702544916, 'spark.scheduler.mode': 0.9343208901332553, 'spark.scheduler.revive.interval': 677.4064438885749, 'spark.shuffle.compress': 0.9864368978819783, 'spark.shuffle.file.buffer': 38.225082213875346, 'spark.shuffle.io.numConnectionsPerPeer': 3.9216333115596504, 'spark.shuffle.sort.bypassMergeThreshold': 334.27028746632993, 'spark.storage.memoryMapThreshold': 3.858738110616782}}
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/general_data.csv" 的文件状态(stat): 没有那个文件或目录
=============== finish wordcount-100G ===============
2022年 02月 20日 星期日 00:11:52 CST
=============== finish wordcount-100G ===============
