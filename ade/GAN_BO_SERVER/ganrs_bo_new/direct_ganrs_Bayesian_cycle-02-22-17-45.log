nohup: 忽略输入
/usr/local/home/yyq/bo/ganrs_bo_new
=============== start wordcount-100G ===============
2022年 02月 22日 星期二 16:36:32 CST
=============== start wordcount-100G ===============
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/logs*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/target*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/dataset*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
sys.path = ['/usr/local/home/yyq/bo/ganrs_bo_new', '/usr/local/home/python3/python3/lib/python38.zip', '/usr/local/home/python3/python3/lib/python3.8', '/usr/local/home/python3/python3/lib/python3.8/lib-dynload', '/usr/local/home/python3/python3/lib/python3.8/site-packages', '/usr/local/home/yyq/bo/ganrs_bo_new', '/usr/local/home/yyq/bo/ganrs_bo_new/bayes_scode']
benchmark = wordcount-100G	 gan+rs生成的样本数：initpoints = 6	 bo迭代搜索次数：--niters = 6
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
按照key值排序前的d2 = {'spark.broadcast.blockSize': (32.0, 64.0), 'spark.broadcast.checksum': (0.0, 1.0), 'spark.broadcast.compress': (0.0, 1.0), 'spark.default.parallelism': (200.0, 500.0), 'spark.executor.cores': (1.0, 4.0), 'spark.executor.instances': (4.0, 8.0), 'spark.executor.memory': (3.0, 7.0), 'spark.executor.memoryOverhead': (384.0, 877.0), 'spark.kryoserializer.buffer': (32.0, 128.0), 'spark.kryoserializer.buffer.max': (32.0, 128.0), 'spark.locality.wait': (4.0, 10.0), 'spark.maxRemoteBlockSizeFetchToMem': (1073741567.0, 2147483135.0), 'spark.memory.fraction': (0.5, 0.9), 'spark.memory.offHeap.enabled': (0.0, 1.0), 'spark.memory.offHeap.size': (0.0, 1024.0), 'spark.memory.storageFraction': (0.5, 0.9), 'spark.rdd.compress': (0.0, 1.0), 'spark.reducer.maxBlocksInFlightPerAddress': (1073741823.0, 2147483647.0), 'spark.reducer.maxReqsInFlight': (1073741823.0, 2147483647.0), 'spark.reducer.maxSizeInFlight': (24.0, 72.0), 'spark.scheduler.mode': (0.0, 1.0), 'spark.scheduler.revive.interval': (500.0, 1000.0), 'spark.shuffle.compress': (0.0, 1.0), 'spark.shuffle.file.buffer': (16.0, 48.0), 'spark.shuffle.io.numConnectionsPerPeer': (1.0, 5.0), 'spark.shuffle.sort.bypassMergeThreshold': (150.0, 350.0), 'spark.storage.memoryMapThreshold': (1.0, 4.0)}
按照key值排序后的d2 = {'spark.broadcast.blockSize': (32.0, 64.0), 'spark.broadcast.checksum': (0.0, 1.0), 'spark.broadcast.compress': (0.0, 1.0), 'spark.default.parallelism': (200.0, 500.0), 'spark.executor.cores': (1.0, 4.0), 'spark.executor.instances': (4.0, 8.0), 'spark.executor.memory': (3.0, 7.0), 'spark.executor.memoryOverhead': (384.0, 877.0), 'spark.kryoserializer.buffer': (32.0, 128.0), 'spark.kryoserializer.buffer.max': (32.0, 128.0), 'spark.locality.wait': (4.0, 10.0), 'spark.maxRemoteBlockSizeFetchToMem': (1073741567.0, 2147483135.0), 'spark.memory.fraction': (0.5, 0.9), 'spark.memory.offHeap.enabled': (0.0, 1.0), 'spark.memory.offHeap.size': (0.0, 1024.0), 'spark.memory.storageFraction': (0.5, 0.9), 'spark.rdd.compress': (0.0, 1.0), 'spark.reducer.maxBlocksInFlightPerAddress': (1073741823.0, 2147483647.0), 'spark.reducer.maxReqsInFlight': (1073741823.0, 2147483647.0), 'spark.reducer.maxSizeInFlight': (24.0, 72.0), 'spark.scheduler.mode': (0.0, 1.0), 'spark.scheduler.revive.interval': (500.0, 1000.0), 'spark.shuffle.compress': (0.0, 1.0), 'spark.shuffle.file.buffer': (16.0, 48.0), 'spark.shuffle.io.numConnectionsPerPeer': (1.0, 5.0), 'spark.shuffle.sort.bypassMergeThreshold': (150.0, 350.0), 'spark.storage.memoryMapThreshold': (1.0, 4.0)}
vital_params_name = ['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
vital_params_list = ['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold', 'runtime']

gan_random方法获取的参数:	 base = 6	 n = 6	 type = random	 bo_res_df = 
Empty DataFrame
Columns: []
Index: []
iterations = 0
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 48
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 302
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 3
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 432
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 93
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 65
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 7
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1858325035
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.56
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 32
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.52
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1354766296
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1658549429
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 48
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0
================= config1 =================
2022年 02月 22日 星期二 16:36:34 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (285729) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (168986) - 没有那个进程
================= config2 =================
2022年 02月 22日 星期二 16:39:57 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (300488) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (193247) - 没有那个进程
================= config3 =================
2022年 02月 22日 星期二 16:43:46 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (2890) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (217637) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 645
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 28
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 307
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2
configNum = 1	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 1 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
随机生成的第1配置:[48, 0, 1, 302, 3, 6, 3, 432, 93, 65, 7, 1858325035, 0.56, 0, 32, 0.52, 0, 1354766296, 1658549429, 48, 0, 645, 0, 28, 4, 307, 2, 194.423] . 随机生成的配置和实际运行时间:[48, 0, 1, 302, 3, 6, 3, 432, 93, 65, 7, 1858325035, 0.56, 0, 32, 0.52, 0, 1354766296, 1658549429, 48, 0, 645, 0, 28, 4, 307, 2, 194.423]
   spark.broadcast.blockSize  ...  runtime
0                         48  ...  194.423

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...  runtime
0                        48  ...  194.423

[1 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 56
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 1
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 433
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 8
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 6
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 523
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 92
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 112
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1212651279
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.83
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 207
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.57
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1250041897
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1618915018
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 55
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 962
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 20
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 5
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 155
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3
configNum = 2	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 2 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
随机生成的第2配置:[56, 1, 0, 433, 2, 8, 6, 523, 92, 112, 8, 1212651279, 0.83, 0, 207, 0.57, 0, 1250041897, 1618915018, 55, 0, 962, 0, 20, 5, 155, 3, 220.648] . 随机生成的配置和实际运行时间:[56, 1, 0, 433, 2, 8, 6, 523, 92, 112, 8, 1212651279, 0.83, 0, 207, 0.57, 0, 1250041897, 1618915018, 55, 0, 962, 0, 20, 5, 155, 3, 220.648]
   spark.broadcast.blockSize  ...  runtime
0                         56  ...  220.648

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...  runtime
0                        48  ...  194.423
1                        56  ...  220.648

[2 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 32
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 1
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 439
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 8
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 578
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 107
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 115
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 5
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1854526664
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.89
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 242
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.53
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1753022710
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1502411801
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 70
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 678
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 22
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 194
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4
configNum = 3	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 3 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
随机生成的第3配置:[32, 1, 1, 439, 4, 8, 4, 578, 107, 115, 5, 1854526664, 0.89, 0, 242, 0.53, 0, 1753022710, 1502411801, 70, 0, 678, 1, 22, 3, 194, 4, 165.666] . 随机生成的配置和实际运行时间:[32, 1, 1, 439, 4, 8, 4, 578, 107, 115, 5, 1854526664, 0.89, 0, 242, 0.53, 0, 1753022710, 1502411801, 70, 0, 678, 1, 22, 3, 194, 4, 165.666]
   spark.broadcast.blockSize  ...  runtime
0                         32  ...  165.666

[1 rows x 28 columns]
  spark.broadcast.blockSize  ...  runtime
0                        48  ...  194.423
1                        56  ...  220.648
2                        32  ...  165.666

[3 rows x 28 columns]
GAN的训练样本个数和生成样本个数都为 = 3 ， GAN使用的训练样本为
  spark.broadcast.blockSize  ...  runtime
0                        32  ...  165.666
1                        48  ...  194.423
2                        56  ...  220.648

[3 rows x 28 columns]
train_df_all中的bestconfig为  spark.broadcast.blockSize  ... spark.storage.memoryMapThreshold
0                        32  ...                                4

[1 rows x 27 columns]
  spark.broadcast.blockSize  ... spark.storage.memoryMapThreshold
0                      -1.0  ...                              1.0

[1 rows x 27 columns]
traindata.shape:(1, 27)
traindata.count_value:18.90278394200564
0
2000
Epoch: 0 Loss D.: 0.034062206745147705
Epoch: 0 Loss G.: 19.10110021249116
tensor(18.6163, dtype=torch.float64, grad_fn=<DivBackward0>)
1
2000
Epoch: 1 Loss D.: 0.012046068906784058
Epoch: 1 Loss G.: 19.443615073866255
tensor(18.7137, dtype=torch.float64, grad_fn=<DivBackward0>)
2
2000
Epoch: 2 Loss D.: -0.0014709830284118652
Epoch: 2 Loss G.: 18.7414504344976
tensor(18.7226, dtype=torch.float64, grad_fn=<DivBackward0>)
3
2000
Epoch: 3 Loss D.: 0.005083799362182617
Epoch: 3 Loss G.: 18.948379107347733
tensor(18.3845, dtype=torch.float64, grad_fn=<DivBackward0>)
4
2000
Epoch: 4 Loss D.: 0.010564863681793213
Epoch: 4 Loss G.: 18.8592270506239
tensor(18.4788, dtype=torch.float64, grad_fn=<DivBackward0>)
5
2000
Epoch: 5 Loss D.: -0.002092897891998291
Epoch: 5 Loss G.: 18.43691945780725
tensor(18.3307, dtype=torch.float64, grad_fn=<DivBackward0>)
6
2000
Epoch: 6 Loss D.: 0.0068964362144470215
Epoch: 6 Loss G.: 17.861499149880416
tensor(17.9946, dtype=torch.float64, grad_fn=<DivBackward0>)
7
2000
Epoch: 7 Loss D.: -0.0004087686538696289
Epoch: 7 Loss G.: 17.873750716975934
tensor(18.3093, dtype=torch.float64, grad_fn=<DivBackward0>)
8
2000
Epoch: 8 Loss D.: -0.00414276123046875
Epoch: 8 Loss G.: 18.6541769379443
tensor(17.8984, dtype=torch.float64, grad_fn=<DivBackward0>)
9
2000
Epoch: 9 Loss D.: -0.003653883934020996
Epoch: 9 Loss G.: 17.77507173136533
tensor(17.5132, dtype=torch.float64, grad_fn=<DivBackward0>)
10
2000
Epoch: 10 Loss D.: -0.0035961270332336426
Epoch: 10 Loss G.: 17.440056730589873
tensor(17.7236, dtype=torch.float64, grad_fn=<DivBackward0>)
11
2000
Epoch: 11 Loss D.: 0.0016675591468811035
Epoch: 11 Loss G.: 17.942073272603608
tensor(17.3707, dtype=torch.float64, grad_fn=<DivBackward0>)
12
2000
Epoch: 12 Loss D.: -0.004199206829071045
Epoch: 12 Loss G.: 16.404915769181258
tensor(17.1491, dtype=torch.float64, grad_fn=<DivBackward0>)
13
2000
Epoch: 13 Loss D.: 0.0037760138511657715
Epoch: 13 Loss G.: 16.73200708171212
tensor(17.0449, dtype=torch.float64, grad_fn=<DivBackward0>)
14
2000
Epoch: 14 Loss D.: 0.013812363147735596
Epoch: 14 Loss G.: 17.217355654171712
tensor(17.9601, dtype=torch.float64, grad_fn=<DivBackward0>)
15
2000
Epoch: 15 Loss D.: -0.0009480118751525879
Epoch: 15 Loss G.: 15.945454069010028
tensor(16.9652, dtype=torch.float64, grad_fn=<DivBackward0>)
16
2000
Epoch: 16 Loss D.: 0.0057814717292785645
Epoch: 16 Loss G.: 17.15593518369556
tensor(16.3096, dtype=torch.float64, grad_fn=<DivBackward0>)
17
2000
Epoch: 17 Loss D.: -0.002676546573638916
Epoch: 17 Loss G.: 16.687734854499332
tensor(16.5280, dtype=torch.float64, grad_fn=<DivBackward0>)
18
2000
Epoch: 18 Loss D.: 0.009626448154449463
Epoch: 18 Loss G.: 15.41839770143711
tensor(16.5474, dtype=torch.float64, grad_fn=<DivBackward0>)
19
2000
Epoch: 19 Loss D.: -0.000843048095703125
Epoch: 19 Loss G.: 14.582401087454565
tensor(16.0155, dtype=torch.float64, grad_fn=<DivBackward0>)
20
2000
Epoch: 20 Loss D.: 0.008200109004974365
Epoch: 20 Loss G.: 15.485471223077782
tensor(16.4283, dtype=torch.float64, grad_fn=<DivBackward0>)
21
2000
Epoch: 21 Loss D.: 0.007745265960693359
Epoch: 21 Loss G.: 18.067048287547237
tensor(16.2011, dtype=torch.float64, grad_fn=<DivBackward0>)
22
2000
Epoch: 22 Loss D.: 0.010470867156982422
Epoch: 22 Loss G.: 16.26496936483168
tensor(15.4443, dtype=torch.float64, grad_fn=<DivBackward0>)
23
2000
Epoch: 23 Loss D.: 0.008390426635742188
Epoch: 23 Loss G.: 18.735548029745452
tensor(15.5282, dtype=torch.float64, grad_fn=<DivBackward0>)
24
2000
Epoch: 24 Loss D.: 0.01122826337814331
Epoch: 24 Loss G.: 18.109942175976045
tensor(15.0556, dtype=torch.float64, grad_fn=<DivBackward0>)
25
2000
Epoch: 25 Loss D.: -0.009232819080352783
Epoch: 25 Loss G.: 13.469769143010014
tensor(15.0521, dtype=torch.float64, grad_fn=<DivBackward0>)
26
2000
Epoch: 26 Loss D.: 0.004981815814971924
Epoch: 26 Loss G.: 16.7448035086906
tensor(14.7276, dtype=torch.float64, grad_fn=<DivBackward0>)
27
2000
Epoch: 27 Loss D.: -0.0018323659896850586
Epoch: 27 Loss G.: 15.617575249726409
tensor(15.6135, dtype=torch.float64, grad_fn=<DivBackward0>)
28
2000
Epoch: 28 Loss D.: 0.0027047395706176758
Epoch: 28 Loss G.: 14.944902875057467
tensor(14.7091, dtype=torch.float64, grad_fn=<DivBackward0>)
29
2000
Epoch: 29 Loss D.: 0.0018311738967895508
Epoch: 29 Loss G.: 12.864505090261332
tensor(14.0921, dtype=torch.float64, grad_fn=<DivBackward0>)
30
2000
Epoch: 30 Loss D.: 0.003946423530578613
Epoch: 30 Loss G.: 15.659958667213553
tensor(14.4998, dtype=torch.float64, grad_fn=<DivBackward0>)
31
2000
Epoch: 31 Loss D.: 0.01031184196472168
Epoch: 31 Loss G.: 11.315107624847087
tensor(13.3925, dtype=torch.float64, grad_fn=<DivBackward0>)
32
2000
Epoch: 32 Loss D.: 0.0015273094177246094
Epoch: 32 Loss G.: 13.62772444071532
tensor(14.2350, dtype=torch.float64, grad_fn=<DivBackward0>)
33
2000
Epoch: 33 Loss D.: -0.00032645463943481445
Epoch: 33 Loss G.: 12.566070398262745
tensor(12.8940, dtype=torch.float64, grad_fn=<DivBackward0>)
34
2000
Epoch: 34 Loss D.: 0.005494654178619385
Epoch: 34 Loss G.: 17.43034361355663
tensor(12.8829, dtype=torch.float64, grad_fn=<DivBackward0>)
35
2000
Epoch: 35 Loss D.: 0.0009832382202148438
Epoch: 35 Loss G.: 11.767830779722935
tensor(12.5485, dtype=torch.float64, grad_fn=<DivBackward0>)
36
2000
Epoch: 36 Loss D.: 0.009864509105682373
Epoch: 36 Loss G.: 11.374955628509158
tensor(11.7376, dtype=torch.float64, grad_fn=<DivBackward0>)
37
2000
Epoch: 37 Loss D.: 0.010215699672698975
Epoch: 37 Loss G.: 10.951751452381247
tensor(11.6007, dtype=torch.float64, grad_fn=<DivBackward0>)
38
2000
Epoch: 38 Loss D.: 0.005630075931549072
Epoch: 38 Loss G.: 11.374668445966252
tensor(12.5826, dtype=torch.float64, grad_fn=<DivBackward0>)
39
2000
Epoch: 39 Loss D.: 0.00488436222076416
Epoch: 39 Loss G.: 10.369677677619848
tensor(10.6207, dtype=torch.float64, grad_fn=<DivBackward0>)
40
2000
Epoch: 40 Loss D.: 0.0012999773025512695
Epoch: 40 Loss G.: 10.037356477100047
tensor(11.4475, dtype=torch.float64, grad_fn=<DivBackward0>)
41
2000
Epoch: 41 Loss D.: 0.005724012851715088
Epoch: 41 Loss G.: 10.22007415487849
tensor(9.5705, dtype=torch.float64, grad_fn=<DivBackward0>)
42
2000
Epoch: 42 Loss D.: -0.011802971363067627
Epoch: 42 Loss G.: 9.22716563926974
tensor(9.2723, dtype=torch.float64, grad_fn=<DivBackward0>)
43
2000
Epoch: 43 Loss D.: 0.0045996904373168945
Epoch: 43 Loss G.: 11.568996929160363
tensor(9.2008, dtype=torch.float64, grad_fn=<DivBackward0>)
44
2000
Epoch: 44 Loss D.: -0.0020281076431274414
Epoch: 44 Loss G.: 8.30455044280009
tensor(8.6086, dtype=torch.float64, grad_fn=<DivBackward0>)
45
2000
Epoch: 45 Loss D.: 0.004189014434814453
Epoch: 45 Loss G.: 11.330068983665713
tensor(9.6447, dtype=torch.float64, grad_fn=<DivBackward0>)
46
2000
Epoch: 46 Loss D.: 0.008812367916107178
Epoch: 46 Loss G.: 7.248819866523311
tensor(7.8377, dtype=torch.float64, grad_fn=<DivBackward0>)
47
2000
Epoch: 47 Loss D.: 0.0076485276222229
Epoch: 47 Loss G.: 10.93722721242071
tensor(6.4379, dtype=torch.float64, grad_fn=<DivBackward0>)
48
2000
Epoch: 48 Loss D.: 0.0027321577072143555
Epoch: 48 Loss G.: 8.160467320427463
tensor(8.6638, dtype=torch.float64, grad_fn=<DivBackward0>)
49
2000
Epoch: 49 Loss D.: -0.0030348896980285645
Epoch: 49 Loss G.: 8.553181756815919
tensor(5.9571, dtype=torch.float64, grad_fn=<DivBackward0>)
50
2000
Epoch: 50 Loss D.: -0.001928865909576416
Epoch: 50 Loss G.: 4.591408016329176
tensor(6.9231, dtype=torch.float64, grad_fn=<DivBackward0>)
51
2000
Epoch: 51 Loss D.: 0.0033792853355407715
Epoch: 51 Loss G.: 5.407978310901315
tensor(6.3414, dtype=torch.float64, grad_fn=<DivBackward0>)
52
2000
Epoch: 52 Loss D.: 0.00034993886947631836
Epoch: 52 Loss G.: 6.3276864228959955
tensor(7.0002, dtype=torch.float64, grad_fn=<DivBackward0>)
53
2000
Epoch: 53 Loss D.: 0.006209969520568848
Epoch: 53 Loss G.: 4.400421226897231
tensor(6.6162, dtype=torch.float64, grad_fn=<DivBackward0>)
54
2000
Epoch: 54 Loss D.: 0.005104780197143555
Epoch: 54 Loss G.: 4.822770327010147
tensor(4.9483, dtype=torch.float64, grad_fn=<DivBackward0>)
55
2000
Epoch: 55 Loss D.: 0.00038313865661621094
Epoch: 55 Loss G.: 5.867173939898445
tensor(4.7074, dtype=torch.float64, grad_fn=<DivBackward0>)
56
2000
Epoch: 56 Loss D.: -0.003048837184906006
Epoch: 56 Loss G.: 10.270362197513217
tensor(5.5496, dtype=torch.float64, grad_fn=<DivBackward0>)
57
2000
Epoch: 57 Loss D.: 0.0055196285247802734
Epoch: 57 Loss G.: 6.467306693115226
tensor(3.8931, dtype=torch.float64, grad_fn=<DivBackward0>)
58
2000
Epoch: 58 Loss D.: 0.005638539791107178
Epoch: 58 Loss G.: 3.769867524969967
tensor(4.8175, dtype=torch.float64, grad_fn=<DivBackward0>)
59
2000
Epoch: 59 Loss D.: -0.0003829002380371094
Epoch: 59 Loss G.: 4.435991776481437
tensor(4.4107, dtype=torch.float64, grad_fn=<DivBackward0>)
60
2000
Epoch: 60 Loss D.: -0.000825047492980957
Epoch: 60 Loss G.: 2.9404994997664216
tensor(4.7630, dtype=torch.float64, grad_fn=<DivBackward0>)
61
2000
Epoch: 61 Loss D.: -3.5762786865234375e-05
Epoch: 61 Loss G.: 5.251066906844741
tensor(5.2673, dtype=torch.float64, grad_fn=<DivBackward0>)
62
2000
Epoch: 62 Loss D.: 0.015243381261825562
Epoch: 62 Loss G.: 2.2978434444021842
tensor(4.5964, dtype=torch.float64, grad_fn=<DivBackward0>)
63
2000
Epoch: 63 Loss D.: -0.00786280632019043
Epoch: 63 Loss G.: 3.600729661565629
tensor(4.9520, dtype=torch.float64, grad_fn=<DivBackward0>)
64
2000
Epoch: 64 Loss D.: 0.0031666159629821777
Epoch: 64 Loss G.: 4.32074754918135
tensor(3.3247, dtype=torch.float64, grad_fn=<DivBackward0>)
65
2000
Epoch: 65 Loss D.: 0.007650911808013916
Epoch: 65 Loss G.: 2.0083083445115806
tensor(4.7357, dtype=torch.float64, grad_fn=<DivBackward0>)
66
2000
Epoch: 66 Loss D.: -0.0035114288330078125
Epoch: 66 Loss G.: 4.563810751804105
tensor(4.2341, dtype=torch.float64, grad_fn=<DivBackward0>)
67
2000
Epoch: 67 Loss D.: 0.006577670574188232
Epoch: 67 Loss G.: 7.567679312522047
tensor(3.9417, dtype=torch.float64, grad_fn=<DivBackward0>)
68
2000
Epoch: 68 Loss D.: 0.017013072967529297
Epoch: 68 Loss G.: 1.7383410126018857
tensor(2.9515, dtype=torch.float64, grad_fn=<DivBackward0>)
69
2000
Epoch: 69 Loss D.: -0.0014758110046386719
Epoch: 69 Loss G.: 1.1348228033665742
tensor(2.9734, dtype=torch.float64, grad_fn=<DivBackward0>)
70
2000
Epoch: 70 Loss D.: 0.004891097545623779
Epoch: 70 Loss G.: 2.636597831999428
tensor(3.8584, dtype=torch.float64, grad_fn=<DivBackward0>)
71
2000
Epoch: 71 Loss D.: 0.0009646415710449219
Epoch: 71 Loss G.: 1.4022668771131752
tensor(3.1815, dtype=torch.float64, grad_fn=<DivBackward0>)
72
2000
Epoch: 72 Loss D.: 0.015435576438903809
Epoch: 72 Loss G.: 5.999779801373846
tensor(2.7375, dtype=torch.float64, grad_fn=<DivBackward0>)
73
2000
Epoch: 73 Loss D.: -7.033348083496094e-05
Epoch: 73 Loss G.: 3.1940130117586922
tensor(3.7249, dtype=torch.float64, grad_fn=<DivBackward0>)
74
2000
Epoch: 74 Loss D.: 0.0036789774894714355
Epoch: 74 Loss G.: 6.209756116872198
tensor(2.4426, dtype=torch.float64, grad_fn=<DivBackward0>)
75
2000
Epoch: 75 Loss D.: -0.003864586353302002
Epoch: 75 Loss G.: 2.9022654732879087
tensor(3.5781, dtype=torch.float64, grad_fn=<DivBackward0>)
76
2000
Epoch: 76 Loss D.: -0.005839109420776367
Epoch: 76 Loss G.: 1.2424016223168455
tensor(2.9432, dtype=torch.float64, grad_fn=<DivBackward0>)
77
2000
Epoch: 77 Loss D.: 0.001802682876586914
Epoch: 77 Loss G.: 4.4683457198790375
tensor(2.6702, dtype=torch.float64, grad_fn=<DivBackward0>)
78
2000
Epoch: 78 Loss D.: 0.006971001625061035
Epoch: 78 Loss G.: 1.804954768788425
tensor(3.7012, dtype=torch.float64, grad_fn=<DivBackward0>)
79
2000
Epoch: 79 Loss D.: 0.004616916179656982
Epoch: 79 Loss G.: 1.8883596437986772
tensor(3.7306, dtype=torch.float64, grad_fn=<DivBackward0>)
80
2000
Epoch: 80 Loss D.: -0.0048667192459106445
Epoch: 80 Loss G.: 4.6527605992504295
tensor(3.5115, dtype=torch.float64, grad_fn=<DivBackward0>)
81
2000
Epoch: 81 Loss D.: -0.008721530437469482
Epoch: 81 Loss G.: 9.31619650786602
tensor(2.8113, dtype=torch.float64, grad_fn=<DivBackward0>)
82
2000
Epoch: 82 Loss D.: -0.0007187128067016602
Epoch: 82 Loss G.: 1.3493574976373053
tensor(4.0843, dtype=torch.float64, grad_fn=<DivBackward0>)
83
2000
Epoch: 83 Loss D.: -0.006161749362945557
Epoch: 83 Loss G.: 1.9038152398217056
tensor(2.8866, dtype=torch.float64, grad_fn=<DivBackward0>)
84
2000
Epoch: 84 Loss D.: -0.0015268325805664062
Epoch: 84 Loss G.: 2.2220353647518487
tensor(2.6809, dtype=torch.float64, grad_fn=<DivBackward0>)
85
2000
Epoch: 85 Loss D.: 0.00496983528137207
Epoch: 85 Loss G.: 1.518039764617715
tensor(3.1535, dtype=torch.float64, grad_fn=<DivBackward0>)
86
2000
Epoch: 86 Loss D.: -0.007318079471588135
Epoch: 86 Loss G.: 1.6657869306254718
tensor(3.1628, dtype=torch.float64, grad_fn=<DivBackward0>)
87
2000
Epoch: 87 Loss D.: 0.006617426872253418
Epoch: 87 Loss G.: 3.7228860449739627
tensor(2.6852, dtype=torch.float64, grad_fn=<DivBackward0>)
88
2000
Epoch: 88 Loss D.: 0.006835579872131348
Epoch: 88 Loss G.: 1.2271481397199964
tensor(2.0771, dtype=torch.float64, grad_fn=<DivBackward0>)
89
2000
Epoch: 89 Loss D.: -0.003114461898803711
Epoch: 89 Loss G.: 4.358004758081444
tensor(2.4235, dtype=torch.float64, grad_fn=<DivBackward0>)
90
2000
Epoch: 90 Loss D.: -0.002120494842529297
Epoch: 90 Loss G.: 1.2625354334660701
tensor(3.1631, dtype=torch.float64, grad_fn=<DivBackward0>)
91
2000
Epoch: 91 Loss D.: 0.006244182586669922
Epoch: 91 Loss G.: 1.519522755313308
tensor(3.0110, dtype=torch.float64, grad_fn=<DivBackward0>)
92
2000
Epoch: 92 Loss D.: 0.014274507761001587
Epoch: 92 Loss G.: 1.38281255840775
tensor(2.5268, dtype=torch.float64, grad_fn=<DivBackward0>)
93
2000
Epoch: 93 Loss D.: -0.006999075412750244
Epoch: 93 Loss G.: 6.376544231495865
tensor(2.7654, dtype=torch.float64, grad_fn=<DivBackward0>)
94
2000
Epoch: 94 Loss D.: 0.004599213600158691
Epoch: 94 Loss G.: 1.7601245781497237
tensor(2.1958, dtype=torch.float64, grad_fn=<DivBackward0>)
95
2000
Epoch: 95 Loss D.: -0.0017638802528381348
Epoch: 95 Loss G.: 1.8057723343324332
tensor(1.8551, dtype=torch.float64, grad_fn=<DivBackward0>)
96
2000
Epoch: 96 Loss D.: 0.008196413516998291
Epoch: 96 Loss G.: 2.8503611011985854
tensor(2.0419, dtype=torch.float64, grad_fn=<DivBackward0>)
在第96轮收敛
----------------第0轮的原数据---------------------
         range  dissimilarity_value  ...  Euclidean_distance    distance
0     0.002083             0.017025  ...            0.560504  104.430407
1     0.003217             0.016364  ...            0.429845  141.791840
2     0.004719             0.014957  ...            0.456515  146.082130
3     0.005713             0.068948  ...            1.228483   11.660764
4     0.007176             0.029952  ...            0.870749   38.147725
..         ...                  ...  ...                 ...         ...
195  12.891659             0.035803  ...            0.903183   30.880073
196  12.911623             0.026699  ...            0.885494   42.227985
197  13.109053             0.042095  ...            1.009356   23.491750
198  13.188422             0.039643  ...            0.979922   25.695672
199  14.024028             0.050951  ...            1.220921   16.041528

[200 rows x 5 columns]
-----------------按照dissimilarity_value排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    4.167                0.006         0.999               0.192   866.721
1    8.398                0.006         0.998               0.285   612.486
2    4.034                0.007         0.999               0.222   626.046
3    8.770                0.007         0.998               0.346   408.014
4    4.277                0.008         0.997               0.299   408.656
..     ...                  ...           ...                 ...       ...
195  0.137                0.052         0.994               1.037    18.520
196  0.205                0.054         0.993               1.131    16.196
197  0.006                0.069         0.988               1.228    11.661
198  0.144                0.081         0.992               1.364     9.026
199  0.325                0.087         0.991               1.611     7.087

[200 rows x 5 columns]
-----------------按照range排序----------
================= config4 =================
2022年 02月 22日 星期二 16:46:44 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (16639) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (249319) - 没有那个进程
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     0.002                0.017         0.997               0.561   104.430
1     0.003                0.016         0.997               0.430   141.792
2     0.005                0.015         0.997               0.457   146.082
3     0.006                0.069         0.988               1.228    11.661
4     0.007                0.030         0.995               0.871    38.148
..      ...                  ...           ...                 ...       ...
195  12.892                0.036         0.999               0.903    30.880
196  12.912                0.027         0.998               0.885    42.228
197  13.109                0.042         0.998               1.009    23.492
198  13.188                0.040         0.998               0.980    25.696
199  14.024                0.051         0.998               1.221    16.042

[200 rows x 5 columns]
-----------------按照cos_distance排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     0.039                0.049         0.986               1.045    19.213
1     0.006                0.069         0.988               1.228    11.661
2     0.046                0.042         0.990               0.918    25.451
3     0.325                0.087         0.991               1.611     7.087
4     0.012                0.018         0.991               0.778    70.266
..      ...                  ...           ...                 ...       ...
195   6.478                0.012         0.999               0.268   298.808
196   4.167                0.006         0.999               0.192   866.721
197  12.892                0.036         0.999               0.903    30.880
198   6.198                0.009         0.999               0.219   494.926
199   9.089                0.020         0.999               0.462   110.443

[200 rows x 5 columns]
-----------------按照Euclidean_distance排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     4.167                0.006         0.999               0.192   866.721
1     6.198                0.009         0.999               0.219   494.926
2     4.034                0.007         0.999               0.222   626.046
3     4.305                0.009         0.998               0.255   430.486
4     6.478                0.012         0.999               0.268   298.808
..      ...                  ...           ...                 ...       ...
195   0.136                0.052         0.992               1.197    16.043
196  14.024                0.051         0.998               1.221    16.042
197   0.006                0.069         0.988               1.228    11.661
198   0.144                0.081         0.992               1.364     9.026
199   0.325                0.087         0.991               1.611     7.087

[200 rows x 5 columns]
-----------------按照distance排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     4.167                0.006         0.999               0.192   866.721
1     4.034                0.007         0.999               0.222   626.046
2     8.398                0.006         0.998               0.285   612.486
3     6.198                0.009         0.999               0.219   494.926
4     4.305                0.009         0.998               0.255   430.486
..      ...                  ...           ...                 ...       ...
195   0.136                0.052         0.992               1.197    16.043
196  14.024                0.051         0.998               1.221    16.042
197   0.006                0.069         0.988               1.228    11.661
198   0.144                0.081         0.992               1.364     9.026
199   0.325                0.087         0.991               1.611     7.087

[200 rows x 5 columns]
   distance
0   866.721
1   626.046
2   612.486
3   150.324
4   148.685
5   146.082
6    11.661
7     9.026
8     7.087
   distance
0   866.721
1   150.324
2     7.087
3   626.046
4   148.685
5     9.026
6   612.486
7   146.082
8    11.661
sgan数据生成时间花费为：610.41
GAN网络的生成数据generate_data为   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                       32.0  ...                               4.0
1                       33.0  ...                               4.0
2                       39.0  ...                               3.0
3                       32.0  ...                               4.0
4                       32.0  ...                               4.0
5                       36.0  ...                               3.0
6                       32.0  ...                               4.0
7                       33.0  ...                               4.0
8                       38.0  ...                               3.0

[9 rows x 27 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 32.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 436.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 577.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 107.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 113.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1895176704.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8899999856948853
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 232.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5299999713897705
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1744634752.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1528891392.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 70.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 678.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 23.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 193.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4.0
configNum = 4	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 4 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       32.0  ...  163.342

[1 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 33.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 448.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
================= config5 =================
2022年 02月 22日 星期二 16:49:41 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (30521) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (272603) - 没有那个进程
================= config6 =================
2022年 02月 22日 星期二 16:52:32 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (38006) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (283585) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 584.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 107.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 112.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1876663808.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8399999737739563
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 223.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.550000011920929
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1801766528.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1530456448.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 69.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 669.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 23.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 195.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4.0
configNum = 5	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 5 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       33.0  ...  162.804

[1 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 39.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 422.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 7.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 585.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 94.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 96.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 6.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1747802880.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8199999928474426
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 302.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6100000143051147
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1749340672.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1540056576.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 59.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 679.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 25.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 214.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.0
configNum = 6	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 6 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...   runtime
0                       39.0  ...  100000.0

[1 rows x 28 columns]
训练样本 + gan生成的样本存入dataset 
  spark.broadcast.blockSize  ...     runtime
0                        32  ...     165.666
1                        48  ...     194.423
2                        56  ...     220.648
3                      32.0  ...     163.342
4                      33.0  ...     162.804
5                      39.0  ...  100000.000

[6 rows x 28 columns]
选择50%rs和50%gan的所有样本作为bo算法的初始样本,样本个数为:6
iterations = 0	 传给bo的初始样本initsamples为 
[[32 1 1 439 4 8 4 578 107 115 5 1854526664 0.89 0 242 0.53 0 1753022710
  1502411801 70 0 678 1 22 3 194 4 165.666]
 [48 0 1 302 3 6 3 432 93 65 7 1858325035 0.56 0 32 0.52 0 1354766296
  1658549429 48 0 645 0 28 4 307 2 194.423]
 [56 1 0 433 2 8 6 523 92 112 8 1212651279 0.83 0 207 0.57 0 1250041897
  1618915018 55 0 962 0 20 5 155 3 220.648]
 [32.0 1.0 1.0 436.0 4.0 8.0 4.0 577.0 107.0 113.0 5.0 1895176704.0
  0.8899999856948853 0.0 232.0 0.5299999713897705 0.0 1744634752.0
  1528891392.0 70.0 0.0 678.0 1.0 23.0 3.0 193.0 4.0 163.342]
 [33.0 1.0 1.0 448.0 4.0 8.0 4.0 584.0 107.0 112.0 5.0 1876663808.0
  0.8399999737739563 0.0 223.0 0.550000011920929 0.0 1801766528.0
  1530456448.0 69.0 0.0 669.0 1.0 23.0 3.0 195.0 4.0 162.804]
 [39.0 1.0 1.0 422.0 3.0 7.0 4.0 585.0 94.0 96.0 6.0 1747802880.0
  0.8199999928474426 0.0 302.0 0.6100000143051147 0.0 1749340672.0
  1540056576.0 59.0 0.0 679.0 1.0 25.0 3.0 214.0 3.0 100000.0]]
------------使用ganrs生成初始样本点------------
custom_initsamples中的sample为 : [32 1 1 439 4 8 4 578 107 115 5 1854526664 0.89 0 242 0.53 0 1753022710
 1502411801 70 0 678 1 22 3 194 4 165.666]	sample执行时间为 : -165.666
custom_initsamples中的sample为 : [48 0 1 302 3 6 3 432 93 65 7 1858325035 0.56 0 32 0.52 0 1354766296
 1658549429 48 0 645 0 28 4 307 2 194.423]	sample执行时间为 : -194.423
custom_initsamples中的sample为 : [56 1 0 433 2 8 6 523 92 112 8 1212651279 0.83 0 207 0.57 0 1250041897
 1618915018 55 0 962 0 20 5 155 3 220.648]	sample执行时间为 : -220.648
custom_initsamples中的sample为 : [32.0 1.0 1.0 436.0 4.0 8.0 4.0 577.0 107.0 113.0 5.0 1895176704.0
 0.8899999856948853 0.0 232.0 0.5299999713897705 0.0 1744634752.0
 1528891392.0 70.0 0.0 678.0 1.0 23.0 3.0 193.0 4.0 163.342]	sample执行时间为 : -163.342
custom_initsamples中的sample为 : [33.0 1.0 1.0 448.0 4.0 8.0 4.0 584.0 107.0 112.0 5.0 1876663808.0
 0.8399999737739563 0.0 223.0 0.550000011920929 0.0 1801766528.0
 1530456448.0 69.0 0.0 669.0 1.0 23.0 3.0 195.0 4.0 162.804]	sample执行时间为 : -162.804
custom_initsamples中的sample为 : [39.0 1.0 1.0 422.0 3.0 7.0 4.0 585.0 94.0 96.0 6.0 1747802880.0
 0.8199999928474426 0.0 302.0 0.6100000143051147 0.0 1749340672.0
 1540056576.0 59.0 0.0 679.0 1.0 25.0 3.0 214.0 3.0 100000.0]	sample执行时间为 : -100000.0
Tmax = 137.5
self._queue.empty = True
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (6, 27)
before probe, target = (6,)
标准化前的train_x = 
[[3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]]
标准化后的train_x = 
[[-0.87811408  0.4472136   0.4472136   0.50942017  0.89442719  0.65465367
  -0.18569534  0.56769045  0.9966159   0.72215362 -0.8660254   0.47196617
   0.75252686         nan  0.42755557 -0.70398928         nan  0.65601288
  -1.08981371  0.96375314         nan -0.36974996  0.70710678 -0.6
  -0.65465367 -0.33377012  0.89442719]
 [ 0.87811408 -2.23606798  0.4472136  -2.20969267 -0.4472136  -1.96396101
  -1.29986737 -2.06350972 -0.9966159  -2.09143191  0.8660254   0.48773744
  -2.16904774         nan -2.08982771 -1.02890741         nan -1.15711964
   1.70881013 -1.63247981         nan -0.67102771 -1.41421356  1.8
   0.65465367  2.07363562 -1.78885438]
 [ 1.75622816  0.4472136  -2.23606798  0.39033493 -1.78885438  0.65465367
   2.04264872 -0.4235151  -1.13898959  0.55333849  1.73205081 -2.19317244
   0.22133148         nan  0.00799169  0.59568326         nan -1.63389593
   0.99839965 -0.80640569         nan  2.22306457 -1.41421356 -1.4
   1.96396101 -1.16464467 -0.4472136 ]
 [-0.87811408  0.4472136   0.4472136   0.44987755  0.89442719  0.65465367
  -0.18569534  0.54966853  0.9966159   0.6096102  -0.8660254   0.6407497
   0.75252673         nan  0.30768018 -0.70399021         nan  0.61782523
  -0.61519132  0.96375314         nan -0.36974996  0.70710678 -0.2
  -0.65465367 -0.35507459  0.89442719]
 [-0.76834982  0.4472136   0.4472136   0.68804802  0.89442719  0.65465367
  -0.18569534  0.67582196  0.9966159   0.55333849 -0.8660254   0.56388208
   0.30986381         nan  0.19979232 -0.05415262         nan  0.87792771
  -0.58713912  0.84574255         nan -0.45191662  0.70710678 -0.2
  -0.65465367 -0.31246564  0.89442719]
 [-0.10976426  0.4472136   0.4472136   0.172012   -0.4472136  -0.65465367
  -0.18569534  0.69384388 -0.8542422  -0.34700888  0.          0.02883705
   0.13279885         nan  1.14680794  1.89535626         nan  0.63924976
  -0.41506563 -0.33436333         nan -0.36062033  0.70710678  0.6
  -0.65465367  0.09231939 -0.4472136 ]]
train_y = 
[   -165.666    -194.423    -220.648    -163.342    -162.804 -100000.   ]
测试：每一列进行标准化，标准化后的train_x = 
[[-0.87811408  0.4472136   0.4472136   0.50942017  0.89442719  0.65465367
  -0.18569534  0.56769045  0.9966159   0.72215362 -0.8660254   0.47196617
   0.75252686         nan  0.42755557 -0.70398928         nan  0.65601288
  -1.08981371  0.96375314         nan -0.36974996  0.70710678 -0.6
  -0.65465367 -0.33377012  0.89442719]
 [ 0.87811408 -2.23606798  0.4472136  -2.20969267 -0.4472136  -1.96396101
  -1.29986737 -2.06350972 -0.9966159  -2.09143191  0.8660254   0.48773744
  -2.16904774         nan -2.08982771 -1.02890741         nan -1.15711964
   1.70881013 -1.63247981         nan -0.67102771 -1.41421356  1.8
   0.65465367  2.07363562 -1.78885438]
 [ 1.75622816  0.4472136  -2.23606798  0.39033493 -1.78885438  0.65465367
   2.04264872 -0.4235151  -1.13898959  0.55333849  1.73205081 -2.19317244
   0.22133148         nan  0.00799169  0.59568326         nan -1.63389593
   0.99839965 -0.80640569         nan  2.22306457 -1.41421356 -1.4
   1.96396101 -1.16464467 -0.4472136 ]
 [-0.87811408  0.4472136   0.4472136   0.44987755  0.89442719  0.65465367
  -0.18569534  0.54966853  0.9966159   0.6096102  -0.8660254   0.6407497
   0.75252673         nan  0.30768018 -0.70399021         nan  0.61782523
  -0.61519132  0.96375314         nan -0.36974996  0.70710678 -0.2
  -0.65465367 -0.35507459  0.89442719]
 [-0.76834982  0.4472136   0.4472136   0.68804802  0.89442719  0.65465367
  -0.18569534  0.67582196  0.9966159   0.55333849 -0.8660254   0.56388208
   0.30986381         nan  0.19979232 -0.05415262         nan  0.87792771
  -0.58713912  0.84574255         nan -0.45191662  0.70710678 -0.2
  -0.65465367 -0.31246564  0.89442719]
 [-0.10976426  0.4472136   0.4472136   0.172012   -0.4472136  -0.65465367
  -0.18569534  0.69384388 -0.8542422  -0.34700888  0.          0.02883705
   0.13279885         nan  1.14680794  1.89535626         nan  0.63924976
  -0.41506563 -0.33436333         nan -0.36062033  0.70710678  0.6
  -0.65465367  0.09231939 -0.4472136 ]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-0.87811408  0.4472136   0.4472136   0.50942017  0.89442719  0.65465367
  -0.18569534  0.56769045  0.9966159   0.72215362 -0.8660254   0.47196617
   0.75252686  0.          0.42755557 -0.70398928  0.          0.65601288
  -1.08981371  0.96375314  0.         -0.36974996  0.70710678 -0.6
  -0.65465367 -0.33377012  0.89442719]
 [ 0.87811408 -2.23606798  0.4472136  -2.20969267 -0.4472136  -1.96396101
  -1.29986737 -2.06350972 -0.9966159  -2.09143191  0.8660254   0.48773744
  -2.16904774  0.         -2.08982771 -1.02890741  0.         -1.15711964
   1.70881013 -1.63247981  0.         -0.67102771 -1.41421356  1.8
   0.65465367  2.07363562 -1.78885438]
 [ 1.75622816  0.4472136  -2.23606798  0.39033493 -1.78885438  0.65465367
   2.04264872 -0.4235151  -1.13898959  0.55333849  1.73205081 -2.19317244
   0.22133148  0.          0.00799169  0.59568326  0.         -1.63389593
   0.99839965 -0.80640569  0.          2.22306457 -1.41421356 -1.4
   1.96396101 -1.16464467 -0.4472136 ]
 [-0.87811408  0.4472136   0.4472136   0.44987755  0.89442719  0.65465367
  -0.18569534  0.54966853  0.9966159   0.6096102  -0.8660254   0.6407497
   0.75252673  0.          0.30768018 -0.70399021  0.          0.61782523
  -0.61519132  0.96375314  0.         -0.36974996  0.70710678 -0.2
  -0.65465367 -0.35507459  0.89442719]
 [-0.76834982  0.4472136   0.4472136   0.68804802  0.89442719  0.65465367
  -0.18569534  0.67582196  0.9966159   0.55333849 -0.8660254   0.56388208
   0.30986381  0.          0.19979232 -0.05415262  0.          0.87792771
  -0.58713912  0.84574255  0.         -0.45191662  0.70710678 -0.2
  -0.65465367 -0.31246564  0.89442719]
 [-0.10976426  0.4472136   0.4472136   0.172012   -0.4472136  -0.65465367
  -0.18569534  0.69384388 -0.8542422  -0.34700888  0.          0.02883705
   0.13279885  0.          1.14680794  1.89535626  0.          0.63924976
  -0.41506563 -0.33436333  0.         -0.36062033  0.70710678  0.6
  -0.65465367  0.09231939 -0.4472136 ]]
upper = 
[7325.70837641 7836.91501469 6020.59159559 ... 6746.74361672 7386.14802342
 7539.51381106]
upper.argmax() = 1334
all predict_target = 
[18652.38293334 16475.87301409 22575.86844889 ... 20624.79434672
 18559.44615025 17842.22822477]
upper.argmax() = 1334, sortnumber[0] = 1334
x_max = [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
 3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
 9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
 8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
 7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
 3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
 3.79337521e+00 2.10405622e+02 3.33995674e+00]
black_box_function中schafferRun(i) 中的i为[56.980257244851515, 0.8033834087564106, 0.6614902157306863, 405.8747077639815, 3.966718909425805, 7.940591409355992, 4.523059439929728, 849.9706305393946, 98.4677997196543, 77.06256258910264, 5.503293881592113, 1735613635.8826032, 0.8224812453748167, 0.5289379976225125, 115.47383105811264, 0.5922576693938431, 0.798184359130312, 1893749835.49584, 1656821784.0645926, 63.84705125037873, 0.3411106970997746, 511.01949743349587, 0.6461160779887065, 19.369976696597654, 3.793375212470476, 210.40562206279554, 3.3399567379547674]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 56.980257244851515
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.8033834087564106
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.6614902157306863
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 405.8747077639815
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.966718909425805
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 7.940591409355992
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.523059439929728
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 849.9706305393946
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 98.4677997196543
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 77.06256258910264
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 5.503293881592113
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1735613635.8826032
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8224812453748167
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.5289379976225125
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 115.47383105811264
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5922576693938431
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.798184359130312
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1893749835.49584
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1656821784.0645926
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 63.84705125037873
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.3411106970997746
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 511.01949743349587
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.6461160779887065
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 19.369976696597654
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.793375212470476
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 210.40562206279554
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.3399567379547674
================= config7 =================
2022年 02月 22日 星期二 16:54:51 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (49504) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (304061) - 没有那个进程
configNum = 7	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 7 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 56.980257244851515, 'spark.broadcast.checksum': 0.8033834087564106, 'spark.broadcast.compress': 0.6614902157306863, 'spark.default.parallelism': 405.8747077639815, 'spark.executor.cores': 3.966718909425805, 'spark.executor.instances': 7.940591409355992, 'spark.executor.memory': 4.523059439929728, 'spark.executor.memoryOverhead': 849.9706305393946, 'spark.kryoserializer.buffer': 98.4677997196543, 'spark.kryoserializer.buffer.max': 77.06256258910264, 'spark.locality.wait': 5.503293881592113, 'spark.maxRemoteBlockSizeFetchToMem': 1735613635.8826032, 'spark.memory.fraction': 0.8224812453748167, 'spark.memory.offHeap.enabled': 0.5289379976225125, 'spark.memory.offHeap.size': 115.47383105811264, 'spark.memory.storageFraction': 0.5922576693938431, 'spark.rdd.compress': 0.798184359130312, 'spark.reducer.maxBlocksInFlightPerAddress': 1893749835.49584, 'spark.reducer.maxReqsInFlight': 1656821784.0645926, 'spark.reducer.maxSizeInFlight': 63.84705125037873, 'spark.scheduler.mode': 0.3411106970997746, 'spark.scheduler.revive.interval': 511.01949743349587, 'spark.shuffle.compress': 0.6461160779887065, 'spark.shuffle.file.buffer': 19.369976696597654, 'spark.shuffle.io.numConnectionsPerPeer': 3.793375212470476, 'spark.shuffle.sort.bypassMergeThreshold': 210.40562206279554, 'spark.storage.memoryMapThreshold': 3.3399567379547674} target = -164.05
x_probe = {'spark.broadcast.blockSize': 56.980257244851515, 'spark.broadcast.checksum': 0.8033834087564106, 'spark.broadcast.compress': 0.6614902157306863, 'spark.default.parallelism': 405.8747077639815, 'spark.executor.cores': 3.966718909425805, 'spark.executor.instances': 7.940591409355992, 'spark.executor.memory': 4.523059439929728, 'spark.executor.memoryOverhead': 849.9706305393946, 'spark.kryoserializer.buffer': 98.4677997196543, 'spark.kryoserializer.buffer.max': 77.06256258910264, 'spark.locality.wait': 5.503293881592113, 'spark.maxRemoteBlockSizeFetchToMem': 1735613635.8826032, 'spark.memory.fraction': 0.8224812453748167, 'spark.memory.offHeap.enabled': 0.5289379976225125, 'spark.memory.offHeap.size': 115.47383105811264, 'spark.memory.storageFraction': 0.5922576693938431, 'spark.rdd.compress': 0.798184359130312, 'spark.reducer.maxBlocksInFlightPerAddress': 1893749835.49584, 'spark.reducer.maxReqsInFlight': 1656821784.0645926, 'spark.reducer.maxSizeInFlight': 63.84705125037873, 'spark.scheduler.mode': 0.3411106970997746, 'spark.scheduler.revive.interval': 511.01949743349587, 'spark.shuffle.compress': 0.6461160779887065, 'spark.shuffle.file.buffer': 19.369976696597654, 'spark.shuffle.io.numConnectionsPerPeer': 3.793375212470476, 'spark.shuffle.sort.bypassMergeThreshold': 210.40562206279554, 'spark.storage.memoryMapThreshold': 3.3399567379547674}
target = -164.05
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (7, 27)
before probe, target = (7,)
标准化前的train_x = 
[[3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]]
标准化后的train_x = 
[[-1.01050309  0.49521794  0.5459662   0.57218407  0.79497024  0.60390577
  -0.25894498 -0.10047779  1.10637441  0.88036214 -0.85777594  0.51312417
   0.78759465 -0.40824829  0.58245266 -0.86266145 -0.40824829  0.45660007
  -1.21272946  1.00027693 -0.40824829 -0.08707512  0.7703848  -0.33349175
  -0.75842611 -0.36293571  0.96471517]
 [ 0.54027722 -2.40172132  0.5459662  -2.36020693 -0.58474805 -2.1595959
  -1.44905931 -1.33812421 -1.03928107 -1.80045932  0.98880571  0.5301585
  -2.3626814  -0.40824829 -1.93190744 -1.17675192 -0.40824829 -1.3019569
   1.3400792  -1.79273144 -0.40824829 -0.35166979 -1.52059207  1.86536302
   0.64111453  2.23731365 -1.93354384]
 [ 1.31566738  0.49521794 -2.30927134  0.44375819 -1.96446633  0.60390577
   2.12128368 -0.56671445 -1.19254217  0.71951285  1.91209654 -2.36545707
   0.21481719 -0.40824829  0.16339264  0.39370044 -0.40824829 -1.76438215
   0.69206713 -0.90404696 -0.40824829  2.19004259 -1.52059207 -1.06644334
   2.04065516 -1.26036691 -0.48441433]
 [-1.01050309  0.49521794  0.5459662   0.50797113  0.79497024  0.60390577
  -0.25894498 -0.10895482  1.10637441  0.77312928 -0.85777594  0.69542504
   0.78759452 -0.40824829  0.46272123 -0.86266234 -0.40824829  0.41956186
  -0.77979519  1.00027693 -0.40824829 -0.08707512  0.7703848   0.03298404
  -0.75842611 -0.38594677  0.96471517]
 [-0.91357932  0.49521794  0.5459662   0.7648229   0.79497024  0.60390577
  -0.25894498 -0.04961561  1.10637441  0.71951285 -0.85777594  0.61240133
   0.31027985 -0.40824829  0.35496294 -0.23448013 -0.40824829  0.67183522
  -0.75420694  0.87332201 -0.40824829 -0.1592373   0.7703848   0.03298404
  -0.75842611 -0.33992466  0.96471517]
 [-0.3320367   0.49521794  0.5459662   0.20831073 -0.58474805 -0.77784507
  -0.25894498 -0.04113858 -0.88601996 -0.13835002  0.06551489  0.03450621
   0.11935421 -0.40824829  1.30084126  1.65006277 -0.40824829  0.44034151
  -0.59724741 -0.39622725 -0.40824829 -0.0790571   0.7703848   0.76593563
  -0.75842611  0.09728541 -0.48441433]
 [ 1.41067761 -0.07436838 -0.42055965 -0.13684008  0.74905171  0.5218179
   0.36355555  2.20502547 -0.20128004 -1.15370779 -0.39308932 -0.02015818
   0.14304097  2.44948974 -0.93246329  1.09279262  2.44948974  1.0780004
   1.31183267  0.21912978  2.44948974 -1.42592815 -0.04035508 -1.29733164
   0.35193474  0.01457498  0.008227  ]]
train_y = 
[   -165.666    -194.423    -220.648    -163.342    -162.804 -100000.
    -164.05 ]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.01050309  0.49521794  0.5459662   0.57218407  0.79497024  0.60390577
  -0.25894498 -0.10047779  1.10637441  0.88036214 -0.85777594  0.51312417
   0.78759465 -0.40824829  0.58245266 -0.86266145 -0.40824829  0.45660007
  -1.21272946  1.00027693 -0.40824829 -0.08707512  0.7703848  -0.33349175
  -0.75842611 -0.36293571  0.96471517]
 [ 0.54027722 -2.40172132  0.5459662  -2.36020693 -0.58474805 -2.1595959
  -1.44905931 -1.33812421 -1.03928107 -1.80045932  0.98880571  0.5301585
  -2.3626814  -0.40824829 -1.93190744 -1.17675192 -0.40824829 -1.3019569
   1.3400792  -1.79273144 -0.40824829 -0.35166979 -1.52059207  1.86536302
   0.64111453  2.23731365 -1.93354384]
 [ 1.31566738  0.49521794 -2.30927134  0.44375819 -1.96446633  0.60390577
   2.12128368 -0.56671445 -1.19254217  0.71951285  1.91209654 -2.36545707
   0.21481719 -0.40824829  0.16339264  0.39370044 -0.40824829 -1.76438215
   0.69206713 -0.90404696 -0.40824829  2.19004259 -1.52059207 -1.06644334
   2.04065516 -1.26036691 -0.48441433]
 [-1.01050309  0.49521794  0.5459662   0.50797113  0.79497024  0.60390577
  -0.25894498 -0.10895482  1.10637441  0.77312928 -0.85777594  0.69542504
   0.78759452 -0.40824829  0.46272123 -0.86266234 -0.40824829  0.41956186
  -0.77979519  1.00027693 -0.40824829 -0.08707512  0.7703848   0.03298404
  -0.75842611 -0.38594677  0.96471517]
 [-0.91357932  0.49521794  0.5459662   0.7648229   0.79497024  0.60390577
  -0.25894498 -0.04961561  1.10637441  0.71951285 -0.85777594  0.61240133
   0.31027985 -0.40824829  0.35496294 -0.23448013 -0.40824829  0.67183522
  -0.75420694  0.87332201 -0.40824829 -0.1592373   0.7703848   0.03298404
  -0.75842611 -0.33992466  0.96471517]
 [-0.3320367   0.49521794  0.5459662   0.20831073 -0.58474805 -0.77784507
  -0.25894498 -0.04113858 -0.88601996 -0.13835002  0.06551489  0.03450621
   0.11935421 -0.40824829  1.30084126  1.65006277 -0.40824829  0.44034151
  -0.59724741 -0.39622725 -0.40824829 -0.0790571   0.7703848   0.76593563
  -0.75842611  0.09728541 -0.48441433]
 [ 1.41067761 -0.07436838 -0.42055965 -0.13684008  0.74905171  0.5218179
   0.36355555  2.20502547 -0.20128004 -1.15370779 -0.39308932 -0.02015818
   0.14304097  2.44948974 -0.93246329  1.09279262  2.44948974  1.0780004
   1.31183267  0.21912978  2.44948974 -1.42592815 -0.04035508 -1.29733164
   0.35193474  0.01457498  0.008227  ]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.01050309  0.49521794  0.5459662   0.57218407  0.79497024  0.60390577
  -0.25894498 -0.10047779  1.10637441  0.88036214 -0.85777594  0.51312417
   0.78759465 -0.40824829  0.58245266 -0.86266145 -0.40824829  0.45660007
  -1.21272946  1.00027693 -0.40824829 -0.08707512  0.7703848  -0.33349175
  -0.75842611 -0.36293571  0.96471517]
 [ 0.54027722 -2.40172132  0.5459662  -2.36020693 -0.58474805 -2.1595959
  -1.44905931 -1.33812421 -1.03928107 -1.80045932  0.98880571  0.5301585
  -2.3626814  -0.40824829 -1.93190744 -1.17675192 -0.40824829 -1.3019569
   1.3400792  -1.79273144 -0.40824829 -0.35166979 -1.52059207  1.86536302
   0.64111453  2.23731365 -1.93354384]
 [ 1.31566738  0.49521794 -2.30927134  0.44375819 -1.96446633  0.60390577
   2.12128368 -0.56671445 -1.19254217  0.71951285  1.91209654 -2.36545707
   0.21481719 -0.40824829  0.16339264  0.39370044 -0.40824829 -1.76438215
   0.69206713 -0.90404696 -0.40824829  2.19004259 -1.52059207 -1.06644334
   2.04065516 -1.26036691 -0.48441433]
 [-1.01050309  0.49521794  0.5459662   0.50797113  0.79497024  0.60390577
  -0.25894498 -0.10895482  1.10637441  0.77312928 -0.85777594  0.69542504
   0.78759452 -0.40824829  0.46272123 -0.86266234 -0.40824829  0.41956186
  -0.77979519  1.00027693 -0.40824829 -0.08707512  0.7703848   0.03298404
  -0.75842611 -0.38594677  0.96471517]
 [-0.91357932  0.49521794  0.5459662   0.7648229   0.79497024  0.60390577
  -0.25894498 -0.04961561  1.10637441  0.71951285 -0.85777594  0.61240133
   0.31027985 -0.40824829  0.35496294 -0.23448013 -0.40824829  0.67183522
  -0.75420694  0.87332201 -0.40824829 -0.1592373   0.7703848   0.03298404
  -0.75842611 -0.33992466  0.96471517]
 [-0.3320367   0.49521794  0.5459662   0.20831073 -0.58474805 -0.77784507
  -0.25894498 -0.04113858 -0.88601996 -0.13835002  0.06551489  0.03450621
   0.11935421 -0.40824829  1.30084126  1.65006277 -0.40824829  0.44034151
  -0.59724741 -0.39622725 -0.40824829 -0.0790571   0.7703848   0.76593563
  -0.75842611  0.09728541 -0.48441433]
 [ 1.41067761 -0.07436838 -0.42055965 -0.13684008  0.74905171  0.5218179
   0.36355555  2.20502547 -0.20128004 -1.15370779 -0.39308932 -0.02015818
   0.14304097  2.44948974 -0.93246329  1.09279262  2.44948974  1.0780004
   1.31183267  0.21912978  2.44948974 -1.42592815 -0.04035508 -1.29733164
   0.35193474  0.01457498  0.008227  ]]
upper = 
[6746.30314235 4875.44706398 6842.9216692  ... 5981.49638815 6029.99156994
 3894.02072154]
upper.argmax() = 121
all predict_target = 
[17916.28013334 24155.66746257 17376.40031004 ... 20422.84691066
 20245.52339789 28120.83817564]
upper.argmax() = 121, sortnumber[0] = 121
x_max = [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
 3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
 1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
 7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
 2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
 2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
 3.87181617e+00 2.48674877e+02 3.67803545e+00]
================= config8 =================
2022年 02月 22日 星期二 16:57:43 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (62312) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (11567) - 没有那个进程
black_box_function中schafferRun(i) 中的i为[40.60190869091119, 0.40688218073324467, 0.6514470018484111, 454.7334415272212, 3.0672750012559247, 6.877851384898181, 3.9698259418680144, 865.4231126318571, 126.18041301911757, 106.1996385276174, 5.62770262494404, 1994281558.4657369, 0.7452863332895862, 0.4781804693397561, 48.14532095535424, 0.5015357593074035, 0.29757306867343347, 1526318844.0582504, 1655911731.8216739, 50.202969271605255, 0.24344009063723082, 695.822829564042, 0.56586436766416, 20.172835835008257, 3.871816174595232, 248.67487749978628, 3.6780354495520884]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 40.60190869091119
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.40688218073324467
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.6514470018484111
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 454.7334415272212
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.0672750012559247
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.877851384898181
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 3.9698259418680144
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 865.4231126318571
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 126.18041301911757
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 106.1996385276174
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 5.62770262494404
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1994281558.4657369
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7452863332895862
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.4781804693397561
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 48.14532095535424
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5015357593074035
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.29757306867343347
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1526318844.0582504
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1655911731.8216739
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 50.202969271605255
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.24344009063723082
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 695.822829564042
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.56586436766416
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 20.172835835008257
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.871816174595232
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 248.67487749978628
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.6780354495520884
configNum = 8	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 8 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 40.60190869091119, 'spark.broadcast.checksum': 0.40688218073324467, 'spark.broadcast.compress': 0.6514470018484111, 'spark.default.parallelism': 454.7334415272212, 'spark.executor.cores': 3.0672750012559247, 'spark.executor.instances': 6.877851384898181, 'spark.executor.memory': 3.9698259418680144, 'spark.executor.memoryOverhead': 865.4231126318571, 'spark.kryoserializer.buffer': 126.18041301911757, 'spark.kryoserializer.buffer.max': 106.1996385276174, 'spark.locality.wait': 5.62770262494404, 'spark.maxRemoteBlockSizeFetchToMem': 1994281558.4657369, 'spark.memory.fraction': 0.7452863332895862, 'spark.memory.offHeap.enabled': 0.4781804693397561, 'spark.memory.offHeap.size': 48.14532095535424, 'spark.memory.storageFraction': 0.5015357593074035, 'spark.rdd.compress': 0.29757306867343347, 'spark.reducer.maxBlocksInFlightPerAddress': 1526318844.0582504, 'spark.reducer.maxReqsInFlight': 1655911731.8216739, 'spark.reducer.maxSizeInFlight': 50.202969271605255, 'spark.scheduler.mode': 0.24344009063723082, 'spark.scheduler.revive.interval': 695.822829564042, 'spark.shuffle.compress': 0.56586436766416, 'spark.shuffle.file.buffer': 20.172835835008257, 'spark.shuffle.io.numConnectionsPerPeer': 3.871816174595232, 'spark.shuffle.sort.bypassMergeThreshold': 248.67487749978628, 'spark.storage.memoryMapThreshold': 3.6780354495520884} target = -182.936
x_probe = {'spark.broadcast.blockSize': 40.60190869091119, 'spark.broadcast.checksum': 0.40688218073324467, 'spark.broadcast.compress': 0.6514470018484111, 'spark.default.parallelism': 454.7334415272212, 'spark.executor.cores': 3.0672750012559247, 'spark.executor.instances': 6.877851384898181, 'spark.executor.memory': 3.9698259418680144, 'spark.executor.memoryOverhead': 865.4231126318571, 'spark.kryoserializer.buffer': 126.18041301911757, 'spark.kryoserializer.buffer.max': 106.1996385276174, 'spark.locality.wait': 5.62770262494404, 'spark.maxRemoteBlockSizeFetchToMem': 1994281558.4657369, 'spark.memory.fraction': 0.7452863332895862, 'spark.memory.offHeap.enabled': 0.4781804693397561, 'spark.memory.offHeap.size': 48.14532095535424, 'spark.memory.storageFraction': 0.5015357593074035, 'spark.rdd.compress': 0.29757306867343347, 'spark.reducer.maxBlocksInFlightPerAddress': 1526318844.0582504, 'spark.reducer.maxReqsInFlight': 1655911731.8216739, 'spark.reducer.maxSizeInFlight': 50.202969271605255, 'spark.scheduler.mode': 0.24344009063723082, 'spark.scheduler.revive.interval': 695.822829564042, 'spark.shuffle.compress': 0.56586436766416, 'spark.shuffle.file.buffer': 20.172835835008257, 'spark.shuffle.io.numConnectionsPerPeer': 3.871816174595232, 'spark.shuffle.sort.bypassMergeThreshold': 248.67487749978628, 'spark.storage.memoryMapThreshold': 3.6780354495520884}
target = -182.936
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (8, 27)
before probe, target = (8,)
标准化前的train_x = 
[[3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00]]
标准化后的train_x = 
[[-1.0545932   0.63593735  0.63572538  0.46671948  0.902054    0.73218192
  -0.23614243 -0.32350772  0.36788956  0.87745121 -0.87559586  0.36750865
   0.90167341 -0.57637509  0.72839282 -0.58400308 -0.51064984  0.5507694
  -1.336015    1.1211881  -0.56689563 -0.10052806  0.85086817 -0.20967657
  -0.86109336 -0.48395864  0.95013278]
 [ 0.60003227 -2.20666253  0.63572538 -2.51781303 -0.55111216 -2.06938462
  -1.50157074 -1.3436573  -0.94634592 -1.95903438  1.08900106  0.38439908
  -2.39424293 -0.57637509 -1.56154691 -0.86924192 -0.51064984 -1.29531734
   1.14468763 -1.51162257 -0.56689563 -0.38333657 -1.59063025  2.00579577
   0.61553349  2.16625511 -2.1012724 ]
 [ 1.427345    0.63593735 -2.3788649   0.33601003 -2.00427831  0.73218192
   2.29471419 -0.70781065 -1.04021988  0.70726207  2.07129952 -2.48675434
   0.30241589 -0.57637509  0.3467362   0.55695227 -0.51064984 -1.78075918
   0.51497915 -0.67391008 -0.56689563  2.3333391  -1.59063025 -0.94816736
   2.09216035 -1.39863418 -0.57556981]
 [-1.0545932   0.63593735  0.63572538  0.40136475  0.902054    0.73218192
  -0.23614243 -0.33049505  0.36788956  0.76399179 -0.87559586  0.54826945
   0.90167326 -0.57637509  0.61934807 -0.5840039  -0.51064984  0.51188767
  -0.9153093   1.1211881  -0.56689563 -0.10052806  0.85086817  0.15956882
  -0.86109336 -0.50741186  0.95013278]
 [-0.9511791   0.63593735  0.63572538  0.66278366  0.902054    0.73218192
  -0.23614243 -0.28158377  0.36788956  0.70726207 -0.87559586  0.46594712
   0.40229188 -0.57637509  0.52120779 -0.01352507 -0.51064984  0.77671759
  -0.89044381  1.00151489 -0.56689563 -0.17765766  0.85086817  0.15956882
  -0.86109336 -0.46050542  0.95013278]
 [-0.33069456  0.63593735  0.63572538  0.09637603 -0.55111216 -0.66860135
  -0.23614243 -0.27459644 -0.85247195 -0.20041332  0.1067026  -0.10706594
   0.20253957 -0.57637509  1.38266131  1.69790803 -0.51064984  0.53370159
  -0.73791771 -0.19521723 -0.56689563 -0.09195811  0.85086817  0.8980596
  -0.86109336 -0.01489426 -0.57556981]
 [ 1.52871741  0.07703505 -0.38474292 -0.25491199  0.85369104  0.64896336
   0.4257518   1.5768397  -0.43306189 -1.27472868 -0.38121106 -0.16126853
   0.22732139  1.84531963 -0.65130861  1.19182744  2.46513808  1.20309908
   1.11723894  0.38484496  2.07956957 -1.53154342 -0.01313887 -1.18080056
   0.31042578 -0.09919399 -0.05689694]
 [-0.16503462 -1.05005929 -0.4150191   0.80947107 -0.4533504  -0.83970508
  -0.27432554  1.68481123  2.16843095  0.37820924 -0.25900454  0.98896452
  -0.54367247  1.61293088 -1.38549066 -1.39591377  0.59876095 -0.5000988
   1.1027801  -1.24798616  1.32180424  0.05221278 -0.20907329 -0.88434852
   0.42625382  0.79834324  0.45891063]]
train_y = 
[   -165.666    -194.423    -220.648    -163.342    -162.804 -100000.
    -164.05     -182.936]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.0545932   0.63593735  0.63572538  0.46671948  0.902054    0.73218192
  -0.23614243 -0.32350772  0.36788956  0.87745121 -0.87559586  0.36750865
   0.90167341 -0.57637509  0.72839282 -0.58400308 -0.51064984  0.5507694
  -1.336015    1.1211881  -0.56689563 -0.10052806  0.85086817 -0.20967657
  -0.86109336 -0.48395864  0.95013278]
 [ 0.60003227 -2.20666253  0.63572538 -2.51781303 -0.55111216 -2.06938462
  -1.50157074 -1.3436573  -0.94634592 -1.95903438  1.08900106  0.38439908
  -2.39424293 -0.57637509 -1.56154691 -0.86924192 -0.51064984 -1.29531734
   1.14468763 -1.51162257 -0.56689563 -0.38333657 -1.59063025  2.00579577
   0.61553349  2.16625511 -2.1012724 ]
 [ 1.427345    0.63593735 -2.3788649   0.33601003 -2.00427831  0.73218192
   2.29471419 -0.70781065 -1.04021988  0.70726207  2.07129952 -2.48675434
   0.30241589 -0.57637509  0.3467362   0.55695227 -0.51064984 -1.78075918
   0.51497915 -0.67391008 -0.56689563  2.3333391  -1.59063025 -0.94816736
   2.09216035 -1.39863418 -0.57556981]
 [-1.0545932   0.63593735  0.63572538  0.40136475  0.902054    0.73218192
  -0.23614243 -0.33049505  0.36788956  0.76399179 -0.87559586  0.54826945
   0.90167326 -0.57637509  0.61934807 -0.5840039  -0.51064984  0.51188767
  -0.9153093   1.1211881  -0.56689563 -0.10052806  0.85086817  0.15956882
  -0.86109336 -0.50741186  0.95013278]
 [-0.9511791   0.63593735  0.63572538  0.66278366  0.902054    0.73218192
  -0.23614243 -0.28158377  0.36788956  0.70726207 -0.87559586  0.46594712
   0.40229188 -0.57637509  0.52120779 -0.01352507 -0.51064984  0.77671759
  -0.89044381  1.00151489 -0.56689563 -0.17765766  0.85086817  0.15956882
  -0.86109336 -0.46050542  0.95013278]
 [-0.33069456  0.63593735  0.63572538  0.09637603 -0.55111216 -0.66860135
  -0.23614243 -0.27459644 -0.85247195 -0.20041332  0.1067026  -0.10706594
   0.20253957 -0.57637509  1.38266131  1.69790803 -0.51064984  0.53370159
  -0.73791771 -0.19521723 -0.56689563 -0.09195811  0.85086817  0.8980596
  -0.86109336 -0.01489426 -0.57556981]
 [ 1.52871741  0.07703505 -0.38474292 -0.25491199  0.85369104  0.64896336
   0.4257518   1.5768397  -0.43306189 -1.27472868 -0.38121106 -0.16126853
   0.22732139  1.84531963 -0.65130861  1.19182744  2.46513808  1.20309908
   1.11723894  0.38484496  2.07956957 -1.53154342 -0.01313887 -1.18080056
   0.31042578 -0.09919399 -0.05689694]
 [-0.16503462 -1.05005929 -0.4150191   0.80947107 -0.4533504  -0.83970508
  -0.27432554  1.68481123  2.16843095  0.37820924 -0.25900454  0.98896452
  -0.54367247  1.61293088 -1.38549066 -1.39591377  0.59876095 -0.5000988
   1.1027801  -1.24798616  1.32180424  0.05221278 -0.20907329 -0.88434852
   0.42625382  0.79834324  0.45891063]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.0545932   0.63593735  0.63572538  0.46671948  0.902054    0.73218192
  -0.23614243 -0.32350772  0.36788956  0.87745121 -0.87559586  0.36750865
   0.90167341 -0.57637509  0.72839282 -0.58400308 -0.51064984  0.5507694
  -1.336015    1.1211881  -0.56689563 -0.10052806  0.85086817 -0.20967657
  -0.86109336 -0.48395864  0.95013278]
 [ 0.60003227 -2.20666253  0.63572538 -2.51781303 -0.55111216 -2.06938462
  -1.50157074 -1.3436573  -0.94634592 -1.95903438  1.08900106  0.38439908
  -2.39424293 -0.57637509 -1.56154691 -0.86924192 -0.51064984 -1.29531734
   1.14468763 -1.51162257 -0.56689563 -0.38333657 -1.59063025  2.00579577
   0.61553349  2.16625511 -2.1012724 ]
 [ 1.427345    0.63593735 -2.3788649   0.33601003 -2.00427831  0.73218192
   2.29471419 -0.70781065 -1.04021988  0.70726207  2.07129952 -2.48675434
   0.30241589 -0.57637509  0.3467362   0.55695227 -0.51064984 -1.78075918
   0.51497915 -0.67391008 -0.56689563  2.3333391  -1.59063025 -0.94816736
   2.09216035 -1.39863418 -0.57556981]
 [-1.0545932   0.63593735  0.63572538  0.40136475  0.902054    0.73218192
  -0.23614243 -0.33049505  0.36788956  0.76399179 -0.87559586  0.54826945
   0.90167326 -0.57637509  0.61934807 -0.5840039  -0.51064984  0.51188767
  -0.9153093   1.1211881  -0.56689563 -0.10052806  0.85086817  0.15956882
  -0.86109336 -0.50741186  0.95013278]
 [-0.9511791   0.63593735  0.63572538  0.66278366  0.902054    0.73218192
  -0.23614243 -0.28158377  0.36788956  0.70726207 -0.87559586  0.46594712
   0.40229188 -0.57637509  0.52120779 -0.01352507 -0.51064984  0.77671759
  -0.89044381  1.00151489 -0.56689563 -0.17765766  0.85086817  0.15956882
  -0.86109336 -0.46050542  0.95013278]
 [-0.33069456  0.63593735  0.63572538  0.09637603 -0.55111216 -0.66860135
  -0.23614243 -0.27459644 -0.85247195 -0.20041332  0.1067026  -0.10706594
   0.20253957 -0.57637509  1.38266131  1.69790803 -0.51064984  0.53370159
  -0.73791771 -0.19521723 -0.56689563 -0.09195811  0.85086817  0.8980596
  -0.86109336 -0.01489426 -0.57556981]
 [ 1.52871741  0.07703505 -0.38474292 -0.25491199  0.85369104  0.64896336
   0.4257518   1.5768397  -0.43306189 -1.27472868 -0.38121106 -0.16126853
   0.22732139  1.84531963 -0.65130861  1.19182744  2.46513808  1.20309908
   1.11723894  0.38484496  2.07956957 -1.53154342 -0.01313887 -1.18080056
   0.31042578 -0.09919399 -0.05689694]
 [-0.16503462 -1.05005929 -0.4150191   0.80947107 -0.4533504  -0.83970508
  -0.27432554  1.68481123  2.16843095  0.37820924 -0.25900454  0.98896452
  -0.54367247  1.61293088 -1.38549066 -1.39591377  0.59876095 -0.5000988
   1.1027801  -1.24798616  1.32180424  0.05221278 -0.20907329 -0.88434852
   0.42625382  0.79834324  0.45891063]]
upper = 
[7216.83514635 6642.79825264 6980.5766806  ... 7007.96744212 7057.0410032
 6699.87094481]
upper.argmax() = 9378
all predict_target = 
[14324.18785288 16082.66487068 15140.20300627 ... 14859.30544358
 14739.12001601 15985.68486853]
upper.argmax() = 9378, sortnumber[0] = 9378
x_max = [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
 2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
 9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
 6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
 7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
 8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
 4.28135496e+00 3.32800068e+02 3.87295723e+00]
black_box_function中schafferRun(i) 中的i为[47.707174834063196, 0.10348367080555121, 0.09903633706234971, 394.9107459754295, 2.466856421475551, 7.300101243638549, 5.660817188348477, 698.0820913971543, 97.4138161536707, 91.33389779909831, 4.363867380542148, 1755034394.7557003, 0.6544027007371567, 0.46817099050166744, 110.9406005191421, 0.6335028620159827, 0.7375712631476611, 1694435800.401938, 1670545983.5606575, 43.77913738312917, 0.8106902019888524, 748.6366126270502, 0.6233452417197022, 23.60312144721867, 4.281354955827734, 332.8000676630625, 3.8729572336773828]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 47.707174834063196
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.10348367080555121
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.09903633706234971
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 394.9107459754295
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.466856421475551
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 7.300101243638549
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.660817188348477
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 698.0820913971543
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 97.4138161536707
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 91.33389779909831
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 4.363867380542148
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1755034394.7557003
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6544027007371567
================= config9 =================
2022年 02月 22日 星期二 17:00:55 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (77817) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (42151) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.46817099050166744
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 110.9406005191421
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6335028620159827
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.7375712631476611
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1694435800.401938
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1670545983.5606575
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 43.77913738312917
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.8106902019888524
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 748.6366126270502
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.6233452417197022
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 23.60312144721867
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.281354955827734
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 332.8000676630625
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.8729572336773828
configNum = 9	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 9 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 47.707174834063196, 'spark.broadcast.checksum': 0.10348367080555121, 'spark.broadcast.compress': 0.09903633706234971, 'spark.default.parallelism': 394.9107459754295, 'spark.executor.cores': 2.466856421475551, 'spark.executor.instances': 7.300101243638549, 'spark.executor.memory': 5.660817188348477, 'spark.executor.memoryOverhead': 698.0820913971543, 'spark.kryoserializer.buffer': 97.4138161536707, 'spark.kryoserializer.buffer.max': 91.33389779909831, 'spark.locality.wait': 4.363867380542148, 'spark.maxRemoteBlockSizeFetchToMem': 1755034394.7557003, 'spark.memory.fraction': 0.6544027007371567, 'spark.memory.offHeap.enabled': 0.46817099050166744, 'spark.memory.offHeap.size': 110.9406005191421, 'spark.memory.storageFraction': 0.6335028620159827, 'spark.rdd.compress': 0.7375712631476611, 'spark.reducer.maxBlocksInFlightPerAddress': 1694435800.401938, 'spark.reducer.maxReqsInFlight': 1670545983.5606575, 'spark.reducer.maxSizeInFlight': 43.77913738312917, 'spark.scheduler.mode': 0.8106902019888524, 'spark.scheduler.revive.interval': 748.6366126270502, 'spark.shuffle.compress': 0.6233452417197022, 'spark.shuffle.file.buffer': 23.60312144721867, 'spark.shuffle.io.numConnectionsPerPeer': 4.281354955827734, 'spark.shuffle.sort.bypassMergeThreshold': 332.8000676630625, 'spark.storage.memoryMapThreshold': 3.8729572336773828} target = -245.931
x_probe = {'spark.broadcast.blockSize': 47.707174834063196, 'spark.broadcast.checksum': 0.10348367080555121, 'spark.broadcast.compress': 0.09903633706234971, 'spark.default.parallelism': 394.9107459754295, 'spark.executor.cores': 2.466856421475551, 'spark.executor.instances': 7.300101243638549, 'spark.executor.memory': 5.660817188348477, 'spark.executor.memoryOverhead': 698.0820913971543, 'spark.kryoserializer.buffer': 97.4138161536707, 'spark.kryoserializer.buffer.max': 91.33389779909831, 'spark.locality.wait': 4.363867380542148, 'spark.maxRemoteBlockSizeFetchToMem': 1755034394.7557003, 'spark.memory.fraction': 0.6544027007371567, 'spark.memory.offHeap.enabled': 0.46817099050166744, 'spark.memory.offHeap.size': 110.9406005191421, 'spark.memory.storageFraction': 0.6335028620159827, 'spark.rdd.compress': 0.7375712631476611, 'spark.reducer.maxBlocksInFlightPerAddress': 1694435800.401938, 'spark.reducer.maxReqsInFlight': 1670545983.5606575, 'spark.reducer.maxSizeInFlight': 43.77913738312917, 'spark.scheduler.mode': 0.8106902019888524, 'spark.scheduler.revive.interval': 748.6366126270502, 'spark.shuffle.compress': 0.6233452417197022, 'spark.shuffle.file.buffer': 23.60312144721867, 'spark.shuffle.io.numConnectionsPerPeer': 4.281354955827734, 'spark.shuffle.sort.bypassMergeThreshold': 332.8000676630625, 'spark.storage.memoryMapThreshold': 3.8729572336773828}
target = -245.931
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (9, 27)
before probe, target = (9,)
标准化前的train_x = 
[[3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00]
 [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
  2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
  9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
  6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
  7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
  8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
  4.28135496e+00 3.32800068e+02 3.87295723e+00]]
标准化后的train_x = 
[[-1.16488896  0.75882328  0.75556966  0.54587686  1.01803582  0.80310534
  -0.3993965  -0.39805444  0.44594536  0.97385747 -0.672458    0.39850571
   1.01488458 -0.70555994  0.83274488 -0.70525897 -0.64552866  0.54890388
  -1.43837798  1.18417238 -0.59230838 -0.16381709  0.91034343 -0.26530126
  -0.97865166 -0.6169606   0.89076648]
 [ 0.5592877  -1.78353416  0.75556966 -2.57767388 -0.39173667 -2.15828492
  -1.5391896  -1.46445465 -0.92659739 -1.99917009  1.19120599  0.41641513
  -2.13202869 -0.70555994 -1.5324379  -0.9427232  -0.64552866 -1.40074201
   0.96544533 -1.13335436 -0.59230838 -0.45962197 -1.67857729  2.06571435
   0.50252152  1.44782734 -2.2475459 ]
 [ 1.42137603  0.75882328 -1.87196414  0.40907901 -1.80150915  0.80310534
   1.88018972 -0.79978055 -1.02463616  0.79547581  2.12303799 -2.62795404
   0.44271853 -0.70555994  0.43854775  0.24459795 -0.64552866 -1.91341547
   0.35525211 -0.39595949 -0.59230838  2.38189771 -1.67857729 -1.04230646
   1.98369469 -1.32958653 -0.67838971]
 [-1.16488896  0.75882328  0.75556966  0.47747793  1.01803582  0.80310534
  -0.3993965  -0.40535855  0.44594536  0.85493636 -0.672458    0.59017174
   1.01488445 -0.70555994  0.72011712 -0.70525965 -0.64552866  0.50784102
  -1.03071034  1.18417238 -0.59230838 -0.16381709  0.91034343  0.12320134
  -0.97865166 -0.63523306  0.89076648]
 [-1.05712792  0.75882328  0.75556966  0.75107362  1.01803582  0.80310534
  -0.3993965  -0.35422977  0.44594536  0.79547581 -0.672458    0.50288294
   0.53807929 -0.70555994  0.61875215 -0.23033023 -0.64552866  0.78752699
  -1.00661546  1.07883026 -0.59230838 -0.24449115  0.91034343  0.12320134
  -0.97865166 -0.59868814  0.89076648]
 [-0.41056167  0.75882328  0.75556966  0.15828297 -0.39173667 -0.67758979
  -0.3993965  -0.34692566 -0.82855862 -0.15589301  0.259374   -0.10469981
   0.34735746 -0.70555994  1.50851138  1.1944552  -0.64552866  0.53087863
  -0.85881629  0.02540901 -0.59230838 -0.1548533   0.91034343  0.90020654
  -0.97865166 -0.25151141 -0.67838971]
 [ 1.52700957  0.25895363 -0.13387624 -0.2093679   0.97111706  0.71513933
   0.19678305  1.58844924 -0.39054104 -1.28192347 -0.20347266 -0.16217243
   0.37101893  1.57113033 -0.59229092  0.77313798  1.88389115  1.23782703
   0.9388473   0.53600769  0.71096793 -1.66059432 -0.00583398 -1.28707215
   0.19647442 -0.31718953 -0.14494449]
 [-0.23793833 -0.74909422 -0.16026512  0.90459366 -0.29689422 -0.85845465
  -0.43378868  1.70131589  2.32636942  0.45058312 -0.08754461  1.0574538
  -0.36511953  1.35265639 -1.35059678 -1.38118286  0.29747054 -0.56091443
   0.92483655 -0.90128889  0.33779937 -0.00405708 -0.2135993  -0.97515929
   0.31265907  0.38208389  0.38555381]
 [ 0.52773255 -1.52044168 -1.61174282 -0.45934228 -1.14334781 -0.23323134
   1.49359149  0.47903849 -0.49387229 -0.43334201 -1.26522672 -0.07060303
  -1.23179502  1.30957292 -0.64334767  1.75256377  1.69181025  0.26209437
   1.15013878 -1.57798899  2.50508301  0.46935429 -0.06478587  0.35751559
   0.91925693  1.91925804  0.69141654]]
train_y = 
[   -165.666    -194.423    -220.648    -163.342    -162.804 -100000.
    -164.05     -182.936    -245.931]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.16488896  0.75882328  0.75556966  0.54587686  1.01803582  0.80310534
  -0.3993965  -0.39805444  0.44594536  0.97385747 -0.672458    0.39850571
   1.01488458 -0.70555994  0.83274488 -0.70525897 -0.64552866  0.54890388
  -1.43837798  1.18417238 -0.59230838 -0.16381709  0.91034343 -0.26530126
  -0.97865166 -0.6169606   0.89076648]
 [ 0.5592877  -1.78353416  0.75556966 -2.57767388 -0.39173667 -2.15828492
  -1.5391896  -1.46445465 -0.92659739 -1.99917009  1.19120599  0.41641513
  -2.13202869 -0.70555994 -1.5324379  -0.9427232  -0.64552866 -1.40074201
   0.96544533 -1.13335436 -0.59230838 -0.45962197 -1.67857729  2.06571435
   0.50252152  1.44782734 -2.2475459 ]
 [ 1.42137603  0.75882328 -1.87196414  0.40907901 -1.80150915  0.80310534
   1.88018972 -0.79978055 -1.02463616  0.79547581  2.12303799 -2.62795404
   0.44271853 -0.70555994  0.43854775  0.24459795 -0.64552866 -1.91341547
   0.35525211 -0.39595949 -0.59230838  2.38189771 -1.67857729 -1.04230646
   1.98369469 -1.32958653 -0.67838971]
 [-1.16488896  0.75882328  0.75556966  0.47747793  1.01803582  0.80310534
  -0.3993965  -0.40535855  0.44594536  0.85493636 -0.672458    0.59017174
   1.01488445 -0.70555994  0.72011712 -0.70525965 -0.64552866  0.50784102
  -1.03071034  1.18417238 -0.59230838 -0.16381709  0.91034343  0.12320134
  -0.97865166 -0.63523306  0.89076648]
 [-1.05712792  0.75882328  0.75556966  0.75107362  1.01803582  0.80310534
  -0.3993965  -0.35422977  0.44594536  0.79547581 -0.672458    0.50288294
   0.53807929 -0.70555994  0.61875215 -0.23033023 -0.64552866  0.78752699
  -1.00661546  1.07883026 -0.59230838 -0.24449115  0.91034343  0.12320134
  -0.97865166 -0.59868814  0.89076648]
 [-0.41056167  0.75882328  0.75556966  0.15828297 -0.39173667 -0.67758979
  -0.3993965  -0.34692566 -0.82855862 -0.15589301  0.259374   -0.10469981
   0.34735746 -0.70555994  1.50851138  1.1944552  -0.64552866  0.53087863
  -0.85881629  0.02540901 -0.59230838 -0.1548533   0.91034343  0.90020654
  -0.97865166 -0.25151141 -0.67838971]
 [ 1.52700957  0.25895363 -0.13387624 -0.2093679   0.97111706  0.71513933
   0.19678305  1.58844924 -0.39054104 -1.28192347 -0.20347266 -0.16217243
   0.37101893  1.57113033 -0.59229092  0.77313798  1.88389115  1.23782703
   0.9388473   0.53600769  0.71096793 -1.66059432 -0.00583398 -1.28707215
   0.19647442 -0.31718953 -0.14494449]
 [-0.23793833 -0.74909422 -0.16026512  0.90459366 -0.29689422 -0.85845465
  -0.43378868  1.70131589  2.32636942  0.45058312 -0.08754461  1.0574538
  -0.36511953  1.35265639 -1.35059678 -1.38118286  0.29747054 -0.56091443
   0.92483655 -0.90128889  0.33779937 -0.00405708 -0.2135993  -0.97515929
   0.31265907  0.38208389  0.38555381]
 [ 0.52773255 -1.52044168 -1.61174282 -0.45934228 -1.14334781 -0.23323134
   1.49359149  0.47903849 -0.49387229 -0.43334201 -1.26522672 -0.07060303
  -1.23179502  1.30957292 -0.64334767  1.75256377  1.69181025  0.26209437
   1.15013878 -1.57798899  2.50508301  0.46935429 -0.06478587  0.35751559
   0.91925693  1.91925804  0.69141654]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.16488896  0.75882328  0.75556966  0.54587686  1.01803582  0.80310534
  -0.3993965  -0.39805444  0.44594536  0.97385747 -0.672458    0.39850571
   1.01488458 -0.70555994  0.83274488 -0.70525897 -0.64552866  0.54890388
  -1.43837798  1.18417238 -0.59230838 -0.16381709  0.91034343 -0.26530126
  -0.97865166 -0.6169606   0.89076648]
 [ 0.5592877  -1.78353416  0.75556966 -2.57767388 -0.39173667 -2.15828492
  -1.5391896  -1.46445465 -0.92659739 -1.99917009  1.19120599  0.41641513
  -2.13202869 -0.70555994 -1.5324379  -0.9427232  -0.64552866 -1.40074201
   0.96544533 -1.13335436 -0.59230838 -0.45962197 -1.67857729  2.06571435
   0.50252152  1.44782734 -2.2475459 ]
 [ 1.42137603  0.75882328 -1.87196414  0.40907901 -1.80150915  0.80310534
   1.88018972 -0.79978055 -1.02463616  0.79547581  2.12303799 -2.62795404
   0.44271853 -0.70555994  0.43854775  0.24459795 -0.64552866 -1.91341547
   0.35525211 -0.39595949 -0.59230838  2.38189771 -1.67857729 -1.04230646
   1.98369469 -1.32958653 -0.67838971]
 [-1.16488896  0.75882328  0.75556966  0.47747793  1.01803582  0.80310534
  -0.3993965  -0.40535855  0.44594536  0.85493636 -0.672458    0.59017174
   1.01488445 -0.70555994  0.72011712 -0.70525965 -0.64552866  0.50784102
  -1.03071034  1.18417238 -0.59230838 -0.16381709  0.91034343  0.12320134
  -0.97865166 -0.63523306  0.89076648]
 [-1.05712792  0.75882328  0.75556966  0.75107362  1.01803582  0.80310534
  -0.3993965  -0.35422977  0.44594536  0.79547581 -0.672458    0.50288294
   0.53807929 -0.70555994  0.61875215 -0.23033023 -0.64552866  0.78752699
  -1.00661546  1.07883026 -0.59230838 -0.24449115  0.91034343  0.12320134
  -0.97865166 -0.59868814  0.89076648]
 [-0.41056167  0.75882328  0.75556966  0.15828297 -0.39173667 -0.67758979
  -0.3993965  -0.34692566 -0.82855862 -0.15589301  0.259374   -0.10469981
   0.34735746 -0.70555994  1.50851138  1.1944552  -0.64552866  0.53087863
  -0.85881629  0.02540901 -0.59230838 -0.1548533   0.91034343  0.90020654
  -0.97865166 -0.25151141 -0.67838971]
 [ 1.52700957  0.25895363 -0.13387624 -0.2093679   0.97111706  0.71513933
   0.19678305  1.58844924 -0.39054104 -1.28192347 -0.20347266 -0.16217243
   0.37101893  1.57113033 -0.59229092  0.77313798  1.88389115  1.23782703
   0.9388473   0.53600769  0.71096793 -1.66059432 -0.00583398 -1.28707215
   0.19647442 -0.31718953 -0.14494449]
 [-0.23793833 -0.74909422 -0.16026512  0.90459366 -0.29689422 -0.85845465
  -0.43378868  1.70131589  2.32636942  0.45058312 -0.08754461  1.0574538
  -0.36511953  1.35265639 -1.35059678 -1.38118286  0.29747054 -0.56091443
   0.92483655 -0.90128889  0.33779937 -0.00405708 -0.2135993  -0.97515929
   0.31265907  0.38208389  0.38555381]
 [ 0.52773255 -1.52044168 -1.61174282 -0.45934228 -1.14334781 -0.23323134
   1.49359149  0.47903849 -0.49387229 -0.43334201 -1.26522672 -0.07060303
  -1.23179502  1.30957292 -0.64334767  1.75256377  1.69181025  0.26209437
   1.15013878 -1.57798899  2.50508301  0.46935429 -0.06478587  0.35751559
   0.91925693  1.91925804  0.69141654]]
upper = 
[6607.39980239 6940.61381888 5785.89684302 ... 6860.22433962 7450.98795679
 7887.56276653]
upper.argmax() = 2861
all predict_target = 
[14350.17339012 13467.11488593 16869.48479955 ... 13667.83907099
 11939.21497508 10788.08551772]
upper.argmax() = 2861, sortnumber[0] = 2861
x_max = [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
 2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
 1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
 8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
 5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
 3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
 3.52075079e+00 2.06608813e+02 3.24785426e+00]
black_box_function中schafferRun(i) 中的i为[36.52550872264118, 0.3081722757358365, 0.4772214012997996, 409.8993759888824, 2.6995894313065207, 7.794800648846268, 5.632311570185947, 808.109126653816, 121.25883972889835, 113.26438608605281, 5.983264920553766, 2072632068.6913013, 0.8705969196829723, 0.0960159694517797, 222.53895689845297, 0.6782018185211838, 0.5286160744354311, 1977669250.2670684, 1462340101.6721826, 65.1590614402223, 0.350301933571873, 630.1084166754769, 0.6438962294908722, 27.427407179681325, 3.520750793847071, 206.6088125075451, 3.2478542586670924]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 36.52550872264118
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.3081722757358365
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.4772214012997996
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 409.8993759888824
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.6995894313065207
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 7.794800648846268
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.632311570185947
================= config10 =================
2022年 02月 22日 星期二 17:05:09 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (84784) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (59675) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 808.109126653816
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 121.25883972889835
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 113.26438608605281
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 5.983264920553766
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2072632068.6913013
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8705969196829723
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0960159694517797
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 222.53895689845297
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6782018185211838
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.5286160744354311
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1977669250.2670684
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1462340101.6721826
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 65.1590614402223
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.350301933571873
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 630.1084166754769
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.6438962294908722
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 27.427407179681325
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.520750793847071
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 206.6088125075451
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.2478542586670924
configNum = 10	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 10 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 36.52550872264118, 'spark.broadcast.checksum': 0.3081722757358365, 'spark.broadcast.compress': 0.4772214012997996, 'spark.default.parallelism': 409.8993759888824, 'spark.executor.cores': 2.6995894313065207, 'spark.executor.instances': 7.794800648846268, 'spark.executor.memory': 5.632311570185947, 'spark.executor.memoryOverhead': 808.109126653816, 'spark.kryoserializer.buffer': 121.25883972889835, 'spark.kryoserializer.buffer.max': 113.26438608605281, 'spark.locality.wait': 5.983264920553766, 'spark.maxRemoteBlockSizeFetchToMem': 2072632068.6913013, 'spark.memory.fraction': 0.8705969196829723, 'spark.memory.offHeap.enabled': 0.0960159694517797, 'spark.memory.offHeap.size': 222.53895689845297, 'spark.memory.storageFraction': 0.6782018185211838, 'spark.rdd.compress': 0.5286160744354311, 'spark.reducer.maxBlocksInFlightPerAddress': 1977669250.2670684, 'spark.reducer.maxReqsInFlight': 1462340101.6721826, 'spark.reducer.maxSizeInFlight': 65.1590614402223, 'spark.scheduler.mode': 0.350301933571873, 'spark.scheduler.revive.interval': 630.1084166754769, 'spark.shuffle.compress': 0.6438962294908722, 'spark.shuffle.file.buffer': 27.427407179681325, 'spark.shuffle.io.numConnectionsPerPeer': 3.520750793847071, 'spark.shuffle.sort.bypassMergeThreshold': 206.6088125075451, 'spark.storage.memoryMapThreshold': 3.2478542586670924} target = -184.517
x_probe = {'spark.broadcast.blockSize': 36.52550872264118, 'spark.broadcast.checksum': 0.3081722757358365, 'spark.broadcast.compress': 0.4772214012997996, 'spark.default.parallelism': 409.8993759888824, 'spark.executor.cores': 2.6995894313065207, 'spark.executor.instances': 7.794800648846268, 'spark.executor.memory': 5.632311570185947, 'spark.executor.memoryOverhead': 808.109126653816, 'spark.kryoserializer.buffer': 121.25883972889835, 'spark.kryoserializer.buffer.max': 113.26438608605281, 'spark.locality.wait': 5.983264920553766, 'spark.maxRemoteBlockSizeFetchToMem': 2072632068.6913013, 'spark.memory.fraction': 0.8705969196829723, 'spark.memory.offHeap.enabled': 0.0960159694517797, 'spark.memory.offHeap.size': 222.53895689845297, 'spark.memory.storageFraction': 0.6782018185211838, 'spark.rdd.compress': 0.5286160744354311, 'spark.reducer.maxBlocksInFlightPerAddress': 1977669250.2670684, 'spark.reducer.maxReqsInFlight': 1462340101.6721826, 'spark.reducer.maxSizeInFlight': 65.1590614402223, 'spark.scheduler.mode': 0.350301933571873, 'spark.scheduler.revive.interval': 630.1084166754769, 'spark.shuffle.compress': 0.6438962294908722, 'spark.shuffle.file.buffer': 27.427407179681325, 'spark.shuffle.io.numConnectionsPerPeer': 3.520750793847071, 'spark.shuffle.sort.bypassMergeThreshold': 206.6088125075451, 'spark.storage.memoryMapThreshold': 3.2478542586670924}
target = -184.517
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (10, 27)
before probe, target = (10,)
标准化前的train_x = 
[[3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00]
 [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
  2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
  9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
  6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
  7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
  8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
  4.28135496e+00 3.32800068e+02 3.87295723e+00]
 [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
  2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
  1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
  8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
  5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
  3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
  3.52075079e+00 2.06608813e+02 3.24785426e+00]]
标准化后的train_x = 
[[-1.13087458  0.86315098  0.84558967  0.5873955   1.12234154  0.78420621
  -0.52198996 -0.51411014  0.23817629  0.90122609 -0.73235668  0.24579261
   0.95013655 -0.7098905   0.79822924 -0.77695117 -0.75021472  0.35895799
  -1.08961512  1.15128242 -0.68420703 -0.10827151  0.96080054 -0.40946593
  -1.00757174 -0.60508167  0.9654266 ]
 [ 0.64627221 -1.69200276  0.84558967 -2.70284143 -0.316639   -2.29918025
  -1.61264691 -1.55576497 -1.01166504 -2.12019345  1.22630625  0.26300018
  -2.25836244 -0.7098905  -1.64924959 -0.96394388 -0.75021472 -1.46336032
   1.03493146 -1.23790613 -0.68420703 -0.41473353 -1.76814322  1.71333989
   0.550377    1.55531399 -2.32887219]
 [ 1.5348456   0.86315098 -1.87264454  0.44329753 -1.75561954  0.78420621
   1.65932395 -0.90651436 -1.10093942  0.71994092  2.20563771 -2.66206325
   0.36677309 -0.7098905   0.3903161  -0.02898033 -0.75021472 -1.94255207
   0.49563063 -0.47770977 -0.68420703  2.52915923 -1.76814322 -1.11706787
   2.10832574 -1.35070494 -0.6817228 ]
 [-1.13087458  0.86315098  0.84558967  0.51534652  1.12234154  0.78420621
  -0.52198996 -0.52124476  0.23817629  0.78036931 -0.73235668  0.42994744
   0.95013641 -0.7098905   0.68168263 -0.7769517  -0.75021472  0.32057686
  -0.7293104   1.15128242 -0.68420703 -0.10827151  0.96080054 -0.05566496
  -1.00757174 -0.62420021  0.9654266 ]
 [-1.0198029   0.86315098  0.84558967  0.80354245  1.12234154  0.78420621
  -0.52198996 -0.47130241  0.23817629  0.71994092 -0.73235668  0.3460794
   0.46400008 -0.7098905   0.57679068 -0.40296553 -0.75021472  0.58199708
  -0.70801486  1.04268294 -0.68420703 -0.19185206  0.96080054 -0.05566496
  -1.00757174 -0.58596312  0.9654266 ]
 [-0.35337286  0.86315098  0.84558967  0.17911793 -0.316639   -0.75748702
  -0.52198996 -0.46416779 -0.92239066 -0.24691334  0.24697478 -0.2376928
   0.26954578 -0.7098905   1.49750891  0.71899078 -0.75021472  0.34210993
  -0.57738704 -0.04331185 -0.68420703 -0.09898478  0.96080054  0.65193698
  -1.00757174 -0.22271075 -0.6817228 ]
 [ 1.64372441  0.36076536 -0.07455921 -0.20815238  1.0744507   0.69261638
   0.04848846  1.42629754 -0.5235306  -1.3912722  -0.23946515 -0.29291312
   0.29367032  1.67976623 -0.67639038  0.38722186  1.78502516  1.0028889
   1.0114236   0.48307539  0.65285741 -1.658974   -0.00492878 -1.33997073
   0.22846617 -0.29143003 -0.12176326]
 [-0.17544618 -0.65235623 -0.10185901  0.96525499 -0.21983158 -0.94580272
  -0.55489951  1.53654516  1.95049579  0.36943441 -0.11762775  0.87891719
  -0.45687452  1.45045188 -1.46108134 -1.30921172  0.19495428 -0.67838025
   0.99904062 -0.99866481  0.27001426  0.05724426 -0.22393119 -1.05591839
   0.35067317  0.44022248  0.43510288]
 [ 0.61374763 -1.42758607 -1.60344058 -0.47146648 -1.08382223 -0.29482297
   1.28939186  0.34263021 -0.61762433 -0.52887838 -1.35534137 -0.20493223
  -1.34051102  1.40523067 -0.72922364  1.1584769   1.5925023   0.09087945
   1.19816719 -1.69628961  2.49348588  0.5477115  -0.06706911  0.15771999
   0.9887136   2.04857376  0.75616818]
 [-0.62821875 -0.90457521 -0.575445   -0.11149463 -0.74892396  0.46785176
   1.25830201  1.12763153  1.51112538  0.79634573  0.23058559  1.23386458
   0.76148575 -0.2761058   0.57141738  1.9943148   0.92880659  1.38688243
  -1.63486608  0.62555901  0.68888465 -0.55302761 -0.01098662  1.51075599
  -0.1962687  -0.36401951 -0.2734698 ]]
train_y = 
[   -165.666    -194.423    -220.648    -163.342    -162.804 -100000.
    -164.05     -182.936    -245.931    -184.517]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.13087458  0.86315098  0.84558967  0.5873955   1.12234154  0.78420621
  -0.52198996 -0.51411014  0.23817629  0.90122609 -0.73235668  0.24579261
   0.95013655 -0.7098905   0.79822924 -0.77695117 -0.75021472  0.35895799
  -1.08961512  1.15128242 -0.68420703 -0.10827151  0.96080054 -0.40946593
  -1.00757174 -0.60508167  0.9654266 ]
 [ 0.64627221 -1.69200276  0.84558967 -2.70284143 -0.316639   -2.29918025
  -1.61264691 -1.55576497 -1.01166504 -2.12019345  1.22630625  0.26300018
  -2.25836244 -0.7098905  -1.64924959 -0.96394388 -0.75021472 -1.46336032
   1.03493146 -1.23790613 -0.68420703 -0.41473353 -1.76814322  1.71333989
   0.550377    1.55531399 -2.32887219]
 [ 1.5348456   0.86315098 -1.87264454  0.44329753 -1.75561954  0.78420621
   1.65932395 -0.90651436 -1.10093942  0.71994092  2.20563771 -2.66206325
   0.36677309 -0.7098905   0.3903161  -0.02898033 -0.75021472 -1.94255207
   0.49563063 -0.47770977 -0.68420703  2.52915923 -1.76814322 -1.11706787
   2.10832574 -1.35070494 -0.6817228 ]
 [-1.13087458  0.86315098  0.84558967  0.51534652  1.12234154  0.78420621
  -0.52198996 -0.52124476  0.23817629  0.78036931 -0.73235668  0.42994744
   0.95013641 -0.7098905   0.68168263 -0.7769517  -0.75021472  0.32057686
  -0.7293104   1.15128242 -0.68420703 -0.10827151  0.96080054 -0.05566496
  -1.00757174 -0.62420021  0.9654266 ]
 [-1.0198029   0.86315098  0.84558967  0.80354245  1.12234154  0.78420621
  -0.52198996 -0.47130241  0.23817629  0.71994092 -0.73235668  0.3460794
   0.46400008 -0.7098905   0.57679068 -0.40296553 -0.75021472  0.58199708
  -0.70801486  1.04268294 -0.68420703 -0.19185206  0.96080054 -0.05566496
  -1.00757174 -0.58596312  0.9654266 ]
 [-0.35337286  0.86315098  0.84558967  0.17911793 -0.316639   -0.75748702
  -0.52198996 -0.46416779 -0.92239066 -0.24691334  0.24697478 -0.2376928
   0.26954578 -0.7098905   1.49750891  0.71899078 -0.75021472  0.34210993
  -0.57738704 -0.04331185 -0.68420703 -0.09898478  0.96080054  0.65193698
  -1.00757174 -0.22271075 -0.6817228 ]
 [ 1.64372441  0.36076536 -0.07455921 -0.20815238  1.0744507   0.69261638
   0.04848846  1.42629754 -0.5235306  -1.3912722  -0.23946515 -0.29291312
   0.29367032  1.67976623 -0.67639038  0.38722186  1.78502516  1.0028889
   1.0114236   0.48307539  0.65285741 -1.658974   -0.00492878 -1.33997073
   0.22846617 -0.29143003 -0.12176326]
 [-0.17544618 -0.65235623 -0.10185901  0.96525499 -0.21983158 -0.94580272
  -0.55489951  1.53654516  1.95049579  0.36943441 -0.11762775  0.87891719
  -0.45687452  1.45045188 -1.46108134 -1.30921172  0.19495428 -0.67838025
   0.99904062 -0.99866481  0.27001426  0.05724426 -0.22393119 -1.05591839
   0.35067317  0.44022248  0.43510288]
 [ 0.61374763 -1.42758607 -1.60344058 -0.47146648 -1.08382223 -0.29482297
   1.28939186  0.34263021 -0.61762433 -0.52887838 -1.35534137 -0.20493223
  -1.34051102  1.40523067 -0.72922364  1.1584769   1.5925023   0.09087945
   1.19816719 -1.69628961  2.49348588  0.5477115  -0.06706911  0.15771999
   0.9887136   2.04857376  0.75616818]
 [-0.62821875 -0.90457521 -0.575445   -0.11149463 -0.74892396  0.46785176
   1.25830201  1.12763153  1.51112538  0.79634573  0.23058559  1.23386458
   0.76148575 -0.2761058   0.57141738  1.9943148   0.92880659  1.38688243
  -1.63486608  0.62555901  0.68888465 -0.55302761 -0.01098662  1.51075599
  -0.1962687  -0.36401951 -0.2734698 ]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.13087458  0.86315098  0.84558967  0.5873955   1.12234154  0.78420621
  -0.52198996 -0.51411014  0.23817629  0.90122609 -0.73235668  0.24579261
   0.95013655 -0.7098905   0.79822924 -0.77695117 -0.75021472  0.35895799
  -1.08961512  1.15128242 -0.68420703 -0.10827151  0.96080054 -0.40946593
  -1.00757174 -0.60508167  0.9654266 ]
 [ 0.64627221 -1.69200276  0.84558967 -2.70284143 -0.316639   -2.29918025
  -1.61264691 -1.55576497 -1.01166504 -2.12019345  1.22630625  0.26300018
  -2.25836244 -0.7098905  -1.64924959 -0.96394388 -0.75021472 -1.46336032
   1.03493146 -1.23790613 -0.68420703 -0.41473353 -1.76814322  1.71333989
   0.550377    1.55531399 -2.32887219]
 [ 1.5348456   0.86315098 -1.87264454  0.44329753 -1.75561954  0.78420621
   1.65932395 -0.90651436 -1.10093942  0.71994092  2.20563771 -2.66206325
   0.36677309 -0.7098905   0.3903161  -0.02898033 -0.75021472 -1.94255207
   0.49563063 -0.47770977 -0.68420703  2.52915923 -1.76814322 -1.11706787
   2.10832574 -1.35070494 -0.6817228 ]
 [-1.13087458  0.86315098  0.84558967  0.51534652  1.12234154  0.78420621
  -0.52198996 -0.52124476  0.23817629  0.78036931 -0.73235668  0.42994744
   0.95013641 -0.7098905   0.68168263 -0.7769517  -0.75021472  0.32057686
  -0.7293104   1.15128242 -0.68420703 -0.10827151  0.96080054 -0.05566496
  -1.00757174 -0.62420021  0.9654266 ]
 [-1.0198029   0.86315098  0.84558967  0.80354245  1.12234154  0.78420621
  -0.52198996 -0.47130241  0.23817629  0.71994092 -0.73235668  0.3460794
   0.46400008 -0.7098905   0.57679068 -0.40296553 -0.75021472  0.58199708
  -0.70801486  1.04268294 -0.68420703 -0.19185206  0.96080054 -0.05566496
  -1.00757174 -0.58596312  0.9654266 ]
 [-0.35337286  0.86315098  0.84558967  0.17911793 -0.316639   -0.75748702
  -0.52198996 -0.46416779 -0.92239066 -0.24691334  0.24697478 -0.2376928
   0.26954578 -0.7098905   1.49750891  0.71899078 -0.75021472  0.34210993
  -0.57738704 -0.04331185 -0.68420703 -0.09898478  0.96080054  0.65193698
  -1.00757174 -0.22271075 -0.6817228 ]
 [ 1.64372441  0.36076536 -0.07455921 -0.20815238  1.0744507   0.69261638
   0.04848846  1.42629754 -0.5235306  -1.3912722  -0.23946515 -0.29291312
   0.29367032  1.67976623 -0.67639038  0.38722186  1.78502516  1.0028889
   1.0114236   0.48307539  0.65285741 -1.658974   -0.00492878 -1.33997073
   0.22846617 -0.29143003 -0.12176326]
 [-0.17544618 -0.65235623 -0.10185901  0.96525499 -0.21983158 -0.94580272
  -0.55489951  1.53654516  1.95049579  0.36943441 -0.11762775  0.87891719
  -0.45687452  1.45045188 -1.46108134 -1.30921172  0.19495428 -0.67838025
   0.99904062 -0.99866481  0.27001426  0.05724426 -0.22393119 -1.05591839
   0.35067317  0.44022248  0.43510288]
 [ 0.61374763 -1.42758607 -1.60344058 -0.47146648 -1.08382223 -0.29482297
   1.28939186  0.34263021 -0.61762433 -0.52887838 -1.35534137 -0.20493223
  -1.34051102  1.40523067 -0.72922364  1.1584769   1.5925023   0.09087945
   1.19816719 -1.69628961  2.49348588  0.5477115  -0.06706911  0.15771999
   0.9887136   2.04857376  0.75616818]
 [-0.62821875 -0.90457521 -0.575445   -0.11149463 -0.74892396  0.46785176
   1.25830201  1.12763153  1.51112538  0.79634573  0.23058559  1.23386458
   0.76148575 -0.2761058   0.57141738  1.9943148   0.92880659  1.38688243
  -1.63486608  0.62555901  0.68888465 -0.55302761 -0.01098662  1.51075599
  -0.1962687  -0.36401951 -0.2734698 ]]
upper = 
[6102.11228914 7272.18764415 7140.69885952 ... 6944.6530648  6896.10436821
 6778.25920969]
upper.argmax() = 2590
all predict_target = 
[14407.70751572 10956.22395296 11367.34622891 ... 11925.21613252
 12034.09212406 12444.17079057]
upper.argmax() = 2590, sortnumber[0] = 2590
x_max = [6.15101550e+01 8.36866979e-02 5.09497062e-01 4.25687261e+02
 2.73992689e+00 6.55675297e+00 5.26851460e+00 7.34526047e+02
 8.90445993e+01 1.07538019e+02 6.60885331e+00 1.59807089e+09
 8.62133167e-01 9.05609418e-01 3.46209799e+01 7.05679422e-01
 7.76796616e-01 1.91743966e+09 1.99520910e+09 5.40885761e+01
 8.62151313e-01 5.01415609e+02 3.18592420e-01 3.22981111e+01
 4.87743678e+00 3.14619035e+02 3.45342839e+00]
black_box_function中schafferRun(i) 中的i为[61.51015500162643, 0.0836866978974583, 0.5094970624248876, 425.68726102899507, 2.739926890727286, 6.5567529651911975, 5.268514601333987, 734.5260466349946, 89.0445992706257, 107.53801865048494, 6.608853313259127, 1598070886.617947, 0.8621331669649351, 0.905609417834661, 34.62097992496717, 0.7056794216259026, 0.7767966158318956, 1917439663.1238556, 1995209103.2374797, 54.08857606431624, 0.8621513133840212, 501.41560870602893, 0.3185924201524428, 32.29811106822545, 4.877436776937435, 314.61903455406934, 3.453428393867494]
================= config11 =================
2022年 02月 22日 星期二 17:08:23 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (94121) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (77693) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 61.51015500162643
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.0836866978974583
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.5094970624248876
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 425.68726102899507
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.739926890727286
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.5567529651911975
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.268514601333987
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 734.5260466349946
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 89.0445992706257
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 107.53801865048494
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 6.608853313259127
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1598070886.617947
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8621331669649351
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.905609417834661
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 34.62097992496717
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.7056794216259026
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.7767966158318956
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1917439663.1238556
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1995209103.2374797
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 54.08857606431624
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.8621513133840212
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 501.41560870602893
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.3185924201524428
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 32.29811106822545
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.877436776937435
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 314.61903455406934
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.453428393867494
configNum = 11	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 11 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 61.51015500162643, 'spark.broadcast.checksum': 0.0836866978974583, 'spark.broadcast.compress': 0.5094970624248876, 'spark.default.parallelism': 425.68726102899507, 'spark.executor.cores': 2.739926890727286, 'spark.executor.instances': 6.5567529651911975, 'spark.executor.memory': 5.268514601333987, 'spark.executor.memoryOverhead': 734.5260466349946, 'spark.kryoserializer.buffer': 89.0445992706257, 'spark.kryoserializer.buffer.max': 107.53801865048494, 'spark.locality.wait': 6.608853313259127, 'spark.maxRemoteBlockSizeFetchToMem': 1598070886.617947, 'spark.memory.fraction': 0.8621331669649351, 'spark.memory.offHeap.enabled': 0.905609417834661, 'spark.memory.offHeap.size': 34.62097992496717, 'spark.memory.storageFraction': 0.7056794216259026, 'spark.rdd.compress': 0.7767966158318956, 'spark.reducer.maxBlocksInFlightPerAddress': 1917439663.1238556, 'spark.reducer.maxReqsInFlight': 1995209103.2374797, 'spark.reducer.maxSizeInFlight': 54.08857606431624, 'spark.scheduler.mode': 0.8621513133840212, 'spark.scheduler.revive.interval': 501.41560870602893, 'spark.shuffle.compress': 0.3185924201524428, 'spark.shuffle.file.buffer': 32.29811106822545, 'spark.shuffle.io.numConnectionsPerPeer': 4.877436776937435, 'spark.shuffle.sort.bypassMergeThreshold': 314.61903455406934, 'spark.storage.memoryMapThreshold': 3.453428393867494} target = -222.405
x_probe = {'spark.broadcast.blockSize': 61.51015500162643, 'spark.broadcast.checksum': 0.0836866978974583, 'spark.broadcast.compress': 0.5094970624248876, 'spark.default.parallelism': 425.68726102899507, 'spark.executor.cores': 2.739926890727286, 'spark.executor.instances': 6.5567529651911975, 'spark.executor.memory': 5.268514601333987, 'spark.executor.memoryOverhead': 734.5260466349946, 'spark.kryoserializer.buffer': 89.0445992706257, 'spark.kryoserializer.buffer.max': 107.53801865048494, 'spark.locality.wait': 6.608853313259127, 'spark.maxRemoteBlockSizeFetchToMem': 1598070886.617947, 'spark.memory.fraction': 0.8621331669649351, 'spark.memory.offHeap.enabled': 0.905609417834661, 'spark.memory.offHeap.size': 34.62097992496717, 'spark.memory.storageFraction': 0.7056794216259026, 'spark.rdd.compress': 0.7767966158318956, 'spark.reducer.maxBlocksInFlightPerAddress': 1917439663.1238556, 'spark.reducer.maxReqsInFlight': 1995209103.2374797, 'spark.reducer.maxSizeInFlight': 54.08857606431624, 'spark.scheduler.mode': 0.8621513133840212, 'spark.scheduler.revive.interval': 501.41560870602893, 'spark.shuffle.compress': 0.3185924201524428, 'spark.shuffle.file.buffer': 32.29811106822545, 'spark.shuffle.io.numConnectionsPerPeer': 4.877436776937435, 'spark.shuffle.sort.bypassMergeThreshold': 314.61903455406934, 'spark.storage.memoryMapThreshold': 3.453428393867494}
target = -222.405
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (11, 27)
before probe, target = (11,)
标准化前的train_x = 
[[3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00]
 [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
  2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
  9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
  6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
  7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
  8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
  4.28135496e+00 3.32800068e+02 3.87295723e+00]
 [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
  2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
  1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
  8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
  5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
  3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
  3.52075079e+00 2.06608813e+02 3.24785426e+00]
 [6.15101550e+01 8.36866979e-02 5.09497062e-01 4.25687261e+02
  2.73992689e+00 6.55675297e+00 5.26851460e+00 7.34526047e+02
  8.90445993e+01 1.07538019e+02 6.60885331e+00 1.59807089e+09
  8.62133167e-01 9.05609418e-01 3.46209799e+01 7.05679422e-01
  7.76796616e-01 1.91743966e+09 1.99520910e+09 5.40885761e+01
  8.62151313e-01 5.01415609e+02 3.18592420e-01 3.22981111e+01
  4.87743678e+00 3.14619035e+02 3.45342839e+00]]
标准化后的train_x = 
[[-1.16751543  0.95560592  0.92343274  0.58863013  1.21687343  0.8803735
  -0.60938721 -0.58705068  0.35134437  0.89407518 -0.82233973  0.33267309
   0.91280929 -0.74710692  0.89106468 -0.84069092 -0.84412953  0.25650533
  -0.85342654  1.24379808 -0.75633552  0.04699596  1.05532719 -0.5282425
  -1.07314096 -0.70899122  1.00614291]
 [ 0.39717301 -1.49215984  0.92343274 -2.85101559 -0.26062651 -2.08570715
  -1.7165352  -1.66194701 -0.86087921 -2.24600561  1.16858242  0.35006924
  -2.38387638 -0.74710692 -1.4157882  -0.99711771 -0.84412953 -1.55573441
   0.27968657 -1.22496196 -0.75633552 -0.23734364 -1.70718738  1.06579911
   0.34146982  1.30715868 -2.44828057]
 [ 1.17951722  0.95560592 -1.8971425   0.43798871 -1.73812646  0.8803735
   1.60490877 -0.99197738 -0.94746661  0.70567034  2.1640435  -2.60705038
   0.31341189 -0.74710692  0.5065892  -0.21498377 -0.84412953 -2.03227593
  -0.00794602 -0.4394474  -0.75633552  2.49403979 -1.70718738 -1.0595897
   1.7560806  -1.40483057 -0.72106883]
 [-1.16751543  0.95560592  0.92343274  0.51330942  1.21687343  0.8803735
  -0.60938721 -0.59441299  0.35134437  0.76847195 -0.82233973  0.51884611
   0.91280915 -0.74710692  0.78121454 -0.84069137 -0.84412953  0.21833648
  -0.66126036  1.24379808 -0.75633552  0.04699596  1.05532719 -0.2625689
  -1.07314096 -0.72683326  1.00614291]
 [-1.06972241  0.95560592  0.92343274  0.81459225  1.21687343  0.8803735
  -0.60938721 -0.54287686  0.35134437  0.70567034 -0.82233973  0.43405894
   0.4133112  -0.74710692  0.68234942 -0.52783716 -0.84412953  0.47831089
  -0.64990253  1.13158172 -0.75633552 -0.03055121  1.05532719 -0.2625689
  -1.07314096 -0.69114919  1.00614291]
 [-0.48296424  0.95560592  0.92343274  0.16181278 -0.26062651 -0.60266683
  -0.60938721 -0.53551456 -0.77429182 -0.29915552  0.17312135 -0.1561109
   0.21351226 -0.74710692  1.5501655   0.4107236  -0.84412953  0.23975046
  -0.58023302  0.00941806 -0.75633552  0.05561231  1.05532719  0.26877831
  -1.07314096 -0.35215053 -0.72106883]
 [ 1.27537955  0.47433456 -0.03135958 -0.24304337  1.16770062  0.79226817
  -0.030283    1.41527967 -0.38743666 -1.48845719 -0.32133026 -0.21193639
   0.23829986  1.00786081 -0.49882702  0.1331858   1.51716119  0.89687491
   0.2671488   0.55333654  0.33195753 -1.39176675  0.0777177  -1.22697026
   0.04917617 -0.41628155 -0.13389156]
 [-0.32630874 -0.49620757 -0.05968722  0.98364812 -0.1612277  -0.78381815
  -0.64279436  1.52904553  2.01212643  0.34139826 -0.1974862   0.97273618
  -0.53287396  0.83945199 -1.23843163 -1.2859479   0.03618905 -0.77509577
   0.26054442 -0.97775276  0.02034536  0.20056372 -0.14397882 -1.01367178
   0.1601396   0.26651983  0.45004196]
 [ 0.36853675 -1.23885606 -1.61780306 -0.5183145  -1.04834612 -0.15760458
   1.2293832   0.29703013 -0.47869836 -0.59219428 -1.45558499 -0.1229913
  -1.4407975   0.80624146 -0.54862462  0.7783711   1.3378478  -0.01009057
   0.36674728 -1.69861182  1.83012254  0.65562584  0.01481294 -0.10233545
   0.73947757  1.76748438  0.78671315]
 [-0.72495223 -0.7378263  -0.55110363 -0.14199642 -0.70448311  0.57605459
   1.19782326  1.10708257  1.5859802   0.78507582  0.15646223  1.33157349
   0.71897336 -0.42853475  0.67728485  1.47758251  0.71968992  1.27874471
  -1.1442326   0.70056555  0.36128161 -0.36565476  0.07158534  0.91367631
  -0.33648127 -0.48402435 -0.29297205]
 [ 1.71837196 -1.28731441 -0.4600677   0.25438848 -0.64488452 -1.26002005
   0.79504618  0.56534159 -1.20336707  0.4254507   0.77921112 -0.84186808
   0.63442084  2.25762201 -1.3869967   1.90740583  1.45388924  1.00467392
   2.722874   -0.54172408  1.9943061  -1.47451723 -0.82707118  2.20769375
   1.58270134  1.44309776  0.06209801]]
train_y = 
[   -165.666    -194.423    -220.648    -163.342    -162.804 -100000.
    -164.05     -182.936    -245.931    -184.517    -222.405]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.16751543  0.95560592  0.92343274  0.58863013  1.21687343  0.8803735
  -0.60938721 -0.58705068  0.35134437  0.89407518 -0.82233973  0.33267309
   0.91280929 -0.74710692  0.89106468 -0.84069092 -0.84412953  0.25650533
  -0.85342654  1.24379808 -0.75633552  0.04699596  1.05532719 -0.5282425
  -1.07314096 -0.70899122  1.00614291]
 [ 0.39717301 -1.49215984  0.92343274 -2.85101559 -0.26062651 -2.08570715
  -1.7165352  -1.66194701 -0.86087921 -2.24600561  1.16858242  0.35006924
  -2.38387638 -0.74710692 -1.4157882  -0.99711771 -0.84412953 -1.55573441
   0.27968657 -1.22496196 -0.75633552 -0.23734364 -1.70718738  1.06579911
   0.34146982  1.30715868 -2.44828057]
 [ 1.17951722  0.95560592 -1.8971425   0.43798871 -1.73812646  0.8803735
   1.60490877 -0.99197738 -0.94746661  0.70567034  2.1640435  -2.60705038
   0.31341189 -0.74710692  0.5065892  -0.21498377 -0.84412953 -2.03227593
  -0.00794602 -0.4394474  -0.75633552  2.49403979 -1.70718738 -1.0595897
   1.7560806  -1.40483057 -0.72106883]
 [-1.16751543  0.95560592  0.92343274  0.51330942  1.21687343  0.8803735
  -0.60938721 -0.59441299  0.35134437  0.76847195 -0.82233973  0.51884611
   0.91280915 -0.74710692  0.78121454 -0.84069137 -0.84412953  0.21833648
  -0.66126036  1.24379808 -0.75633552  0.04699596  1.05532719 -0.2625689
  -1.07314096 -0.72683326  1.00614291]
 [-1.06972241  0.95560592  0.92343274  0.81459225  1.21687343  0.8803735
  -0.60938721 -0.54287686  0.35134437  0.70567034 -0.82233973  0.43405894
   0.4133112  -0.74710692  0.68234942 -0.52783716 -0.84412953  0.47831089
  -0.64990253  1.13158172 -0.75633552 -0.03055121  1.05532719 -0.2625689
  -1.07314096 -0.69114919  1.00614291]
 [-0.48296424  0.95560592  0.92343274  0.16181278 -0.26062651 -0.60266683
  -0.60938721 -0.53551456 -0.77429182 -0.29915552  0.17312135 -0.1561109
   0.21351226 -0.74710692  1.5501655   0.4107236  -0.84412953  0.23975046
  -0.58023302  0.00941806 -0.75633552  0.05561231  1.05532719  0.26877831
  -1.07314096 -0.35215053 -0.72106883]
 [ 1.27537955  0.47433456 -0.03135958 -0.24304337  1.16770062  0.79226817
  -0.030283    1.41527967 -0.38743666 -1.48845719 -0.32133026 -0.21193639
   0.23829986  1.00786081 -0.49882702  0.1331858   1.51716119  0.89687491
   0.2671488   0.55333654  0.33195753 -1.39176675  0.0777177  -1.22697026
   0.04917617 -0.41628155 -0.13389156]
 [-0.32630874 -0.49620757 -0.05968722  0.98364812 -0.1612277  -0.78381815
  -0.64279436  1.52904553  2.01212643  0.34139826 -0.1974862   0.97273618
  -0.53287396  0.83945199 -1.23843163 -1.2859479   0.03618905 -0.77509577
   0.26054442 -0.97775276  0.02034536  0.20056372 -0.14397882 -1.01367178
   0.1601396   0.26651983  0.45004196]
 [ 0.36853675 -1.23885606 -1.61780306 -0.5183145  -1.04834612 -0.15760458
   1.2293832   0.29703013 -0.47869836 -0.59219428 -1.45558499 -0.1229913
  -1.4407975   0.80624146 -0.54862462  0.7783711   1.3378478  -0.01009057
   0.36674728 -1.69861182  1.83012254  0.65562584  0.01481294 -0.10233545
   0.73947757  1.76748438  0.78671315]
 [-0.72495223 -0.7378263  -0.55110363 -0.14199642 -0.70448311  0.57605459
   1.19782326  1.10708257  1.5859802   0.78507582  0.15646223  1.33157349
   0.71897336 -0.42853475  0.67728485  1.47758251  0.71968992  1.27874471
  -1.1442326   0.70056555  0.36128161 -0.36565476  0.07158534  0.91367631
  -0.33648127 -0.48402435 -0.29297205]
 [ 1.71837196 -1.28731441 -0.4600677   0.25438848 -0.64488452 -1.26002005
   0.79504618  0.56534159 -1.20336707  0.4254507   0.77921112 -0.84186808
   0.63442084  2.25762201 -1.3869967   1.90740583  1.45388924  1.00467392
   2.722874   -0.54172408  1.9943061  -1.47451723 -0.82707118  2.20769375
   1.58270134  1.44309776  0.06209801]]
================= config12 =================
2022年 02月 22日 星期二 17:12:14 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (102935) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (95985) - 没有那个进程
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.16751543  0.95560592  0.92343274  0.58863013  1.21687343  0.8803735
  -0.60938721 -0.58705068  0.35134437  0.89407518 -0.82233973  0.33267309
   0.91280929 -0.74710692  0.89106468 -0.84069092 -0.84412953  0.25650533
  -0.85342654  1.24379808 -0.75633552  0.04699596  1.05532719 -0.5282425
  -1.07314096 -0.70899122  1.00614291]
 [ 0.39717301 -1.49215984  0.92343274 -2.85101559 -0.26062651 -2.08570715
  -1.7165352  -1.66194701 -0.86087921 -2.24600561  1.16858242  0.35006924
  -2.38387638 -0.74710692 -1.4157882  -0.99711771 -0.84412953 -1.55573441
   0.27968657 -1.22496196 -0.75633552 -0.23734364 -1.70718738  1.06579911
   0.34146982  1.30715868 -2.44828057]
 [ 1.17951722  0.95560592 -1.8971425   0.43798871 -1.73812646  0.8803735
   1.60490877 -0.99197738 -0.94746661  0.70567034  2.1640435  -2.60705038
   0.31341189 -0.74710692  0.5065892  -0.21498377 -0.84412953 -2.03227593
  -0.00794602 -0.4394474  -0.75633552  2.49403979 -1.70718738 -1.0595897
   1.7560806  -1.40483057 -0.72106883]
 [-1.16751543  0.95560592  0.92343274  0.51330942  1.21687343  0.8803735
  -0.60938721 -0.59441299  0.35134437  0.76847195 -0.82233973  0.51884611
   0.91280915 -0.74710692  0.78121454 -0.84069137 -0.84412953  0.21833648
  -0.66126036  1.24379808 -0.75633552  0.04699596  1.05532719 -0.2625689
  -1.07314096 -0.72683326  1.00614291]
 [-1.06972241  0.95560592  0.92343274  0.81459225  1.21687343  0.8803735
  -0.60938721 -0.54287686  0.35134437  0.70567034 -0.82233973  0.43405894
   0.4133112  -0.74710692  0.68234942 -0.52783716 -0.84412953  0.47831089
  -0.64990253  1.13158172 -0.75633552 -0.03055121  1.05532719 -0.2625689
  -1.07314096 -0.69114919  1.00614291]
 [-0.48296424  0.95560592  0.92343274  0.16181278 -0.26062651 -0.60266683
  -0.60938721 -0.53551456 -0.77429182 -0.29915552  0.17312135 -0.1561109
   0.21351226 -0.74710692  1.5501655   0.4107236  -0.84412953  0.23975046
  -0.58023302  0.00941806 -0.75633552  0.05561231  1.05532719  0.26877831
  -1.07314096 -0.35215053 -0.72106883]
 [ 1.27537955  0.47433456 -0.03135958 -0.24304337  1.16770062  0.79226817
  -0.030283    1.41527967 -0.38743666 -1.48845719 -0.32133026 -0.21193639
   0.23829986  1.00786081 -0.49882702  0.1331858   1.51716119  0.89687491
   0.2671488   0.55333654  0.33195753 -1.39176675  0.0777177  -1.22697026
   0.04917617 -0.41628155 -0.13389156]
 [-0.32630874 -0.49620757 -0.05968722  0.98364812 -0.1612277  -0.78381815
  -0.64279436  1.52904553  2.01212643  0.34139826 -0.1974862   0.97273618
  -0.53287396  0.83945199 -1.23843163 -1.2859479   0.03618905 -0.77509577
   0.26054442 -0.97775276  0.02034536  0.20056372 -0.14397882 -1.01367178
   0.1601396   0.26651983  0.45004196]
 [ 0.36853675 -1.23885606 -1.61780306 -0.5183145  -1.04834612 -0.15760458
   1.2293832   0.29703013 -0.47869836 -0.59219428 -1.45558499 -0.1229913
  -1.4407975   0.80624146 -0.54862462  0.7783711   1.3378478  -0.01009057
   0.36674728 -1.69861182  1.83012254  0.65562584  0.01481294 -0.10233545
   0.73947757  1.76748438  0.78671315]
 [-0.72495223 -0.7378263  -0.55110363 -0.14199642 -0.70448311  0.57605459
   1.19782326  1.10708257  1.5859802   0.78507582  0.15646223  1.33157349
   0.71897336 -0.42853475  0.67728485  1.47758251  0.71968992  1.27874471
  -1.1442326   0.70056555  0.36128161 -0.36565476  0.07158534  0.91367631
  -0.33648127 -0.48402435 -0.29297205]
 [ 1.71837196 -1.28731441 -0.4600677   0.25438848 -0.64488452 -1.26002005
   0.79504618  0.56534159 -1.20336707  0.4254507   0.77921112 -0.84186808
   0.63442084  2.25762201 -1.3869967   1.90740583  1.45388924  1.00467392
   2.722874   -0.54172408  1.9943061  -1.47451723 -0.82707118  2.20769375
   1.58270134  1.44309776  0.06209801]]
upper = 
[6883.8942729  6057.10727439 7141.91489028 ... 6966.57644627 6483.93911245
 7662.74513216]
upper.argmax() = 1085
all predict_target = 
[10821.36259503 13208.03618019 10041.44713051 ... 10427.59062232
 11915.39692281  8589.07503105]
upper.argmax() = 1085, sortnumber[0] = 1085
x_max = [4.55570675e+01 6.99522212e-01 7.24155771e-01 4.61385906e+02
 2.60044587e+00 7.96123443e+00 5.35033660e+00 7.56349035e+02
 1.13305626e+02 8.99147968e+01 5.88901166e+00 2.02795725e+09
 7.03530446e-01 3.96170620e-01 1.42677365e+02 6.52349409e-01
 9.14104272e-01 1.86204721e+09 1.44237129e+09 6.84115482e+01
 7.78713223e-01 8.37685058e+02 2.04366581e-01 1.93572884e+01
 1.94185663e+00 2.73258844e+02 2.60495994e+00]
black_box_function中schafferRun(i) 中的i为[45.5570674879536, 0.6995222117507027, 0.7241557714073902, 461.3859059930155, 2.600445867963067, 7.961234431776733, 5.350336602133374, 756.3490354847936, 113.30562596269314, 89.91479680944182, 5.88901166342568, 2027957246.7748785, 0.7035304459823646, 0.3961706202937373, 142.67736455579973, 0.6523494086148022, 0.9141042721737792, 1862047212.8484643, 1442371286.7338047, 68.41154823650236, 0.778713223026741, 837.6850578522669, 0.20436658068089875, 19.357288430913158, 1.9418566331652345, 273.25884354397147, 2.604959940719593]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 45.5570674879536
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.6995222117507027
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.7241557714073902
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 461.3859059930155
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.600445867963067
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 7.961234431776733
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.350336602133374
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 756.3490354847936
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 113.30562596269314
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 89.91479680944182
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 5.88901166342568
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2027957246.7748785
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7035304459823646
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.3961706202937373
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 142.67736455579973
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6523494086148022
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.9141042721737792
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1862047212.8484643
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1442371286.7338047
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 68.41154823650236
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.778713223026741
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 837.6850578522669
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.20436658068089875
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 19.357288430913158
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1.9418566331652345
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 273.25884354397147
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.604959940719593
configNum = 12	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 12 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 45.5570674879536, 'spark.broadcast.checksum': 0.6995222117507027, 'spark.broadcast.compress': 0.7241557714073902, 'spark.default.parallelism': 461.3859059930155, 'spark.executor.cores': 2.600445867963067, 'spark.executor.instances': 7.961234431776733, 'spark.executor.memory': 5.350336602133374, 'spark.executor.memoryOverhead': 756.3490354847936, 'spark.kryoserializer.buffer': 113.30562596269314, 'spark.kryoserializer.buffer.max': 89.91479680944182, 'spark.locality.wait': 5.88901166342568, 'spark.maxRemoteBlockSizeFetchToMem': 2027957246.7748785, 'spark.memory.fraction': 0.7035304459823646, 'spark.memory.offHeap.enabled': 0.3961706202937373, 'spark.memory.offHeap.size': 142.67736455579973, 'spark.memory.storageFraction': 0.6523494086148022, 'spark.rdd.compress': 0.9141042721737792, 'spark.reducer.maxBlocksInFlightPerAddress': 1862047212.8484643, 'spark.reducer.maxReqsInFlight': 1442371286.7338047, 'spark.reducer.maxSizeInFlight': 68.41154823650236, 'spark.scheduler.mode': 0.778713223026741, 'spark.scheduler.revive.interval': 837.6850578522669, 'spark.shuffle.compress': 0.20436658068089875, 'spark.shuffle.file.buffer': 19.357288430913158, 'spark.shuffle.io.numConnectionsPerPeer': 1.9418566331652345, 'spark.shuffle.sort.bypassMergeThreshold': 273.25884354397147, 'spark.storage.memoryMapThreshold': 2.604959940719593} target = -181.266
x_probe = {'spark.broadcast.blockSize': 45.5570674879536, 'spark.broadcast.checksum': 0.6995222117507027, 'spark.broadcast.compress': 0.7241557714073902, 'spark.default.parallelism': 461.3859059930155, 'spark.executor.cores': 2.600445867963067, 'spark.executor.instances': 7.961234431776733, 'spark.executor.memory': 5.350336602133374, 'spark.executor.memoryOverhead': 756.3490354847936, 'spark.kryoserializer.buffer': 113.30562596269314, 'spark.kryoserializer.buffer.max': 89.91479680944182, 'spark.locality.wait': 5.88901166342568, 'spark.maxRemoteBlockSizeFetchToMem': 2027957246.7748785, 'spark.memory.fraction': 0.7035304459823646, 'spark.memory.offHeap.enabled': 0.3961706202937373, 'spark.memory.offHeap.size': 142.67736455579973, 'spark.memory.storageFraction': 0.6523494086148022, 'spark.rdd.compress': 0.9141042721737792, 'spark.reducer.maxBlocksInFlightPerAddress': 1862047212.8484643, 'spark.reducer.maxReqsInFlight': 1442371286.7338047, 'spark.reducer.maxSizeInFlight': 68.41154823650236, 'spark.scheduler.mode': 0.778713223026741, 'spark.scheduler.revive.interval': 837.6850578522669, 'spark.shuffle.compress': 0.20436658068089875, 'spark.shuffle.file.buffer': 19.357288430913158, 'spark.shuffle.io.numConnectionsPerPeer': 1.9418566331652345, 'spark.shuffle.sort.bypassMergeThreshold': 273.25884354397147, 'spark.storage.memoryMapThreshold': 2.604959940719593}
target = -181.266
1232s

gan_random方法获取的参数:	 base = 6	 n = 6	 type = bo_result	 bo_res_df = 
       runtime  ...  spark.storage.memoryMapThreshold
1      165.666  ...                          4.000000
2      194.423  ...                          2.000000
3      220.648  ...                          3.000000
4      163.342  ...                          4.000000
5      162.804  ...                          4.000000
6   100000.000  ...                          3.000000
7      164.050  ...                          3.339957
8      182.936  ...                          3.678035
9      245.931  ...                          3.872957
10     184.517  ...                          3.247854
11     222.405  ...                          3.453428
12     181.266  ...                          2.604960

[12 rows x 28 columns]
iterations = 1
GAN的训练样本个数和生成样本个数都为 = 3 ， GAN使用的训练样本为
    spark.broadcast.blockSize  ...     runtime
0                   33.000000  ...     162.804
1                   32.000000  ...     163.342
2                   56.980257  ...     164.050
3                   32.000000  ...     165.666
4                   45.557067  ...     181.266
5                   40.601909  ...     182.936
6                   36.525509  ...     184.517
7                   48.000000  ...     194.423
8                   56.000000  ...     220.648
9                   61.510155  ...     222.405
10                  47.707175  ...     245.931
11                  39.000000  ...  100000.000

[12 rows x 28 columns]
train_df_all中的bestconfig为   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                       33.0  ...                               4.0

[1 rows x 27 columns]
   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                    -0.9375  ...                               1.0

[1 rows x 27 columns]
traindata.shape:(1, 27)
traindata.count_value:18.502174552989583
0
2000
Epoch: 0 Loss D.: 0.09254157543182373
Epoch: 0 Loss G.: 18.42377636255084
tensor(18.2257, dtype=torch.float64, grad_fn=<DivBackward0>)
1
2000
Epoch: 1 Loss D.: 0.004682779312133789
Epoch: 1 Loss G.: 17.828699445811495
tensor(18.1837, dtype=torch.float64, grad_fn=<DivBackward0>)
2
2000
Epoch: 2 Loss D.: 0.007735848426818848
Epoch: 2 Loss G.: 18.582055433181505
tensor(17.8835, dtype=torch.float64, grad_fn=<DivBackward0>)
3
2000
Epoch: 3 Loss D.: 0.011009186506271362
Epoch: 3 Loss G.: 17.79424944938479
tensor(17.7756, dtype=torch.float64, grad_fn=<DivBackward0>)
4
2000
Epoch: 4 Loss D.: -0.0008291006088256836
Epoch: 4 Loss G.: 18.478166264010056
tensor(17.6006, dtype=torch.float64, grad_fn=<DivBackward0>)
5
2000
Epoch: 5 Loss D.: 0.007940173149108887
Epoch: 5 Loss G.: 17.03022878849266
tensor(17.8385, dtype=torch.float64, grad_fn=<DivBackward0>)
6
2000
Epoch: 6 Loss D.: 0.0033447742462158203
Epoch: 6 Loss G.: 18.598172347786292
tensor(17.5097, dtype=torch.float64, grad_fn=<DivBackward0>)
7
2000
Epoch: 7 Loss D.: 0.0007781386375427246
Epoch: 7 Loss G.: 17.502931921271067
tensor(17.2960, dtype=torch.float64, grad_fn=<DivBackward0>)
8
2000
Epoch: 8 Loss D.: -0.0022252798080444336
Epoch: 8 Loss G.: 17.41191267547516
tensor(17.3396, dtype=torch.float64, grad_fn=<DivBackward0>)
9
2000
Epoch: 9 Loss D.: -0.0013539791107177734
Epoch: 9 Loss G.: 17.41234197886048
tensor(17.2121, dtype=torch.float64, grad_fn=<DivBackward0>)
10
2000
Epoch: 10 Loss D.: 0.005956053733825684
Epoch: 10 Loss G.: 17.739964576897606
tensor(16.8026, dtype=torch.float64, grad_fn=<DivBackward0>)
11
2000
Epoch: 11 Loss D.: 0.0014169812202453613
Epoch: 11 Loss G.: 17.216663466094445
tensor(16.6130, dtype=torch.float64, grad_fn=<DivBackward0>)
12
2000
Epoch: 12 Loss D.: -0.007935285568237305
Epoch: 12 Loss G.: 15.824734470134986
tensor(16.4537, dtype=torch.float64, grad_fn=<DivBackward0>)
13
2000
Epoch: 13 Loss D.: 0.003785252571105957
Epoch: 13 Loss G.: 16.36284521713705
tensor(16.7813, dtype=torch.float64, grad_fn=<DivBackward0>)
14
2000
Epoch: 14 Loss D.: 0.003909647464752197
Epoch: 14 Loss G.: 16.36900899771453
tensor(16.6157, dtype=torch.float64, grad_fn=<DivBackward0>)
15
2000
Epoch: 15 Loss D.: 0.001931905746459961
Epoch: 15 Loss G.: 15.262735466001017
tensor(16.3598, dtype=torch.float64, grad_fn=<DivBackward0>)
16
2000
Epoch: 16 Loss D.: 0.0027137398719787598
Epoch: 16 Loss G.: 16.369753864122018
tensor(15.6786, dtype=torch.float64, grad_fn=<DivBackward0>)
17
2000
Epoch: 17 Loss D.: -0.0011081099510192871
Epoch: 17 Loss G.: 16.16140162804483
tensor(15.6061, dtype=torch.float64, grad_fn=<DivBackward0>)
18
2000
Epoch: 18 Loss D.: -0.0003688335418701172
Epoch: 18 Loss G.: 15.8802413572496
tensor(15.3494, dtype=torch.float64, grad_fn=<DivBackward0>)
19
2000
Epoch: 19 Loss D.: -0.004260122776031494
Epoch: 19 Loss G.: 16.2269238871461
tensor(15.1912, dtype=torch.float64, grad_fn=<DivBackward0>)
20
2000
Epoch: 20 Loss D.: 0.0027771592140197754
Epoch: 20 Loss G.: 14.6152279025674
tensor(15.2490, dtype=torch.float64, grad_fn=<DivBackward0>)
21
2000
Epoch: 21 Loss D.: -0.004778504371643066
Epoch: 21 Loss G.: 14.796200864476544
tensor(14.8673, dtype=torch.float64, grad_fn=<DivBackward0>)
22
2000
Epoch: 22 Loss D.: 0.0010368824005126953
Epoch: 22 Loss G.: 14.899844633674634
tensor(14.7896, dtype=torch.float64, grad_fn=<DivBackward0>)
23
2000
Epoch: 23 Loss D.: 0.0030294060707092285
Epoch: 23 Loss G.: 14.62306679086147
tensor(14.5269, dtype=torch.float64, grad_fn=<DivBackward0>)
24
2000
Epoch: 24 Loss D.: 0.001397848129272461
Epoch: 24 Loss G.: 13.211825745684488
tensor(14.0053, dtype=torch.float64, grad_fn=<DivBackward0>)
25
2000
Epoch: 25 Loss D.: 0.011861681938171387
Epoch: 25 Loss G.: 13.945537593675239
tensor(14.4113, dtype=torch.float64, grad_fn=<DivBackward0>)
26
2000
Epoch: 26 Loss D.: 0.0047896504402160645
Epoch: 26 Loss G.: 13.58587430815996
tensor(14.0751, dtype=torch.float64, grad_fn=<DivBackward0>)
27
2000
Epoch: 27 Loss D.: 0.011248528957366943
Epoch: 27 Loss G.: 13.457253706169707
tensor(13.5468, dtype=torch.float64, grad_fn=<DivBackward0>)
28
2000
Epoch: 28 Loss D.: 0.01305803656578064
Epoch: 28 Loss G.: 13.707706995767934
tensor(13.0918, dtype=torch.float64, grad_fn=<DivBackward0>)
29
2000
Epoch: 29 Loss D.: 0.008727788925170898
Epoch: 29 Loss G.: 13.650487052536024
tensor(12.7820, dtype=torch.float64, grad_fn=<DivBackward0>)
30
2000
Epoch: 30 Loss D.: 0.009706616401672363
Epoch: 30 Loss G.: 9.605627216957426
tensor(12.7263, dtype=torch.float64, grad_fn=<DivBackward0>)
31
2000
Epoch: 31 Loss D.: -0.00403285026550293
Epoch: 31 Loss G.: 13.077449491506828
tensor(11.5760, dtype=torch.float64, grad_fn=<DivBackward0>)
32
2000
Epoch: 32 Loss D.: -0.0006289482116699219
Epoch: 32 Loss G.: 9.912220252937091
tensor(11.9321, dtype=torch.float64, grad_fn=<DivBackward0>)
33
2000
Epoch: 33 Loss D.: 0.004822909832000732
Epoch: 33 Loss G.: 10.81959684968592
tensor(12.6786, dtype=torch.float64, grad_fn=<DivBackward0>)
34
2000
Epoch: 34 Loss D.: -0.017512142658233643
Epoch: 34 Loss G.: 9.51682578078649
tensor(10.3410, dtype=torch.float64, grad_fn=<DivBackward0>)
35
2000
Epoch: 35 Loss D.: -0.00011670589447021484
Epoch: 35 Loss G.: 11.84701787726341
tensor(10.2786, dtype=torch.float64, grad_fn=<DivBackward0>)
36
2000
Epoch: 36 Loss D.: 0.0004100203514099121
Epoch: 36 Loss G.: 9.782696454413152
tensor(9.6801, dtype=torch.float64, grad_fn=<DivBackward0>)
37
2000
Epoch: 37 Loss D.: 0.001492142677307129
Epoch: 37 Loss G.: 11.379663713580383
tensor(9.1352, dtype=torch.float64, grad_fn=<DivBackward0>)
38
2000
Epoch: 38 Loss D.: 0.003197908401489258
Epoch: 38 Loss G.: 7.9817541880283915
tensor(11.3118, dtype=torch.float64, grad_fn=<DivBackward0>)
39
2000
Epoch: 39 Loss D.: 0.0028023123741149902
Epoch: 39 Loss G.: 7.792745991833425
tensor(9.8606, dtype=torch.float64, grad_fn=<DivBackward0>)
40
2000
Epoch: 40 Loss D.: 3.898143768310547e-05
Epoch: 40 Loss G.: 7.951825785674072
tensor(9.0097, dtype=torch.float64, grad_fn=<DivBackward0>)
41
2000
Epoch: 41 Loss D.: 0.0007744431495666504
Epoch: 41 Loss G.: 8.914606631682329
tensor(7.7273, dtype=torch.float64, grad_fn=<DivBackward0>)
42
2000
Epoch: 42 Loss D.: 0.008851826190948486
Epoch: 42 Loss G.: 14.881460814064754
tensor(8.0368, dtype=torch.float64, grad_fn=<DivBackward0>)
43
2000
Epoch: 43 Loss D.: 0.003726482391357422
Epoch: 43 Loss G.: 7.325525966231016
tensor(8.1585, dtype=torch.float64, grad_fn=<DivBackward0>)
44
2000
Epoch: 44 Loss D.: 0.004962146282196045
Epoch: 44 Loss G.: 6.3651921667530305
tensor(8.4685, dtype=torch.float64, grad_fn=<DivBackward0>)
45
2000
Epoch: 45 Loss D.: -0.008519887924194336
Epoch: 45 Loss G.: 6.785519483722664
tensor(8.7521, dtype=torch.float64, grad_fn=<DivBackward0>)
46
2000
Epoch: 46 Loss D.: -0.006053745746612549
Epoch: 46 Loss G.: 12.812946320039613
tensor(8.0056, dtype=torch.float64, grad_fn=<DivBackward0>)
47
2000
Epoch: 47 Loss D.: 0.013935893774032593
Epoch: 47 Loss G.: 5.868228675289937
tensor(7.0658, dtype=torch.float64, grad_fn=<DivBackward0>)
48
2000
Epoch: 48 Loss D.: 0.0070146918296813965
Epoch: 48 Loss G.: 5.513741041912623
tensor(7.3578, dtype=torch.float64, grad_fn=<DivBackward0>)
49
2000
Epoch: 49 Loss D.: -0.0010825395584106445
Epoch: 49 Loss G.: 6.283955241336413
tensor(6.5684, dtype=torch.float64, grad_fn=<DivBackward0>)
50
2000
Epoch: 50 Loss D.: -0.011848688125610352
Epoch: 50 Loss G.: 5.178040675336112
tensor(5.4651, dtype=torch.float64, grad_fn=<DivBackward0>)
51
2000
Epoch: 51 Loss D.: 0.004827320575714111
Epoch: 51 Loss G.: 9.741810631699323
tensor(6.0787, dtype=torch.float64, grad_fn=<DivBackward0>)
52
2000
Epoch: 52 Loss D.: 0.0032921433448791504
Epoch: 52 Loss G.: 4.736470631374904
tensor(6.0323, dtype=torch.float64, grad_fn=<DivBackward0>)
53
2000
Epoch: 53 Loss D.: 0.00386732816696167
Epoch: 53 Loss G.: 3.9607971562584128
tensor(4.5905, dtype=torch.float64, grad_fn=<DivBackward0>)
54
2000
Epoch: 54 Loss D.: -0.0015497803688049316
Epoch: 54 Loss G.: 6.801591761869771
tensor(4.8617, dtype=torch.float64, grad_fn=<DivBackward0>)
55
2000
Epoch: 55 Loss D.: 0.003898143768310547
Epoch: 55 Loss G.: 5.198696105068933
tensor(4.6283, dtype=torch.float64, grad_fn=<DivBackward0>)
56
2000
Epoch: 56 Loss D.: 0.004494309425354004
Epoch: 56 Loss G.: 3.550599029815209
tensor(5.2570, dtype=torch.float64, grad_fn=<DivBackward0>)
57
2000
Epoch: 57 Loss D.: 0.004391074180603027
Epoch: 57 Loss G.: 2.889594859249806
tensor(5.8393, dtype=torch.float64, grad_fn=<DivBackward0>)
58
2000
Epoch: 58 Loss D.: 0.008090674877166748
Epoch: 58 Loss G.: 4.2685491128623605
tensor(5.1213, dtype=torch.float64, grad_fn=<DivBackward0>)
59
2000
Epoch: 59 Loss D.: 0.005864381790161133
Epoch: 59 Loss G.: 6.964950249058587
tensor(3.8220, dtype=torch.float64, grad_fn=<DivBackward0>)
60
2000
Epoch: 60 Loss D.: 0.006347060203552246
Epoch: 60 Loss G.: 3.534283751063132
tensor(4.8358, dtype=torch.float64, grad_fn=<DivBackward0>)
61
2000
Epoch: 61 Loss D.: 0.0068035125732421875
Epoch: 61 Loss G.: 2.285642305250974
tensor(4.1526, dtype=torch.float64, grad_fn=<DivBackward0>)
62
2000
Epoch: 62 Loss D.: -0.0010186433792114258
Epoch: 62 Loss G.: 6.5951936482066085
tensor(4.6727, dtype=torch.float64, grad_fn=<DivBackward0>)
63
2000
Epoch: 63 Loss D.: -0.006113409996032715
Epoch: 63 Loss G.: 4.367866137492077
tensor(4.9533, dtype=torch.float64, grad_fn=<DivBackward0>)
64
2000
Epoch: 64 Loss D.: 0.005911409854888916
Epoch: 64 Loss G.: 10.615048397791965
tensor(4.4490, dtype=torch.float64, grad_fn=<DivBackward0>)
65
2000
Epoch: 65 Loss D.: 0.0011454224586486816
Epoch: 65 Loss G.: 4.174966661518824
tensor(3.8592, dtype=torch.float64, grad_fn=<DivBackward0>)
66
2000
Epoch: 66 Loss D.: 0.005678534507751465
Epoch: 66 Loss G.: 2.9862179076810556
tensor(4.1375, dtype=torch.float64, grad_fn=<DivBackward0>)
67
2000
Epoch: 67 Loss D.: 0.011790096759796143
Epoch: 67 Loss G.: 3.089690511331967
tensor(4.3637, dtype=torch.float64, grad_fn=<DivBackward0>)
68
2000
Epoch: 68 Loss D.: 0.008614540100097656
Epoch: 68 Loss G.: 2.1580751282334436
tensor(4.1896, dtype=torch.float64, grad_fn=<DivBackward0>)
69
2000
Epoch: 69 Loss D.: 0.00342714786529541
Epoch: 69 Loss G.: 3.0868472654680525
tensor(4.6052, dtype=torch.float64, grad_fn=<DivBackward0>)
70
2000
Epoch: 70 Loss D.: 0.0037426352500915527
Epoch: 70 Loss G.: 1.447547074290697
tensor(4.3520, dtype=torch.float64, grad_fn=<DivBackward0>)
71
2000
Epoch: 71 Loss D.: 0.006699681282043457
Epoch: 71 Loss G.: 5.493308653795708
tensor(2.5415, dtype=torch.float64, grad_fn=<DivBackward0>)
72
2000
Epoch: 72 Loss D.: 0.004624903202056885
Epoch: 72 Loss G.: 2.0162297221348524
tensor(4.1859, dtype=torch.float64, grad_fn=<DivBackward0>)
73
2000
Epoch: 73 Loss D.: 0.007327258586883545
Epoch: 73 Loss G.: 6.535580828326362
tensor(2.4776, dtype=torch.float64, grad_fn=<DivBackward0>)
74
2000
Epoch: 74 Loss D.: 0.0033854246139526367
Epoch: 74 Loss G.: 2.258487970940852
tensor(4.0196, dtype=torch.float64, grad_fn=<DivBackward0>)
75
2000
Epoch: 75 Loss D.: 0.005308568477630615
Epoch: 75 Loss G.: 1.1662915383914993
tensor(3.4683, dtype=torch.float64, grad_fn=<DivBackward0>)
76
2000
Epoch: 76 Loss D.: -0.0050460100173950195
Epoch: 76 Loss G.: 1.9790997720883128
tensor(3.3874, dtype=torch.float64, grad_fn=<DivBackward0>)
77
2000
Epoch: 77 Loss D.: -0.003986775875091553
Epoch: 77 Loss G.: 2.685143499784255
tensor(2.7851, dtype=torch.float64, grad_fn=<DivBackward0>)
78
2000
Epoch: 78 Loss D.: 0.006869077682495117
Epoch: 78 Loss G.: 4.340575345320089
tensor(2.5634, dtype=torch.float64, grad_fn=<DivBackward0>)
79
2000
Epoch: 79 Loss D.: -0.0006450414657592773
Epoch: 79 Loss G.: 5.4320558295970995
tensor(4.1263, dtype=torch.float64, grad_fn=<DivBackward0>)
80
2000
Epoch: 80 Loss D.: -0.0014867782592773438
Epoch: 80 Loss G.: 2.5871168784175484
tensor(3.1295, dtype=torch.float64, grad_fn=<DivBackward0>)
81
2000
Epoch: 81 Loss D.: 0.008021235466003418
Epoch: 81 Loss G.: 2.267542560113056
tensor(3.0222, dtype=torch.float64, grad_fn=<DivBackward0>)
82
2000
Epoch: 82 Loss D.: 0.007320702075958252
Epoch: 82 Loss G.: 2.9602490987320627
tensor(2.3612, dtype=torch.float64, grad_fn=<DivBackward0>)
83
2000
Epoch: 83 Loss D.: -0.00035756826400756836
Epoch: 83 Loss G.: 1.7942599957360985
tensor(3.2966, dtype=torch.float64, grad_fn=<DivBackward0>)
84
2000
Epoch: 84 Loss D.: -0.001110374927520752
Epoch: 84 Loss G.: 1.861871753998017
tensor(2.8320, dtype=torch.float64, grad_fn=<DivBackward0>)
85
2000
Epoch: 85 Loss D.: 0.001217186450958252
Epoch: 85 Loss G.: 1.5147976115484918
tensor(2.3992, dtype=torch.float64, grad_fn=<DivBackward0>)
86
2000
Epoch: 86 Loss D.: 0.011163920164108276
Epoch: 86 Loss G.: 2.2991714480956276
tensor(2.6456, dtype=torch.float64, grad_fn=<DivBackward0>)
87
2000
Epoch: 87 Loss D.: 0.0004830360412597656
Epoch: 87 Loss G.: 1.696566023118711
tensor(2.6459, dtype=torch.float64, grad_fn=<DivBackward0>)
88
2000
Epoch: 88 Loss D.: 0.001601099967956543
Epoch: 88 Loss G.: 4.398505939729429
tensor(2.1797, dtype=torch.float64, grad_fn=<DivBackward0>)
89
2000
Epoch: 89 Loss D.: -0.0003725886344909668
Epoch: 89 Loss G.: 2.895843664443505
tensor(2.7206, dtype=torch.float64, grad_fn=<DivBackward0>)
90
2000
Epoch: 90 Loss D.: 0.005388498306274414
Epoch: 90 Loss G.: 2.0217644687056664
tensor(2.5184, dtype=torch.float64, grad_fn=<DivBackward0>)
91
2000
Epoch: 91 Loss D.: 0.011764109134674072
Epoch: 91 Loss G.: 4.388424678033602
tensor(2.3460, dtype=torch.float64, grad_fn=<DivBackward0>)
在第91轮收敛
----------------第0轮的原数据---------------------
         range  dissimilarity_value  ...  Euclidean_distance    distance
0     0.003834             0.017256  ...            0.527709  109.393049
1     0.005119             0.032909  ...            1.017026   29.759633
2     0.005423             0.023755  ...            0.590238   71.086224
3     0.006281             0.008035  ...            0.309582  401.259728
4     0.007020             0.019248  ...            0.588807   87.850025
..         ...                  ...  ...                 ...         ...
195  11.183161             0.044694  ...            1.115499   20.029235
196  14.231700             0.046816  ...            1.182033   18.056315
197  14.338168             0.040920  ...            1.256955   19.415612
198  14.461033             0.042744  ...            1.223352   19.093557
199  14.495220             0.047216  ...            1.250994   16.913092

[200 rows x 5 columns]
-----------------按照dissimilarity_value排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    2.168                0.007         0.997               0.333   454.643
1    0.072                0.007         0.996               0.412   364.389
2    0.069                0.007         0.997               0.348   385.426
3    2.108                0.008         0.998               0.219   589.015
4    0.006                0.008         0.998               0.310   401.260
..     ...                  ...           ...                 ...       ...
195  0.170                0.074         0.991               1.326    10.129
196  0.437                0.076         0.983               1.451     8.861
197  0.257                0.079         0.993               1.469     8.568
198  0.463                0.082         0.985               1.651     7.309
199  0.447                0.086         0.988               1.669     6.902

[200 rows x 5 columns]
-----------------按照range排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     0.004                0.017         0.996               0.528   109.393
1     0.005                0.033         0.996               1.017    29.760
2     0.005                0.024         0.997               0.590    71.086
3     0.006                0.008         0.998               0.310   401.260
4     0.007                0.019         0.996               0.589    87.850
..      ...                  ...           ...                 ...       ...
195  11.183                0.045         0.999               1.115    20.029
196  14.232                0.047         0.999               1.182    18.056
197  14.338                0.041         0.999               1.257    19.416
198  14.461                0.043         0.998               1.223    19.094
199  14.495                0.047         0.999               1.251    16.913

[200 rows x 5 columns]
-----------------按照cos_distance排序----------
      range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0     0.437                0.076         0.983               1.451     8.861
1     0.463                0.082         0.985               1.651     7.309
2     0.193                0.051         0.985               1.322    14.487
3     0.457                0.049         0.986               1.251    16.122
4     0.447                0.086         0.988               1.669     6.902
..      ...                  ...           ...                 ...       ...
195   6.968                0.019         0.999               0.454   113.900
196   6.924                0.021         0.999               0.460   105.601
197   6.691                0.020         0.999               0.366   135.546
198   9.871                0.028         0.999               0.704    50.252
199  14.495                0.047         0.999               1.251    16.913

[200 rows x 5 columns]
-----------------按照Euclidean_distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    0.118                0.008         0.999               0.196   651.958
1    4.179                0.012         0.999               0.205   409.036
2    2.108                0.008         0.998               0.219   589.015
3    4.231                0.011         0.998               0.227   417.748
4    2.305                0.012         0.998               0.236   366.718
..     ...                  ...           ...                 ...       ...
195  0.170                0.074         0.991               1.326    10.129
196  0.437                0.076         0.983               1.451     8.861
197  0.257                0.079         0.993               1.469     8.568
198  0.463                0.082         0.985               1.651     7.309
199  0.447                0.086         0.988               1.669     6.902

[200 rows x 5 columns]
-----------------按照distance排序----------
     range  dissimilarity_value  cos_distance  Euclidean_distance  distance
0    0.118                0.008         0.999               0.196   651.958
1    2.108                0.008         0.998               0.219   589.015
2    2.168                0.007         0.997               0.333   454.643
3    0.190                0.009         0.998               0.266   436.349
4    4.231                0.011         0.998               0.227   417.748
..     ...                  ...           ...                 ...       ...
195  0.170                0.074         0.991               1.326    10.129
196  0.437                0.076         0.983               1.451     8.861
197  0.257                0.079         0.993               1.469     8.568
198  0.463                0.082         0.985               1.651     7.309
199  0.447                0.086         0.988               1.669     6.902

[200 rows x 5 columns]
   distance
0   651.958
1   589.015
2   454.643
3   162.961
4   162.707
5   161.898
6     8.568
7     7.309
8     6.902
   distance
0   651.958
1   162.961
2     6.902
3   589.015
4   162.707
5     7.309
6   454.643
7   161.898
8     8.568
sgan数据生成时间花费为：3.34
================= config13 =================
2022年 02月 22日 星期二 17:15:27 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (108023) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (107828) - 没有那个进程
================= config14 =================
2022年 02月 22日 星期二 17:18:16 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (122863) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (123187) - 没有那个进程
GAN网络的生成数据generate_data为   spark.broadcast.blockSize  ...  spark.storage.memoryMapThreshold
0                       33.0  ...                               4.0
1                       36.0  ...                               4.0
2                       39.0  ...                               3.0
3                       34.0  ...                               4.0
4                       33.0  ...                               4.0
5                       41.0  ...                               3.0
6                       34.0  ...                               4.0
7                       32.0  ...                               4.0
8                       39.0  ...                               3.0

[9 rows x 27 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 33.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 453.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 574.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 106.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 112.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1903390720.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8399999737739563
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 216.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5600000023841858
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1831726080.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1514585984.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 69.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 650.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 22.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 193.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4.0
configNum = 13	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 13 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       33.0  ...  160.548

[1 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 36.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 438.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 8.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 576.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 105.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 114.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 5.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1855106048.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8399999737739563
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 221.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5699999928474426
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1810260224.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1501312000.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 71.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 655.0
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 21.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 204.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 4.0
configNum = 14	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 14 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       36.0  ...  169.925

[1 rows x 28 columns]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 39.0
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 429.0
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 7.0
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.0
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 570.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 96.0
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 101.0
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 6.0
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1736756224.0
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7699999809265137
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 279.0
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6299999952316284
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1733023232.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1566535424.0
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 62.0
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.0
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 676.0
================= config15 =================
2022年 02月 22日 星期二 17:21:15 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (135794) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (147786) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 1.0
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 26.0
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.0
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 231.0
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.0
configNum = 15	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 15 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
   spark.broadcast.blockSize  ...  runtime
0                       39.0  ...  213.518

[1 rows x 28 columns]
训练样本 + gan生成的样本存入dataset 
    spark.broadcast.blockSize  ...     runtime
0                   33.000000  ...     162.804
1                   32.000000  ...     163.342
2                   56.980257  ...     164.050
3                   32.000000  ...     165.666
4                   45.557067  ...     181.266
5                   40.601909  ...     182.936
6                   36.525509  ...     184.517
7                   48.000000  ...     194.423
8                   56.000000  ...     220.648
9                   61.510155  ...     222.405
10                  47.707175  ...     245.931
11                  39.000000  ...  100000.000
12                  33.000000  ...     160.548
13                  36.000000  ...     169.925
14                  39.000000  ...     213.518

[15 rows x 28 columns]
选择50%rs和50%gan的所有样本作为bo算法的初始样本,样本个数为:15
iterations = 1	 传给bo的初始样本initsamples为 
[[3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00 1.62804000e+02]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00 1.63342000e+02]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00 1.64050000e+02]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00 1.65666000e+02]
 [4.55570675e+01 6.99522212e-01 7.24155771e-01 4.61385906e+02
  2.60044587e+00 7.96123443e+00 5.35033660e+00 7.56349035e+02
  1.13305626e+02 8.99147968e+01 5.88901166e+00 2.02795725e+09
  7.03530446e-01 3.96170620e-01 1.42677365e+02 6.52349409e-01
  9.14104272e-01 1.86204721e+09 1.44237129e+09 6.84115482e+01
  7.78713223e-01 8.37685058e+02 2.04366581e-01 1.93572884e+01
  1.94185663e+00 2.73258844e+02 2.60495994e+00 1.81266000e+02]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00 1.82936000e+02]
 [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
  2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
  1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
  8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
  5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
  3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
  3.52075079e+00 2.06608813e+02 3.24785426e+00 1.84517000e+02]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00 1.94423000e+02]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00 2.20648000e+02]
 [6.15101550e+01 8.36866979e-02 5.09497062e-01 4.25687261e+02
  2.73992689e+00 6.55675297e+00 5.26851460e+00 7.34526047e+02
  8.90445993e+01 1.07538019e+02 6.60885331e+00 1.59807089e+09
  8.62133167e-01 9.05609418e-01 3.46209799e+01 7.05679422e-01
  7.76796616e-01 1.91743966e+09 1.99520910e+09 5.40885761e+01
  8.62151313e-01 5.01415609e+02 3.18592420e-01 3.22981111e+01
  4.87743678e+00 3.14619035e+02 3.45342839e+00 2.22405000e+02]
 [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
  2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
  9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
  6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
  7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
  8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
  4.28135496e+00 3.32800068e+02 3.87295723e+00 2.45931000e+02]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00 1.00000000e+05]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.53000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.74000000e+02
  1.06000000e+02 1.12000000e+02 5.00000000e+00 1.90339072e+09
  8.39999974e-01 0.00000000e+00 2.16000000e+02 5.60000002e-01
  0.00000000e+00 1.83172608e+09 1.51458598e+09 6.90000000e+01
  0.00000000e+00 6.50000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00 1.60548000e+02]
 [3.60000000e+01 1.00000000e+00 1.00000000e+00 4.38000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.76000000e+02
  1.05000000e+02 1.14000000e+02 5.00000000e+00 1.85510605e+09
  8.39999974e-01 0.00000000e+00 2.21000000e+02 5.69999993e-01
  0.00000000e+00 1.81026022e+09 1.50131200e+09 7.10000000e+01
  0.00000000e+00 6.55000000e+02 1.00000000e+00 2.10000000e+01
  3.00000000e+00 2.04000000e+02 4.00000000e+00 1.69925000e+02]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.29000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.70000000e+02
  9.60000000e+01 1.01000000e+02 6.00000000e+00 1.73675622e+09
  7.69999981e-01 0.00000000e+00 2.79000000e+02 6.29999995e-01
  0.00000000e+00 1.73302323e+09 1.56653542e+09 6.20000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 2.60000000e+01
  3.00000000e+00 2.31000000e+02 3.00000000e+00 2.13518000e+02]]
------------使用ganrs生成初始样本点------------
custom_initsamples中的sample为 : [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
 4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
 1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
 8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
 0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
 0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
 3.00000000e+00 1.95000000e+02 4.00000000e+00 1.62804000e+02]	sample执行时间为 : -162.804
custom_initsamples中的sample为 : [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
 4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
 1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
 8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
 0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
 0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
 3.00000000e+00 1.93000000e+02 4.00000000e+00 1.63342000e+02]	sample执行时间为 : -163.342
custom_initsamples中的sample为 : [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
 3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
 9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
 8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
 7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
 3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
 3.79337521e+00 2.10405622e+02 3.33995674e+00 1.64050000e+02]	sample执行时间为 : -164.05
custom_initsamples中的sample为 : [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
 4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
 1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
 8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
 0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
 0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
 3.00000000e+00 1.94000000e+02 4.00000000e+00 1.65666000e+02]	sample执行时间为 : -165.666
custom_initsamples中的sample为 : [4.55570675e+01 6.99522212e-01 7.24155771e-01 4.61385906e+02
 2.60044587e+00 7.96123443e+00 5.35033660e+00 7.56349035e+02
 1.13305626e+02 8.99147968e+01 5.88901166e+00 2.02795725e+09
 7.03530446e-01 3.96170620e-01 1.42677365e+02 6.52349409e-01
 9.14104272e-01 1.86204721e+09 1.44237129e+09 6.84115482e+01
 7.78713223e-01 8.37685058e+02 2.04366581e-01 1.93572884e+01
 1.94185663e+00 2.73258844e+02 2.60495994e+00 1.81266000e+02]	sample执行时间为 : -181.266
custom_initsamples中的sample为 : [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
 3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
 1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
 7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
 2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
 2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
 3.87181617e+00 2.48674877e+02 3.67803545e+00 1.82936000e+02]	sample执行时间为 : -182.936
custom_initsamples中的sample为 : [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
 2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
 1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
 8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
 5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
 3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
 3.52075079e+00 2.06608813e+02 3.24785426e+00 1.84517000e+02]	sample执行时间为 : -184.517
custom_initsamples中的sample为 : [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
 3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
 9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
 5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
 0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
 0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
 4.00000000e+00 3.07000000e+02 2.00000000e+00 1.94423000e+02]	sample执行时间为 : -194.423
custom_initsamples中的sample为 : [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
 2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
 9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
 8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
 0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
 0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
 5.00000000e+00 1.55000000e+02 3.00000000e+00 2.20648000e+02]	sample执行时间为 : -220.648
custom_initsamples中的sample为 : [6.15101550e+01 8.36866979e-02 5.09497062e-01 4.25687261e+02
 2.73992689e+00 6.55675297e+00 5.26851460e+00 7.34526047e+02
 8.90445993e+01 1.07538019e+02 6.60885331e+00 1.59807089e+09
 8.62133167e-01 9.05609418e-01 3.46209799e+01 7.05679422e-01
 7.76796616e-01 1.91743966e+09 1.99520910e+09 5.40885761e+01
 8.62151313e-01 5.01415609e+02 3.18592420e-01 3.22981111e+01
 4.87743678e+00 3.14619035e+02 3.45342839e+00 2.22405000e+02]	sample执行时间为 : -222.405
custom_initsamples中的sample为 : [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
 2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
 9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
 6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
 7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
 8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
 4.28135496e+00 3.32800068e+02 3.87295723e+00 2.45931000e+02]	sample执行时间为 : -245.931
custom_initsamples中的sample为 : [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
 3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
 9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
 8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
 0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
 0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
 3.00000000e+00 2.14000000e+02 3.00000000e+00 1.00000000e+05]	sample执行时间为 : -100000.0
custom_initsamples中的sample为 : [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.53000000e+02
 4.00000000e+00 8.00000000e+00 4.00000000e+00 5.74000000e+02
 1.06000000e+02 1.12000000e+02 5.00000000e+00 1.90339072e+09
 8.39999974e-01 0.00000000e+00 2.16000000e+02 5.60000002e-01
 0.00000000e+00 1.83172608e+09 1.51458598e+09 6.90000000e+01
 0.00000000e+00 6.50000000e+02 1.00000000e+00 2.20000000e+01
 3.00000000e+00 1.93000000e+02 4.00000000e+00 1.60548000e+02]	sample执行时间为 : -160.548
custom_initsamples中的sample为 : [3.60000000e+01 1.00000000e+00 1.00000000e+00 4.38000000e+02
 4.00000000e+00 8.00000000e+00 4.00000000e+00 5.76000000e+02
 1.05000000e+02 1.14000000e+02 5.00000000e+00 1.85510605e+09
 8.39999974e-01 0.00000000e+00 2.21000000e+02 5.69999993e-01
 0.00000000e+00 1.81026022e+09 1.50131200e+09 7.10000000e+01
 0.00000000e+00 6.55000000e+02 1.00000000e+00 2.10000000e+01
 3.00000000e+00 2.04000000e+02 4.00000000e+00 1.69925000e+02]	sample执行时间为 : -169.925
custom_initsamples中的sample为 : [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.29000000e+02
 3.00000000e+00 7.00000000e+00 4.00000000e+00 5.70000000e+02
 9.60000000e+01 1.01000000e+02 6.00000000e+00 1.73675622e+09
 7.69999981e-01 0.00000000e+00 2.79000000e+02 6.29999995e-01
 0.00000000e+00 1.73302323e+09 1.56653542e+09 6.20000000e+01
 0.00000000e+00 6.76000000e+02 1.00000000e+00 2.60000000e+01
 3.00000000e+00 2.31000000e+02 3.00000000e+00 2.13518000e+02]	sample执行时间为 : -213.518
Tmax = 137.5
self._queue.empty = True
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (15, 27)
before probe, target = (15,)
标准化前的train_x = 
[[3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.55570675e+01 6.99522212e-01 7.24155771e-01 4.61385906e+02
  2.60044587e+00 7.96123443e+00 5.35033660e+00 7.56349035e+02
  1.13305626e+02 8.99147968e+01 5.88901166e+00 2.02795725e+09
  7.03530446e-01 3.96170620e-01 1.42677365e+02 6.52349409e-01
  9.14104272e-01 1.86204721e+09 1.44237129e+09 6.84115482e+01
  7.78713223e-01 8.37685058e+02 2.04366581e-01 1.93572884e+01
  1.94185663e+00 2.73258844e+02 2.60495994e+00]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00]
 [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
  2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
  1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
  8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
  5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
  3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
  3.52075079e+00 2.06608813e+02 3.24785426e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [6.15101550e+01 8.36866979e-02 5.09497062e-01 4.25687261e+02
  2.73992689e+00 6.55675297e+00 5.26851460e+00 7.34526047e+02
  8.90445993e+01 1.07538019e+02 6.60885331e+00 1.59807089e+09
  8.62133167e-01 9.05609418e-01 3.46209799e+01 7.05679422e-01
  7.76796616e-01 1.91743966e+09 1.99520910e+09 5.40885761e+01
  8.62151313e-01 5.01415609e+02 3.18592420e-01 3.22981111e+01
  4.87743678e+00 3.14619035e+02 3.45342839e+00]
 [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
  2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
  9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
  6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
  7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
  8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
  4.28135496e+00 3.32800068e+02 3.87295723e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.53000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.74000000e+02
  1.06000000e+02 1.12000000e+02 5.00000000e+00 1.90339072e+09
  8.39999974e-01 0.00000000e+00 2.16000000e+02 5.60000002e-01
  0.00000000e+00 1.83172608e+09 1.51458598e+09 6.90000000e+01
  0.00000000e+00 6.50000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.60000000e+01 1.00000000e+00 1.00000000e+00 4.38000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.76000000e+02
  1.05000000e+02 1.14000000e+02 5.00000000e+00 1.85510605e+09
  8.39999974e-01 0.00000000e+00 2.21000000e+02 5.69999993e-01
  0.00000000e+00 1.81026022e+09 1.50131200e+09 7.10000000e+01
  0.00000000e+00 6.55000000e+02 1.00000000e+00 2.10000000e+01
  3.00000000e+00 2.04000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.29000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.70000000e+02
  9.60000000e+01 1.01000000e+02 6.00000000e+00 1.73675622e+09
  7.69999981e-01 0.00000000e+00 2.79000000e+02 6.29999995e-01
  0.00000000e+00 1.73302323e+09 1.56653542e+09 6.20000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 2.60000000e+01
  3.00000000e+00 2.31000000e+02 3.00000000e+00]]
标准化后的train_x = 
[[-1.00563158  0.80073646  0.78275045  0.65967858  1.14263684  0.79383555
  -0.59075648 -0.50953068  0.33450499  0.70655051 -0.80590308  0.3429348
   0.48627227 -0.68770125  0.56041169 -0.65973668 -0.76055849  0.38264925
  -0.45437591  0.89082084 -0.70441738 -0.11208799  0.90917793 -0.13527287
  -0.61340124 -0.71942293  0.99671246]
 [-1.11194856  0.80073646  0.78275045  0.33657823  1.14263684  0.79383555
  -0.59075648 -0.56576081  0.33450499  0.77506485 -0.80590308  0.43575519
   1.03754407 -0.68770125  0.665987   -0.99891805 -0.76055849  0.09148829
  -0.46638722  1.00550733 -0.70441738 -0.02880304  0.90917793 -0.13527287
  -0.61340124 -0.75885292  0.99671246]
 [ 1.54387699  0.28677821 -0.24236543 -0.47454613  1.09285818  0.70036999
   0.03518486  1.62697832 -0.48360792 -1.68716506 -0.25159415 -0.36426583
   0.29312069  1.21139639 -0.70093371  0.05691239  1.48625502  0.85142425
   0.51543846  0.29984725  0.35991543 -1.5740212  -0.05647363 -1.15421315
   0.38841985 -0.41570113 -0.12430485]
 [-1.11194856  0.80073646  0.78275045  0.41735332  1.14263684  0.79383555
  -0.59075648 -0.55772793  0.33450499  0.91209353 -0.80590308  0.23194308
   1.03754423 -0.68770125  0.7832929  -0.99891756 -0.76055849  0.13423588
  -0.66960979  1.00550733 -0.70441738 -0.02880304  0.90917793 -0.41597087
  -0.61340124 -0.73913792  0.99671246]
 [ 0.32939794  0.01528374 -0.05259408  1.02009448 -0.95068188  0.73284697
   1.02518127  0.87492769  0.93912207 -0.80660268  0.17322089  1.10149336
  -1.01836343  0.73470874 -0.38182022  1.07601025  1.81255862  0.68985801
  -1.13040193  0.82333338  1.72532181  1.44890393 -1.26188609 -1.15777472
  -1.94955381  0.82344995 -1.37262323]
 [-0.19741959 -0.74968099 -0.27277949  0.84097668 -0.25244368 -0.9716035
  -0.62686555  1.75110619  2.17362537  0.30914255 -0.11457505  0.93264941
  -0.55798667  1.02915669 -1.49073687 -1.4816436   0.07708157 -1.02111619
   0.50845409 -1.26494459  0.05516383  0.13612736 -0.2754584  -0.92885219
   0.48746984  0.33877713  0.44988795]
 [-0.63081013 -1.00770992 -0.80039032 -0.36618183 -0.80239246  0.47100224
   1.36261861  1.29071006  1.70171865  0.79317909  0.27702787  1.32548502
   0.82361686 -0.34296576  0.55500339  1.51444216  0.72744579  1.27910319
  -0.97714753  0.45031709  0.3885939  -0.47198618 -0.06253098  1.10749147
   0.04416799 -0.49055522 -0.28073168]
 [ 0.58912315 -1.81327613  0.78275045 -3.27137564 -0.35306717 -2.35269785
  -1.78744903 -1.73052778 -1.00788974 -2.51362361  1.39682161  0.25098744
  -2.6008488  -0.68770125 -1.68013101 -1.16850791 -0.76055849 -1.89540032
   0.52869759 -1.5175954  -0.70441738 -0.3341812  -1.81954609  1.26821713
   0.64933179  1.48865675 -2.40008704]
 [ 1.439659    0.80073646 -2.24556933  0.25580314 -1.84877117  0.79383555
   1.80262862 -0.9995361  -1.10377508  0.70655051  2.49818395 -2.98630665
   0.37601822 -0.68770125  0.37272225 -0.32055619 -0.76055849 -2.42910781
   0.2245159  -0.71478998 -0.70441738  2.59929996 -1.81954609 -0.97736687
   1.91206482 -1.50802281 -0.70168729]
 [ 2.02548205 -1.59451805 -0.7026493   0.05890743 -0.74205956 -1.47677695
   0.92726549  0.69962633 -1.38715468  0.40084079  0.96602737 -1.05388086
   0.73030032  2.56379649 -1.64938537  1.98043577  1.42605055  0.97215484
   3.11245512 -0.81931799  1.98566515 -1.66289447 -0.9501953   2.47468831
   1.75730019  1.63886599  0.06841538]
 [ 0.55799086 -1.54276851 -1.94565563 -0.76975112 -1.15049215 -0.30729186
   1.39673108  0.40687657 -0.58466949 -0.70937391 -1.5065156  -0.26689358
  -1.56001811  0.99321868 -0.75411118  0.75639102  1.31563489 -0.16434089
   0.62076739 -2.00167131  1.82509631  0.62485997 -0.11860895  0.03402211
   1.00460798  1.99730501  0.78094306]
 [-0.36772969  0.80073646  0.78275045 -0.04037218 -0.35306717 -0.77943115
  -0.59075648 -0.50149781 -0.9120044  -0.38967898  0.29545926 -0.30315111
   0.26576381 -0.68770125  1.48712831  0.35780542 -0.76055849  0.11547109
  -0.38069793 -0.25604403 -0.70441738 -0.01954915  0.90917793  0.42612313
  -0.61340124 -0.34483798 -0.70168729]
 [-1.00563158  0.80073646  0.78275045  0.79430372  1.14263684  0.79383555
  -0.59075648 -0.58985944  0.23861965  0.70655051 -0.80590308  0.47693882
   0.48627227 -0.68770125  0.47829756 -0.49014649 -0.76055849  0.53533227
  -0.57617675  0.89082084 -0.70441738 -0.28791178  0.90917793 -0.41597087
  -0.61340124 -0.75885292  0.99671246]
 [-0.68668063  0.80073646  0.78275045  0.39042829  1.14263684  0.79383555
  -0.59075648 -0.57379369  0.14273431  0.84357919 -0.80590308  0.234848
   0.48627227 -0.68770125  0.53695051 -0.32055631 -0.76055849  0.42593571
  -0.67805042  1.12019382 -0.70441738 -0.24164236  0.90917793 -0.69666887
  -0.61340124 -0.54198795  0.99671246]
 [-0.36772969  0.80073646  0.78275045  0.14810303 -0.35306717 -0.77943115
  -0.59075648 -0.62199094 -0.72023373 -0.04710727  0.29545926 -0.35853709
  -0.28550799 -0.68770125  1.21732474  0.69698578 -0.76055849  0.03231244
  -0.17748107  0.08801543 -0.70441738 -0.0473108   0.90917793  0.70682113
  -0.61340124 -0.00968303 -0.70168729]]
train_y = 
[   -162.804    -163.342    -164.05     -165.666    -181.266    -182.936
    -184.517    -194.423    -220.648    -222.405    -245.931 -100000.
    -160.548    -169.925    -213.518]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.00563158  0.80073646  0.78275045  0.65967858  1.14263684  0.79383555
  -0.59075648 -0.50953068  0.33450499  0.70655051 -0.80590308  0.3429348
   0.48627227 -0.68770125  0.56041169 -0.65973668 -0.76055849  0.38264925
  -0.45437591  0.89082084 -0.70441738 -0.11208799  0.90917793 -0.13527287
  -0.61340124 -0.71942293  0.99671246]
 [-1.11194856  0.80073646  0.78275045  0.33657823  1.14263684  0.79383555
  -0.59075648 -0.56576081  0.33450499  0.77506485 -0.80590308  0.43575519
   1.03754407 -0.68770125  0.665987   -0.99891805 -0.76055849  0.09148829
  -0.46638722  1.00550733 -0.70441738 -0.02880304  0.90917793 -0.13527287
  -0.61340124 -0.75885292  0.99671246]
 [ 1.54387699  0.28677821 -0.24236543 -0.47454613  1.09285818  0.70036999
   0.03518486  1.62697832 -0.48360792 -1.68716506 -0.25159415 -0.36426583
   0.29312069  1.21139639 -0.70093371  0.05691239  1.48625502  0.85142425
   0.51543846  0.29984725  0.35991543 -1.5740212  -0.05647363 -1.15421315
   0.38841985 -0.41570113 -0.12430485]
 [-1.11194856  0.80073646  0.78275045  0.41735332  1.14263684  0.79383555
  -0.59075648 -0.55772793  0.33450499  0.91209353 -0.80590308  0.23194308
   1.03754423 -0.68770125  0.7832929  -0.99891756 -0.76055849  0.13423588
  -0.66960979  1.00550733 -0.70441738 -0.02880304  0.90917793 -0.41597087
  -0.61340124 -0.73913792  0.99671246]
 [ 0.32939794  0.01528374 -0.05259408  1.02009448 -0.95068188  0.73284697
   1.02518127  0.87492769  0.93912207 -0.80660268  0.17322089  1.10149336
  -1.01836343  0.73470874 -0.38182022  1.07601025  1.81255862  0.68985801
  -1.13040193  0.82333338  1.72532181  1.44890393 -1.26188609 -1.15777472
  -1.94955381  0.82344995 -1.37262323]
 [-0.19741959 -0.74968099 -0.27277949  0.84097668 -0.25244368 -0.9716035
  -0.62686555  1.75110619  2.17362537  0.30914255 -0.11457505  0.93264941
  -0.55798667  1.02915669 -1.49073687 -1.4816436   0.07708157 -1.02111619
   0.50845409 -1.26494459  0.05516383  0.13612736 -0.2754584  -0.92885219
   0.48746984  0.33877713  0.44988795]
 [-0.63081013 -1.00770992 -0.80039032 -0.36618183 -0.80239246  0.47100224
   1.36261861  1.29071006  1.70171865  0.79317909  0.27702787  1.32548502
   0.82361686 -0.34296576  0.55500339  1.51444216  0.72744579  1.27910319
  -0.97714753  0.45031709  0.3885939  -0.47198618 -0.06253098  1.10749147
   0.04416799 -0.49055522 -0.28073168]
 [ 0.58912315 -1.81327613  0.78275045 -3.27137564 -0.35306717 -2.35269785
  -1.78744903 -1.73052778 -1.00788974 -2.51362361  1.39682161  0.25098744
  -2.6008488  -0.68770125 -1.68013101 -1.16850791 -0.76055849 -1.89540032
   0.52869759 -1.5175954  -0.70441738 -0.3341812  -1.81954609  1.26821713
   0.64933179  1.48865675 -2.40008704]
 [ 1.439659    0.80073646 -2.24556933  0.25580314 -1.84877117  0.79383555
   1.80262862 -0.9995361  -1.10377508  0.70655051  2.49818395 -2.98630665
   0.37601822 -0.68770125  0.37272225 -0.32055619 -0.76055849 -2.42910781
   0.2245159  -0.71478998 -0.70441738  2.59929996 -1.81954609 -0.97736687
   1.91206482 -1.50802281 -0.70168729]
 [ 2.02548205 -1.59451805 -0.7026493   0.05890743 -0.74205956 -1.47677695
   0.92726549  0.69962633 -1.38715468  0.40084079  0.96602737 -1.05388086
   0.73030032  2.56379649 -1.64938537  1.98043577  1.42605055  0.97215484
   3.11245512 -0.81931799  1.98566515 -1.66289447 -0.9501953   2.47468831
   1.75730019  1.63886599  0.06841538]
 [ 0.55799086 -1.54276851 -1.94565563 -0.76975112 -1.15049215 -0.30729186
   1.39673108  0.40687657 -0.58466949 -0.70937391 -1.5065156  -0.26689358
  -1.56001811  0.99321868 -0.75411118  0.75639102  1.31563489 -0.16434089
   0.62076739 -2.00167131  1.82509631  0.62485997 -0.11860895  0.03402211
   1.00460798  1.99730501  0.78094306]
 [-0.36772969  0.80073646  0.78275045 -0.04037218 -0.35306717 -0.77943115
  -0.59075648 -0.50149781 -0.9120044  -0.38967898  0.29545926 -0.30315111
   0.26576381 -0.68770125  1.48712831  0.35780542 -0.76055849  0.11547109
  -0.38069793 -0.25604403 -0.70441738 -0.01954915  0.90917793  0.42612313
  -0.61340124 -0.34483798 -0.70168729]
 [-1.00563158  0.80073646  0.78275045  0.79430372  1.14263684  0.79383555
  -0.59075648 -0.58985944  0.23861965  0.70655051 -0.80590308  0.47693882
   0.48627227 -0.68770125  0.47829756 -0.49014649 -0.76055849  0.53533227
  -0.57617675  0.89082084 -0.70441738 -0.28791178  0.90917793 -0.41597087
  -0.61340124 -0.75885292  0.99671246]
 [-0.68668063  0.80073646  0.78275045  0.39042829  1.14263684  0.79383555
  -0.59075648 -0.57379369  0.14273431  0.84357919 -0.80590308  0.234848
   0.48627227 -0.68770125  0.53695051 -0.32055631 -0.76055849  0.42593571
  -0.67805042  1.12019382 -0.70441738 -0.24164236  0.90917793 -0.69666887
  -0.61340124 -0.54198795  0.99671246]
 [-0.36772969  0.80073646  0.78275045  0.14810303 -0.35306717 -0.77943115
  -0.59075648 -0.62199094 -0.72023373 -0.04710727  0.29545926 -0.35853709
  -0.28550799 -0.68770125  1.21732474  0.69698578 -0.76055849  0.03231244
  -0.17748107  0.08801543 -0.70441738 -0.0473108   0.90917793  0.70682113
  -0.61340124 -0.00968303 -0.70168729]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.00563158  0.80073646  0.78275045  0.65967858  1.14263684  0.79383555
  -0.59075648 -0.50953068  0.33450499  0.70655051 -0.80590308  0.3429348
   0.48627227 -0.68770125  0.56041169 -0.65973668 -0.76055849  0.38264925
  -0.45437591  0.89082084 -0.70441738 -0.11208799  0.90917793 -0.13527287
  -0.61340124 -0.71942293  0.99671246]
 [-1.11194856  0.80073646  0.78275045  0.33657823  1.14263684  0.79383555
  -0.59075648 -0.56576081  0.33450499  0.77506485 -0.80590308  0.43575519
   1.03754407 -0.68770125  0.665987   -0.99891805 -0.76055849  0.09148829
  -0.46638722  1.00550733 -0.70441738 -0.02880304  0.90917793 -0.13527287
  -0.61340124 -0.75885292  0.99671246]
 [ 1.54387699  0.28677821 -0.24236543 -0.47454613  1.09285818  0.70036999
   0.03518486  1.62697832 -0.48360792 -1.68716506 -0.25159415 -0.36426583
   0.29312069  1.21139639 -0.70093371  0.05691239  1.48625502  0.85142425
   0.51543846  0.29984725  0.35991543 -1.5740212  -0.05647363 -1.15421315
   0.38841985 -0.41570113 -0.12430485]
 [-1.11194856  0.80073646  0.78275045  0.41735332  1.14263684  0.79383555
  -0.59075648 -0.55772793  0.33450499  0.91209353 -0.80590308  0.23194308
   1.03754423 -0.68770125  0.7832929  -0.99891756 -0.76055849  0.13423588
  -0.66960979  1.00550733 -0.70441738 -0.02880304  0.90917793 -0.41597087
  -0.61340124 -0.73913792  0.99671246]
 [ 0.32939794  0.01528374 -0.05259408  1.02009448 -0.95068188  0.73284697
   1.02518127  0.87492769  0.93912207 -0.80660268  0.17322089  1.10149336
  -1.01836343  0.73470874 -0.38182022  1.07601025  1.81255862  0.68985801
  -1.13040193  0.82333338  1.72532181  1.44890393 -1.26188609 -1.15777472
  -1.94955381  0.82344995 -1.37262323]
 [-0.19741959 -0.74968099 -0.27277949  0.84097668 -0.25244368 -0.9716035
  -0.62686555  1.75110619  2.17362537  0.30914255 -0.11457505  0.93264941
  -0.55798667  1.02915669 -1.49073687 -1.4816436   0.07708157 -1.02111619
   0.50845409 -1.26494459  0.05516383  0.13612736 -0.2754584  -0.92885219
   0.48746984  0.33877713  0.44988795]
 [-0.63081013 -1.00770992 -0.80039032 -0.36618183 -0.80239246  0.47100224
   1.36261861  1.29071006  1.70171865  0.79317909  0.27702787  1.32548502
   0.82361686 -0.34296576  0.55500339  1.51444216  0.72744579  1.27910319
  -0.97714753  0.45031709  0.3885939  -0.47198618 -0.06253098  1.10749147
   0.04416799 -0.49055522 -0.28073168]
 [ 0.58912315 -1.81327613  0.78275045 -3.27137564 -0.35306717 -2.35269785
  -1.78744903 -1.73052778 -1.00788974 -2.51362361  1.39682161  0.25098744
  -2.6008488  -0.68770125 -1.68013101 -1.16850791 -0.76055849 -1.89540032
   0.52869759 -1.5175954  -0.70441738 -0.3341812  -1.81954609  1.26821713
   0.64933179  1.48865675 -2.40008704]
 [ 1.439659    0.80073646 -2.24556933  0.25580314 -1.84877117  0.79383555
   1.80262862 -0.9995361  -1.10377508  0.70655051  2.49818395 -2.98630665
   0.37601822 -0.68770125  0.37272225 -0.32055619 -0.76055849 -2.42910781
   0.2245159  -0.71478998 -0.70441738  2.59929996 -1.81954609 -0.97736687
   1.91206482 -1.50802281 -0.70168729]
 [ 2.02548205 -1.59451805 -0.7026493   0.05890743 -0.74205956 -1.47677695
   0.92726549  0.69962633 -1.38715468  0.40084079  0.96602737 -1.05388086
   0.73030032  2.56379649 -1.64938537  1.98043577  1.42605055  0.97215484
   3.11245512 -0.81931799  1.98566515 -1.66289447 -0.9501953   2.47468831
   1.75730019  1.63886599  0.06841538]
 [ 0.55799086 -1.54276851 -1.94565563 -0.76975112 -1.15049215 -0.30729186
   1.39673108  0.40687657 -0.58466949 -0.70937391 -1.5065156  -0.26689358
  -1.56001811  0.99321868 -0.75411118  0.75639102  1.31563489 -0.16434089
   0.62076739 -2.00167131  1.82509631  0.62485997 -0.11860895  0.03402211
   1.00460798  1.99730501  0.78094306]
 [-0.36772969  0.80073646  0.78275045 -0.04037218 -0.35306717 -0.77943115
  -0.59075648 -0.50149781 -0.9120044  -0.38967898  0.29545926 -0.30315111
   0.26576381 -0.68770125  1.48712831  0.35780542 -0.76055849  0.11547109
  -0.38069793 -0.25604403 -0.70441738 -0.01954915  0.90917793  0.42612313
  -0.61340124 -0.34483798 -0.70168729]
 [-1.00563158  0.80073646  0.78275045  0.79430372  1.14263684  0.79383555
  -0.59075648 -0.58985944  0.23861965  0.70655051 -0.80590308  0.47693882
   0.48627227 -0.68770125  0.47829756 -0.49014649 -0.76055849  0.53533227
  -0.57617675  0.89082084 -0.70441738 -0.28791178  0.90917793 -0.41597087
  -0.61340124 -0.75885292  0.99671246]
 [-0.68668063  0.80073646  0.78275045  0.39042829  1.14263684  0.79383555
  -0.59075648 -0.57379369  0.14273431  0.84357919 -0.80590308  0.234848
   0.48627227 -0.68770125  0.53695051 -0.32055631 -0.76055849  0.42593571
  -0.67805042  1.12019382 -0.70441738 -0.24164236  0.90917793 -0.69666887
  -0.61340124 -0.54198795  0.99671246]
 [-0.36772969  0.80073646  0.78275045  0.14810303 -0.35306717 -0.77943115
  -0.59075648 -0.62199094 -0.72023373 -0.04710727  0.29545926 -0.35853709
  -0.28550799 -0.68770125  1.21732474  0.69698578 -0.76055849  0.03231244
  -0.17748107  0.08801543 -0.70441738 -0.0473108   0.90917793  0.70682113
  -0.61340124 -0.00968303 -0.70168729]]
upper = 
[6947.41301983 6947.41344934 6947.41287664 ... 6947.41300901 6947.41301378
 6947.41301688]
upper.argmax() = 7543
all predict_target = 
[6842.13191828 6842.13082872 6842.13228152 ... 6842.13194572 6842.13193362
 6842.13192575]
upper.argmax() = 7543, sortnumber[0] = 7543
x_max = [4.17938972e+01 8.06242948e-01 9.72583430e-02 4.44433865e+02
 3.59240233e+00 6.36413646e+00 5.35175857e+00 5.81184991e+02
 9.45506378e+01 1.15151660e+02 4.34831715e+00 1.75111774e+09
 8.24730545e-01 4.57308414e-01 7.68863982e+02 5.38018693e-01
 2.22114310e-01 1.22550451e+09 1.16747094e+09 6.73745437e+01
 5.35514327e-01 7.77063295e+02 7.09242673e-01 2.44983936e+01
 1.92286995e+00 2.87470631e+02 3.71109092e+00]
black_box_function中schafferRun(i) 中的i为[41.79389722688738, 0.8062429479782174, 0.09725834298738822, 444.433864507925, 3.5924023344774683, 6.364136459519497, 5.351758569731864, 581.1849905860764, 94.55063775343002, 115.1516601477367, 4.348317146347595, 1751117743.83141, 0.8247305445579817, 0.45730841372380093, 768.8639819797975, 0.5380186927445587, 0.22211431004852022, 1225504509.427197, 1167470941.9704003, 67.37454365717468, 0.535514327490407, 777.0632945619404, 0.7092426733859027, 24.498393643017096, 1.9228699517420682, 287.4706309949179, 3.71109092028361]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 41.79389722688738
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.8062429479782174
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.09725834298738822
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 444.433864507925
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.5924023344774683
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.364136459519497
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.351758569731864
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 581.1849905860764
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 94.55063775343002
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 115.1516601477367
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 4.348317146347595
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1751117743.83141
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8247305445579817
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.45730841372380093
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 768.8639819797975
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.5380186927445587
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.22211431004852022
================= config16 =================
2022年 02月 22日 星期二 17:24:57 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (148617) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (164843) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1225504509.427197
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1167470941.9704003
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 67.37454365717468
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.535514327490407
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 777.0632945619404
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.7092426733859027
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 24.498393643017096
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1.9228699517420682
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 287.4706309949179
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.71109092028361
configNum = 16	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 16 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 41.79389722688738, 'spark.broadcast.checksum': 0.8062429479782174, 'spark.broadcast.compress': 0.09725834298738822, 'spark.default.parallelism': 444.433864507925, 'spark.executor.cores': 3.5924023344774683, 'spark.executor.instances': 6.364136459519497, 'spark.executor.memory': 5.351758569731864, 'spark.executor.memoryOverhead': 581.1849905860764, 'spark.kryoserializer.buffer': 94.55063775343002, 'spark.kryoserializer.buffer.max': 115.1516601477367, 'spark.locality.wait': 4.348317146347595, 'spark.maxRemoteBlockSizeFetchToMem': 1751117743.83141, 'spark.memory.fraction': 0.8247305445579817, 'spark.memory.offHeap.enabled': 0.45730841372380093, 'spark.memory.offHeap.size': 768.8639819797975, 'spark.memory.storageFraction': 0.5380186927445587, 'spark.rdd.compress': 0.22211431004852022, 'spark.reducer.maxBlocksInFlightPerAddress': 1225504509.427197, 'spark.reducer.maxReqsInFlight': 1167470941.9704003, 'spark.reducer.maxSizeInFlight': 67.37454365717468, 'spark.scheduler.mode': 0.535514327490407, 'spark.scheduler.revive.interval': 777.0632945619404, 'spark.shuffle.compress': 0.7092426733859027, 'spark.shuffle.file.buffer': 24.498393643017096, 'spark.shuffle.io.numConnectionsPerPeer': 1.9228699517420682, 'spark.shuffle.sort.bypassMergeThreshold': 287.4706309949179, 'spark.storage.memoryMapThreshold': 3.71109092028361} target = -181.042
x_probe = {'spark.broadcast.blockSize': 41.79389722688738, 'spark.broadcast.checksum': 0.8062429479782174, 'spark.broadcast.compress': 0.09725834298738822, 'spark.default.parallelism': 444.433864507925, 'spark.executor.cores': 3.5924023344774683, 'spark.executor.instances': 6.364136459519497, 'spark.executor.memory': 5.351758569731864, 'spark.executor.memoryOverhead': 581.1849905860764, 'spark.kryoserializer.buffer': 94.55063775343002, 'spark.kryoserializer.buffer.max': 115.1516601477367, 'spark.locality.wait': 4.348317146347595, 'spark.maxRemoteBlockSizeFetchToMem': 1751117743.83141, 'spark.memory.fraction': 0.8247305445579817, 'spark.memory.offHeap.enabled': 0.45730841372380093, 'spark.memory.offHeap.size': 768.8639819797975, 'spark.memory.storageFraction': 0.5380186927445587, 'spark.rdd.compress': 0.22211431004852022, 'spark.reducer.maxBlocksInFlightPerAddress': 1225504509.427197, 'spark.reducer.maxReqsInFlight': 1167470941.9704003, 'spark.reducer.maxSizeInFlight': 67.37454365717468, 'spark.scheduler.mode': 0.535514327490407, 'spark.scheduler.revive.interval': 777.0632945619404, 'spark.shuffle.compress': 0.7092426733859027, 'spark.shuffle.file.buffer': 24.498393643017096, 'spark.shuffle.io.numConnectionsPerPeer': 1.9228699517420682, 'spark.shuffle.sort.bypassMergeThreshold': 287.4706309949179, 'spark.storage.memoryMapThreshold': 3.71109092028361}
target = -181.042
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (16, 27)
before probe, target = (16,)
标准化前的train_x = 
[[3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.55570675e+01 6.99522212e-01 7.24155771e-01 4.61385906e+02
  2.60044587e+00 7.96123443e+00 5.35033660e+00 7.56349035e+02
  1.13305626e+02 8.99147968e+01 5.88901166e+00 2.02795725e+09
  7.03530446e-01 3.96170620e-01 1.42677365e+02 6.52349409e-01
  9.14104272e-01 1.86204721e+09 1.44237129e+09 6.84115482e+01
  7.78713223e-01 8.37685058e+02 2.04366581e-01 1.93572884e+01
  1.94185663e+00 2.73258844e+02 2.60495994e+00]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00]
 [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
  2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
  1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
  8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
  5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
  3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
  3.52075079e+00 2.06608813e+02 3.24785426e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [6.15101550e+01 8.36866979e-02 5.09497062e-01 4.25687261e+02
  2.73992689e+00 6.55675297e+00 5.26851460e+00 7.34526047e+02
  8.90445993e+01 1.07538019e+02 6.60885331e+00 1.59807089e+09
  8.62133167e-01 9.05609418e-01 3.46209799e+01 7.05679422e-01
  7.76796616e-01 1.91743966e+09 1.99520910e+09 5.40885761e+01
  8.62151313e-01 5.01415609e+02 3.18592420e-01 3.22981111e+01
  4.87743678e+00 3.14619035e+02 3.45342839e+00]
 [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
  2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
  9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
  6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
  7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
  8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
  4.28135496e+00 3.32800068e+02 3.87295723e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.53000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.74000000e+02
  1.06000000e+02 1.12000000e+02 5.00000000e+00 1.90339072e+09
  8.39999974e-01 0.00000000e+00 2.16000000e+02 5.60000002e-01
  0.00000000e+00 1.83172608e+09 1.51458598e+09 6.90000000e+01
  0.00000000e+00 6.50000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.60000000e+01 1.00000000e+00 1.00000000e+00 4.38000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.76000000e+02
  1.05000000e+02 1.14000000e+02 5.00000000e+00 1.85510605e+09
  8.39999974e-01 0.00000000e+00 2.21000000e+02 5.69999993e-01
  0.00000000e+00 1.81026022e+09 1.50131200e+09 7.10000000e+01
  0.00000000e+00 6.55000000e+02 1.00000000e+00 2.10000000e+01
  3.00000000e+00 2.04000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.29000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.70000000e+02
  9.60000000e+01 1.01000000e+02 6.00000000e+00 1.73675622e+09
  7.69999981e-01 0.00000000e+00 2.79000000e+02 6.29999995e-01
  0.00000000e+00 1.73302323e+09 1.56653542e+09 6.20000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 2.60000000e+01
  3.00000000e+00 2.31000000e+02 3.00000000e+00]
 [4.17938972e+01 8.06242948e-01 9.72583430e-02 4.44433865e+02
  3.59240233e+00 6.36413646e+00 5.35175857e+00 5.81184991e+02
  9.45506378e+01 1.15151660e+02 4.34831715e+00 1.75111774e+09
  8.24730545e-01 4.57308414e-01 7.68863982e+02 5.38018693e-01
  2.22114310e-01 1.22550451e+09 1.16747094e+09 6.73745437e+01
  5.35514327e-01 7.77063295e+02 7.09242673e-01 2.44983936e+01
  1.92286995e+00 2.87470631e+02 3.71109092e+00]]
标准化后的train_x = 
[[-1.03388730e+00  8.05825658e-01  8.39788383e-01  6.38619604e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -4.87595385e-01
   3.91995491e-01  6.53034889e-01 -6.85907155e-01  3.71724551e-01
   4.80183886e-01 -7.50782029e-01  6.43945818e-02 -6.11601117e-01
  -7.76321906e-01  4.72042555e-01 -2.02129364e-01  8.61313462e-01
  -7.67810829e-01 -1.68965959e-01  9.31131288e-01 -1.57726001e-01
  -4.53889160e-01 -7.84927514e-01  9.88854688e-01]
 [-1.14367386e+00  8.05825658e-01  8.39788383e-01  3.08187578e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.45162422e-01
   3.91995491e-01  7.21986322e-01 -6.85907155e-01  4.67344026e-01
   1.04774511e+00 -7.50782029e-01  1.18704503e-01 -9.54028410e-01
  -7.76321906e-01  2.18595402e-01 -2.11768815e-01  9.77966181e-01
  -7.67810829e-01 -8.49936122e-02  9.31131288e-01 -1.57726001e-01
  -4.53889160e-01 -8.24183833e-01  9.88854688e-01]
 [ 1.59882273e+00  2.76442327e-01 -1.11786166e-01 -5.21342534e-01
   1.08470751e+00  7.65835397e-01 -2.90056780e-02  1.69971047e+00
  -4.34104772e-01 -1.75595151e+00 -1.50916875e-01 -3.56802386e-01
   2.81324914e-01  1.15706266e+00 -5.84465176e-01  1.11906179e-01
   1.54285023e+00  8.80097566e-01  5.76176590e-01  2.60207980e-01
   3.00679575e-01 -1.64296524e+00 -6.57718228e-02 -1.20741593e+00
   4.73996691e-01 -4.82543505e-01 -1.59772124e-01]
 [-1.14367386e+00  8.05825658e-01  8.39788383e-01  3.90795585e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.36938559e-01
   3.91995491e-01  8.59889190e-01 -6.85907155e-01  2.57385763e-01
   1.04774528e+00 -7.50782029e-01  1.79048861e-01 -9.54027920e-01
  -7.76321906e-01  2.55805939e-01 -3.74861194e-01  9.77966181e-01
  -7.67810829e-01 -8.49936122e-02  9.31131288e-01 -4.46894924e-01
  -4.53889160e-01 -8.04555674e-01  9.88854688e-01]
 [ 3.44709982e-01 -3.20033241e-03  6.43710700e-02  1.00721394e+00
  -1.00736098e+00  7.96480744e-01  9.61344139e-01  9.29779356e-01
   1.00251553e+00 -8.69771534e-01  2.59092607e-01  1.15315816e+00
  -1.06891200e+00  6.78179435e-01 -4.20307201e-01  1.14075667e+00
   1.87966244e+00  7.39458852e-01 -7.44661103e-01  7.92668964e-01
   1.67141964e+00  1.40490961e+00 -1.31019526e+00 -1.21108498e+00
  -1.69143256e+00  7.51149560e-01 -1.43883529e+00]
 [-1.99299872e-01 -7.91123434e-01 -1.40018339e-01  8.24031665e-01
  -2.92541544e-01 -8.11842373e-01 -6.91292416e-01  1.82678955e+00
   2.24907148e+00  2.53091649e-01 -1.86731291e-02  9.79222565e-01
  -5.94931658e-01  9.73983586e-01 -9.90754744e-01 -1.44137358e+00
   8.82943480e-02 -7.49894452e-01  5.70571421e-01 -1.33141128e+00
  -5.26247461e-03  8.12980348e-02 -2.91843635e-01 -9.75254017e-01
   5.65736712e-01  2.68611550e-01  4.28562452e-01]
 [-6.46833815e-01 -1.05689642e+00 -6.29778620e-01 -4.10519261e-01
  -8.55550088e-01  5.49403498e-01  1.29890194e+00  1.35544722e+00
   1.77255746e+00  7.40216122e-01  3.59281738e-01  1.38390450e+00
   8.27496607e-01 -4.04458719e-01  6.16124468e-02  1.58338431e+00
   7.59603546e-01  1.25237965e+00 -6.21669719e-01  4.13257536e-01
   3.29470076e-01 -5.31834572e-01 -7.20252119e-02  1.12254256e+00
   1.55150908e-01 -5.57067889e-01 -3.20051583e-01]
 [ 6.12911147e-01 -1.88663955e+00  8.39788383e-01 -3.38163671e+00
  -3.95554563e-01 -2.11504596e+00 -1.85229019e+00 -1.73762246e+00
  -9.63505236e-01 -2.58768249e+00  1.44004867e+00  2.77004424e-01
  -2.69815793e+00 -7.50782029e-01 -1.08818265e+00 -1.12524122e+00
  -7.76321906e-01 -1.51093337e+00  5.86817454e-01 -1.58839363e+00
  -7.67810829e-01 -3.92892217e-01 -1.88590291e+00  1.28811861e+00
   7.15653115e-01  1.41342637e+00 -2.49160448e+00]
 [ 1.49120365e+00  8.05825658e-01 -1.97128117e+00  2.25579572e-01
  -1.92677741e+00  8.54029697e-01  1.73906901e+00 -9.89250988e-01
  -1.06032672e+00  6.53034889e-01  2.50302658e+00 -3.05791333e+00
   3.66671966e-01 -7.50782029e-01 -3.21563902e-02 -2.69174722e-01
  -7.76321906e-01 -1.97551023e+00  3.42702264e-01 -7.71824602e-01
  -7.67810829e-01  2.56480044e+00 -1.88590291e+00 -1.02523277e+00
   1.88519539e+00 -1.57005390e+00 -7.51374896e-01]
 [ 2.09614463e+00 -1.66131603e+00 -5.39049492e-01  2.42159755e-02
  -7.93784449e-01 -1.28852512e+00  8.63393407e-01  7.50310100e-01
  -1.34647299e+00  3.45374878e-01  1.02426838e+00 -1.06721341e+00
   7.31422672e-01  2.51569179e+00 -1.07236651e+00  2.05383742e+00
   1.48070687e+00  9.85190034e-01  2.66036260e+00 -8.78144682e-01
   1.93277995e+00 -1.73257203e+00 -9.88417168e-01  2.53099876e+00
   1.74185252e+00  1.56297399e+00  3.76946091e-02]
 [ 5.80762879e-01 -1.60801337e+00 -1.69288314e+00 -8.23246210e-01
  -1.21191619e+00 -1.84996484e-01  1.33302658e+00  4.50600029e-01
  -5.36153022e-01 -7.71922487e-01 -1.36210208e+00 -2.56493781e-01
  -1.62657193e+00  9.37880052e-01 -6.11820664e-01  8.18078730e-01
   1.36673528e+00 -4.09645688e-03  6.60706308e-01 -2.08076873e+00
   1.77158388e+00  5.74064401e-01 -1.29918047e-01  1.66779776e-02
   1.04470963e+00  1.91983421e+00  7.67771108e-01]
 [-3.75167922e-01  8.05825658e-01  8.39788383e-01 -7.73164522e-02
  -3.95554563e-01 -6.30508133e-01 -6.55170456e-01 -4.79371523e-01
  -8.66683756e-01 -4.50188050e-01  3.77070758e-01 -2.93844699e-01
   2.53159666e-01 -7.50782029e-01  5.41115006e-01  4.15678720e-01
  -7.76321906e-01  2.39471736e-01 -1.43000516e-01 -3.05213726e-01
  -7.67810829e-01 -7.56633514e-02  9.31131288e-01  4.20611844e-01
  -4.53889160e-01 -4.11992481e-01 -7.51374896e-01]
 [-1.03388730e+00  8.05825658e-01  8.39788383e-01  7.76299615e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.69834009e-01
   2.95174010e-01  6.53034889e-01 -6.85907155e-01  5.09769581e-01
   4.80183886e-01 -7.50782029e-01  2.21535315e-02 -4.40387981e-01
  -7.76321906e-01  6.04948684e-01 -2.99878296e-01  8.61313462e-01
  -7.67810829e-01 -3.46240913e-01  9.31131288e-01 -4.46894924e-01
  -4.53889160e-01 -8.24183833e-01  9.88854688e-01]
 [-7.04527612e-01  8.05825658e-01  8.39788383e-01  3.63259583e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.53386284e-01
   1.98352530e-01  7.90937756e-01 -6.85907155e-01  2.60378293e-01
   4.80183886e-01 -7.50782029e-01  5.23257103e-02 -2.69174845e-01
  -7.76321906e-01  5.09722166e-01 -3.81635059e-01  1.09461890e+00
  -7.67810829e-01 -2.99589609e-01  9.31131288e-01 -7.36063847e-01
  -4.53889160e-01 -6.08274077e-01  9.88854688e-01]
 [-3.75167922e-01  8.05825658e-01  8.39788383e-01  1.15435563e-01
  -3.95554563e-01 -6.30508133e-01 -6.55170456e-01 -6.02729458e-01
  -6.73040795e-01 -1.05430882e-01  3.77070758e-01 -3.50900896e-01
  -3.14401561e-01 -7.50782029e-01  4.02322984e-01  7.58104992e-01
  -7.76321906e-01  1.67084546e-01  2.00872874e-02  4.47444301e-02
  -7.67810829e-01 -1.03654134e-01  9.31131288e-01  7.09780767e-01
  -4.53889160e-01 -7.83137671e-02 -7.51374896e-01]
 [-6.84355474e-02  2.84141537e-01 -1.69788121e+00  5.40422490e-01
   5.11545424e-01 -1.57447161e+00  9.63046404e-01 -5.10745635e-01
  -8.13370193e-01  8.70346374e-01 -1.37863163e+00 -2.76723361e-01
   3.06857208e-01  8.98699449e-01  3.35837571e+00 -8.16737236e-01
  -1.30955564e-01 -2.08436263e+00 -2.43781986e+00  6.71699560e-01
   9.09626803e-01  8.39292756e-01  1.12057955e-01  2.75562874e-01
  -1.71363829e+00  1.03010079e+00  4.86086561e-01]]
train_y = 
[   -162.804    -163.342    -164.05     -165.666    -181.266    -182.936
    -184.517    -194.423    -220.648    -222.405    -245.931 -100000.
    -160.548    -169.925    -213.518    -181.042]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.03388730e+00  8.05825658e-01  8.39788383e-01  6.38619604e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -4.87595385e-01
   3.91995491e-01  6.53034889e-01 -6.85907155e-01  3.71724551e-01
   4.80183886e-01 -7.50782029e-01  6.43945818e-02 -6.11601117e-01
  -7.76321906e-01  4.72042555e-01 -2.02129364e-01  8.61313462e-01
  -7.67810829e-01 -1.68965959e-01  9.31131288e-01 -1.57726001e-01
  -4.53889160e-01 -7.84927514e-01  9.88854688e-01]
 [-1.14367386e+00  8.05825658e-01  8.39788383e-01  3.08187578e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.45162422e-01
   3.91995491e-01  7.21986322e-01 -6.85907155e-01  4.67344026e-01
   1.04774511e+00 -7.50782029e-01  1.18704503e-01 -9.54028410e-01
  -7.76321906e-01  2.18595402e-01 -2.11768815e-01  9.77966181e-01
  -7.67810829e-01 -8.49936122e-02  9.31131288e-01 -1.57726001e-01
  -4.53889160e-01 -8.24183833e-01  9.88854688e-01]
 [ 1.59882273e+00  2.76442327e-01 -1.11786166e-01 -5.21342534e-01
   1.08470751e+00  7.65835397e-01 -2.90056780e-02  1.69971047e+00
  -4.34104772e-01 -1.75595151e+00 -1.50916875e-01 -3.56802386e-01
   2.81324914e-01  1.15706266e+00 -5.84465176e-01  1.11906179e-01
   1.54285023e+00  8.80097566e-01  5.76176590e-01  2.60207980e-01
   3.00679575e-01 -1.64296524e+00 -6.57718228e-02 -1.20741593e+00
   4.73996691e-01 -4.82543505e-01 -1.59772124e-01]
 [-1.14367386e+00  8.05825658e-01  8.39788383e-01  3.90795585e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.36938559e-01
   3.91995491e-01  8.59889190e-01 -6.85907155e-01  2.57385763e-01
   1.04774528e+00 -7.50782029e-01  1.79048861e-01 -9.54027920e-01
  -7.76321906e-01  2.55805939e-01 -3.74861194e-01  9.77966181e-01
  -7.67810829e-01 -8.49936122e-02  9.31131288e-01 -4.46894924e-01
  -4.53889160e-01 -8.04555674e-01  9.88854688e-01]
 [ 3.44709982e-01 -3.20033241e-03  6.43710700e-02  1.00721394e+00
  -1.00736098e+00  7.96480744e-01  9.61344139e-01  9.29779356e-01
   1.00251553e+00 -8.69771534e-01  2.59092607e-01  1.15315816e+00
  -1.06891200e+00  6.78179435e-01 -4.20307201e-01  1.14075667e+00
   1.87966244e+00  7.39458852e-01 -7.44661103e-01  7.92668964e-01
   1.67141964e+00  1.40490961e+00 -1.31019526e+00 -1.21108498e+00
  -1.69143256e+00  7.51149560e-01 -1.43883529e+00]
 [-1.99299872e-01 -7.91123434e-01 -1.40018339e-01  8.24031665e-01
  -2.92541544e-01 -8.11842373e-01 -6.91292416e-01  1.82678955e+00
   2.24907148e+00  2.53091649e-01 -1.86731291e-02  9.79222565e-01
  -5.94931658e-01  9.73983586e-01 -9.90754744e-01 -1.44137358e+00
   8.82943480e-02 -7.49894452e-01  5.70571421e-01 -1.33141128e+00
  -5.26247461e-03  8.12980348e-02 -2.91843635e-01 -9.75254017e-01
   5.65736712e-01  2.68611550e-01  4.28562452e-01]
 [-6.46833815e-01 -1.05689642e+00 -6.29778620e-01 -4.10519261e-01
  -8.55550088e-01  5.49403498e-01  1.29890194e+00  1.35544722e+00
   1.77255746e+00  7.40216122e-01  3.59281738e-01  1.38390450e+00
   8.27496607e-01 -4.04458719e-01  6.16124468e-02  1.58338431e+00
   7.59603546e-01  1.25237965e+00 -6.21669719e-01  4.13257536e-01
   3.29470076e-01 -5.31834572e-01 -7.20252119e-02  1.12254256e+00
   1.55150908e-01 -5.57067889e-01 -3.20051583e-01]
 [ 6.12911147e-01 -1.88663955e+00  8.39788383e-01 -3.38163671e+00
  -3.95554563e-01 -2.11504596e+00 -1.85229019e+00 -1.73762246e+00
  -9.63505236e-01 -2.58768249e+00  1.44004867e+00  2.77004424e-01
  -2.69815793e+00 -7.50782029e-01 -1.08818265e+00 -1.12524122e+00
  -7.76321906e-01 -1.51093337e+00  5.86817454e-01 -1.58839363e+00
  -7.67810829e-01 -3.92892217e-01 -1.88590291e+00  1.28811861e+00
   7.15653115e-01  1.41342637e+00 -2.49160448e+00]
 [ 1.49120365e+00  8.05825658e-01 -1.97128117e+00  2.25579572e-01
  -1.92677741e+00  8.54029697e-01  1.73906901e+00 -9.89250988e-01
  -1.06032672e+00  6.53034889e-01  2.50302658e+00 -3.05791333e+00
   3.66671966e-01 -7.50782029e-01 -3.21563902e-02 -2.69174722e-01
  -7.76321906e-01 -1.97551023e+00  3.42702264e-01 -7.71824602e-01
  -7.67810829e-01  2.56480044e+00 -1.88590291e+00 -1.02523277e+00
   1.88519539e+00 -1.57005390e+00 -7.51374896e-01]
 [ 2.09614463e+00 -1.66131603e+00 -5.39049492e-01  2.42159755e-02
  -7.93784449e-01 -1.28852512e+00  8.63393407e-01  7.50310100e-01
  -1.34647299e+00  3.45374878e-01  1.02426838e+00 -1.06721341e+00
   7.31422672e-01  2.51569179e+00 -1.07236651e+00  2.05383742e+00
   1.48070687e+00  9.85190034e-01  2.66036260e+00 -8.78144682e-01
   1.93277995e+00 -1.73257203e+00 -9.88417168e-01  2.53099876e+00
   1.74185252e+00  1.56297399e+00  3.76946091e-02]
 [ 5.80762879e-01 -1.60801337e+00 -1.69288314e+00 -8.23246210e-01
  -1.21191619e+00 -1.84996484e-01  1.33302658e+00  4.50600029e-01
  -5.36153022e-01 -7.71922487e-01 -1.36210208e+00 -2.56493781e-01
  -1.62657193e+00  9.37880052e-01 -6.11820664e-01  8.18078730e-01
   1.36673528e+00 -4.09645688e-03  6.60706308e-01 -2.08076873e+00
   1.77158388e+00  5.74064401e-01 -1.29918047e-01  1.66779776e-02
   1.04470963e+00  1.91983421e+00  7.67771108e-01]
 [-3.75167922e-01  8.05825658e-01  8.39788383e-01 -7.73164522e-02
  -3.95554563e-01 -6.30508133e-01 -6.55170456e-01 -4.79371523e-01
  -8.66683756e-01 -4.50188050e-01  3.77070758e-01 -2.93844699e-01
   2.53159666e-01 -7.50782029e-01  5.41115006e-01  4.15678720e-01
  -7.76321906e-01  2.39471736e-01 -1.43000516e-01 -3.05213726e-01
  -7.67810829e-01 -7.56633514e-02  9.31131288e-01  4.20611844e-01
  -4.53889160e-01 -4.11992481e-01 -7.51374896e-01]
 [-1.03388730e+00  8.05825658e-01  8.39788383e-01  7.76299615e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.69834009e-01
   2.95174010e-01  6.53034889e-01 -6.85907155e-01  5.09769581e-01
   4.80183886e-01 -7.50782029e-01  2.21535315e-02 -4.40387981e-01
  -7.76321906e-01  6.04948684e-01 -2.99878296e-01  8.61313462e-01
  -7.67810829e-01 -3.46240913e-01  9.31131288e-01 -4.46894924e-01
  -4.53889160e-01 -8.24183833e-01  9.88854688e-01]
 [-7.04527612e-01  8.05825658e-01  8.39788383e-01  3.63259583e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.53386284e-01
   1.98352530e-01  7.90937756e-01 -6.85907155e-01  2.60378293e-01
   4.80183886e-01 -7.50782029e-01  5.23257103e-02 -2.69174845e-01
  -7.76321906e-01  5.09722166e-01 -3.81635059e-01  1.09461890e+00
  -7.67810829e-01 -2.99589609e-01  9.31131288e-01 -7.36063847e-01
  -4.53889160e-01 -6.08274077e-01  9.88854688e-01]
 [-3.75167922e-01  8.05825658e-01  8.39788383e-01  1.15435563e-01
  -3.95554563e-01 -6.30508133e-01 -6.55170456e-01 -6.02729458e-01
  -6.73040795e-01 -1.05430882e-01  3.77070758e-01 -3.50900896e-01
  -3.14401561e-01 -7.50782029e-01  4.02322984e-01  7.58104992e-01
  -7.76321906e-01  1.67084546e-01  2.00872874e-02  4.47444301e-02
  -7.67810829e-01 -1.03654134e-01  9.31131288e-01  7.09780767e-01
  -4.53889160e-01 -7.83137671e-02 -7.51374896e-01]
 [-6.84355474e-02  2.84141537e-01 -1.69788121e+00  5.40422490e-01
   5.11545424e-01 -1.57447161e+00  9.63046404e-01 -5.10745635e-01
  -8.13370193e-01  8.70346374e-01 -1.37863163e+00 -2.76723361e-01
   3.06857208e-01  8.98699449e-01  3.35837571e+00 -8.16737236e-01
  -1.30955564e-01 -2.08436263e+00 -2.43781986e+00  6.71699560e-01
   9.09626803e-01  8.39292756e-01  1.12057955e-01  2.75562874e-01
  -1.71363829e+00  1.03010079e+00  4.86086561e-01]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.03388730e+00  8.05825658e-01  8.39788383e-01  6.38619604e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -4.87595385e-01
   3.91995491e-01  6.53034889e-01 -6.85907155e-01  3.71724551e-01
   4.80183886e-01 -7.50782029e-01  6.43945818e-02 -6.11601117e-01
  -7.76321906e-01  4.72042555e-01 -2.02129364e-01  8.61313462e-01
  -7.67810829e-01 -1.68965959e-01  9.31131288e-01 -1.57726001e-01
  -4.53889160e-01 -7.84927514e-01  9.88854688e-01]
 [-1.14367386e+00  8.05825658e-01  8.39788383e-01  3.08187578e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.45162422e-01
   3.91995491e-01  7.21986322e-01 -6.85907155e-01  4.67344026e-01
   1.04774511e+00 -7.50782029e-01  1.18704503e-01 -9.54028410e-01
  -7.76321906e-01  2.18595402e-01 -2.11768815e-01  9.77966181e-01
  -7.67810829e-01 -8.49936122e-02  9.31131288e-01 -1.57726001e-01
  -4.53889160e-01 -8.24183833e-01  9.88854688e-01]
 [ 1.59882273e+00  2.76442327e-01 -1.11786166e-01 -5.21342534e-01
   1.08470751e+00  7.65835397e-01 -2.90056780e-02  1.69971047e+00
  -4.34104772e-01 -1.75595151e+00 -1.50916875e-01 -3.56802386e-01
   2.81324914e-01  1.15706266e+00 -5.84465176e-01  1.11906179e-01
   1.54285023e+00  8.80097566e-01  5.76176590e-01  2.60207980e-01
   3.00679575e-01 -1.64296524e+00 -6.57718228e-02 -1.20741593e+00
   4.73996691e-01 -4.82543505e-01 -1.59772124e-01]
 [-1.14367386e+00  8.05825658e-01  8.39788383e-01  3.90795585e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.36938559e-01
   3.91995491e-01  8.59889190e-01 -6.85907155e-01  2.57385763e-01
   1.04774528e+00 -7.50782029e-01  1.79048861e-01 -9.54027920e-01
  -7.76321906e-01  2.55805939e-01 -3.74861194e-01  9.77966181e-01
  -7.67810829e-01 -8.49936122e-02  9.31131288e-01 -4.46894924e-01
  -4.53889160e-01 -8.04555674e-01  9.88854688e-01]
 [ 3.44709982e-01 -3.20033241e-03  6.43710700e-02  1.00721394e+00
  -1.00736098e+00  7.96480744e-01  9.61344139e-01  9.29779356e-01
   1.00251553e+00 -8.69771534e-01  2.59092607e-01  1.15315816e+00
  -1.06891200e+00  6.78179435e-01 -4.20307201e-01  1.14075667e+00
   1.87966244e+00  7.39458852e-01 -7.44661103e-01  7.92668964e-01
   1.67141964e+00  1.40490961e+00 -1.31019526e+00 -1.21108498e+00
  -1.69143256e+00  7.51149560e-01 -1.43883529e+00]
 [-1.99299872e-01 -7.91123434e-01 -1.40018339e-01  8.24031665e-01
  -2.92541544e-01 -8.11842373e-01 -6.91292416e-01  1.82678955e+00
   2.24907148e+00  2.53091649e-01 -1.86731291e-02  9.79222565e-01
  -5.94931658e-01  9.73983586e-01 -9.90754744e-01 -1.44137358e+00
   8.82943480e-02 -7.49894452e-01  5.70571421e-01 -1.33141128e+00
  -5.26247461e-03  8.12980348e-02 -2.91843635e-01 -9.75254017e-01
   5.65736712e-01  2.68611550e-01  4.28562452e-01]
 [-6.46833815e-01 -1.05689642e+00 -6.29778620e-01 -4.10519261e-01
  -8.55550088e-01  5.49403498e-01  1.29890194e+00  1.35544722e+00
   1.77255746e+00  7.40216122e-01  3.59281738e-01  1.38390450e+00
   8.27496607e-01 -4.04458719e-01  6.16124468e-02  1.58338431e+00
   7.59603546e-01  1.25237965e+00 -6.21669719e-01  4.13257536e-01
   3.29470076e-01 -5.31834572e-01 -7.20252119e-02  1.12254256e+00
   1.55150908e-01 -5.57067889e-01 -3.20051583e-01]
 [ 6.12911147e-01 -1.88663955e+00  8.39788383e-01 -3.38163671e+00
  -3.95554563e-01 -2.11504596e+00 -1.85229019e+00 -1.73762246e+00
  -9.63505236e-01 -2.58768249e+00  1.44004867e+00  2.77004424e-01
  -2.69815793e+00 -7.50782029e-01 -1.08818265e+00 -1.12524122e+00
  -7.76321906e-01 -1.51093337e+00  5.86817454e-01 -1.58839363e+00
  -7.67810829e-01 -3.92892217e-01 -1.88590291e+00  1.28811861e+00
   7.15653115e-01  1.41342637e+00 -2.49160448e+00]
 [ 1.49120365e+00  8.05825658e-01 -1.97128117e+00  2.25579572e-01
  -1.92677741e+00  8.54029697e-01  1.73906901e+00 -9.89250988e-01
  -1.06032672e+00  6.53034889e-01  2.50302658e+00 -3.05791333e+00
   3.66671966e-01 -7.50782029e-01 -3.21563902e-02 -2.69174722e-01
  -7.76321906e-01 -1.97551023e+00  3.42702264e-01 -7.71824602e-01
  -7.67810829e-01  2.56480044e+00 -1.88590291e+00 -1.02523277e+00
   1.88519539e+00 -1.57005390e+00 -7.51374896e-01]
 [ 2.09614463e+00 -1.66131603e+00 -5.39049492e-01  2.42159755e-02
  -7.93784449e-01 -1.28852512e+00  8.63393407e-01  7.50310100e-01
  -1.34647299e+00  3.45374878e-01  1.02426838e+00 -1.06721341e+00
   7.31422672e-01  2.51569179e+00 -1.07236651e+00  2.05383742e+00
   1.48070687e+00  9.85190034e-01  2.66036260e+00 -8.78144682e-01
   1.93277995e+00 -1.73257203e+00 -9.88417168e-01  2.53099876e+00
   1.74185252e+00  1.56297399e+00  3.76946091e-02]
 [ 5.80762879e-01 -1.60801337e+00 -1.69288314e+00 -8.23246210e-01
  -1.21191619e+00 -1.84996484e-01  1.33302658e+00  4.50600029e-01
  -5.36153022e-01 -7.71922487e-01 -1.36210208e+00 -2.56493781e-01
  -1.62657193e+00  9.37880052e-01 -6.11820664e-01  8.18078730e-01
   1.36673528e+00 -4.09645688e-03  6.60706308e-01 -2.08076873e+00
   1.77158388e+00  5.74064401e-01 -1.29918047e-01  1.66779776e-02
   1.04470963e+00  1.91983421e+00  7.67771108e-01]
 [-3.75167922e-01  8.05825658e-01  8.39788383e-01 -7.73164522e-02
  -3.95554563e-01 -6.30508133e-01 -6.55170456e-01 -4.79371523e-01
  -8.66683756e-01 -4.50188050e-01  3.77070758e-01 -2.93844699e-01
   2.53159666e-01 -7.50782029e-01  5.41115006e-01  4.15678720e-01
  -7.76321906e-01  2.39471736e-01 -1.43000516e-01 -3.05213726e-01
  -7.67810829e-01 -7.56633514e-02  9.31131288e-01  4.20611844e-01
  -4.53889160e-01 -4.11992481e-01 -7.51374896e-01]
 [-1.03388730e+00  8.05825658e-01  8.39788383e-01  7.76299615e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.69834009e-01
   2.95174010e-01  6.53034889e-01 -6.85907155e-01  5.09769581e-01
   4.80183886e-01 -7.50782029e-01  2.21535315e-02 -4.40387981e-01
  -7.76321906e-01  6.04948684e-01 -2.99878296e-01  8.61313462e-01
  -7.67810829e-01 -3.46240913e-01  9.31131288e-01 -4.46894924e-01
  -4.53889160e-01 -8.24183833e-01  9.88854688e-01]
 [-7.04527612e-01  8.05825658e-01  8.39788383e-01  3.63259583e-01
   1.13566828e+00  8.54029697e-01 -6.55170456e-01 -5.53386284e-01
   1.98352530e-01  7.90937756e-01 -6.85907155e-01  2.60378293e-01
   4.80183886e-01 -7.50782029e-01  5.23257103e-02 -2.69174845e-01
  -7.76321906e-01  5.09722166e-01 -3.81635059e-01  1.09461890e+00
  -7.67810829e-01 -2.99589609e-01  9.31131288e-01 -7.36063847e-01
  -4.53889160e-01 -6.08274077e-01  9.88854688e-01]
 [-3.75167922e-01  8.05825658e-01  8.39788383e-01  1.15435563e-01
  -3.95554563e-01 -6.30508133e-01 -6.55170456e-01 -6.02729458e-01
  -6.73040795e-01 -1.05430882e-01  3.77070758e-01 -3.50900896e-01
  -3.14401561e-01 -7.50782029e-01  4.02322984e-01  7.58104992e-01
  -7.76321906e-01  1.67084546e-01  2.00872874e-02  4.47444301e-02
  -7.67810829e-01 -1.03654134e-01  9.31131288e-01  7.09780767e-01
  -4.53889160e-01 -7.83137671e-02 -7.51374896e-01]
 [-6.84355474e-02  2.84141537e-01 -1.69788121e+00  5.40422490e-01
   5.11545424e-01 -1.57447161e+00  9.63046404e-01 -5.10745635e-01
  -8.13370193e-01  8.70346374e-01 -1.37863163e+00 -2.76723361e-01
   3.06857208e-01  8.98699449e-01  3.35837571e+00 -8.16737236e-01
  -1.30955564e-01 -2.08436263e+00 -2.43781986e+00  6.71699560e-01
   9.09626803e-01  8.39292756e-01  1.12057955e-01  2.75562874e-01
  -1.71363829e+00  1.03010079e+00  4.86086561e-01]]
upper = 
[6828.39050943 6828.39050943 6828.39050943 ... 6828.39050943 6828.39050943
 6828.39050943]
upper.argmax() = 0
all predict_target = 
[6425.8138125 6425.8138125 6425.8138125 ... 6425.8138125 6425.8138125
 6425.8138125]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
 3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
 4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
 6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
 3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
 4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
 4.42164767e+00 2.33945444e+02 3.31393482e+00]
================= config17 =================
2022年 02月 22日 星期二 17:28:09 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (158030) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (177804) - 没有那个进程
black_box_function中schafferRun(i) 中的i为[36.61969812007611, 0.07364737247333608, 0.5584392401983372, 445.5545120170226, 3.9175448574934912, 5.117223993771585, 6.470380899387955, 464.70773323136996, 41.99019054568298, 61.91462898379683, 6.519626467122063, 2021013775.6453583, 0.6571814037404378, 0.11154263017507804, 788.905781564202, 0.595949187598856, 0.31619690734200423, 1249572407.3437846, 2018422509.4722152, 33.2523732448466, 0.4383135336681899, 748.5078024204117, 0.9892728972986514, 20.703578148097737, 4.421647669194604, 233.9454438300806, 3.3139348234884003]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 36.61969812007611
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.07364737247333608
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.5584392401983372
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 445.5545120170226
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.9175448574934912
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 5.117223993771585
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 6.470380899387955
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 464.70773323136996
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 41.99019054568298
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 61.91462898379683
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 6.519626467122063
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 2021013775.6453583
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.6571814037404378
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.11154263017507804
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 788.905781564202
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.595949187598856
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.31619690734200423
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1249572407.3437846
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 2018422509.4722152
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 33.2523732448466
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.4383135336681899
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 748.5078024204117
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.9892728972986514
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 20.703578148097737
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.421647669194604
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 233.9454438300806
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.3139348234884003
configNum = 17	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 17 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 36.61969812007611, 'spark.broadcast.checksum': 0.07364737247333608, 'spark.broadcast.compress': 0.5584392401983372, 'spark.default.parallelism': 445.5545120170226, 'spark.executor.cores': 3.9175448574934912, 'spark.executor.instances': 5.117223993771585, 'spark.executor.memory': 6.470380899387955, 'spark.executor.memoryOverhead': 464.70773323136996, 'spark.kryoserializer.buffer': 41.99019054568298, 'spark.kryoserializer.buffer.max': 61.91462898379683, 'spark.locality.wait': 6.519626467122063, 'spark.maxRemoteBlockSizeFetchToMem': 2021013775.6453583, 'spark.memory.fraction': 0.6571814037404378, 'spark.memory.offHeap.enabled': 0.11154263017507804, 'spark.memory.offHeap.size': 788.905781564202, 'spark.memory.storageFraction': 0.595949187598856, 'spark.rdd.compress': 0.31619690734200423, 'spark.reducer.maxBlocksInFlightPerAddress': 1249572407.3437846, 'spark.reducer.maxReqsInFlight': 2018422509.4722152, 'spark.reducer.maxSizeInFlight': 33.2523732448466, 'spark.scheduler.mode': 0.4383135336681899, 'spark.scheduler.revive.interval': 748.5078024204117, 'spark.shuffle.compress': 0.9892728972986514, 'spark.shuffle.file.buffer': 20.703578148097737, 'spark.shuffle.io.numConnectionsPerPeer': 4.421647669194604, 'spark.shuffle.sort.bypassMergeThreshold': 233.9454438300806, 'spark.storage.memoryMapThreshold': 3.3139348234884003} target = -233.708
x_probe = {'spark.broadcast.blockSize': 36.61969812007611, 'spark.broadcast.checksum': 0.07364737247333608, 'spark.broadcast.compress': 0.5584392401983372, 'spark.default.parallelism': 445.5545120170226, 'spark.executor.cores': 3.9175448574934912, 'spark.executor.instances': 5.117223993771585, 'spark.executor.memory': 6.470380899387955, 'spark.executor.memoryOverhead': 464.70773323136996, 'spark.kryoserializer.buffer': 41.99019054568298, 'spark.kryoserializer.buffer.max': 61.91462898379683, 'spark.locality.wait': 6.519626467122063, 'spark.maxRemoteBlockSizeFetchToMem': 2021013775.6453583, 'spark.memory.fraction': 0.6571814037404378, 'spark.memory.offHeap.enabled': 0.11154263017507804, 'spark.memory.offHeap.size': 788.905781564202, 'spark.memory.storageFraction': 0.595949187598856, 'spark.rdd.compress': 0.31619690734200423, 'spark.reducer.maxBlocksInFlightPerAddress': 1249572407.3437846, 'spark.reducer.maxReqsInFlight': 2018422509.4722152, 'spark.reducer.maxSizeInFlight': 33.2523732448466, 'spark.scheduler.mode': 0.4383135336681899, 'spark.scheduler.revive.interval': 748.5078024204117, 'spark.shuffle.compress': 0.9892728972986514, 'spark.shuffle.file.buffer': 20.703578148097737, 'spark.shuffle.io.numConnectionsPerPeer': 4.421647669194604, 'spark.shuffle.sort.bypassMergeThreshold': 233.9454438300806, 'spark.storage.memoryMapThreshold': 3.3139348234884003}
target = -233.708
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (17, 27)
before probe, target = (17,)
标准化前的train_x = 
[[3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.55570675e+01 6.99522212e-01 7.24155771e-01 4.61385906e+02
  2.60044587e+00 7.96123443e+00 5.35033660e+00 7.56349035e+02
  1.13305626e+02 8.99147968e+01 5.88901166e+00 2.02795725e+09
  7.03530446e-01 3.96170620e-01 1.42677365e+02 6.52349409e-01
  9.14104272e-01 1.86204721e+09 1.44237129e+09 6.84115482e+01
  7.78713223e-01 8.37685058e+02 2.04366581e-01 1.93572884e+01
  1.94185663e+00 2.73258844e+02 2.60495994e+00]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00]
 [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
  2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
  1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
  8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
  5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
  3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
  3.52075079e+00 2.06608813e+02 3.24785426e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [6.15101550e+01 8.36866979e-02 5.09497062e-01 4.25687261e+02
  2.73992689e+00 6.55675297e+00 5.26851460e+00 7.34526047e+02
  8.90445993e+01 1.07538019e+02 6.60885331e+00 1.59807089e+09
  8.62133167e-01 9.05609418e-01 3.46209799e+01 7.05679422e-01
  7.76796616e-01 1.91743966e+09 1.99520910e+09 5.40885761e+01
  8.62151313e-01 5.01415609e+02 3.18592420e-01 3.22981111e+01
  4.87743678e+00 3.14619035e+02 3.45342839e+00]
 [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
  2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
  9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
  6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
  7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
  8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
  4.28135496e+00 3.32800068e+02 3.87295723e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.53000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.74000000e+02
  1.06000000e+02 1.12000000e+02 5.00000000e+00 1.90339072e+09
  8.39999974e-01 0.00000000e+00 2.16000000e+02 5.60000002e-01
  0.00000000e+00 1.83172608e+09 1.51458598e+09 6.90000000e+01
  0.00000000e+00 6.50000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.60000000e+01 1.00000000e+00 1.00000000e+00 4.38000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.76000000e+02
  1.05000000e+02 1.14000000e+02 5.00000000e+00 1.85510605e+09
  8.39999974e-01 0.00000000e+00 2.21000000e+02 5.69999993e-01
  0.00000000e+00 1.81026022e+09 1.50131200e+09 7.10000000e+01
  0.00000000e+00 6.55000000e+02 1.00000000e+00 2.10000000e+01
  3.00000000e+00 2.04000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.29000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.70000000e+02
  9.60000000e+01 1.01000000e+02 6.00000000e+00 1.73675622e+09
  7.69999981e-01 0.00000000e+00 2.79000000e+02 6.29999995e-01
  0.00000000e+00 1.73302323e+09 1.56653542e+09 6.20000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 2.60000000e+01
  3.00000000e+00 2.31000000e+02 3.00000000e+00]
 [4.17938972e+01 8.06242948e-01 9.72583430e-02 4.44433865e+02
  3.59240233e+00 6.36413646e+00 5.35175857e+00 5.81184991e+02
  9.45506378e+01 1.15151660e+02 4.34831715e+00 1.75111774e+09
  8.24730545e-01 4.57308414e-01 7.68863982e+02 5.38018693e-01
  2.22114310e-01 1.22550451e+09 1.16747094e+09 6.73745437e+01
  5.35514327e-01 7.77063295e+02 7.09242673e-01 2.44983936e+01
  1.92286995e+00 2.87470631e+02 3.71109092e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]]
标准化后的train_x = 
[[-1.01508959  0.8634136   0.88578753  0.61773369  1.07759219  0.8368725
  -0.71152334 -0.3895763   0.43633846  0.6973026  -0.74468588  0.30443911
   0.55182288 -0.75008626 -0.11050159 -0.64046424 -0.80836698  0.54683274
  -0.31286224  0.84890032 -0.81935602 -0.20691342  0.88429857 -0.11057757
  -0.51929478 -0.80783177  1.03044787]
 [-1.12693021  0.8634136   0.88578753  0.28035521  1.07759219  0.8368725
  -0.71152334 -0.44547481  0.43633846  0.75609697 -0.74468588  0.39957043
   1.09744701 -0.75008626 -0.06771778 -0.99311232 -0.80836698  0.31127886
  -0.32107902  0.94268028 -0.81935602 -0.12118025  0.88429857 -0.11057757
  -0.51929478 -0.84829576  1.03044787]
 [ 1.66687724  0.35843461 -0.09045607 -0.56661357  1.02656982  0.76694824
  -0.14798274  1.73433237 -0.05130079 -1.35682189 -0.20672885 -0.42036853
   0.3606501   1.20948944 -0.62165488  0.10463833  1.58075634  0.92607921
   0.35057531  0.36565697  0.27034405 -1.71182101 -0.11960011 -1.17170195
   0.39851757 -0.49614532 -0.15206803]
 [-1.12693021  0.8634136   0.88578753  0.36469983  1.07759219  0.8368725
  -0.71152334 -0.43748931  0.43633846  0.8736857  -0.74468588  0.19068405
   1.09744717 -0.75008626 -0.02018021 -0.99311182 -0.80836698  0.34586235
  -0.46010097  0.94268028 -0.81935602 -0.12118025  0.88429857 -0.40289646
  -0.51929478 -0.82806377  1.03044787]
 [ 0.38930062  0.09168335  0.09026794  0.99407674 -1.06802759  0.7912452
   0.74331991  0.98671705  0.79672272 -0.60118292  0.20555431  1.08188333
  -0.93739813  0.71762134 -0.49233589  1.16419799  1.92772752  0.79536954
  -0.77532294  0.79371533  1.66829348  1.39996477 -1.37275604 -1.17541097
  -1.7434029   0.77550066 -1.46886868]
 [-0.16488741 -0.65991685 -0.11942015  0.80704354 -0.35234407 -0.48390307
  -0.74403266  1.85772817  1.53255302  0.35627403 -0.07375175  0.90883571
  -0.48173784  1.02144619 -0.94171827 -1.49500378  0.08232795 -0.58883596
   0.34579739 -0.91388456 -0.04167098  0.04859837 -0.34725833 -0.93701106
   0.48926162  0.27811801  0.45362477]
 [-0.62079451 -0.91343781 -0.6218772  -0.45346053 -0.91603319  0.59535165
   1.04711777  1.4000473   1.25127126  0.77164138  0.30629903  1.31145166
   0.88571144 -0.39437243 -0.11269328  1.6200372   0.77388526  1.27207832
  -0.67048358  0.48869724  0.29970605 -0.57739103 -0.12589738  1.18363717
   0.0831333  -0.57296235 -0.31707637]
 [ 0.66251971 -1.70493015  0.88578753 -3.48703781 -0.45548161 -1.51713936
  -1.78891637 -1.60337242 -0.36380093 -2.06603262  1.39305928  0.21020255
  -2.50367126 -0.75008626 -1.0184692  -1.1694355  -0.80836698 -1.29614581
   0.35964571 -1.12047894 -0.81935602 -0.43553519 -1.9525036   1.35101687
   0.63755047  1.45815153 -2.55269876]
 [ 1.55724467  0.8634136  -1.99815748  0.19601059 -1.98855542  0.8368725
   1.44326272 -0.87669185 -0.42095374  0.6973026   2.46193185 -3.10768971
   0.44269836 -0.75008626 -0.18656171 -0.28781709 -0.80836698 -1.72792371
   0.15155893 -0.46401919 -0.81935602  2.58417736 -1.9525036  -0.98753424
   1.79439571 -1.61711153 -0.76112545]
 [ 2.17350382 -1.48999395 -0.52879597 -0.00958614 -0.85419288 -0.86183782
   0.65516545  0.81244956 -0.58986321  0.43496324  0.97497331 -1.12715276
   0.79335091  2.60495765 -1.0060097   2.10453241  1.51673861  1.02375219
   2.12716102 -0.54949249  1.93484183 -1.80330676 -1.04871993  2.60743592
   1.65260903  1.61229979  0.05122476]
 [ 0.62976996 -1.43914851 -1.71254213 -0.87486396 -1.27283007  0.01308752
   1.07782952  0.52142632 -0.11153892 -0.51774778 -1.42463059 -0.32057203
  -1.47350367  0.98436371 -0.64320476  0.83188874  1.39932938  0.10430896
   0.42262947 -1.51631128  1.770446    0.55169756 -0.18419647  0.06572622
   0.96303461  1.98013834  0.80284144]
 [-0.34404587  0.8634136   0.88578753 -0.11325302 -0.45548161 -0.34013343
  -0.71152334 -0.3815908  -0.30664812 -0.24340726  0.3241867  -0.35773226
   0.33357349 -0.75008626  0.26504522  0.41747788 -0.80836698  0.33068133
  -0.26246008 -0.08889933 -0.81935602 -0.11165434  0.88429857  0.47406021
  -0.51929478 -0.42342389 -0.76112545]
 [-1.01508959  0.8634136   0.88578753  0.75830805  1.07759219  0.8368725
  -0.71152334 -0.46943131  0.37918564  0.6973026  -0.74468588  0.44177939
   0.55182288 -0.75008626 -0.14377789 -0.46414073 -0.80836698  0.67035574
  -0.39618462  0.84890032 -0.81935602 -0.38790565  0.88429857 -0.40289646
  -0.51929478 -0.84829576  1.03044787]
 [-0.67956773  0.8634136   0.88578753  0.33658495  1.07759219  0.8368725
  -0.71152334 -0.45346031  0.32203283  0.81489134 -0.74468588  0.1936613
   0.55182288 -0.75008626 -0.12000911 -0.28781722 -0.80836698  0.58185218
  -0.46587509  1.03646025 -0.81935602 -0.34027612  0.88429857 -0.69521535
  -0.51929478 -0.62574383  1.03044787]
 [-0.34404587  0.8634136   0.88578753  0.08355109 -0.45548161 -0.34013343
  -0.71152334 -0.50137331 -0.19234249  0.05056457  0.3241867  -0.41449717
  -0.21205065 -0.75008626  0.15570881  0.77012491 -0.80836698  0.26340465
  -0.12344204  0.19244057 -0.81935602 -0.14023207  0.88429857  0.76637909
  -0.51929478 -0.07948    -0.76112545]
 [-0.03157468  0.36577889 -1.71766977  0.51747224  0.45271489 -1.08854859
   0.74485192 -0.41205556 -0.27517762  0.88260247 -1.44125181 -0.34069833
   0.38519554  0.94412073  2.48440319 -0.85172327 -0.14353501 -1.82909117
  -2.21859223  0.69646508  0.89137896  0.82248749  0.05947756  0.32743119
  -1.76536755  1.06303346  0.51284607]
 [-0.61026031 -1.51577838 -0.38764942  0.5489791   0.95118237 -2.55617195
   1.95004782 -1.34218479 -3.27915505 -2.24743505  0.87960118  1.04620326
  -1.44318113 -0.33685025  2.57967704  0.16972853  0.13807277 -1.72985941
   2.24903499 -2.50351085  0.58086477  0.55047052  0.8538679  -0.78186505
   1.12533157 -0.0198878  -0.1986882 ]]
train_y = 
[   -162.804    -163.342    -164.05     -165.666    -181.266    -182.936
    -184.517    -194.423    -220.648    -222.405    -245.931 -100000.
    -160.548    -169.925    -213.518    -181.042    -233.708]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.01508959  0.8634136   0.88578753  0.61773369  1.07759219  0.8368725
  -0.71152334 -0.3895763   0.43633846  0.6973026  -0.74468588  0.30443911
   0.55182288 -0.75008626 -0.11050159 -0.64046424 -0.80836698  0.54683274
  -0.31286224  0.84890032 -0.81935602 -0.20691342  0.88429857 -0.11057757
  -0.51929478 -0.80783177  1.03044787]
 [-1.12693021  0.8634136   0.88578753  0.28035521  1.07759219  0.8368725
  -0.71152334 -0.44547481  0.43633846  0.75609697 -0.74468588  0.39957043
   1.09744701 -0.75008626 -0.06771778 -0.99311232 -0.80836698  0.31127886
  -0.32107902  0.94268028 -0.81935602 -0.12118025  0.88429857 -0.11057757
  -0.51929478 -0.84829576  1.03044787]
 [ 1.66687724  0.35843461 -0.09045607 -0.56661357  1.02656982  0.76694824
  -0.14798274  1.73433237 -0.05130079 -1.35682189 -0.20672885 -0.42036853
   0.3606501   1.20948944 -0.62165488  0.10463833  1.58075634  0.92607921
   0.35057531  0.36565697  0.27034405 -1.71182101 -0.11960011 -1.17170195
   0.39851757 -0.49614532 -0.15206803]
 [-1.12693021  0.8634136   0.88578753  0.36469983  1.07759219  0.8368725
  -0.71152334 -0.43748931  0.43633846  0.8736857  -0.74468588  0.19068405
   1.09744717 -0.75008626 -0.02018021 -0.99311182 -0.80836698  0.34586235
  -0.46010097  0.94268028 -0.81935602 -0.12118025  0.88429857 -0.40289646
  -0.51929478 -0.82806377  1.03044787]
 [ 0.38930062  0.09168335  0.09026794  0.99407674 -1.06802759  0.7912452
   0.74331991  0.98671705  0.79672272 -0.60118292  0.20555431  1.08188333
  -0.93739813  0.71762134 -0.49233589  1.16419799  1.92772752  0.79536954
  -0.77532294  0.79371533  1.66829348  1.39996477 -1.37275604 -1.17541097
  -1.7434029   0.77550066 -1.46886868]
 [-0.16488741 -0.65991685 -0.11942015  0.80704354 -0.35234407 -0.48390307
  -0.74403266  1.85772817  1.53255302  0.35627403 -0.07375175  0.90883571
  -0.48173784  1.02144619 -0.94171827 -1.49500378  0.08232795 -0.58883596
   0.34579739 -0.91388456 -0.04167098  0.04859837 -0.34725833 -0.93701106
   0.48926162  0.27811801  0.45362477]
 [-0.62079451 -0.91343781 -0.6218772  -0.45346053 -0.91603319  0.59535165
   1.04711777  1.4000473   1.25127126  0.77164138  0.30629903  1.31145166
   0.88571144 -0.39437243 -0.11269328  1.6200372   0.77388526  1.27207832
  -0.67048358  0.48869724  0.29970605 -0.57739103 -0.12589738  1.18363717
   0.0831333  -0.57296235 -0.31707637]
 [ 0.66251971 -1.70493015  0.88578753 -3.48703781 -0.45548161 -1.51713936
  -1.78891637 -1.60337242 -0.36380093 -2.06603262  1.39305928  0.21020255
  -2.50367126 -0.75008626 -1.0184692  -1.1694355  -0.80836698 -1.29614581
   0.35964571 -1.12047894 -0.81935602 -0.43553519 -1.9525036   1.35101687
   0.63755047  1.45815153 -2.55269876]
 [ 1.55724467  0.8634136  -1.99815748  0.19601059 -1.98855542  0.8368725
   1.44326272 -0.87669185 -0.42095374  0.6973026   2.46193185 -3.10768971
   0.44269836 -0.75008626 -0.18656171 -0.28781709 -0.80836698 -1.72792371
   0.15155893 -0.46401919 -0.81935602  2.58417736 -1.9525036  -0.98753424
   1.79439571 -1.61711153 -0.76112545]
 [ 2.17350382 -1.48999395 -0.52879597 -0.00958614 -0.85419288 -0.86183782
   0.65516545  0.81244956 -0.58986321  0.43496324  0.97497331 -1.12715276
   0.79335091  2.60495765 -1.0060097   2.10453241  1.51673861  1.02375219
   2.12716102 -0.54949249  1.93484183 -1.80330676 -1.04871993  2.60743592
   1.65260903  1.61229979  0.05122476]
 [ 0.62976996 -1.43914851 -1.71254213 -0.87486396 -1.27283007  0.01308752
   1.07782952  0.52142632 -0.11153892 -0.51774778 -1.42463059 -0.32057203
  -1.47350367  0.98436371 -0.64320476  0.83188874  1.39932938  0.10430896
   0.42262947 -1.51631128  1.770446    0.55169756 -0.18419647  0.06572622
   0.96303461  1.98013834  0.80284144]
 [-0.34404587  0.8634136   0.88578753 -0.11325302 -0.45548161 -0.34013343
  -0.71152334 -0.3815908  -0.30664812 -0.24340726  0.3241867  -0.35773226
   0.33357349 -0.75008626  0.26504522  0.41747788 -0.80836698  0.33068133
  -0.26246008 -0.08889933 -0.81935602 -0.11165434  0.88429857  0.47406021
  -0.51929478 -0.42342389 -0.76112545]
 [-1.01508959  0.8634136   0.88578753  0.75830805  1.07759219  0.8368725
  -0.71152334 -0.46943131  0.37918564  0.6973026  -0.74468588  0.44177939
   0.55182288 -0.75008626 -0.14377789 -0.46414073 -0.80836698  0.67035574
  -0.39618462  0.84890032 -0.81935602 -0.38790565  0.88429857 -0.40289646
  -0.51929478 -0.84829576  1.03044787]
 [-0.67956773  0.8634136   0.88578753  0.33658495  1.07759219  0.8368725
  -0.71152334 -0.45346031  0.32203283  0.81489134 -0.74468588  0.1936613
   0.55182288 -0.75008626 -0.12000911 -0.28781722 -0.80836698  0.58185218
  -0.46587509  1.03646025 -0.81935602 -0.34027612  0.88429857 -0.69521535
  -0.51929478 -0.62574383  1.03044787]
 [-0.34404587  0.8634136   0.88578753  0.08355109 -0.45548161 -0.34013343
  -0.71152334 -0.50137331 -0.19234249  0.05056457  0.3241867  -0.41449717
  -0.21205065 -0.75008626  0.15570881  0.77012491 -0.80836698  0.26340465
  -0.12344204  0.19244057 -0.81935602 -0.14023207  0.88429857  0.76637909
  -0.51929478 -0.07948    -0.76112545]
 [-0.03157468  0.36577889 -1.71766977  0.51747224  0.45271489 -1.08854859
   0.74485192 -0.41205556 -0.27517762  0.88260247 -1.44125181 -0.34069833
   0.38519554  0.94412073  2.48440319 -0.85172327 -0.14353501 -1.82909117
  -2.21859223  0.69646508  0.89137896  0.82248749  0.05947756  0.32743119
  -1.76536755  1.06303346  0.51284607]
 [-0.61026031 -1.51577838 -0.38764942  0.5489791   0.95118237 -2.55617195
   1.95004782 -1.34218479 -3.27915505 -2.24743505  0.87960118  1.04620326
  -1.44318113 -0.33685025  2.57967704  0.16972853  0.13807277 -1.72985941
   2.24903499 -2.50351085  0.58086477  0.55047052  0.8538679  -0.78186505
   1.12533157 -0.0198878  -0.1986882 ]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.01508959  0.8634136   0.88578753  0.61773369  1.07759219  0.8368725
  -0.71152334 -0.3895763   0.43633846  0.6973026  -0.74468588  0.30443911
   0.55182288 -0.75008626 -0.11050159 -0.64046424 -0.80836698  0.54683274
  -0.31286224  0.84890032 -0.81935602 -0.20691342  0.88429857 -0.11057757
  -0.51929478 -0.80783177  1.03044787]
 [-1.12693021  0.8634136   0.88578753  0.28035521  1.07759219  0.8368725
  -0.71152334 -0.44547481  0.43633846  0.75609697 -0.74468588  0.39957043
   1.09744701 -0.75008626 -0.06771778 -0.99311232 -0.80836698  0.31127886
  -0.32107902  0.94268028 -0.81935602 -0.12118025  0.88429857 -0.11057757
  -0.51929478 -0.84829576  1.03044787]
 [ 1.66687724  0.35843461 -0.09045607 -0.56661357  1.02656982  0.76694824
  -0.14798274  1.73433237 -0.05130079 -1.35682189 -0.20672885 -0.42036853
   0.3606501   1.20948944 -0.62165488  0.10463833  1.58075634  0.92607921
   0.35057531  0.36565697  0.27034405 -1.71182101 -0.11960011 -1.17170195
   0.39851757 -0.49614532 -0.15206803]
 [-1.12693021  0.8634136   0.88578753  0.36469983  1.07759219  0.8368725
  -0.71152334 -0.43748931  0.43633846  0.8736857  -0.74468588  0.19068405
   1.09744717 -0.75008626 -0.02018021 -0.99311182 -0.80836698  0.34586235
  -0.46010097  0.94268028 -0.81935602 -0.12118025  0.88429857 -0.40289646
  -0.51929478 -0.82806377  1.03044787]
 [ 0.38930062  0.09168335  0.09026794  0.99407674 -1.06802759  0.7912452
   0.74331991  0.98671705  0.79672272 -0.60118292  0.20555431  1.08188333
  -0.93739813  0.71762134 -0.49233589  1.16419799  1.92772752  0.79536954
  -0.77532294  0.79371533  1.66829348  1.39996477 -1.37275604 -1.17541097
  -1.7434029   0.77550066 -1.46886868]
 [-0.16488741 -0.65991685 -0.11942015  0.80704354 -0.35234407 -0.48390307
  -0.74403266  1.85772817  1.53255302  0.35627403 -0.07375175  0.90883571
  -0.48173784  1.02144619 -0.94171827 -1.49500378  0.08232795 -0.58883596
   0.34579739 -0.91388456 -0.04167098  0.04859837 -0.34725833 -0.93701106
   0.48926162  0.27811801  0.45362477]
 [-0.62079451 -0.91343781 -0.6218772  -0.45346053 -0.91603319  0.59535165
   1.04711777  1.4000473   1.25127126  0.77164138  0.30629903  1.31145166
   0.88571144 -0.39437243 -0.11269328  1.6200372   0.77388526  1.27207832
  -0.67048358  0.48869724  0.29970605 -0.57739103 -0.12589738  1.18363717
   0.0831333  -0.57296235 -0.31707637]
 [ 0.66251971 -1.70493015  0.88578753 -3.48703781 -0.45548161 -1.51713936
  -1.78891637 -1.60337242 -0.36380093 -2.06603262  1.39305928  0.21020255
  -2.50367126 -0.75008626 -1.0184692  -1.1694355  -0.80836698 -1.29614581
   0.35964571 -1.12047894 -0.81935602 -0.43553519 -1.9525036   1.35101687
   0.63755047  1.45815153 -2.55269876]
 [ 1.55724467  0.8634136  -1.99815748  0.19601059 -1.98855542  0.8368725
   1.44326272 -0.87669185 -0.42095374  0.6973026   2.46193185 -3.10768971
   0.44269836 -0.75008626 -0.18656171 -0.28781709 -0.80836698 -1.72792371
   0.15155893 -0.46401919 -0.81935602  2.58417736 -1.9525036  -0.98753424
   1.79439571 -1.61711153 -0.76112545]
 [ 2.17350382 -1.48999395 -0.52879597 -0.00958614 -0.85419288 -0.86183782
   0.65516545  0.81244956 -0.58986321  0.43496324  0.97497331 -1.12715276
   0.79335091  2.60495765 -1.0060097   2.10453241  1.51673861  1.02375219
   2.12716102 -0.54949249  1.93484183 -1.80330676 -1.04871993  2.60743592
   1.65260903  1.61229979  0.05122476]
 [ 0.62976996 -1.43914851 -1.71254213 -0.87486396 -1.27283007  0.01308752
   1.07782952  0.52142632 -0.11153892 -0.51774778 -1.42463059 -0.32057203
  -1.47350367  0.98436371 -0.64320476  0.83188874  1.39932938  0.10430896
   0.42262947 -1.51631128  1.770446    0.55169756 -0.18419647  0.06572622
   0.96303461  1.98013834  0.80284144]
 [-0.34404587  0.8634136   0.88578753 -0.11325302 -0.45548161 -0.34013343
  -0.71152334 -0.3815908  -0.30664812 -0.24340726  0.3241867  -0.35773226
   0.33357349 -0.75008626  0.26504522  0.41747788 -0.80836698  0.33068133
  -0.26246008 -0.08889933 -0.81935602 -0.11165434  0.88429857  0.47406021
  -0.51929478 -0.42342389 -0.76112545]
 [-1.01508959  0.8634136   0.88578753  0.75830805  1.07759219  0.8368725
  -0.71152334 -0.46943131  0.37918564  0.6973026  -0.74468588  0.44177939
   0.55182288 -0.75008626 -0.14377789 -0.46414073 -0.80836698  0.67035574
  -0.39618462  0.84890032 -0.81935602 -0.38790565  0.88429857 -0.40289646
  -0.51929478 -0.84829576  1.03044787]
 [-0.67956773  0.8634136   0.88578753  0.33658495  1.07759219  0.8368725
  -0.71152334 -0.45346031  0.32203283  0.81489134 -0.74468588  0.1936613
   0.55182288 -0.75008626 -0.12000911 -0.28781722 -0.80836698  0.58185218
  -0.46587509  1.03646025 -0.81935602 -0.34027612  0.88429857 -0.69521535
  -0.51929478 -0.62574383  1.03044787]
 [-0.34404587  0.8634136   0.88578753  0.08355109 -0.45548161 -0.34013343
  -0.71152334 -0.50137331 -0.19234249  0.05056457  0.3241867  -0.41449717
  -0.21205065 -0.75008626  0.15570881  0.77012491 -0.80836698  0.26340465
  -0.12344204  0.19244057 -0.81935602 -0.14023207  0.88429857  0.76637909
  -0.51929478 -0.07948    -0.76112545]
 [-0.03157468  0.36577889 -1.71766977  0.51747224  0.45271489 -1.08854859
   0.74485192 -0.41205556 -0.27517762  0.88260247 -1.44125181 -0.34069833
   0.38519554  0.94412073  2.48440319 -0.85172327 -0.14353501 -1.82909117
  -2.21859223  0.69646508  0.89137896  0.82248749  0.05947756  0.32743119
  -1.76536755  1.06303346  0.51284607]
 [-0.61026031 -1.51577838 -0.38764942  0.5489791   0.95118237 -2.55617195
   1.95004782 -1.34218479 -3.27915505 -2.24743505  0.87960118  1.04620326
  -1.44318113 -0.33685025  2.57967704  0.16972853  0.13807277 -1.72985941
   2.24903499 -2.50351085  0.58086477  0.55047052  0.8538679  -0.78186505
   1.12533157 -0.0198878  -0.1986882 ]]
upper = 
[6712.71808083 6712.71808083 6712.71808083 ... 6712.71808083 6712.71808083
 6712.71808083]
upper.argmax() = 0
all predict_target = 
[6061.57229412 6061.57229412 6061.57229412 ... 6061.57229412 6061.57229412
 6061.57229412]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
 2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
 9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
 8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
 2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
 9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
 3.92329382e+00 3.18911325e+02 1.65086553e+00]
black_box_function中schafferRun(i) 中的i为[55.745259772165355, 0.44313404559907554, 0.02137903608233227, 440.8164438727832, 2.0962713197806715, 4.7280497967472135, 4.858385383285416, 639.7028860084706, 92.66900730894112, 127.55177738996515, 8.01909477576675, 1661193861.8035913, 0.8627173196467961, 0.5331136009566859, 536.3630124572771, 0.6331993788741832, 0.2618574637033285, 1226495937.3311806, 1110689413.5398045, 61.16073986064795, 0.9733574694681935, 722.6966542557261, 0.538013192946581, 20.59957629896343, 3.923293815480439, 318.91132488380333, 1.6508655253289888]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 55.745259772165355
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.44313404559907554
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.02137903608233227
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 440.8164438727832
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.0962713197806715
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.7280497967472135
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.858385383285416
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 639.7028860084706
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 92.66900730894112
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 127.55177738996515
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 8.01909477576675
================= config18 =================
2022年 02月 22日 星期二 17:32:11 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (175494) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (209964) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1661193861.8035913
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8627173196467961
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.5331136009566859
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 536.3630124572771
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6331993788741832
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.2618574637033285
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1226495937.3311806
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1110689413.5398045
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 61.16073986064795
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.9733574694681935
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 722.6966542557261
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.538013192946581
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 20.59957629896343
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 3.923293815480439
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 318.91132488380333
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 1.6508655253289888
configNum = 18	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 18 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 55.745259772165355, 'spark.broadcast.checksum': 0.44313404559907554, 'spark.broadcast.compress': 0.02137903608233227, 'spark.default.parallelism': 440.8164438727832, 'spark.executor.cores': 2.0962713197806715, 'spark.executor.instances': 4.7280497967472135, 'spark.executor.memory': 4.858385383285416, 'spark.executor.memoryOverhead': 639.7028860084706, 'spark.kryoserializer.buffer': 92.66900730894112, 'spark.kryoserializer.buffer.max': 127.55177738996515, 'spark.locality.wait': 8.01909477576675, 'spark.maxRemoteBlockSizeFetchToMem': 1661193861.8035913, 'spark.memory.fraction': 0.8627173196467961, 'spark.memory.offHeap.enabled': 0.5331136009566859, 'spark.memory.offHeap.size': 536.3630124572771, 'spark.memory.storageFraction': 0.6331993788741832, 'spark.rdd.compress': 0.2618574637033285, 'spark.reducer.maxBlocksInFlightPerAddress': 1226495937.3311806, 'spark.reducer.maxReqsInFlight': 1110689413.5398045, 'spark.reducer.maxSizeInFlight': 61.16073986064795, 'spark.scheduler.mode': 0.9733574694681935, 'spark.scheduler.revive.interval': 722.6966542557261, 'spark.shuffle.compress': 0.538013192946581, 'spark.shuffle.file.buffer': 20.59957629896343, 'spark.shuffle.io.numConnectionsPerPeer': 3.923293815480439, 'spark.shuffle.sort.bypassMergeThreshold': 318.91132488380333, 'spark.storage.memoryMapThreshold': 1.6508655253289888} target = -312.373
x_probe = {'spark.broadcast.blockSize': 55.745259772165355, 'spark.broadcast.checksum': 0.44313404559907554, 'spark.broadcast.compress': 0.02137903608233227, 'spark.default.parallelism': 440.8164438727832, 'spark.executor.cores': 2.0962713197806715, 'spark.executor.instances': 4.7280497967472135, 'spark.executor.memory': 4.858385383285416, 'spark.executor.memoryOverhead': 639.7028860084706, 'spark.kryoserializer.buffer': 92.66900730894112, 'spark.kryoserializer.buffer.max': 127.55177738996515, 'spark.locality.wait': 8.01909477576675, 'spark.maxRemoteBlockSizeFetchToMem': 1661193861.8035913, 'spark.memory.fraction': 0.8627173196467961, 'spark.memory.offHeap.enabled': 0.5331136009566859, 'spark.memory.offHeap.size': 536.3630124572771, 'spark.memory.storageFraction': 0.6331993788741832, 'spark.rdd.compress': 0.2618574637033285, 'spark.reducer.maxBlocksInFlightPerAddress': 1226495937.3311806, 'spark.reducer.maxReqsInFlight': 1110689413.5398045, 'spark.reducer.maxSizeInFlight': 61.16073986064795, 'spark.scheduler.mode': 0.9733574694681935, 'spark.scheduler.revive.interval': 722.6966542557261, 'spark.shuffle.compress': 0.538013192946581, 'spark.shuffle.file.buffer': 20.59957629896343, 'spark.shuffle.io.numConnectionsPerPeer': 3.923293815480439, 'spark.shuffle.sort.bypassMergeThreshold': 318.91132488380333, 'spark.storage.memoryMapThreshold': 1.6508655253289888}
target = -312.373
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (18, 27)
before probe, target = (18,)
标准化前的train_x = 
[[3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.55570675e+01 6.99522212e-01 7.24155771e-01 4.61385906e+02
  2.60044587e+00 7.96123443e+00 5.35033660e+00 7.56349035e+02
  1.13305626e+02 8.99147968e+01 5.88901166e+00 2.02795725e+09
  7.03530446e-01 3.96170620e-01 1.42677365e+02 6.52349409e-01
  9.14104272e-01 1.86204721e+09 1.44237129e+09 6.84115482e+01
  7.78713223e-01 8.37685058e+02 2.04366581e-01 1.93572884e+01
  1.94185663e+00 2.73258844e+02 2.60495994e+00]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00]
 [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
  2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
  1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
  8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
  5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
  3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
  3.52075079e+00 2.06608813e+02 3.24785426e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [6.15101550e+01 8.36866979e-02 5.09497062e-01 4.25687261e+02
  2.73992689e+00 6.55675297e+00 5.26851460e+00 7.34526047e+02
  8.90445993e+01 1.07538019e+02 6.60885331e+00 1.59807089e+09
  8.62133167e-01 9.05609418e-01 3.46209799e+01 7.05679422e-01
  7.76796616e-01 1.91743966e+09 1.99520910e+09 5.40885761e+01
  8.62151313e-01 5.01415609e+02 3.18592420e-01 3.22981111e+01
  4.87743678e+00 3.14619035e+02 3.45342839e+00]
 [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
  2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
  9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
  6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
  7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
  8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
  4.28135496e+00 3.32800068e+02 3.87295723e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.53000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.74000000e+02
  1.06000000e+02 1.12000000e+02 5.00000000e+00 1.90339072e+09
  8.39999974e-01 0.00000000e+00 2.16000000e+02 5.60000002e-01
  0.00000000e+00 1.83172608e+09 1.51458598e+09 6.90000000e+01
  0.00000000e+00 6.50000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.60000000e+01 1.00000000e+00 1.00000000e+00 4.38000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.76000000e+02
  1.05000000e+02 1.14000000e+02 5.00000000e+00 1.85510605e+09
  8.39999974e-01 0.00000000e+00 2.21000000e+02 5.69999993e-01
  0.00000000e+00 1.81026022e+09 1.50131200e+09 7.10000000e+01
  0.00000000e+00 6.55000000e+02 1.00000000e+00 2.10000000e+01
  3.00000000e+00 2.04000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.29000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.70000000e+02
  9.60000000e+01 1.01000000e+02 6.00000000e+00 1.73675622e+09
  7.69999981e-01 0.00000000e+00 2.79000000e+02 6.29999995e-01
  0.00000000e+00 1.73302323e+09 1.56653542e+09 6.20000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 2.60000000e+01
  3.00000000e+00 2.31000000e+02 3.00000000e+00]
 [4.17938972e+01 8.06242948e-01 9.72583430e-02 4.44433865e+02
  3.59240233e+00 6.36413646e+00 5.35175857e+00 5.81184991e+02
  9.45506378e+01 1.15151660e+02 4.34831715e+00 1.75111774e+09
  8.24730545e-01 4.57308414e-01 7.68863982e+02 5.38018693e-01
  2.22114310e-01 1.22550451e+09 1.16747094e+09 6.73745437e+01
  5.35514327e-01 7.77063295e+02 7.09242673e-01 2.44983936e+01
  1.92286995e+00 2.87470631e+02 3.71109092e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]]
标准化后的train_x = 
[[-1.06488909  0.91273813  0.92988553  0.6089577   1.11374227  0.8424715
  -0.74340586 -0.40399428  0.4689629   0.58462547 -0.78386679  0.35289556
   0.5130684  -0.80882074 -0.18311407 -0.69324915 -0.83038392  0.61273088
  -0.15314506  0.86669807 -0.85712964 -0.22973343  0.92962345 -0.06614779
  -0.56104891 -0.86183815  0.99403125]
 [-1.17315786  0.91273813  0.92988553  0.26345318  1.11374227  0.8424715
  -0.74340586 -0.46150849  0.4689629   0.64118126 -0.78386679  0.44907818
   1.06479482 -0.80882074 -0.14124642 -1.0494249  -0.83038392  0.39007387
  -0.16041692  0.9631622  -0.85712964 -0.14174122  0.92962345 -0.06614779
  -0.56104891 -0.90049067  0.99403125]
 [ 1.53142389  0.39769508  0.01603275 -0.60391554  1.06557945  0.78381627
  -0.1642588   1.78130449 -0.03078454 -1.39128888 -0.30608565 -0.37992197
   0.31975754  1.12843495 -0.68332162  0.05930696  1.62796246  0.97121315
   0.43399691  0.36962334  0.12959166 -1.77429506 -0.09820503 -1.13855842
   0.37556845 -0.56410507  0.02017569]
 [-1.17315786  0.91273813  0.92988553  0.34982931  1.11374227  0.8424715
  -0.74340586 -0.45329217  0.4689629   0.75429284 -0.78386679  0.23788338
   1.06479497 -0.80882074 -0.09472681 -1.04942439 -0.83038392  0.42276387
  -0.28345129  0.9631622  -0.85712964 -0.14174122  0.92962345 -0.36157582
  -0.56104891 -0.88116441  0.99403125]
 [ 0.29464918  0.12562756  0.18520686  0.99436529 -0.91162621  0.80419751
   0.75172721  1.01207988  0.83829559 -0.66442063  0.06007951  1.13893135
  -0.99280811  0.64216934 -0.55677184  1.1294658   1.98498686  0.84765999
  -0.56242262  0.80993358  1.39543215  1.4194857  -1.38123227 -1.14230689
  -1.81023773  0.65061271 -1.06426947]
 [-0.24183978 -0.64095177 -0.01108026  0.80282724 -0.23605319 -0.26544715
  -0.77681548  1.90826697  1.59239673  0.25658145 -0.18798338  0.96397137
  -0.5320517   0.94253355 -0.99653123 -1.55633697  0.08611822 -0.46075857
   0.42976845 -0.94654118 -0.15293735  0.03251104 -0.33128991 -0.90137133
   0.46817175  0.17549656  0.51899122]
 [-0.68318659 -0.89952532 -0.48142574 -0.48803712 -0.76815034  0.63987428
   1.06393833  1.43735715  1.30413068  0.65613382  0.14955492  1.37103665
   0.85069118 -0.45715858 -0.18525882  1.58986494  0.79771289  1.29826838
  -0.46963982  0.49618526  0.15617889 -0.60997306 -0.10465241  1.24183238
   0.05372229 -0.63748321 -0.11571618]
 [ 0.55914248 -1.70679183  0.92988553 -3.59468064 -0.33341039 -1.13216651
  -1.85063577 -1.65287432 -0.35104413 -2.07349663  1.11475014  0.25761759
  -2.57659851 -0.80882074 -1.07163863 -1.2275119  -0.83038392 -1.12934233
   0.44202421 -1.1590487  -0.85712964 -0.46437935 -1.97479919  1.41099235
   0.61949888  1.30270312 -1.95685279]
 [ 1.42529264  0.91273813 -1.76974922  0.17707705 -1.78056304  0.8424715
   1.47105396 -0.90518956 -0.40961606  0.58462547  2.06405861 -3.09694084
   0.40272343 -0.80882074 -0.25754544 -0.33707434 -0.83038392 -1.53747986
   0.25786749 -0.48379978 -0.85712964  2.63490207 -1.97479919 -0.95243188
   1.80004668 -1.6348886  -0.48141077]
 [ 2.02187035 -1.48757202 -0.39429325 -0.03347165 -0.70977588 -0.58247372
   0.66113145  0.8327753  -0.58271959  0.33227459  0.74343128 -1.09451689
   0.75729769  2.50800846 -1.05944594  2.07920674  1.56208985  1.06353841
   2.00627459 -0.5717195   1.63679116 -1.86819145 -1.04947215  2.68077482
   1.65535493  1.44995057  0.18759654]
 [ 0.52743865 -1.43571325 -1.50238728 -0.91959041 -1.10495053  0.15144816
   1.0955006   0.53334025 -0.0925184  -0.58416226 -1.38775288 -0.2790226
  -1.53490948  0.90587345 -0.70441003  0.79383234  1.44127879  0.19443583
   0.49776482 -1.56621055  1.48793106  0.5488668  -0.16434116  0.11203119
   0.95165185  1.80132197  0.80658701]
 [-0.41527646  0.91273813  0.92988553 -0.13963543 -0.33341039 -0.1448475
  -0.74340586 -0.39577796 -0.2924722  -0.32026716  0.16544167 -0.31659349
   0.29237809 -0.80882074  0.18439086  0.37527597 -0.83038392  0.40841403
  -0.10853918 -0.09794325 -0.85712964 -0.1319643   0.92962345  0.52470826
  -0.56104891 -0.49463919 -0.48141077]
 [-1.06488909  0.91273813  0.92988553  0.75291792  1.11374227  0.8424715
  -0.74340586 -0.48615744  0.41039097  0.58462547 -0.78386679  0.49175359
   0.5130684  -0.80882074 -0.21567779 -0.51516181 -0.83038392  0.72949085
  -0.22688535  0.86669807 -0.85712964 -0.41549478  0.92962345 -0.36157582
  -0.56104891 -0.90049067  0.99403125]
 [-0.74008277  0.91273813  0.92988553  0.32103727  1.11374227  0.8424715
  -0.74340586 -0.46972481  0.35181904  0.69773705 -0.78386679  0.24089354
   0.5130684  -0.80882074 -0.19241799 -0.33707446 -0.83038392  0.64583297
  -0.28856138  1.05962633 -0.85712964 -0.36661022  0.92962345 -0.65700385
  -0.56104891 -0.6879018   0.99403125]
 [-0.41527646  0.91273813  0.92988553  0.06190888 -0.33341039 -0.1448475
  -0.74340586 -0.5190227  -0.17532834 -0.03748822  0.16544167 -0.37398572
  -0.25934832 -0.80882074  0.07739575  0.73145066 -0.83038392  0.34482083
   0.01449174  0.19144914 -0.85712964 -0.16129504  0.92962345  0.82013629
  -0.56104891 -0.16609274 -0.48141077]
 [-0.11278464  0.40518573 -1.50718722  0.50628138  0.52388622 -0.77264766
   0.75330166 -0.42712329 -0.26022028  0.7628701  -1.40251485 -0.29937132
   0.34457749  0.86608885  2.35622393 -0.90662148 -0.14628894 -1.63310828
  -1.83971539  0.70989983  0.69193756  0.826792    0.08514128  0.37651969
  -1.83265241  0.92527343  0.56776265]
 [-0.67298882 -1.51387033 -0.26216724  0.53854711  0.99441709 -2.00374803
   1.99187376 -1.38413725 -3.33878717 -2.24799223  0.65872748  1.10285697
  -1.50424781 -0.40029159  2.4494576   0.12504829  0.14347821 -1.53930958
   2.11413301 -2.58166571  0.41076756  0.54760743  0.89846741 -0.74457517
   1.11727411 -0.10916833 -0.01821814]
 [ 1.39771223 -0.54598892 -1.71203363  0.40212844 -1.64124375 -2.38798711
   0.20702411  0.05367824 -0.37043101  1.46416852  2.08218544 -0.76656534
   0.76374354  1.14372825  1.27463847  0.78842769 -0.02388309 -1.62924443
  -2.10354422  0.11049064  1.95847408  0.29525408 -0.41218149 -0.77530023
   0.52894357  1.53290449 -2.47198047]]
train_y = 
[   -162.804    -163.342    -164.05     -165.666    -181.266    -182.936
    -184.517    -194.423    -220.648    -222.405    -245.931 -100000.
    -160.548    -169.925    -213.518    -181.042    -233.708    -312.373]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.06488909  0.91273813  0.92988553  0.6089577   1.11374227  0.8424715
  -0.74340586 -0.40399428  0.4689629   0.58462547 -0.78386679  0.35289556
   0.5130684  -0.80882074 -0.18311407 -0.69324915 -0.83038392  0.61273088
  -0.15314506  0.86669807 -0.85712964 -0.22973343  0.92962345 -0.06614779
  -0.56104891 -0.86183815  0.99403125]
 [-1.17315786  0.91273813  0.92988553  0.26345318  1.11374227  0.8424715
  -0.74340586 -0.46150849  0.4689629   0.64118126 -0.78386679  0.44907818
   1.06479482 -0.80882074 -0.14124642 -1.0494249  -0.83038392  0.39007387
  -0.16041692  0.9631622  -0.85712964 -0.14174122  0.92962345 -0.06614779
  -0.56104891 -0.90049067  0.99403125]
 [ 1.53142389  0.39769508  0.01603275 -0.60391554  1.06557945  0.78381627
  -0.1642588   1.78130449 -0.03078454 -1.39128888 -0.30608565 -0.37992197
   0.31975754  1.12843495 -0.68332162  0.05930696  1.62796246  0.97121315
   0.43399691  0.36962334  0.12959166 -1.77429506 -0.09820503 -1.13855842
   0.37556845 -0.56410507  0.02017569]
 [-1.17315786  0.91273813  0.92988553  0.34982931  1.11374227  0.8424715
  -0.74340586 -0.45329217  0.4689629   0.75429284 -0.78386679  0.23788338
   1.06479497 -0.80882074 -0.09472681 -1.04942439 -0.83038392  0.42276387
  -0.28345129  0.9631622  -0.85712964 -0.14174122  0.92962345 -0.36157582
  -0.56104891 -0.88116441  0.99403125]
 [ 0.29464918  0.12562756  0.18520686  0.99436529 -0.91162621  0.80419751
   0.75172721  1.01207988  0.83829559 -0.66442063  0.06007951  1.13893135
  -0.99280811  0.64216934 -0.55677184  1.1294658   1.98498686  0.84765999
  -0.56242262  0.80993358  1.39543215  1.4194857  -1.38123227 -1.14230689
  -1.81023773  0.65061271 -1.06426947]
 [-0.24183978 -0.64095177 -0.01108026  0.80282724 -0.23605319 -0.26544715
  -0.77681548  1.90826697  1.59239673  0.25658145 -0.18798338  0.96397137
  -0.5320517   0.94253355 -0.99653123 -1.55633697  0.08611822 -0.46075857
   0.42976845 -0.94654118 -0.15293735  0.03251104 -0.33128991 -0.90137133
   0.46817175  0.17549656  0.51899122]
 [-0.68318659 -0.89952532 -0.48142574 -0.48803712 -0.76815034  0.63987428
   1.06393833  1.43735715  1.30413068  0.65613382  0.14955492  1.37103665
   0.85069118 -0.45715858 -0.18525882  1.58986494  0.79771289  1.29826838
  -0.46963982  0.49618526  0.15617889 -0.60997306 -0.10465241  1.24183238
   0.05372229 -0.63748321 -0.11571618]
 [ 0.55914248 -1.70679183  0.92988553 -3.59468064 -0.33341039 -1.13216651
  -1.85063577 -1.65287432 -0.35104413 -2.07349663  1.11475014  0.25761759
  -2.57659851 -0.80882074 -1.07163863 -1.2275119  -0.83038392 -1.12934233
   0.44202421 -1.1590487  -0.85712964 -0.46437935 -1.97479919  1.41099235
   0.61949888  1.30270312 -1.95685279]
 [ 1.42529264  0.91273813 -1.76974922  0.17707705 -1.78056304  0.8424715
   1.47105396 -0.90518956 -0.40961606  0.58462547  2.06405861 -3.09694084
   0.40272343 -0.80882074 -0.25754544 -0.33707434 -0.83038392 -1.53747986
   0.25786749 -0.48379978 -0.85712964  2.63490207 -1.97479919 -0.95243188
   1.80004668 -1.6348886  -0.48141077]
 [ 2.02187035 -1.48757202 -0.39429325 -0.03347165 -0.70977588 -0.58247372
   0.66113145  0.8327753  -0.58271959  0.33227459  0.74343128 -1.09451689
   0.75729769  2.50800846 -1.05944594  2.07920674  1.56208985  1.06353841
   2.00627459 -0.5717195   1.63679116 -1.86819145 -1.04947215  2.68077482
   1.65535493  1.44995057  0.18759654]
 [ 0.52743865 -1.43571325 -1.50238728 -0.91959041 -1.10495053  0.15144816
   1.0955006   0.53334025 -0.0925184  -0.58416226 -1.38775288 -0.2790226
  -1.53490948  0.90587345 -0.70441003  0.79383234  1.44127879  0.19443583
   0.49776482 -1.56621055  1.48793106  0.5488668  -0.16434116  0.11203119
   0.95165185  1.80132197  0.80658701]
 [-0.41527646  0.91273813  0.92988553 -0.13963543 -0.33341039 -0.1448475
  -0.74340586 -0.39577796 -0.2924722  -0.32026716  0.16544167 -0.31659349
   0.29237809 -0.80882074  0.18439086  0.37527597 -0.83038392  0.40841403
  -0.10853918 -0.09794325 -0.85712964 -0.1319643   0.92962345  0.52470826
  -0.56104891 -0.49463919 -0.48141077]
 [-1.06488909  0.91273813  0.92988553  0.75291792  1.11374227  0.8424715
  -0.74340586 -0.48615744  0.41039097  0.58462547 -0.78386679  0.49175359
   0.5130684  -0.80882074 -0.21567779 -0.51516181 -0.83038392  0.72949085
  -0.22688535  0.86669807 -0.85712964 -0.41549478  0.92962345 -0.36157582
  -0.56104891 -0.90049067  0.99403125]
 [-0.74008277  0.91273813  0.92988553  0.32103727  1.11374227  0.8424715
  -0.74340586 -0.46972481  0.35181904  0.69773705 -0.78386679  0.24089354
   0.5130684  -0.80882074 -0.19241799 -0.33707446 -0.83038392  0.64583297
  -0.28856138  1.05962633 -0.85712964 -0.36661022  0.92962345 -0.65700385
  -0.56104891 -0.6879018   0.99403125]
 [-0.41527646  0.91273813  0.92988553  0.06190888 -0.33341039 -0.1448475
  -0.74340586 -0.5190227  -0.17532834 -0.03748822  0.16544167 -0.37398572
  -0.25934832 -0.80882074  0.07739575  0.73145066 -0.83038392  0.34482083
   0.01449174  0.19144914 -0.85712964 -0.16129504  0.92962345  0.82013629
  -0.56104891 -0.16609274 -0.48141077]
 [-0.11278464  0.40518573 -1.50718722  0.50628138  0.52388622 -0.77264766
   0.75330166 -0.42712329 -0.26022028  0.7628701  -1.40251485 -0.29937132
   0.34457749  0.86608885  2.35622393 -0.90662148 -0.14628894 -1.63310828
  -1.83971539  0.70989983  0.69193756  0.826792    0.08514128  0.37651969
  -1.83265241  0.92527343  0.56776265]
 [-0.67298882 -1.51387033 -0.26216724  0.53854711  0.99441709 -2.00374803
   1.99187376 -1.38413725 -3.33878717 -2.24799223  0.65872748  1.10285697
  -1.50424781 -0.40029159  2.4494576   0.12504829  0.14347821 -1.53930958
   2.11413301 -2.58166571  0.41076756  0.54760743  0.89846741 -0.74457517
   1.11727411 -0.10916833 -0.01821814]
 [ 1.39771223 -0.54598892 -1.71203363  0.40212844 -1.64124375 -2.38798711
   0.20702411  0.05367824 -0.37043101  1.46416852  2.08218544 -0.76656534
   0.76374354  1.14372825  1.27463847  0.78842769 -0.02388309 -1.62924443
  -2.10354422  0.11049064  1.95847408  0.29525408 -0.41218149 -0.77530023
   0.52894357  1.53290449 -2.47198047]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.06488909  0.91273813  0.92988553  0.6089577   1.11374227  0.8424715
  -0.74340586 -0.40399428  0.4689629   0.58462547 -0.78386679  0.35289556
   0.5130684  -0.80882074 -0.18311407 -0.69324915 -0.83038392  0.61273088
  -0.15314506  0.86669807 -0.85712964 -0.22973343  0.92962345 -0.06614779
  -0.56104891 -0.86183815  0.99403125]
 [-1.17315786  0.91273813  0.92988553  0.26345318  1.11374227  0.8424715
  -0.74340586 -0.46150849  0.4689629   0.64118126 -0.78386679  0.44907818
   1.06479482 -0.80882074 -0.14124642 -1.0494249  -0.83038392  0.39007387
  -0.16041692  0.9631622  -0.85712964 -0.14174122  0.92962345 -0.06614779
  -0.56104891 -0.90049067  0.99403125]
 [ 1.53142389  0.39769508  0.01603275 -0.60391554  1.06557945  0.78381627
  -0.1642588   1.78130449 -0.03078454 -1.39128888 -0.30608565 -0.37992197
   0.31975754  1.12843495 -0.68332162  0.05930696  1.62796246  0.97121315
   0.43399691  0.36962334  0.12959166 -1.77429506 -0.09820503 -1.13855842
   0.37556845 -0.56410507  0.02017569]
 [-1.17315786  0.91273813  0.92988553  0.34982931  1.11374227  0.8424715
  -0.74340586 -0.45329217  0.4689629   0.75429284 -0.78386679  0.23788338
   1.06479497 -0.80882074 -0.09472681 -1.04942439 -0.83038392  0.42276387
  -0.28345129  0.9631622  -0.85712964 -0.14174122  0.92962345 -0.36157582
  -0.56104891 -0.88116441  0.99403125]
 [ 0.29464918  0.12562756  0.18520686  0.99436529 -0.91162621  0.80419751
   0.75172721  1.01207988  0.83829559 -0.66442063  0.06007951  1.13893135
  -0.99280811  0.64216934 -0.55677184  1.1294658   1.98498686  0.84765999
  -0.56242262  0.80993358  1.39543215  1.4194857  -1.38123227 -1.14230689
  -1.81023773  0.65061271 -1.06426947]
 [-0.24183978 -0.64095177 -0.01108026  0.80282724 -0.23605319 -0.26544715
  -0.77681548  1.90826697  1.59239673  0.25658145 -0.18798338  0.96397137
  -0.5320517   0.94253355 -0.99653123 -1.55633697  0.08611822 -0.46075857
   0.42976845 -0.94654118 -0.15293735  0.03251104 -0.33128991 -0.90137133
   0.46817175  0.17549656  0.51899122]
 [-0.68318659 -0.89952532 -0.48142574 -0.48803712 -0.76815034  0.63987428
   1.06393833  1.43735715  1.30413068  0.65613382  0.14955492  1.37103665
   0.85069118 -0.45715858 -0.18525882  1.58986494  0.79771289  1.29826838
  -0.46963982  0.49618526  0.15617889 -0.60997306 -0.10465241  1.24183238
   0.05372229 -0.63748321 -0.11571618]
 [ 0.55914248 -1.70679183  0.92988553 -3.59468064 -0.33341039 -1.13216651
  -1.85063577 -1.65287432 -0.35104413 -2.07349663  1.11475014  0.25761759
  -2.57659851 -0.80882074 -1.07163863 -1.2275119  -0.83038392 -1.12934233
   0.44202421 -1.1590487  -0.85712964 -0.46437935 -1.97479919  1.41099235
   0.61949888  1.30270312 -1.95685279]
 [ 1.42529264  0.91273813 -1.76974922  0.17707705 -1.78056304  0.8424715
   1.47105396 -0.90518956 -0.40961606  0.58462547  2.06405861 -3.09694084
   0.40272343 -0.80882074 -0.25754544 -0.33707434 -0.83038392 -1.53747986
   0.25786749 -0.48379978 -0.85712964  2.63490207 -1.97479919 -0.95243188
   1.80004668 -1.6348886  -0.48141077]
 [ 2.02187035 -1.48757202 -0.39429325 -0.03347165 -0.70977588 -0.58247372
   0.66113145  0.8327753  -0.58271959  0.33227459  0.74343128 -1.09451689
   0.75729769  2.50800846 -1.05944594  2.07920674  1.56208985  1.06353841
   2.00627459 -0.5717195   1.63679116 -1.86819145 -1.04947215  2.68077482
   1.65535493  1.44995057  0.18759654]
 [ 0.52743865 -1.43571325 -1.50238728 -0.91959041 -1.10495053  0.15144816
   1.0955006   0.53334025 -0.0925184  -0.58416226 -1.38775288 -0.2790226
  -1.53490948  0.90587345 -0.70441003  0.79383234  1.44127879  0.19443583
   0.49776482 -1.56621055  1.48793106  0.5488668  -0.16434116  0.11203119
   0.95165185  1.80132197  0.80658701]
 [-0.41527646  0.91273813  0.92988553 -0.13963543 -0.33341039 -0.1448475
  -0.74340586 -0.39577796 -0.2924722  -0.32026716  0.16544167 -0.31659349
   0.29237809 -0.80882074  0.18439086  0.37527597 -0.83038392  0.40841403
  -0.10853918 -0.09794325 -0.85712964 -0.1319643   0.92962345  0.52470826
  -0.56104891 -0.49463919 -0.48141077]
 [-1.06488909  0.91273813  0.92988553  0.75291792  1.11374227  0.8424715
  -0.74340586 -0.48615744  0.41039097  0.58462547 -0.78386679  0.49175359
   0.5130684  -0.80882074 -0.21567779 -0.51516181 -0.83038392  0.72949085
  -0.22688535  0.86669807 -0.85712964 -0.41549478  0.92962345 -0.36157582
  -0.56104891 -0.90049067  0.99403125]
 [-0.74008277  0.91273813  0.92988553  0.32103727  1.11374227  0.8424715
  -0.74340586 -0.46972481  0.35181904  0.69773705 -0.78386679  0.24089354
   0.5130684  -0.80882074 -0.19241799 -0.33707446 -0.83038392  0.64583297
  -0.28856138  1.05962633 -0.85712964 -0.36661022  0.92962345 -0.65700385
  -0.56104891 -0.6879018   0.99403125]
 [-0.41527646  0.91273813  0.92988553  0.06190888 -0.33341039 -0.1448475
  -0.74340586 -0.5190227  -0.17532834 -0.03748822  0.16544167 -0.37398572
  -0.25934832 -0.80882074  0.07739575  0.73145066 -0.83038392  0.34482083
   0.01449174  0.19144914 -0.85712964 -0.16129504  0.92962345  0.82013629
  -0.56104891 -0.16609274 -0.48141077]
 [-0.11278464  0.40518573 -1.50718722  0.50628138  0.52388622 -0.77264766
   0.75330166 -0.42712329 -0.26022028  0.7628701  -1.40251485 -0.29937132
   0.34457749  0.86608885  2.35622393 -0.90662148 -0.14628894 -1.63310828
  -1.83971539  0.70989983  0.69193756  0.826792    0.08514128  0.37651969
  -1.83265241  0.92527343  0.56776265]
 [-0.67298882 -1.51387033 -0.26216724  0.53854711  0.99441709 -2.00374803
   1.99187376 -1.38413725 -3.33878717 -2.24799223  0.65872748  1.10285697
  -1.50424781 -0.40029159  2.4494576   0.12504829  0.14347821 -1.53930958
   2.11413301 -2.58166571  0.41076756  0.54760743  0.89846741 -0.74457517
   1.11727411 -0.10916833 -0.01821814]
 [ 1.39771223 -0.54598892 -1.71203363  0.40212844 -1.64124375 -2.38798711
   0.20702411  0.05367824 -0.37043101  1.46416852  2.08218544 -0.76656534
   0.76374354  1.14372825  1.27463847  0.78842769 -0.02388309 -1.62924443
  -2.10354422  0.11049064  1.95847408  0.29525408 -0.41218149 -0.77530023
   0.52894357  1.53290449 -2.47198047]]
upper = 
[6599.86648447 6599.86648447 6599.86648447 ... 6599.86648447 6599.86648447
 6599.86648447]
upper.argmax() = 0
all predict_target = 
[5742.17233333 5742.17233333 5742.17233333 ... 5742.17233333 5742.17233333
 5742.17233333]
upper.argmax() = 0, sortnumber[0] = 0
x_max = [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
 2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
 8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
 8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
 5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
 1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
 4.83405782e+00 1.52008826e+02 2.73765423e+00]
black_box_function中schafferRun(i) 中的i为[34.67237929724381, 0.7634696002969796, 0.35450219459517185, 321.04122077612624, 2.3939467033727153, 4.5186277200035905, 5.724940422326447, 545.6707675150069, 88.1932417958986, 67.25129282527449, 4.431028096003187, 1500363825.8170424, 0.8932043231121947, 0.5946921902029674, 627.8322173121403, 0.6089506548339559, 0.5469218901471669, 1267503482.3179002, 1553283837.9463983, 60.976266047481246, 0.1001079156264395, 516.2114807486785, 0.6034526651475726, 36.83865554831312, 4.834057821225401, 152.00882584458364, 2.737654233532858]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 34.67237929724381
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.7634696002969796
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.35450219459517185
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 321.04122077612624
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 2.3939467033727153
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 4.5186277200035905
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 5.724940422326447
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 545.6707675150069
================= config19 =================
2022年 02月 22日 星期二 17:37:32 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (180403) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (216939) - 没有那个进程
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 88.1932417958986
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 67.25129282527449
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 4.431028096003187
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1500363825.8170424
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.8932043231121947
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.5946921902029674
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 627.8322173121403
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.6089506548339559
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.5469218901471669
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1267503482.3179002
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1553283837.9463983
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 60.976266047481246
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.1001079156264395
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 516.2114807486785
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.6034526651475726
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 36.83865554831312
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 4.834057821225401
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 152.00882584458364
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 2.737654233532858
configNum = 19	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 19 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 34.67237929724381, 'spark.broadcast.checksum': 0.7634696002969796, 'spark.broadcast.compress': 0.35450219459517185, 'spark.default.parallelism': 321.04122077612624, 'spark.executor.cores': 2.3939467033727153, 'spark.executor.instances': 4.5186277200035905, 'spark.executor.memory': 5.724940422326447, 'spark.executor.memoryOverhead': 545.6707675150069, 'spark.kryoserializer.buffer': 88.1932417958986, 'spark.kryoserializer.buffer.max': 67.25129282527449, 'spark.locality.wait': 4.431028096003187, 'spark.maxRemoteBlockSizeFetchToMem': 1500363825.8170424, 'spark.memory.fraction': 0.8932043231121947, 'spark.memory.offHeap.enabled': 0.5946921902029674, 'spark.memory.offHeap.size': 627.8322173121403, 'spark.memory.storageFraction': 0.6089506548339559, 'spark.rdd.compress': 0.5469218901471669, 'spark.reducer.maxBlocksInFlightPerAddress': 1267503482.3179002, 'spark.reducer.maxReqsInFlight': 1553283837.9463983, 'spark.reducer.maxSizeInFlight': 60.976266047481246, 'spark.scheduler.mode': 0.1001079156264395, 'spark.scheduler.revive.interval': 516.2114807486785, 'spark.shuffle.compress': 0.6034526651475726, 'spark.shuffle.file.buffer': 36.83865554831312, 'spark.shuffle.io.numConnectionsPerPeer': 4.834057821225401, 'spark.shuffle.sort.bypassMergeThreshold': 152.00882584458364, 'spark.storage.memoryMapThreshold': 2.737654233532858} target = -300.388
x_probe = {'spark.broadcast.blockSize': 34.67237929724381, 'spark.broadcast.checksum': 0.7634696002969796, 'spark.broadcast.compress': 0.35450219459517185, 'spark.default.parallelism': 321.04122077612624, 'spark.executor.cores': 2.3939467033727153, 'spark.executor.instances': 4.5186277200035905, 'spark.executor.memory': 5.724940422326447, 'spark.executor.memoryOverhead': 545.6707675150069, 'spark.kryoserializer.buffer': 88.1932417958986, 'spark.kryoserializer.buffer.max': 67.25129282527449, 'spark.locality.wait': 4.431028096003187, 'spark.maxRemoteBlockSizeFetchToMem': 1500363825.8170424, 'spark.memory.fraction': 0.8932043231121947, 'spark.memory.offHeap.enabled': 0.5946921902029674, 'spark.memory.offHeap.size': 627.8322173121403, 'spark.memory.storageFraction': 0.6089506548339559, 'spark.rdd.compress': 0.5469218901471669, 'spark.reducer.maxBlocksInFlightPerAddress': 1267503482.3179002, 'spark.reducer.maxReqsInFlight': 1553283837.9463983, 'spark.reducer.maxSizeInFlight': 60.976266047481246, 'spark.scheduler.mode': 0.1001079156264395, 'spark.scheduler.revive.interval': 516.2114807486785, 'spark.shuffle.compress': 0.6034526651475726, 'spark.shuffle.file.buffer': 36.83865554831312, 'spark.shuffle.io.numConnectionsPerPeer': 4.834057821225401, 'spark.shuffle.sort.bypassMergeThreshold': 152.00882584458364, 'spark.storage.memoryMapThreshold': 2.737654233532858}
target = -300.388
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (19, 27)
before probe, target = (19,)
标准化前的train_x = 
[[3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.55570675e+01 6.99522212e-01 7.24155771e-01 4.61385906e+02
  2.60044587e+00 7.96123443e+00 5.35033660e+00 7.56349035e+02
  1.13305626e+02 8.99147968e+01 5.88901166e+00 2.02795725e+09
  7.03530446e-01 3.96170620e-01 1.42677365e+02 6.52349409e-01
  9.14104272e-01 1.86204721e+09 1.44237129e+09 6.84115482e+01
  7.78713223e-01 8.37685058e+02 2.04366581e-01 1.93572884e+01
  1.94185663e+00 2.73258844e+02 2.60495994e+00]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00]
 [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
  2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
  1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
  8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
  5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
  3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
  3.52075079e+00 2.06608813e+02 3.24785426e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [6.15101550e+01 8.36866979e-02 5.09497062e-01 4.25687261e+02
  2.73992689e+00 6.55675297e+00 5.26851460e+00 7.34526047e+02
  8.90445993e+01 1.07538019e+02 6.60885331e+00 1.59807089e+09
  8.62133167e-01 9.05609418e-01 3.46209799e+01 7.05679422e-01
  7.76796616e-01 1.91743966e+09 1.99520910e+09 5.40885761e+01
  8.62151313e-01 5.01415609e+02 3.18592420e-01 3.22981111e+01
  4.87743678e+00 3.14619035e+02 3.45342839e+00]
 [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
  2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
  9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
  6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
  7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
  8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
  4.28135496e+00 3.32800068e+02 3.87295723e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.53000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.74000000e+02
  1.06000000e+02 1.12000000e+02 5.00000000e+00 1.90339072e+09
  8.39999974e-01 0.00000000e+00 2.16000000e+02 5.60000002e-01
  0.00000000e+00 1.83172608e+09 1.51458598e+09 6.90000000e+01
  0.00000000e+00 6.50000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.60000000e+01 1.00000000e+00 1.00000000e+00 4.38000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.76000000e+02
  1.05000000e+02 1.14000000e+02 5.00000000e+00 1.85510605e+09
  8.39999974e-01 0.00000000e+00 2.21000000e+02 5.69999993e-01
  0.00000000e+00 1.81026022e+09 1.50131200e+09 7.10000000e+01
  0.00000000e+00 6.55000000e+02 1.00000000e+00 2.10000000e+01
  3.00000000e+00 2.04000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.29000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.70000000e+02
  9.60000000e+01 1.01000000e+02 6.00000000e+00 1.73675622e+09
  7.69999981e-01 0.00000000e+00 2.79000000e+02 6.29999995e-01
  0.00000000e+00 1.73302323e+09 1.56653542e+09 6.20000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 2.60000000e+01
  3.00000000e+00 2.31000000e+02 3.00000000e+00]
 [4.17938972e+01 8.06242948e-01 9.72583430e-02 4.44433865e+02
  3.59240233e+00 6.36413646e+00 5.35175857e+00 5.81184991e+02
  9.45506378e+01 1.15151660e+02 4.34831715e+00 1.75111774e+09
  8.24730545e-01 4.57308414e-01 7.68863982e+02 5.38018693e-01
  2.22114310e-01 1.22550451e+09 1.16747094e+09 6.73745437e+01
  5.35514327e-01 7.77063295e+02 7.09242673e-01 2.44983936e+01
  1.92286995e+00 2.87470631e+02 3.71109092e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]]
标准化后的train_x = 
[[-1.02541144e+00  9.19820432e-01  9.82383605e-01  6.47836310e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -3.71175404e-01
   5.10670214e-01  6.44555111e-01 -7.02080018e-01  4.21621616e-01
   4.53419302e-01 -8.63427054e-01 -2.60920561e-01 -7.29092264e-01
  -8.82540143e-01  6.71831212e-01 -1.54786761e-01  8.85235073e-01
  -8.42813168e-01 -1.32824310e-01  9.65854865e-01 -2.09787322e-01
  -6.22358198e-01 -7.40080160e-01  1.04763999e+00]
 [-1.13442860e+00  9.19820432e-01  9.82383605e-01  3.56881842e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.29477977e-01
   5.10670214e-01  6.97612421e-01 -7.02080018e-01  5.14372978e-01
   1.00302895e+00 -8.63427054e-01 -2.20846072e-01 -1.09380968e+00
  -8.82540143e-01  4.55058842e-01 -1.62257444e-01  9.84320145e-01
  -8.42813168e-01 -4.87543252e-02  9.65854865e-01 -2.09787322e-01
  -6.22358198e-01 -7.77098611e-01  1.04763999e+00]
 [ 1.58884813e+00  3.91856556e-01  5.93955051e-02 -3.73542190e-01
   1.11792807e+00  8.12535817e-01 -2.23956099e-01  1.84407775e+00
   2.55145249e-03 -1.20913133e+00 -2.32395488e-01 -2.85053102e-01
   2.60850104e-01  1.03543017e+00 -7.39704602e-01  4.15113582e-02
   1.59603821e+00  1.02083908e+00  4.48409088e-01  3.74654776e-01
   1.62461037e-01 -1.60853747e+00 -8.87701530e-02 -1.01952315e+00
   2.80711936e-01 -4.54934028e-01  6.63860464e-02]
 [-1.13442860e+00  9.19820432e-01  9.82383605e-01  4.29620459e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.21149038e-01
   5.10670214e-01  8.03727040e-01 -7.02080018e-01  3.10712428e-01
   1.00302911e+00 -8.63427054e-01 -1.76318861e-01 -1.09380916e+00
  -8.82540143e-01  4.86884870e-01 -2.88655868e-01  9.84320145e-01
  -8.42813168e-01 -4.87543252e-02  9.65854865e-01 -4.32853612e-01
  -6.22358198e-01 -7.58589386e-01  1.04763999e+00]
 [ 3.43524413e-01  1.12963713e-01  2.30260765e-01  9.72393739e-01
  -8.39388181e-01  8.30528878e-01  6.85139611e-01  1.06430919e+00
   8.86189628e-01 -5.27226355e-01  1.27564530e-01  1.17961607e+00
  -1.04667973e+00  5.58802860e-01 -6.18574854e-01  1.13733433e+00
   1.95600090e+00  9.00551336e-01 -5.75254948e-01  8.26928288e-01
   1.45210260e+00  1.44288127e+00 -1.40524723e+00 -1.02235348e+00
  -1.82680429e+00  7.08430418e-01 -1.02629764e+00]
 [-1.96672934e-01 -6.72846701e-01  3.20114609e-02  8.11096718e-01
  -1.70610987e-01 -1.13779438e-01 -8.31904949e-01  1.97278053e+00
   1.65292278e+00  3.36803536e-01 -1.16294609e-01  1.01089768e+00
  -5.87691067e-01  8.53213537e-01 -1.03949968e+00 -1.61287832e+00
   4.15047319e-02 -3.73286783e-01  4.44065019e-01 -9.77270069e-01
  -1.25380248e-01  1.17730676e-01 -3.27931799e-01 -8.40432344e-01
   3.69998429e-01  2.53400248e-01  5.68991084e-01]
 [-6.41070487e-01 -9.37907058e-01 -4.43035830e-01 -2.75959256e-01
  -6.97355584e-01  6.85460330e-01  9.95002188e-01  1.49541583e+00
   1.35982796e+00  7.11640035e-01  2.15523669e-01  1.40344116e+00
   7.89746756e-01 -5.18735204e-01 -2.62973458e-01  1.60877458e+00
   7.58955764e-01  1.33925051e+00 -4.79935245e-01  5.04655400e-01
   1.89548176e-01 -4.96114845e-01 -9.53856210e-02  7.77817973e-01
  -2.96065194e-02 -5.25210032e-01 -7.05381919e-02]
 [ 6.09845980e-01 -1.76542537e+00  9.82383605e-01 -2.89210972e+00
  -2.66988834e-01 -8.78940353e-01 -1.89764766e+00 -1.63717413e+00
  -3.23072833e-01 -1.84913845e+00  1.16436242e+00  3.29742626e-01
  -2.62439372e+00 -8.63427054e-01 -1.11139029e+00 -1.27616750e+00
  -8.82540143e-01 -1.02420043e+00  4.56655877e-01 -1.19555144e+00
  -8.42813168e-01 -3.57010936e-01 -2.01428905e+00  9.05544130e-01
   5.15905413e-01  1.33295309e+00 -1.92566191e+00]
 [ 1.48198327e+00  9.19820432e-01 -1.74423803e+00  2.84143225e-01
  -1.69958407e+00  8.64318080e-01  1.39905538e+00 -8.79240682e-01
  -3.82625908e-01  6.44555111e-01  2.09758364e+00 -2.90514403e+00
   3.43497686e-01 -8.63427054e-01 -3.32164099e-01 -3.64375803e-01
  -8.82540143e-01 -1.42155121e+00  2.67463864e-01 -5.01955934e-01
  -8.42813168e-01  2.60412075e+00 -2.01428905e+00 -8.78986193e-01
   1.65416902e+00 -1.48044918e+00 -4.39010961e-01]
 [ 2.08268473e+00 -1.54070601e+00 -3.55032314e-01  1.06837052e-01
  -6.39568332e-01 -3.93658202e-01  5.95225331e-01  8.82546852e-01
  -5.58629108e-01  4.07814384e-01  7.99336031e-01 -9.74155300e-01
   6.96711575e-01  2.38765906e+00 -1.09971980e+00  2.10985159e+00
   1.52962348e+00  1.11072427e+00  2.06367663e+00 -5.92264440e-01
   1.69799978e+00 -1.69824845e+00 -1.06483779e+00  1.86430782e+00
   1.51465977e+00  1.47397552e+00  2.35078791e-01]
 [ 5.77923012e-01 -1.48754627e+00 -1.47420341e+00 -6.39376662e-01
  -1.03076779e+00  2.54265875e-01  1.02632704e+00  5.79007373e-01
  -6.02165096e-02 -4.51932674e-01 -1.29573248e+00 -1.87753261e-01
  -1.58670126e+00  8.17280079e-01 -7.59889813e-01  7.93651839e-01
   1.40781815e+00  2.64591357e-01  5.13920568e-01 -1.61377591e+00
   1.54634072e+00  6.11070003e-01 -1.56630522e-01 -7.52512580e-02
   8.36161520e-01  1.81049236e+00  8.58771739e-01]
 [-3.71308472e-01  9.19820432e-01  9.82383605e-01  1.74349623e-02
  -2.66988834e-01 -7.31113658e-03 -7.98746646e-01 -3.62846465e-01
  -2.63519758e-01 -2.04361845e-01  2.31141200e-01 -2.23983835e-01
   2.33575703e-01 -8.63427054e-01  9.08444046e-02  3.65057813e-01
  -8.82540143e-01  4.72914289e-01 -1.08961240e-01 -1.05615646e-01
  -8.42813168e-01 -3.94132158e-02  9.65854865e-01  2.36345259e-01
  -6.22358198e-01 -3.88404877e-01 -4.39010961e-01]
 [-1.02541144e+00  9.19820432e-01  9.82383605e-01  7.69067338e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.54464794e-01
   4.51117139e-01  6.44555111e-01 -7.02080018e-01  5.55525976e-01
   4.53419302e-01 -8.63427054e-01 -2.92089609e-01 -5.46734099e-01
  -8.82540143e-01  7.85505309e-01 -2.30543281e-01  8.85235073e-01
  -8.42813168e-01 -3.10305389e-01  9.65854865e-01 -4.32853612e-01
  -6.22358198e-01 -7.77098611e-01  1.04763999e+00]
 [-6.98359956e-01  9.19820432e-01  9.82383605e-01  4.05374253e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.37806916e-01
   3.91564064e-01  7.50669730e-01 -7.02080018e-01  3.13615197e-01
   4.53419302e-01 -8.63427054e-01 -2.69826004e-01 -3.64375934e-01
  -8.82540143e-01  7.04058437e-01 -2.93905689e-01  1.08340522e+00
  -8.42813168e-01 -2.63599842e-01  9.65854865e-01 -6.55919902e-01
  -6.22358198e-01 -5.73497131e-01  1.04763999e+00]
 [-3.71308472e-01  9.19820432e-01  9.82383605e-01  1.87158402e-01
  -2.66988834e-01 -7.31113658e-03 -7.98746646e-01 -4.87780550e-01
  -1.44413609e-01  6.09247040e-02  2.31141200e-01 -2.79328628e-01
  -3.16033947e-01 -8.63427054e-01 -1.15681805e-02  7.29774143e-01
  -8.82540143e-01  4.11001806e-01  1.74336373e-02  1.91639570e-01
  -8.42813168e-01 -6.74365440e-02  9.65854865e-01  4.59411549e-01
  -6.22358198e-01 -7.37480442e-02 -4.39010961e-01]
 [-6.67257271e-02  3.99535122e-01 -1.47905132e+00  5.61371055e-01
   5.81683929e-01 -5.61548376e-01  6.86702212e-01 -3.94621446e-01
  -2.30727587e-01  8.11773720e-01 -1.31024428e+00 -2.07376053e-01
   2.85574828e-01  7.78284049e-01  2.16965950e+00 -9.47581610e-01
  -1.92815126e-01 -1.51465225e+00 -1.88747198e+00  7.24176614e-01
   7.35380493e-01  8.76606749e-01  9.93561863e-02  1.24453789e-01
  -1.84841614e+00  9.71479596e-01  6.18133031e-01]
 [-6.30802226e-01 -1.56766407e+00 -2.21585514e-01  5.88542505e-01
   1.04748156e+00 -1.64839371e+00  1.91595742e+00 -1.36475341e+00
  -3.36086383e+00 -2.01283993e+00  7.16067645e-01  1.14482862e+00
  -1.55615723e+00 -4.62995378e-01  2.25890005e+00  1.08829271e-01
   9.93367888e-02 -1.42333257e+00  2.17448416e+00 -2.65682109e+00
   4.48923775e-01  6.09866772e-01  9.33886555e-01 -7.22041625e-01
   9.95851611e-01 -1.92301604e-02  2.77005425e-02]
 [ 1.45421221e+00 -5.75501533e-01 -1.68594548e+00  4.73662330e-01
  -1.56166624e+00 -1.98760931e+00  1.44533919e-01  9.27705337e-02
  -3.42784466e-01  1.46969058e+00  2.11540329e+00 -6.57903217e-01
   7.03132693e-01  1.05042034e+00  1.13439753e+00  7.88117571e-01
  -6.94018830e-02 -1.51089052e+00 -2.15851453e+00  1.08481418e-01
   2.02573116e+00  3.68762013e-01 -4.10932308e-01 -7.45240932e-01
   4.28593554e-01  1.55342249e+00 -2.44470301e+00]
 [-8.43093396e-01  2.84678170e-01 -7.77644674e-01 -2.43043236e+00
  -1.13521790e+00 -2.17014771e+00  1.09679213e+00 -6.90417243e-01
  -6.09330064e-01 -1.72969091e+00 -1.23305667e+00 -1.46367693e+00
   1.03825164e+00  1.27148396e+00  1.54168439e+00  3.45921868e-01
   8.15800274e-01 -1.35529755e+00 -4.58218563e-02  9.02028172e-02
  -5.47788983e-01 -1.56003859e+00 -2.15913263e-01  2.87715023e+00
   1.46528308e+00 -1.53581349e+00 -8.29027544e-01]]
train_y = 
[   -162.804    -163.342    -164.05     -165.666    -181.266    -182.936
    -184.517    -194.423    -220.648    -222.405    -245.931 -100000.
    -160.548    -169.925    -213.518    -181.042    -233.708    -312.373
    -300.388]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.02541144e+00  9.19820432e-01  9.82383605e-01  6.47836310e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -3.71175404e-01
   5.10670214e-01  6.44555111e-01 -7.02080018e-01  4.21621616e-01
   4.53419302e-01 -8.63427054e-01 -2.60920561e-01 -7.29092264e-01
  -8.82540143e-01  6.71831212e-01 -1.54786761e-01  8.85235073e-01
  -8.42813168e-01 -1.32824310e-01  9.65854865e-01 -2.09787322e-01
  -6.22358198e-01 -7.40080160e-01  1.04763999e+00]
 [-1.13442860e+00  9.19820432e-01  9.82383605e-01  3.56881842e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.29477977e-01
   5.10670214e-01  6.97612421e-01 -7.02080018e-01  5.14372978e-01
   1.00302895e+00 -8.63427054e-01 -2.20846072e-01 -1.09380968e+00
  -8.82540143e-01  4.55058842e-01 -1.62257444e-01  9.84320145e-01
  -8.42813168e-01 -4.87543252e-02  9.65854865e-01 -2.09787322e-01
  -6.22358198e-01 -7.77098611e-01  1.04763999e+00]
 [ 1.58884813e+00  3.91856556e-01  5.93955051e-02 -3.73542190e-01
   1.11792807e+00  8.12535817e-01 -2.23956099e-01  1.84407775e+00
   2.55145249e-03 -1.20913133e+00 -2.32395488e-01 -2.85053102e-01
   2.60850104e-01  1.03543017e+00 -7.39704602e-01  4.15113582e-02
   1.59603821e+00  1.02083908e+00  4.48409088e-01  3.74654776e-01
   1.62461037e-01 -1.60853747e+00 -8.87701530e-02 -1.01952315e+00
   2.80711936e-01 -4.54934028e-01  6.63860464e-02]
 [-1.13442860e+00  9.19820432e-01  9.82383605e-01  4.29620459e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.21149038e-01
   5.10670214e-01  8.03727040e-01 -7.02080018e-01  3.10712428e-01
   1.00302911e+00 -8.63427054e-01 -1.76318861e-01 -1.09380916e+00
  -8.82540143e-01  4.86884870e-01 -2.88655868e-01  9.84320145e-01
  -8.42813168e-01 -4.87543252e-02  9.65854865e-01 -4.32853612e-01
  -6.22358198e-01 -7.58589386e-01  1.04763999e+00]
 [ 3.43524413e-01  1.12963713e-01  2.30260765e-01  9.72393739e-01
  -8.39388181e-01  8.30528878e-01  6.85139611e-01  1.06430919e+00
   8.86189628e-01 -5.27226355e-01  1.27564530e-01  1.17961607e+00
  -1.04667973e+00  5.58802860e-01 -6.18574854e-01  1.13733433e+00
   1.95600090e+00  9.00551336e-01 -5.75254948e-01  8.26928288e-01
   1.45210260e+00  1.44288127e+00 -1.40524723e+00 -1.02235348e+00
  -1.82680429e+00  7.08430418e-01 -1.02629764e+00]
 [-1.96672934e-01 -6.72846701e-01  3.20114609e-02  8.11096718e-01
  -1.70610987e-01 -1.13779438e-01 -8.31904949e-01  1.97278053e+00
   1.65292278e+00  3.36803536e-01 -1.16294609e-01  1.01089768e+00
  -5.87691067e-01  8.53213537e-01 -1.03949968e+00 -1.61287832e+00
   4.15047319e-02 -3.73286783e-01  4.44065019e-01 -9.77270069e-01
  -1.25380248e-01  1.17730676e-01 -3.27931799e-01 -8.40432344e-01
   3.69998429e-01  2.53400248e-01  5.68991084e-01]
 [-6.41070487e-01 -9.37907058e-01 -4.43035830e-01 -2.75959256e-01
  -6.97355584e-01  6.85460330e-01  9.95002188e-01  1.49541583e+00
   1.35982796e+00  7.11640035e-01  2.15523669e-01  1.40344116e+00
   7.89746756e-01 -5.18735204e-01 -2.62973458e-01  1.60877458e+00
   7.58955764e-01  1.33925051e+00 -4.79935245e-01  5.04655400e-01
   1.89548176e-01 -4.96114845e-01 -9.53856210e-02  7.77817973e-01
  -2.96065194e-02 -5.25210032e-01 -7.05381919e-02]
 [ 6.09845980e-01 -1.76542537e+00  9.82383605e-01 -2.89210972e+00
  -2.66988834e-01 -8.78940353e-01 -1.89764766e+00 -1.63717413e+00
  -3.23072833e-01 -1.84913845e+00  1.16436242e+00  3.29742626e-01
  -2.62439372e+00 -8.63427054e-01 -1.11139029e+00 -1.27616750e+00
  -8.82540143e-01 -1.02420043e+00  4.56655877e-01 -1.19555144e+00
  -8.42813168e-01 -3.57010936e-01 -2.01428905e+00  9.05544130e-01
   5.15905413e-01  1.33295309e+00 -1.92566191e+00]
 [ 1.48198327e+00  9.19820432e-01 -1.74423803e+00  2.84143225e-01
  -1.69958407e+00  8.64318080e-01  1.39905538e+00 -8.79240682e-01
  -3.82625908e-01  6.44555111e-01  2.09758364e+00 -2.90514403e+00
   3.43497686e-01 -8.63427054e-01 -3.32164099e-01 -3.64375803e-01
  -8.82540143e-01 -1.42155121e+00  2.67463864e-01 -5.01955934e-01
  -8.42813168e-01  2.60412075e+00 -2.01428905e+00 -8.78986193e-01
   1.65416902e+00 -1.48044918e+00 -4.39010961e-01]
 [ 2.08268473e+00 -1.54070601e+00 -3.55032314e-01  1.06837052e-01
  -6.39568332e-01 -3.93658202e-01  5.95225331e-01  8.82546852e-01
  -5.58629108e-01  4.07814384e-01  7.99336031e-01 -9.74155300e-01
   6.96711575e-01  2.38765906e+00 -1.09971980e+00  2.10985159e+00
   1.52962348e+00  1.11072427e+00  2.06367663e+00 -5.92264440e-01
   1.69799978e+00 -1.69824845e+00 -1.06483779e+00  1.86430782e+00
   1.51465977e+00  1.47397552e+00  2.35078791e-01]
 [ 5.77923012e-01 -1.48754627e+00 -1.47420341e+00 -6.39376662e-01
  -1.03076779e+00  2.54265875e-01  1.02632704e+00  5.79007373e-01
  -6.02165096e-02 -4.51932674e-01 -1.29573248e+00 -1.87753261e-01
  -1.58670126e+00  8.17280079e-01 -7.59889813e-01  7.93651839e-01
   1.40781815e+00  2.64591357e-01  5.13920568e-01 -1.61377591e+00
   1.54634072e+00  6.11070003e-01 -1.56630522e-01 -7.52512580e-02
   8.36161520e-01  1.81049236e+00  8.58771739e-01]
 [-3.71308472e-01  9.19820432e-01  9.82383605e-01  1.74349623e-02
  -2.66988834e-01 -7.31113658e-03 -7.98746646e-01 -3.62846465e-01
  -2.63519758e-01 -2.04361845e-01  2.31141200e-01 -2.23983835e-01
   2.33575703e-01 -8.63427054e-01  9.08444046e-02  3.65057813e-01
  -8.82540143e-01  4.72914289e-01 -1.08961240e-01 -1.05615646e-01
  -8.42813168e-01 -3.94132158e-02  9.65854865e-01  2.36345259e-01
  -6.22358198e-01 -3.88404877e-01 -4.39010961e-01]
 [-1.02541144e+00  9.19820432e-01  9.82383605e-01  7.69067338e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.54464794e-01
   4.51117139e-01  6.44555111e-01 -7.02080018e-01  5.55525976e-01
   4.53419302e-01 -8.63427054e-01 -2.92089609e-01 -5.46734099e-01
  -8.82540143e-01  7.85505309e-01 -2.30543281e-01  8.85235073e-01
  -8.42813168e-01 -3.10305389e-01  9.65854865e-01 -4.32853612e-01
  -6.22358198e-01 -7.77098611e-01  1.04763999e+00]
 [-6.98359956e-01  9.19820432e-01  9.82383605e-01  4.05374253e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.37806916e-01
   3.91564064e-01  7.50669730e-01 -7.02080018e-01  3.13615197e-01
   4.53419302e-01 -8.63427054e-01 -2.69826004e-01 -3.64375934e-01
  -8.82540143e-01  7.04058437e-01 -2.93905689e-01  1.08340522e+00
  -8.42813168e-01 -2.63599842e-01  9.65854865e-01 -6.55919902e-01
  -6.22358198e-01 -5.73497131e-01  1.04763999e+00]
 [-3.71308472e-01  9.19820432e-01  9.82383605e-01  1.87158402e-01
  -2.66988834e-01 -7.31113658e-03 -7.98746646e-01 -4.87780550e-01
  -1.44413609e-01  6.09247040e-02  2.31141200e-01 -2.79328628e-01
  -3.16033947e-01 -8.63427054e-01 -1.15681805e-02  7.29774143e-01
  -8.82540143e-01  4.11001806e-01  1.74336373e-02  1.91639570e-01
  -8.42813168e-01 -6.74365440e-02  9.65854865e-01  4.59411549e-01
  -6.22358198e-01 -7.37480442e-02 -4.39010961e-01]
 [-6.67257271e-02  3.99535122e-01 -1.47905132e+00  5.61371055e-01
   5.81683929e-01 -5.61548376e-01  6.86702212e-01 -3.94621446e-01
  -2.30727587e-01  8.11773720e-01 -1.31024428e+00 -2.07376053e-01
   2.85574828e-01  7.78284049e-01  2.16965950e+00 -9.47581610e-01
  -1.92815126e-01 -1.51465225e+00 -1.88747198e+00  7.24176614e-01
   7.35380493e-01  8.76606749e-01  9.93561863e-02  1.24453789e-01
  -1.84841614e+00  9.71479596e-01  6.18133031e-01]
 [-6.30802226e-01 -1.56766407e+00 -2.21585514e-01  5.88542505e-01
   1.04748156e+00 -1.64839371e+00  1.91595742e+00 -1.36475341e+00
  -3.36086383e+00 -2.01283993e+00  7.16067645e-01  1.14482862e+00
  -1.55615723e+00 -4.62995378e-01  2.25890005e+00  1.08829271e-01
   9.93367888e-02 -1.42333257e+00  2.17448416e+00 -2.65682109e+00
   4.48923775e-01  6.09866772e-01  9.33886555e-01 -7.22041625e-01
   9.95851611e-01 -1.92301604e-02  2.77005425e-02]
 [ 1.45421221e+00 -5.75501533e-01 -1.68594548e+00  4.73662330e-01
  -1.56166624e+00 -1.98760931e+00  1.44533919e-01  9.27705337e-02
  -3.42784466e-01  1.46969058e+00  2.11540329e+00 -6.57903217e-01
   7.03132693e-01  1.05042034e+00  1.13439753e+00  7.88117571e-01
  -6.94018830e-02 -1.51089052e+00 -2.15851453e+00  1.08481418e-01
   2.02573116e+00  3.68762013e-01 -4.10932308e-01 -7.45240932e-01
   4.28593554e-01  1.55342249e+00 -2.44470301e+00]
 [-8.43093396e-01  2.84678170e-01 -7.77644674e-01 -2.43043236e+00
  -1.13521790e+00 -2.17014771e+00  1.09679213e+00 -6.90417243e-01
  -6.09330064e-01 -1.72969091e+00 -1.23305667e+00 -1.46367693e+00
   1.03825164e+00  1.27148396e+00  1.54168439e+00  3.45921868e-01
   8.15800274e-01 -1.35529755e+00 -4.58218563e-02  9.02028172e-02
  -5.47788983e-01 -1.56003859e+00 -2.15913263e-01  2.87715023e+00
   1.46528308e+00 -1.53581349e+00 -8.29027544e-01]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.02541144e+00  9.19820432e-01  9.82383605e-01  6.47836310e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -3.71175404e-01
   5.10670214e-01  6.44555111e-01 -7.02080018e-01  4.21621616e-01
   4.53419302e-01 -8.63427054e-01 -2.60920561e-01 -7.29092264e-01
  -8.82540143e-01  6.71831212e-01 -1.54786761e-01  8.85235073e-01
  -8.42813168e-01 -1.32824310e-01  9.65854865e-01 -2.09787322e-01
  -6.22358198e-01 -7.40080160e-01  1.04763999e+00]
 [-1.13442860e+00  9.19820432e-01  9.82383605e-01  3.56881842e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.29477977e-01
   5.10670214e-01  6.97612421e-01 -7.02080018e-01  5.14372978e-01
   1.00302895e+00 -8.63427054e-01 -2.20846072e-01 -1.09380968e+00
  -8.82540143e-01  4.55058842e-01 -1.62257444e-01  9.84320145e-01
  -8.42813168e-01 -4.87543252e-02  9.65854865e-01 -2.09787322e-01
  -6.22358198e-01 -7.77098611e-01  1.04763999e+00]
 [ 1.58884813e+00  3.91856556e-01  5.93955051e-02 -3.73542190e-01
   1.11792807e+00  8.12535817e-01 -2.23956099e-01  1.84407775e+00
   2.55145249e-03 -1.20913133e+00 -2.32395488e-01 -2.85053102e-01
   2.60850104e-01  1.03543017e+00 -7.39704602e-01  4.15113582e-02
   1.59603821e+00  1.02083908e+00  4.48409088e-01  3.74654776e-01
   1.62461037e-01 -1.60853747e+00 -8.87701530e-02 -1.01952315e+00
   2.80711936e-01 -4.54934028e-01  6.63860464e-02]
 [-1.13442860e+00  9.19820432e-01  9.82383605e-01  4.29620459e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.21149038e-01
   5.10670214e-01  8.03727040e-01 -7.02080018e-01  3.10712428e-01
   1.00302911e+00 -8.63427054e-01 -1.76318861e-01 -1.09380916e+00
  -8.82540143e-01  4.86884870e-01 -2.88655868e-01  9.84320145e-01
  -8.42813168e-01 -4.87543252e-02  9.65854865e-01 -4.32853612e-01
  -6.22358198e-01 -7.58589386e-01  1.04763999e+00]
 [ 3.43524413e-01  1.12963713e-01  2.30260765e-01  9.72393739e-01
  -8.39388181e-01  8.30528878e-01  6.85139611e-01  1.06430919e+00
   8.86189628e-01 -5.27226355e-01  1.27564530e-01  1.17961607e+00
  -1.04667973e+00  5.58802860e-01 -6.18574854e-01  1.13733433e+00
   1.95600090e+00  9.00551336e-01 -5.75254948e-01  8.26928288e-01
   1.45210260e+00  1.44288127e+00 -1.40524723e+00 -1.02235348e+00
  -1.82680429e+00  7.08430418e-01 -1.02629764e+00]
 [-1.96672934e-01 -6.72846701e-01  3.20114609e-02  8.11096718e-01
  -1.70610987e-01 -1.13779438e-01 -8.31904949e-01  1.97278053e+00
   1.65292278e+00  3.36803536e-01 -1.16294609e-01  1.01089768e+00
  -5.87691067e-01  8.53213537e-01 -1.03949968e+00 -1.61287832e+00
   4.15047319e-02 -3.73286783e-01  4.44065019e-01 -9.77270069e-01
  -1.25380248e-01  1.17730676e-01 -3.27931799e-01 -8.40432344e-01
   3.69998429e-01  2.53400248e-01  5.68991084e-01]
 [-6.41070487e-01 -9.37907058e-01 -4.43035830e-01 -2.75959256e-01
  -6.97355584e-01  6.85460330e-01  9.95002188e-01  1.49541583e+00
   1.35982796e+00  7.11640035e-01  2.15523669e-01  1.40344116e+00
   7.89746756e-01 -5.18735204e-01 -2.62973458e-01  1.60877458e+00
   7.58955764e-01  1.33925051e+00 -4.79935245e-01  5.04655400e-01
   1.89548176e-01 -4.96114845e-01 -9.53856210e-02  7.77817973e-01
  -2.96065194e-02 -5.25210032e-01 -7.05381919e-02]
 [ 6.09845980e-01 -1.76542537e+00  9.82383605e-01 -2.89210972e+00
  -2.66988834e-01 -8.78940353e-01 -1.89764766e+00 -1.63717413e+00
  -3.23072833e-01 -1.84913845e+00  1.16436242e+00  3.29742626e-01
  -2.62439372e+00 -8.63427054e-01 -1.11139029e+00 -1.27616750e+00
  -8.82540143e-01 -1.02420043e+00  4.56655877e-01 -1.19555144e+00
  -8.42813168e-01 -3.57010936e-01 -2.01428905e+00  9.05544130e-01
   5.15905413e-01  1.33295309e+00 -1.92566191e+00]
 [ 1.48198327e+00  9.19820432e-01 -1.74423803e+00  2.84143225e-01
  -1.69958407e+00  8.64318080e-01  1.39905538e+00 -8.79240682e-01
  -3.82625908e-01  6.44555111e-01  2.09758364e+00 -2.90514403e+00
   3.43497686e-01 -8.63427054e-01 -3.32164099e-01 -3.64375803e-01
  -8.82540143e-01 -1.42155121e+00  2.67463864e-01 -5.01955934e-01
  -8.42813168e-01  2.60412075e+00 -2.01428905e+00 -8.78986193e-01
   1.65416902e+00 -1.48044918e+00 -4.39010961e-01]
 [ 2.08268473e+00 -1.54070601e+00 -3.55032314e-01  1.06837052e-01
  -6.39568332e-01 -3.93658202e-01  5.95225331e-01  8.82546852e-01
  -5.58629108e-01  4.07814384e-01  7.99336031e-01 -9.74155300e-01
   6.96711575e-01  2.38765906e+00 -1.09971980e+00  2.10985159e+00
   1.52962348e+00  1.11072427e+00  2.06367663e+00 -5.92264440e-01
   1.69799978e+00 -1.69824845e+00 -1.06483779e+00  1.86430782e+00
   1.51465977e+00  1.47397552e+00  2.35078791e-01]
 [ 5.77923012e-01 -1.48754627e+00 -1.47420341e+00 -6.39376662e-01
  -1.03076779e+00  2.54265875e-01  1.02632704e+00  5.79007373e-01
  -6.02165096e-02 -4.51932674e-01 -1.29573248e+00 -1.87753261e-01
  -1.58670126e+00  8.17280079e-01 -7.59889813e-01  7.93651839e-01
   1.40781815e+00  2.64591357e-01  5.13920568e-01 -1.61377591e+00
   1.54634072e+00  6.11070003e-01 -1.56630522e-01 -7.52512580e-02
   8.36161520e-01  1.81049236e+00  8.58771739e-01]
 [-3.71308472e-01  9.19820432e-01  9.82383605e-01  1.74349623e-02
  -2.66988834e-01 -7.31113658e-03 -7.98746646e-01 -3.62846465e-01
  -2.63519758e-01 -2.04361845e-01  2.31141200e-01 -2.23983835e-01
   2.33575703e-01 -8.63427054e-01  9.08444046e-02  3.65057813e-01
  -8.82540143e-01  4.72914289e-01 -1.08961240e-01 -1.05615646e-01
  -8.42813168e-01 -3.94132158e-02  9.65854865e-01  2.36345259e-01
  -6.22358198e-01 -3.88404877e-01 -4.39010961e-01]
 [-1.02541144e+00  9.19820432e-01  9.82383605e-01  7.69067338e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.54464794e-01
   4.51117139e-01  6.44555111e-01 -7.02080018e-01  5.55525976e-01
   4.53419302e-01 -8.63427054e-01 -2.92089609e-01 -5.46734099e-01
  -8.82540143e-01  7.85505309e-01 -2.30543281e-01  8.85235073e-01
  -8.42813168e-01 -3.10305389e-01  9.65854865e-01 -4.32853612e-01
  -6.22358198e-01 -7.77098611e-01  1.04763999e+00]
 [-6.98359956e-01  9.19820432e-01  9.82383605e-01  4.05374253e-01
   1.16560640e+00  8.64318080e-01 -7.98746646e-01 -4.37806916e-01
   3.91564064e-01  7.50669730e-01 -7.02080018e-01  3.13615197e-01
   4.53419302e-01 -8.63427054e-01 -2.69826004e-01 -3.64375934e-01
  -8.82540143e-01  7.04058437e-01 -2.93905689e-01  1.08340522e+00
  -8.42813168e-01 -2.63599842e-01  9.65854865e-01 -6.55919902e-01
  -6.22358198e-01 -5.73497131e-01  1.04763999e+00]
 [-3.71308472e-01  9.19820432e-01  9.82383605e-01  1.87158402e-01
  -2.66988834e-01 -7.31113658e-03 -7.98746646e-01 -4.87780550e-01
  -1.44413609e-01  6.09247040e-02  2.31141200e-01 -2.79328628e-01
  -3.16033947e-01 -8.63427054e-01 -1.15681805e-02  7.29774143e-01
  -8.82540143e-01  4.11001806e-01  1.74336373e-02  1.91639570e-01
  -8.42813168e-01 -6.74365440e-02  9.65854865e-01  4.59411549e-01
  -6.22358198e-01 -7.37480442e-02 -4.39010961e-01]
 [-6.67257271e-02  3.99535122e-01 -1.47905132e+00  5.61371055e-01
   5.81683929e-01 -5.61548376e-01  6.86702212e-01 -3.94621446e-01
  -2.30727587e-01  8.11773720e-01 -1.31024428e+00 -2.07376053e-01
   2.85574828e-01  7.78284049e-01  2.16965950e+00 -9.47581610e-01
  -1.92815126e-01 -1.51465225e+00 -1.88747198e+00  7.24176614e-01
   7.35380493e-01  8.76606749e-01  9.93561863e-02  1.24453789e-01
  -1.84841614e+00  9.71479596e-01  6.18133031e-01]
 [-6.30802226e-01 -1.56766407e+00 -2.21585514e-01  5.88542505e-01
   1.04748156e+00 -1.64839371e+00  1.91595742e+00 -1.36475341e+00
  -3.36086383e+00 -2.01283993e+00  7.16067645e-01  1.14482862e+00
  -1.55615723e+00 -4.62995378e-01  2.25890005e+00  1.08829271e-01
   9.93367888e-02 -1.42333257e+00  2.17448416e+00 -2.65682109e+00
   4.48923775e-01  6.09866772e-01  9.33886555e-01 -7.22041625e-01
   9.95851611e-01 -1.92301604e-02  2.77005425e-02]
 [ 1.45421221e+00 -5.75501533e-01 -1.68594548e+00  4.73662330e-01
  -1.56166624e+00 -1.98760931e+00  1.44533919e-01  9.27705337e-02
  -3.42784466e-01  1.46969058e+00  2.11540329e+00 -6.57903217e-01
   7.03132693e-01  1.05042034e+00  1.13439753e+00  7.88117571e-01
  -6.94018830e-02 -1.51089052e+00 -2.15851453e+00  1.08481418e-01
   2.02573116e+00  3.68762013e-01 -4.10932308e-01 -7.45240932e-01
   4.28593554e-01  1.55342249e+00 -2.44470301e+00]
 [-8.43093396e-01  2.84678170e-01 -7.77644674e-01 -2.43043236e+00
  -1.13521790e+00 -2.17014771e+00  1.09679213e+00 -6.90417243e-01
  -6.09330064e-01 -1.72969091e+00 -1.23305667e+00 -1.46367693e+00
   1.03825164e+00  1.27148396e+00  1.54168439e+00  3.45921868e-01
   8.15800274e-01 -1.35529755e+00 -4.58218563e-02  9.02028172e-02
  -5.47788983e-01 -1.56003859e+00 -2.15913263e-01  2.87715023e+00
   1.46528308e+00 -1.53581349e+00 -8.29027544e-01]]================= config20 =================
2022年 02月 22日 星期二 17:42:41 CST
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:848: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stdout = io.open(c2pread, 'rb', bufsize)
/usr/local/home/python3/python3/lib/python3.8/subprocess.py:853: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
  self.stderr = io.open(errread, 'rb', bufsize)
cmd

end before line
finish
-------------------stop k8s-node02 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (186315) - 没有那个进程
-------------------stop k8s-node03 --------------
kill: 用法:kill [-s 信号声明 | -n 信号编号 | -信号声明] 进程号 | 任务声明 ... 或 kill -l [信号声明]
/usr/local/home/zwr/stop.sh: 第 3 行:kill: (227271) - 没有那个进程

upper = 
[6492.36567938 6492.36576652 6492.36576392 ... 6492.36575527 6492.3657293
 6492.36576479]
upper.argmax() = 2330
all predict_target = 
[5455.76284267 5455.76262809 5455.76263449 ... 5455.76265579 5455.76271974
 5455.76263234]
upper.argmax() = 2330, sortnumber[0] = 2330
x_max = [3.66193741e+01 8.92084797e-01 8.34190491e-01 4.71530120e+02
 3.62935381e+00 6.93832910e+00 4.22775563e+00 4.75444881e+02
 7.56964663e+01 9.16544404e+01 4.79925868e+00 1.58871143e+09
 7.00678627e-01 5.34038772e-01 3.66841055e+02 8.31104736e-01
 6.31632388e-01 1.94127358e+09 1.47105593e+09 6.22011959e+01
 3.75675698e-01 7.89675086e+02 7.87637846e-01 3.18247889e+01
 1.57393267e+00 2.28961116e+02 3.64847792e+00]
black_box_function中schafferRun(i) 中的i为[36.619374101386704, 0.892084797041436, 0.8341904908304536, 471.5301198130861, 3.629353808513413, 6.938329102446875, 4.227755625314739, 475.44488098062425, 75.69646629604895, 91.65444035946147, 4.799258682994191, 1588711433.2497582, 0.7006786266515356, 0.5340387722955093, 366.84105466490394, 0.831104736120196, 0.6316323875128026, 1941273578.154603, 1471055931.0513835, 62.20119589654248, 0.3756756977338631, 789.6750857261209, 0.7876378459957537, 31.824788907798457, 1.5739326732567926, 228.9611155541112, 3.648477917880928]
需要通过formatConf处理的数据 : conf = spark.broadcast.blockSize	 value = 36.619374101386704
需要通过formatConf处理的数据 : conf = spark.broadcast.checksum	 value = 0.892084797041436
需要通过formatConf处理的数据 : conf = spark.broadcast.compress	 value = 0.8341904908304536
需要通过formatConf处理的数据 : conf = spark.default.parallelism	 value = 471.5301198130861
需要通过formatConf处理的数据 : conf = spark.executor.cores	 value = 3.629353808513413
需要通过formatConf处理的数据 : conf = spark.executor.instances	 value = 6.938329102446875
需要通过formatConf处理的数据 : conf = spark.executor.memory	 value = 4.227755625314739
需要通过formatConf处理的数据 : conf = spark.executor.memoryOverhead	 value = 475.44488098062425
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer	 value = 75.69646629604895
需要通过formatConf处理的数据 : conf = spark.kryoserializer.buffer.max	 value = 91.65444035946147
需要通过formatConf处理的数据 : conf = spark.locality.wait	 value = 4.799258682994191
需要通过formatConf处理的数据 : conf = spark.maxRemoteBlockSizeFetchToMem	 value = 1588711433.2497582
需要通过formatConf处理的数据 : conf = spark.memory.fraction	 value = 0.7006786266515356
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.enabled	 value = 0.5340387722955093
需要通过formatConf处理的数据 : conf = spark.memory.offHeap.size	 value = 366.84105466490394
需要通过formatConf处理的数据 : conf = spark.memory.storageFraction	 value = 0.831104736120196
需要通过formatConf处理的数据 : conf = spark.rdd.compress	 value = 0.6316323875128026
需要通过formatConf处理的数据 : conf = spark.reducer.maxBlocksInFlightPerAddress	 value = 1941273578.154603
需要通过formatConf处理的数据 : conf = spark.reducer.maxReqsInFlight	 value = 1471055931.0513835
需要通过formatConf处理的数据 : conf = spark.reducer.maxSizeInFlight	 value = 62.20119589654248
需要通过formatConf处理的数据 : conf = spark.scheduler.mode	 value = 0.3756756977338631
需要通过formatConf处理的数据 : conf = spark.scheduler.revive.interval	 value = 789.6750857261209
需要通过formatConf处理的数据 : conf = spark.shuffle.compress	 value = 0.7876378459957537
需要通过formatConf处理的数据 : conf = spark.shuffle.file.buffer	 value = 31.824788907798457
需要通过formatConf处理的数据 : conf = spark.shuffle.io.numConnectionsPerPeer	 value = 1.5739326732567926
需要通过formatConf处理的数据 : conf = spark.shuffle.sort.bypassMergeThreshold	 value = 228.9611155541112
需要通过formatConf处理的数据 : conf = spark.storage.memoryMapThreshold	 value = 3.648477917880928
configNum = 20	 run_cmd = /usr/local/home/zwr/wordcount-100G-ga.sh 20 /usr/local/home/yyq/bo/ganrs_bo_new/config/wordcount-100G
run_cmd命令执行成功
probe说：没见过！帮你计算target！params = {'spark.broadcast.blockSize': 36.619374101386704, 'spark.broadcast.checksum': 0.892084797041436, 'spark.broadcast.compress': 0.8341904908304536, 'spark.default.parallelism': 471.5301198130861, 'spark.executor.cores': 3.629353808513413, 'spark.executor.instances': 6.938329102446875, 'spark.executor.memory': 4.227755625314739, 'spark.executor.memoryOverhead': 475.44488098062425, 'spark.kryoserializer.buffer': 75.69646629604895, 'spark.kryoserializer.buffer.max': 91.65444035946147, 'spark.locality.wait': 4.799258682994191, 'spark.maxRemoteBlockSizeFetchToMem': 1588711433.2497582, 'spark.memory.fraction': 0.7006786266515356, 'spark.memory.offHeap.enabled': 0.5340387722955093, 'spark.memory.offHeap.size': 366.84105466490394, 'spark.memory.storageFraction': 0.831104736120196, 'spark.rdd.compress': 0.6316323875128026, 'spark.reducer.maxBlocksInFlightPerAddress': 1941273578.154603, 'spark.reducer.maxReqsInFlight': 1471055931.0513835, 'spark.reducer.maxSizeInFlight': 62.20119589654248, 'spark.scheduler.mode': 0.3756756977338631, 'spark.scheduler.revive.interval': 789.6750857261209, 'spark.shuffle.compress': 0.7876378459957537, 'spark.shuffle.file.buffer': 31.824788907798457, 'spark.shuffle.io.numConnectionsPerPeer': 1.5739326732567926, 'spark.shuffle.sort.bypassMergeThreshold': 228.9611155541112, 'spark.storage.memoryMapThreshold': 3.648477917880928} target = -189.192
x_probe = {'spark.broadcast.blockSize': 36.619374101386704, 'spark.broadcast.checksum': 0.892084797041436, 'spark.broadcast.compress': 0.8341904908304536, 'spark.default.parallelism': 471.5301198130861, 'spark.executor.cores': 3.629353808513413, 'spark.executor.instances': 6.938329102446875, 'spark.executor.memory': 4.227755625314739, 'spark.executor.memoryOverhead': 475.44488098062425, 'spark.kryoserializer.buffer': 75.69646629604895, 'spark.kryoserializer.buffer.max': 91.65444035946147, 'spark.locality.wait': 4.799258682994191, 'spark.maxRemoteBlockSizeFetchToMem': 1588711433.2497582, 'spark.memory.fraction': 0.7006786266515356, 'spark.memory.offHeap.enabled': 0.5340387722955093, 'spark.memory.offHeap.size': 366.84105466490394, 'spark.memory.storageFraction': 0.831104736120196, 'spark.rdd.compress': 0.6316323875128026, 'spark.reducer.maxBlocksInFlightPerAddress': 1941273578.154603, 'spark.reducer.maxReqsInFlight': 1471055931.0513835, 'spark.reducer.maxSizeInFlight': 62.20119589654248, 'spark.scheduler.mode': 0.3756756977338631, 'spark.scheduler.revive.interval': 789.6750857261209, 'spark.shuffle.compress': 0.7876378459957537, 'spark.shuffle.file.buffer': 31.824788907798457, 'spark.shuffle.io.numConnectionsPerPeer': 1.5739326732567926, 'spark.shuffle.sort.bypassMergeThreshold': 228.9611155541112, 'spark.storage.memoryMapThreshold': 3.648477917880928}
target = -189.192
key = 
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxReqsInFlight', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.mode', 'spark.scheduler.revive.interval', 'spark.shuffle.compress', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.storage.memoryMapThreshold']
bounds = 
[[3.20000000e+01 6.40000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.00000000e+00]
 [2.00000000e+02 5.00000000e+02]
 [1.00000000e+00 4.00000000e+00]
 [4.00000000e+00 8.00000000e+00]
 [3.00000000e+00 7.00000000e+00]
 [3.84000000e+02 8.77000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [3.20000000e+01 1.28000000e+02]
 [4.00000000e+00 1.00000000e+01]
 [1.07374157e+09 2.14748314e+09]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [0.00000000e+00 1.02400000e+03]
 [5.00000000e-01 9.00000000e-01]
 [0.00000000e+00 1.00000000e+00]
 [1.07374182e+09 2.14748365e+09]
 [1.07374182e+09 2.14748365e+09]
 [2.40000000e+01 7.20000000e+01]
 [0.00000000e+00 1.00000000e+00]
 [5.00000000e+02 1.00000000e+03]
 [0.00000000e+00 1.00000000e+00]
 [1.60000000e+01 4.80000000e+01]
 [1.00000000e+00 5.00000000e+00]
 [1.50000000e+02 3.50000000e+02]
 [1.00000000e+00 4.00000000e+00]]
before probe, param.shape = (20, 27)
before probe, target = (20,)
标准化前的train_x = 
[[3.30000000e+01 1.00000000e+00 1.00000000e+00 4.48000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.84000000e+02
  1.07000000e+02 1.12000000e+02 5.00000000e+00 1.87666381e+09
  8.39999974e-01 0.00000000e+00 2.23000000e+02 5.50000012e-01
  0.00000000e+00 1.80176653e+09 1.53045645e+09 6.90000000e+01
  0.00000000e+00 6.69000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.95000000e+02 4.00000000e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.36000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.77000000e+02
  1.07000000e+02 1.13000000e+02 5.00000000e+00 1.89517670e+09
  8.89999986e-01 0.00000000e+00 2.32000000e+02 5.29999971e-01
  0.00000000e+00 1.74463475e+09 1.52889139e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.30000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [5.69802572e+01 8.03383409e-01 6.61490216e-01 4.05874708e+02
  3.96671891e+00 7.94059141e+00 4.52305944e+00 8.49970631e+02
  9.84677997e+01 7.70625626e+01 5.50329388e+00 1.73561364e+09
  8.22481245e-01 5.28937998e-01 1.15473831e+02 5.92257669e-01
  7.98184359e-01 1.89374984e+09 1.65682178e+09 6.38470513e+01
  3.41110697e-01 5.11019497e+02 6.46116078e-01 1.93699767e+01
  3.79337521e+00 2.10405622e+02 3.33995674e+00]
 [3.20000000e+01 1.00000000e+00 1.00000000e+00 4.39000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.78000000e+02
  1.07000000e+02 1.15000000e+02 5.00000000e+00 1.85452666e+09
  8.90000000e-01 0.00000000e+00 2.42000000e+02 5.30000000e-01
  0.00000000e+00 1.75302271e+09 1.50241180e+09 7.00000000e+01
  0.00000000e+00 6.78000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.94000000e+02 4.00000000e+00]
 [4.55570675e+01 6.99522212e-01 7.24155771e-01 4.61385906e+02
  2.60044587e+00 7.96123443e+00 5.35033660e+00 7.56349035e+02
  1.13305626e+02 8.99147968e+01 5.88901166e+00 2.02795725e+09
  7.03530446e-01 3.96170620e-01 1.42677365e+02 6.52349409e-01
  9.14104272e-01 1.86204721e+09 1.44237129e+09 6.84115482e+01
  7.78713223e-01 8.37685058e+02 2.04366581e-01 1.93572884e+01
  1.94185663e+00 2.73258844e+02 2.60495994e+00]
 [4.06019087e+01 4.06882181e-01 6.51447002e-01 4.54733442e+02
  3.06727500e+00 6.87785138e+00 3.96982594e+00 8.65423113e+02
  1.26180413e+02 1.06199639e+02 5.62770262e+00 1.99428156e+09
  7.45286333e-01 4.78180469e-01 4.81453210e+01 5.01535759e-01
  2.97573069e-01 1.52631884e+09 1.65591173e+09 5.02029693e+01
  2.43440091e-01 6.95822830e+02 5.65864368e-01 2.01728358e+01
  3.87181617e+00 2.48674877e+02 3.67803545e+00]
 [3.65255087e+01 3.08172276e-01 4.77221401e-01 4.09899376e+02
  2.69958943e+00 7.79480065e+00 5.63231157e+00 8.08109127e+02
  1.21258840e+02 1.13264386e+02 5.98326492e+00 2.07263207e+09
  8.70596920e-01 9.60159695e-02 2.22538957e+02 6.78201819e-01
  5.28616074e-01 1.97766925e+09 1.46234010e+09 6.51590614e+01
  3.50301934e-01 6.30108417e+02 6.43896229e-01 2.74274072e+01
  3.52075079e+00 2.06608813e+02 3.24785426e+00]
 [4.80000000e+01 0.00000000e+00 1.00000000e+00 3.02000000e+02
  3.00000000e+00 6.00000000e+00 3.00000000e+00 4.32000000e+02
  9.30000000e+01 6.50000000e+01 7.00000000e+00 1.85832504e+09
  5.60000000e-01 0.00000000e+00 3.20000000e+01 5.20000000e-01
  0.00000000e+00 1.35476630e+09 1.65854943e+09 4.80000000e+01
  0.00000000e+00 6.45000000e+02 0.00000000e+00 2.80000000e+01
  4.00000000e+00 3.07000000e+02 2.00000000e+00]
 [5.60000000e+01 1.00000000e+00 0.00000000e+00 4.33000000e+02
  2.00000000e+00 8.00000000e+00 6.00000000e+00 5.23000000e+02
  9.20000000e+01 1.12000000e+02 8.00000000e+00 1.21265128e+09
  8.30000000e-01 0.00000000e+00 2.07000000e+02 5.70000000e-01
  0.00000000e+00 1.25004190e+09 1.61891502e+09 5.50000000e+01
  0.00000000e+00 9.62000000e+02 0.00000000e+00 2.00000000e+01
  5.00000000e+00 1.55000000e+02 3.00000000e+00]
 [6.15101550e+01 8.36866979e-02 5.09497062e-01 4.25687261e+02
  2.73992689e+00 6.55675297e+00 5.26851460e+00 7.34526047e+02
  8.90445993e+01 1.07538019e+02 6.60885331e+00 1.59807089e+09
  8.62133167e-01 9.05609418e-01 3.46209799e+01 7.05679422e-01
  7.76796616e-01 1.91743966e+09 1.99520910e+09 5.40885761e+01
  8.62151313e-01 5.01415609e+02 3.18592420e-01 3.22981111e+01
  4.87743678e+00 3.14619035e+02 3.45342839e+00]
 [4.77071748e+01 1.03483671e-01 9.90363371e-02 3.94910746e+02
  2.46685642e+00 7.30010124e+00 5.66081719e+00 6.98082091e+02
  9.74138162e+01 9.13338978e+01 4.36386738e+00 1.75503439e+09
  6.54402701e-01 4.68170991e-01 1.10940601e+02 6.33502862e-01
  7.37571263e-01 1.69443580e+09 1.67054598e+09 4.37791374e+01
  8.10690202e-01 7.48636613e+02 6.23345242e-01 2.36031214e+01
  4.28135496e+00 3.32800068e+02 3.87295723e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.22000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.85000000e+02
  9.40000000e+01 9.60000000e+01 6.00000000e+00 1.74780288e+09
  8.19999993e-01 0.00000000e+00 3.02000000e+02 6.10000014e-01
  0.00000000e+00 1.74934067e+09 1.54005658e+09 5.90000000e+01
  0.00000000e+00 6.79000000e+02 1.00000000e+00 2.50000000e+01
  3.00000000e+00 2.14000000e+02 3.00000000e+00]
 [3.30000000e+01 1.00000000e+00 1.00000000e+00 4.53000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.74000000e+02
  1.06000000e+02 1.12000000e+02 5.00000000e+00 1.90339072e+09
  8.39999974e-01 0.00000000e+00 2.16000000e+02 5.60000002e-01
  0.00000000e+00 1.83172608e+09 1.51458598e+09 6.90000000e+01
  0.00000000e+00 6.50000000e+02 1.00000000e+00 2.20000000e+01
  3.00000000e+00 1.93000000e+02 4.00000000e+00]
 [3.60000000e+01 1.00000000e+00 1.00000000e+00 4.38000000e+02
  4.00000000e+00 8.00000000e+00 4.00000000e+00 5.76000000e+02
  1.05000000e+02 1.14000000e+02 5.00000000e+00 1.85510605e+09
  8.39999974e-01 0.00000000e+00 2.21000000e+02 5.69999993e-01
  0.00000000e+00 1.81026022e+09 1.50131200e+09 7.10000000e+01
  0.00000000e+00 6.55000000e+02 1.00000000e+00 2.10000000e+01
  3.00000000e+00 2.04000000e+02 4.00000000e+00]
 [3.90000000e+01 1.00000000e+00 1.00000000e+00 4.29000000e+02
  3.00000000e+00 7.00000000e+00 4.00000000e+00 5.70000000e+02
  9.60000000e+01 1.01000000e+02 6.00000000e+00 1.73675622e+09
  7.69999981e-01 0.00000000e+00 2.79000000e+02 6.29999995e-01
  0.00000000e+00 1.73302323e+09 1.56653542e+09 6.20000000e+01
  0.00000000e+00 6.76000000e+02 1.00000000e+00 2.60000000e+01
  3.00000000e+00 2.31000000e+02 3.00000000e+00]
 [4.17938972e+01 8.06242948e-01 9.72583430e-02 4.44433865e+02
  3.59240233e+00 6.36413646e+00 5.35175857e+00 5.81184991e+02
  9.45506378e+01 1.15151660e+02 4.34831715e+00 1.75111774e+09
  8.24730545e-01 4.57308414e-01 7.68863982e+02 5.38018693e-01
  2.22114310e-01 1.22550451e+09 1.16747094e+09 6.73745437e+01
  5.35514327e-01 7.77063295e+02 7.09242673e-01 2.44983936e+01
  1.92286995e+00 2.87470631e+02 3.71109092e+00]
 [3.66196981e+01 7.36473725e-02 5.58439240e-01 4.45554512e+02
  3.91754486e+00 5.11722399e+00 6.47038090e+00 4.64707733e+02
  4.19901905e+01 6.19146290e+01 6.51962647e+00 2.02101378e+09
  6.57181404e-01 1.11542630e-01 7.88905782e+02 5.95949188e-01
  3.16196907e-01 1.24957241e+09 2.01842251e+09 3.32523732e+01
  4.38313534e-01 7.48507802e+02 9.89272897e-01 2.07035781e+01
  4.42164767e+00 2.33945444e+02 3.31393482e+00]
 [5.57452598e+01 4.43134046e-01 2.13790361e-02 4.40816444e+02
  2.09627132e+00 4.72804980e+00 4.85838538e+00 6.39702886e+02
  9.26690073e+01 1.27551777e+02 8.01909478e+00 1.66119386e+09
  8.62717320e-01 5.33113601e-01 5.36363012e+02 6.33199379e-01
  2.61857464e-01 1.22649594e+09 1.11068941e+09 6.11607399e+01
  9.73357469e-01 7.22696654e+02 5.38013193e-01 2.05995763e+01
  3.92329382e+00 3.18911325e+02 1.65086553e+00]
 [3.46723793e+01 7.63469600e-01 3.54502195e-01 3.21041221e+02
  2.39394670e+00 4.51862772e+00 5.72494042e+00 5.45670768e+02
  8.81932418e+01 6.72512928e+01 4.43102810e+00 1.50036383e+09
  8.93204323e-01 5.94692190e-01 6.27832217e+02 6.08950655e-01
  5.46921890e-01 1.26750348e+09 1.55328384e+09 6.09762660e+01
  1.00107916e-01 5.16211481e+02 6.03452665e-01 3.68386555e+01
  4.83405782e+00 1.52008826e+02 2.73765423e+00]
 [3.66193741e+01 8.92084797e-01 8.34190491e-01 4.71530120e+02
  3.62935381e+00 6.93832910e+00 4.22775563e+00 4.75444881e+02
  7.56964663e+01 9.16544404e+01 4.79925868e+00 1.58871143e+09
  7.00678627e-01 5.34038772e-01 3.66841055e+02 8.31104736e-01
  6.31632388e-01 1.94127358e+09 1.47105593e+09 6.22011959e+01
  3.75675698e-01 7.89675086e+02 7.87637846e-01 3.18247889e+01
  1.57393267e+00 2.28961116e+02 3.64847792e+00]]
标准化后的train_x = 
[[-1.00969280e+00  9.02483330e-01  9.73878834e-01  5.80991386e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.03303482e-01
   5.67929597e-01  6.80400754e-01 -6.61732948e-01  4.72787330e-01
   5.06006310e-01 -9.14860427e-01 -2.86141297e-01 -6.94238763e-01
  -9.34017253e-01  6.06182344e-01 -1.35671846e-01  8.96375875e-01
  -8.76737644e-01 -1.82822157e-01  9.71176052e-01 -2.84266180e-01
  -4.67680557e-01 -7.53353048e-01  1.04077311e+00]
 [-1.12044561e+00  9.02483330e-01  9.73878834e-01  2.92975272e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.60827376e-01
   5.67929597e-01  7.34580790e-01 -6.61732948e-01  5.65560936e-01
   1.05419203e+00 -9.14860427e-01 -2.45173029e-01 -9.61061962e-01
  -9.34017253e-01  3.91391079e-01 -1.43300051e-01  9.97921438e-01
  -8.76737644e-01 -9.86245541e-02  9.71176052e-01 -2.84266180e-01
  -4.67680557e-01 -7.91321381e-01  1.04077311e+00]
 [ 1.64618798e+00  3.66100630e-01  3.35008274e-02 -4.30072195e-01
   1.10336076e+00  8.36698745e-01 -2.00138909e-01  1.88236313e+00
   6.89639405e-02 -1.21251088e+00 -1.89103122e-01 -2.34056871e-01
   3.13936020e-01  9.81398192e-01 -7.75603619e-01 -1.30473738e-01
   1.53803607e+00  9.52000596e-01  4.80242656e-01  3.73116795e-01
   1.52855098e-01 -1.66077545e+00 -1.07859459e-01 -1.05740110e+00
   3.60326390e-01 -4.60890153e-01  4.08953005e-02]
 [-1.12044561e+00  9.02483330e-01  9.73878834e-01  3.64979301e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.52609677e-01
   5.67929597e-01  8.42940863e-01 -6.61732948e-01  3.61851543e-01
   1.05419219e+00 -9.14860427e-01 -1.99652731e-01 -9.61061580e-01
  -9.34017253e-01  4.22926246e-01 -2.72363643e-01  9.97921438e-01
  -8.76737644e-01 -9.86245541e-02  9.71176052e-01 -4.97249638e-01
  -4.67680557e-01 -7.72337215e-01  1.04077311e+00]
 [ 3.81037661e-01  8.27606077e-02  2.07585339e-01  9.02271105e-01
  -8.84884325e-01  8.55157515e-01  7.25637415e-01  1.11300903e+00
   9.36684513e-01 -5.16176361e-01  1.73114132e-01  1.23096357e+00
  -9.90206268e-01  5.05423154e-01 -6.51772324e-01  6.71218142e-01
   1.89705113e+00  8.32812171e-01 -5.65005792e-01  8.36621209e-01
   1.47369431e+00  1.39527535e+00 -1.45480789e+00 -1.06010349e+00
  -1.57201309e+00  7.32325875e-01 -1.07252715e+00]
 [-1.67760081e-01 -7.15580209e-01  5.60084376e-03  7.42603025e-01
  -2.05539347e-01 -1.13592068e-01 -8.19242756e-01  2.00934698e+00
   1.68960596e+00  3.66136958e-01 -7.22741983e-02  1.06220472e+00
  -5.32406752e-01  7.99430927e-01 -1.08208500e+00 -1.34080680e+00
  -1.24049891e-02 -4.29384210e-01  4.75806991e-01 -1.01237919e+00
  -1.41949341e-01  6.81131717e-02 -3.52556773e-01 -8.86405380e-01
   4.42191389e-01  2.65619768e-01  5.53039611e-01]
 [-6.19232817e-01 -9.84867175e-01 -4.78396755e-01 -3.33474753e-01
  -7.40607378e-01  7.06334199e-01  1.04118553e+00  1.53835789e+00
   1.40179086e+00  7.48905238e-01  2.61624846e-01  1.45484234e+00
   8.41462408e-01 -5.70640291e-01 -2.88239979e-01  1.01611858e+00
   7.03157305e-01  1.26750203e+00 -4.67676230e-01  5.06345608e-01
   1.80597500e-01 -5.46664169e-01 -1.14628050e-01  6.58698311e-01
   7.58016035e-02 -5.32969418e-01 -9.86277133e-02]
 [ 6.51599292e-01 -1.82558095e+00  9.73878834e-01 -2.92320467e+00
  -3.03440123e-01 -8.98557428e-01 -1.90454033e+00 -1.55239374e+00
  -2.50794643e-01 -1.86606096e+00  1.21641357e+00  3.80886305e-01
  -2.56383272e+00 -9.14860427e-01 -1.15557898e+00 -1.09447291e+00
  -9.34017253e-01 -1.07434908e+00  4.88663332e-01 -1.23608094e+00
  -8.76737644e-01 -4.07349099e-01 -2.07794668e+00  7.80651110e-01
   5.75970585e-01  1.37287361e+00 -1.98896105e+00]
 [ 1.53762174e+00  9.02483330e-01 -1.80411474e+00  2.20971244e-01
  -1.75867273e+00  8.89821274e-01  1.45265252e+00 -8.04583127e-01
  -3.09274946e-01  6.80400754e-01  2.15548683e+00 -2.85477618e+00
   3.96369479e-01 -9.14860427e-01 -3.58973773e-01 -4.27416264e-01
  -9.34017253e-01 -1.46806844e+00  2.95482122e-01 -5.25262002e-01
  -8.76737644e-01  2.55827759e+00 -2.07794668e+00 -9.23216554e-01
   1.61962173e+00 -1.51271971e+00 -4.74093970e-01]
 [ 2.14788687e+00 -1.59727826e+00 -3.88735176e-01  4.54556888e-02
  -6.81906992e-01 -4.00714856e-01  6.34073337e-01  9.33674276e-01
  -4.82107675e-01  4.38650441e-01  8.49098177e-01 -9.23324336e-01
   7.48668262e-01  2.33177655e+00 -1.14364820e+00  1.38270093e+00
   1.47179619e+00  1.04106431e+00  2.12956884e+00 -6.17813058e-01
   1.72553998e+00 -1.75062261e+00 -1.10651929e+00  1.69607767e+00
   1.49170848e+00  1.51751463e+00  2.12789776e-01]
 [ 6.19168083e-01 -1.54327085e+00 -1.52899243e+00 -6.93222000e-01
  -1.07928804e+00  2.63979259e-01  1.07308515e+00  6.34188817e-01
   7.32666240e-03 -4.39289417e-01 -1.25910808e+00 -1.36733694e-01
  -1.52882871e+00  7.63546645e-01 -7.96239019e-01  4.19783858e-01
   1.35031152e+00  2.02664296e-01  5.47135475e-01 -1.66469081e+00
   1.57021214e+00  5.62201389e-01 -1.77290533e-01 -1.55811289e-01
   8.69607006e-01  1.86266639e+00  8.48320204e-01]
 [-3.45175964e-01  9.02483330e-01  9.73878834e-01 -4.30435273e-02
  -3.03440123e-01 -4.36807725e-03 -7.85476046e-01 -2.95085783e-01
  -1.92314340e-01 -1.86479830e-01  2.77340311e-01 -1.72972957e-01
   2.86732282e-01 -9.14860427e-01  7.34690544e-02  1.06229243e-01
  -9.34017253e-01  4.09083344e-01 -8.88800737e-02 -1.19079752e-01
  -8.76737644e-01 -8.92692648e-02  9.71176052e-01  1.41700736e-01
  -4.67680557e-01 -3.92653883e-01 -4.74093970e-01]
 [-1.00969280e+00  9.02483330e-01  9.73878834e-01  7.00998101e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.85480473e-01
   5.09449294e-01  6.80400754e-01 -6.61732948e-01  6.06723804e-01
   5.06006310e-01 -9.14860427e-01 -3.18005505e-01 -5.60827561e-01
  -9.34017253e-01  7.18817562e-01 -2.13025725e-01  8.96375875e-01
  -8.76737644e-01 -3.60572653e-01  9.71176052e-01 -4.97249638e-01
  -4.67680557e-01 -7.91321381e-01  1.04077311e+00]
 [-6.77434383e-01  9.02483330e-01  9.73878834e-01  3.40977958e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.69045075e-01
   4.50968991e-01  7.88760827e-01 -6.61732948e-01  3.64755008e-01
   5.06006310e-01 -9.14860427e-01 -2.95245357e-01 -4.27416359e-01
  -9.34017253e-01  6.38115041e-01 -2.77724159e-01  1.09946700e+00
  -8.76737644e-01 -3.13796207e-01  9.71176052e-01 -7.10233096e-01
  -4.67680557e-01 -5.82495549e-01  1.04077311e+00]
 [-3.45175964e-01  9.02483330e-01  9.73878834e-01  1.24965873e-01
  -3.03440123e-01 -4.36807725e-03 -7.85476046e-01 -4.18351269e-01
  -7.53537344e-02  8.44203525e-02  2.77340311e-01 -2.28331023e-01
  -2.61453441e-01 -9.14860427e-01 -3.12276302e-02  3.73051647e-01
  -9.34017253e-01  3.47736685e-01  4.01798964e-02  1.85556936e-01
  -8.76737644e-01 -1.17335133e-01  9.71176052e-01  3.54684194e-01
  -4.67680557e-01 -6.99230509e-02 -4.74093970e-01]
 [-3.57440061e-02  3.73901637e-01 -1.53393169e+00  4.95399346e-01
   5.58643072e-01 -5.72950484e-01  7.27228689e-01 -3.26436382e-01
  -1.60112878e-01  8.51157815e-01 -1.27371089e+00 -1.56361192e-01
   3.38596688e-01  7.24603981e-01  2.19864780e+00 -8.54083135e-01
  -2.46107984e-01 -1.56031862e+00 -1.90489151e+00  7.31317996e-01
   7.39634019e-01  8.28141220e-01  8.46212779e-02  3.48668793e-02
  -1.59182856e+00  1.00212482e+00  6.03114255e-01]
 [-6.08801077e-01 -1.62466619e+00 -2.52774121e-01  5.22296391e-01
   1.03180107e+00 -1.68792633e+00  1.97903898e+00 -1.28361143e+00
  -3.23386375e+00 -2.03322647e+00  7.65307631e-01  1.19616778e+00
  -1.49836381e+00 -5.14976745e-01  2.28987866e+00 -8.12247033e-02
   4.52748211e-02 -1.46983352e+00  2.24271279e+00 -2.73363700e+00
   4.46247641e-01  5.60996332e-01  9.38467799e-01 -7.73366047e-01
   1.01602366e+00 -1.40062546e-02  1.47555891e-03]
 [ 1.50940855e+00 -6.16682791e-01 -1.74472392e+00  4.08576393e-01
  -1.61857557e+00 -2.03592175e+00  1.75112378e-01  1.54446074e-01
  -2.70151196e-01  1.52299662e+00  2.17341822e+00 -6.06996406e-01
   7.55072743e-01  9.96367855e-01  1.14029646e+00  4.15735050e-01
  -1.23019635e-01 -1.55659127e+00 -2.18164911e+00  1.00333793e-01
   2.06119949e+00  3.19525575e-01 -4.37478423e-01 -7.95516720e-01
   4.95916088e-01  1.59900019e+00 -2.51785337e+00]
 [-8.24472102e-01  2.57213194e-01 -8.19309923e-01 -2.46618980e+00
  -1.18538864e+00 -2.22318475e+00  1.14484317e+00 -6.18281581e-01
  -5.31895318e-01 -1.74408583e+00 -1.19603925e+00 -1.41296336e+00
   1.08932346e+00  1.21712895e+00  1.55666701e+00  9.22295992e-02
   7.59852167e-01 -1.40242028e+00 -2.44093675e-02  8.16012962e-02
  -5.74576544e-01 -1.61220295e+00 -2.37945441e-01  2.66313853e+00
   1.44643598e+00 -1.56950466e+00 -8.71512935e-01]
 [-6.08836963e-01  6.08083719e-01  5.13261082e-01  1.14574586e+00
   6.12416062e-01 -5.95135371e-02 -5.30602860e-01 -1.19537679e+00
  -1.26271053e+00 -4.21922410e-01 -8.50243751e-01 -9.70227330e-01
  -1.02147279e+00  9.99684622e-01  3.68627465e-01  3.05601672e+00
   1.02220868e+00  1.13066973e+00 -4.25194598e-01  2.05987487e-01
   2.57184496e-01  9.46128175e-01  3.23657781e-01  1.59526788e+00
  -1.95599735e+00 -1.08629573e-01  5.08263879e-01]]
train_y = 
[   -162.804    -163.342    -164.05     -165.666    -181.266    -182.936
    -184.517    -194.423    -220.648    -222.405    -245.931 -100000.
    -160.548    -169.925    -213.518    -181.042    -233.708    -312.373
    -300.388    -189.192]
测试：每一列进行标准化，标准化后的train_x = 
[[-1.00969280e+00  9.02483330e-01  9.73878834e-01  5.80991386e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.03303482e-01
   5.67929597e-01  6.80400754e-01 -6.61732948e-01  4.72787330e-01
   5.06006310e-01 -9.14860427e-01 -2.86141297e-01 -6.94238763e-01
  -9.34017253e-01  6.06182344e-01 -1.35671846e-01  8.96375875e-01
  -8.76737644e-01 -1.82822157e-01  9.71176052e-01 -2.84266180e-01
  -4.67680557e-01 -7.53353048e-01  1.04077311e+00]
 [-1.12044561e+00  9.02483330e-01  9.73878834e-01  2.92975272e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.60827376e-01
   5.67929597e-01  7.34580790e-01 -6.61732948e-01  5.65560936e-01
   1.05419203e+00 -9.14860427e-01 -2.45173029e-01 -9.61061962e-01
  -9.34017253e-01  3.91391079e-01 -1.43300051e-01  9.97921438e-01
  -8.76737644e-01 -9.86245541e-02  9.71176052e-01 -2.84266180e-01
  -4.67680557e-01 -7.91321381e-01  1.04077311e+00]
 [ 1.64618798e+00  3.66100630e-01  3.35008274e-02 -4.30072195e-01
   1.10336076e+00  8.36698745e-01 -2.00138909e-01  1.88236313e+00
   6.89639405e-02 -1.21251088e+00 -1.89103122e-01 -2.34056871e-01
   3.13936020e-01  9.81398192e-01 -7.75603619e-01 -1.30473738e-01
   1.53803607e+00  9.52000596e-01  4.80242656e-01  3.73116795e-01
   1.52855098e-01 -1.66077545e+00 -1.07859459e-01 -1.05740110e+00
   3.60326390e-01 -4.60890153e-01  4.08953005e-02]
 [-1.12044561e+00  9.02483330e-01  9.73878834e-01  3.64979301e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.52609677e-01
   5.67929597e-01  8.42940863e-01 -6.61732948e-01  3.61851543e-01
   1.05419219e+00 -9.14860427e-01 -1.99652731e-01 -9.61061580e-01
  -9.34017253e-01  4.22926246e-01 -2.72363643e-01  9.97921438e-01
  -8.76737644e-01 -9.86245541e-02  9.71176052e-01 -4.97249638e-01
  -4.67680557e-01 -7.72337215e-01  1.04077311e+00]
 [ 3.81037661e-01  8.27606077e-02  2.07585339e-01  9.02271105e-01
  -8.84884325e-01  8.55157515e-01  7.25637415e-01  1.11300903e+00
   9.36684513e-01 -5.16176361e-01  1.73114132e-01  1.23096357e+00
  -9.90206268e-01  5.05423154e-01 -6.51772324e-01  6.71218142e-01
   1.89705113e+00  8.32812171e-01 -5.65005792e-01  8.36621209e-01
   1.47369431e+00  1.39527535e+00 -1.45480789e+00 -1.06010349e+00
  -1.57201309e+00  7.32325875e-01 -1.07252715e+00]
 [-1.67760081e-01 -7.15580209e-01  5.60084376e-03  7.42603025e-01
  -2.05539347e-01 -1.13592068e-01 -8.19242756e-01  2.00934698e+00
   1.68960596e+00  3.66136958e-01 -7.22741983e-02  1.06220472e+00
  -5.32406752e-01  7.99430927e-01 -1.08208500e+00 -1.34080680e+00
  -1.24049891e-02 -4.29384210e-01  4.75806991e-01 -1.01237919e+00
  -1.41949341e-01  6.81131717e-02 -3.52556773e-01 -8.86405380e-01
   4.42191389e-01  2.65619768e-01  5.53039611e-01]
 [-6.19232817e-01 -9.84867175e-01 -4.78396755e-01 -3.33474753e-01
  -7.40607378e-01  7.06334199e-01  1.04118553e+00  1.53835789e+00
   1.40179086e+00  7.48905238e-01  2.61624846e-01  1.45484234e+00
   8.41462408e-01 -5.70640291e-01 -2.88239979e-01  1.01611858e+00
   7.03157305e-01  1.26750203e+00 -4.67676230e-01  5.06345608e-01
   1.80597500e-01 -5.46664169e-01 -1.14628050e-01  6.58698311e-01
   7.58016035e-02 -5.32969418e-01 -9.86277133e-02]
 [ 6.51599292e-01 -1.82558095e+00  9.73878834e-01 -2.92320467e+00
  -3.03440123e-01 -8.98557428e-01 -1.90454033e+00 -1.55239374e+00
  -2.50794643e-01 -1.86606096e+00  1.21641357e+00  3.80886305e-01
  -2.56383272e+00 -9.14860427e-01 -1.15557898e+00 -1.09447291e+00
  -9.34017253e-01 -1.07434908e+00  4.88663332e-01 -1.23608094e+00
  -8.76737644e-01 -4.07349099e-01 -2.07794668e+00  7.80651110e-01
   5.75970585e-01  1.37287361e+00 -1.98896105e+00]
 [ 1.53762174e+00  9.02483330e-01 -1.80411474e+00  2.20971244e-01
  -1.75867273e+00  8.89821274e-01  1.45265252e+00 -8.04583127e-01
  -3.09274946e-01  6.80400754e-01  2.15548683e+00 -2.85477618e+00
   3.96369479e-01 -9.14860427e-01 -3.58973773e-01 -4.27416264e-01
  -9.34017253e-01 -1.46806844e+00  2.95482122e-01 -5.25262002e-01
  -8.76737644e-01  2.55827759e+00 -2.07794668e+00 -9.23216554e-01
   1.61962173e+00 -1.51271971e+00 -4.74093970e-01]
 [ 2.14788687e+00 -1.59727826e+00 -3.88735176e-01  4.54556888e-02
  -6.81906992e-01 -4.00714856e-01  6.34073337e-01  9.33674276e-01
  -4.82107675e-01  4.38650441e-01  8.49098177e-01 -9.23324336e-01
   7.48668262e-01  2.33177655e+00 -1.14364820e+00  1.38270093e+00
   1.47179619e+00  1.04106431e+00  2.12956884e+00 -6.17813058e-01
   1.72553998e+00 -1.75062261e+00 -1.10651929e+00  1.69607767e+00
   1.49170848e+00  1.51751463e+00  2.12789776e-01]
 [ 6.19168083e-01 -1.54327085e+00 -1.52899243e+00 -6.93222000e-01
  -1.07928804e+00  2.63979259e-01  1.07308515e+00  6.34188817e-01
   7.32666240e-03 -4.39289417e-01 -1.25910808e+00 -1.36733694e-01
  -1.52882871e+00  7.63546645e-01 -7.96239019e-01  4.19783858e-01
   1.35031152e+00  2.02664296e-01  5.47135475e-01 -1.66469081e+00
   1.57021214e+00  5.62201389e-01 -1.77290533e-01 -1.55811289e-01
   8.69607006e-01  1.86266639e+00  8.48320204e-01]
 [-3.45175964e-01  9.02483330e-01  9.73878834e-01 -4.30435273e-02
  -3.03440123e-01 -4.36807725e-03 -7.85476046e-01 -2.95085783e-01
  -1.92314340e-01 -1.86479830e-01  2.77340311e-01 -1.72972957e-01
   2.86732282e-01 -9.14860427e-01  7.34690544e-02  1.06229243e-01
  -9.34017253e-01  4.09083344e-01 -8.88800737e-02 -1.19079752e-01
  -8.76737644e-01 -8.92692648e-02  9.71176052e-01  1.41700736e-01
  -4.67680557e-01 -3.92653883e-01 -4.74093970e-01]
 [-1.00969280e+00  9.02483330e-01  9.73878834e-01  7.00998101e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.85480473e-01
   5.09449294e-01  6.80400754e-01 -6.61732948e-01  6.06723804e-01
   5.06006310e-01 -9.14860427e-01 -3.18005505e-01 -5.60827561e-01
  -9.34017253e-01  7.18817562e-01 -2.13025725e-01  8.96375875e-01
  -8.76737644e-01 -3.60572653e-01  9.71176052e-01 -4.97249638e-01
  -4.67680557e-01 -7.91321381e-01  1.04077311e+00]
 [-6.77434383e-01  9.02483330e-01  9.73878834e-01  3.40977958e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.69045075e-01
   4.50968991e-01  7.88760827e-01 -6.61732948e-01  3.64755008e-01
   5.06006310e-01 -9.14860427e-01 -2.95245357e-01 -4.27416359e-01
  -9.34017253e-01  6.38115041e-01 -2.77724159e-01  1.09946700e+00
  -8.76737644e-01 -3.13796207e-01  9.71176052e-01 -7.10233096e-01
  -4.67680557e-01 -5.82495549e-01  1.04077311e+00]
 [-3.45175964e-01  9.02483330e-01  9.73878834e-01  1.24965873e-01
  -3.03440123e-01 -4.36807725e-03 -7.85476046e-01 -4.18351269e-01
  -7.53537344e-02  8.44203525e-02  2.77340311e-01 -2.28331023e-01
  -2.61453441e-01 -9.14860427e-01 -3.12276302e-02  3.73051647e-01
  -9.34017253e-01  3.47736685e-01  4.01798964e-02  1.85556936e-01
  -8.76737644e-01 -1.17335133e-01  9.71176052e-01  3.54684194e-01
  -4.67680557e-01 -6.99230509e-02 -4.74093970e-01]
 [-3.57440061e-02  3.73901637e-01 -1.53393169e+00  4.95399346e-01
   5.58643072e-01 -5.72950484e-01  7.27228689e-01 -3.26436382e-01
  -1.60112878e-01  8.51157815e-01 -1.27371089e+00 -1.56361192e-01
   3.38596688e-01  7.24603981e-01  2.19864780e+00 -8.54083135e-01
  -2.46107984e-01 -1.56031862e+00 -1.90489151e+00  7.31317996e-01
   7.39634019e-01  8.28141220e-01  8.46212779e-02  3.48668793e-02
  -1.59182856e+00  1.00212482e+00  6.03114255e-01]
 [-6.08801077e-01 -1.62466619e+00 -2.52774121e-01  5.22296391e-01
   1.03180107e+00 -1.68792633e+00  1.97903898e+00 -1.28361143e+00
  -3.23386375e+00 -2.03322647e+00  7.65307631e-01  1.19616778e+00
  -1.49836381e+00 -5.14976745e-01  2.28987866e+00 -8.12247033e-02
   4.52748211e-02 -1.46983352e+00  2.24271279e+00 -2.73363700e+00
   4.46247641e-01  5.60996332e-01  9.38467799e-01 -7.73366047e-01
   1.01602366e+00 -1.40062546e-02  1.47555891e-03]
 [ 1.50940855e+00 -6.16682791e-01 -1.74472392e+00  4.08576393e-01
  -1.61857557e+00 -2.03592175e+00  1.75112378e-01  1.54446074e-01
  -2.70151196e-01  1.52299662e+00  2.17341822e+00 -6.06996406e-01
   7.55072743e-01  9.96367855e-01  1.14029646e+00  4.15735050e-01
  -1.23019635e-01 -1.55659127e+00 -2.18164911e+00  1.00333793e-01
   2.06119949e+00  3.19525575e-01 -4.37478423e-01 -7.95516720e-01
   4.95916088e-01  1.59900019e+00 -2.51785337e+00]
 [-8.24472102e-01  2.57213194e-01 -8.19309923e-01 -2.46618980e+00
  -1.18538864e+00 -2.22318475e+00  1.14484317e+00 -6.18281581e-01
  -5.31895318e-01 -1.74408583e+00 -1.19603925e+00 -1.41296336e+00
   1.08932346e+00  1.21712895e+00  1.55666701e+00  9.22295992e-02
   7.59852167e-01 -1.40242028e+00 -2.44093675e-02  8.16012962e-02
  -5.74576544e-01 -1.61220295e+00 -2.37945441e-01  2.66313853e+00
   1.44643598e+00 -1.56950466e+00 -8.71512935e-01]
 [-6.08836963e-01  6.08083719e-01  5.13261082e-01  1.14574586e+00
   6.12416062e-01 -5.95135371e-02 -5.30602860e-01 -1.19537679e+00
  -1.26271053e+00 -4.21922410e-01 -8.50243751e-01 -9.70227330e-01
  -1.02147279e+00  9.99684622e-01  3.68627465e-01  3.05601672e+00
   1.02220868e+00  1.13066973e+00 -4.25194598e-01  2.05987487e-01
   2.57184496e-01  9.46128175e-01  3.23657781e-01  1.59526788e+00
  -1.95599735e+00 -1.08629573e-01  5.08263879e-01]]
标准化时如果存在分母（sigma）为0的情况，返回nan。此时将所有nan替换为0 
[[-1.00969280e+00  9.02483330e-01  9.73878834e-01  5.80991386e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.03303482e-01
   5.67929597e-01  6.80400754e-01 -6.61732948e-01  4.72787330e-01
   5.06006310e-01 -9.14860427e-01 -2.86141297e-01 -6.94238763e-01
  -9.34017253e-01  6.06182344e-01 -1.35671846e-01  8.96375875e-01
  -8.76737644e-01 -1.82822157e-01  9.71176052e-01 -2.84266180e-01
  -4.67680557e-01 -7.53353048e-01  1.04077311e+00]
 [-1.12044561e+00  9.02483330e-01  9.73878834e-01  2.92975272e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.60827376e-01
   5.67929597e-01  7.34580790e-01 -6.61732948e-01  5.65560936e-01
   1.05419203e+00 -9.14860427e-01 -2.45173029e-01 -9.61061962e-01
  -9.34017253e-01  3.91391079e-01 -1.43300051e-01  9.97921438e-01
  -8.76737644e-01 -9.86245541e-02  9.71176052e-01 -2.84266180e-01
  -4.67680557e-01 -7.91321381e-01  1.04077311e+00]
 [ 1.64618798e+00  3.66100630e-01  3.35008274e-02 -4.30072195e-01
   1.10336076e+00  8.36698745e-01 -2.00138909e-01  1.88236313e+00
   6.89639405e-02 -1.21251088e+00 -1.89103122e-01 -2.34056871e-01
   3.13936020e-01  9.81398192e-01 -7.75603619e-01 -1.30473738e-01
   1.53803607e+00  9.52000596e-01  4.80242656e-01  3.73116795e-01
   1.52855098e-01 -1.66077545e+00 -1.07859459e-01 -1.05740110e+00
   3.60326390e-01 -4.60890153e-01  4.08953005e-02]
 [-1.12044561e+00  9.02483330e-01  9.73878834e-01  3.64979301e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.52609677e-01
   5.67929597e-01  8.42940863e-01 -6.61732948e-01  3.61851543e-01
   1.05419219e+00 -9.14860427e-01 -1.99652731e-01 -9.61061580e-01
  -9.34017253e-01  4.22926246e-01 -2.72363643e-01  9.97921438e-01
  -8.76737644e-01 -9.86245541e-02  9.71176052e-01 -4.97249638e-01
  -4.67680557e-01 -7.72337215e-01  1.04077311e+00]
 [ 3.81037661e-01  8.27606077e-02  2.07585339e-01  9.02271105e-01
  -8.84884325e-01  8.55157515e-01  7.25637415e-01  1.11300903e+00
   9.36684513e-01 -5.16176361e-01  1.73114132e-01  1.23096357e+00
  -9.90206268e-01  5.05423154e-01 -6.51772324e-01  6.71218142e-01
   1.89705113e+00  8.32812171e-01 -5.65005792e-01  8.36621209e-01
   1.47369431e+00  1.39527535e+00 -1.45480789e+00 -1.06010349e+00
  -1.57201309e+00  7.32325875e-01 -1.07252715e+00]
 [-1.67760081e-01 -7.15580209e-01  5.60084376e-03  7.42603025e-01
  -2.05539347e-01 -1.13592068e-01 -8.19242756e-01  2.00934698e+00
   1.68960596e+00  3.66136958e-01 -7.22741983e-02  1.06220472e+00
  -5.32406752e-01  7.99430927e-01 -1.08208500e+00 -1.34080680e+00
  -1.24049891e-02 -4.29384210e-01  4.75806991e-01 -1.01237919e+00
  -1.41949341e-01  6.81131717e-02 -3.52556773e-01 -8.86405380e-01
   4.42191389e-01  2.65619768e-01  5.53039611e-01]
 [-6.19232817e-01 -9.84867175e-01 -4.78396755e-01 -3.33474753e-01
  -7.40607378e-01  7.06334199e-01  1.04118553e+00  1.53835789e+00
   1.40179086e+00  7.48905238e-01  2.61624846e-01  1.45484234e+00
   8.41462408e-01 -5.70640291e-01 -2.88239979e-01  1.01611858e+00
   7.03157305e-01  1.26750203e+00 -4.67676230e-01  5.06345608e-01
   1.80597500e-01 -5.46664169e-01 -1.14628050e-01  6.58698311e-01
   7.58016035e-02 -5.32969418e-01 -9.86277133e-02]
 [ 6.51599292e-01 -1.82558095e+00  9.73878834e-01 -2.92320467e+00
  -3.03440123e-01 -8.98557428e-01 -1.90454033e+00 -1.55239374e+00
  -2.50794643e-01 -1.86606096e+00  1.21641357e+00  3.80886305e-01
  -2.56383272e+00 -9.14860427e-01 -1.15557898e+00 -1.09447291e+00
  -9.34017253e-01 -1.07434908e+00  4.88663332e-01 -1.23608094e+00
  -8.76737644e-01 -4.07349099e-01 -2.07794668e+00  7.80651110e-01
   5.75970585e-01  1.37287361e+00 -1.98896105e+00]
 [ 1.53762174e+00  9.02483330e-01 -1.80411474e+00  2.20971244e-01
  -1.75867273e+00  8.89821274e-01  1.45265252e+00 -8.04583127e-01
  -3.09274946e-01  6.80400754e-01  2.15548683e+00 -2.85477618e+00
   3.96369479e-01 -9.14860427e-01 -3.58973773e-01 -4.27416264e-01
  -9.34017253e-01 -1.46806844e+00  2.95482122e-01 -5.25262002e-01
  -8.76737644e-01  2.55827759e+00 -2.07794668e+00 -9.23216554e-01
   1.61962173e+00 -1.51271971e+00 -4.74093970e-01]
 [ 2.14788687e+00 -1.59727826e+00 -3.88735176e-01  4.54556888e-02
  -6.81906992e-01 -4.00714856e-01  6.34073337e-01  9.33674276e-01
  -4.82107675e-01  4.38650441e-01  8.49098177e-01 -9.23324336e-01
   7.48668262e-01  2.33177655e+00 -1.14364820e+00  1.38270093e+00
   1.47179619e+00  1.04106431e+00  2.12956884e+00 -6.17813058e-01
   1.72553998e+00 -1.75062261e+00 -1.10651929e+00  1.69607767e+00
   1.49170848e+00  1.51751463e+00  2.12789776e-01]
 [ 6.19168083e-01 -1.54327085e+00 -1.52899243e+00 -6.93222000e-01
  -1.07928804e+00  2.63979259e-01  1.07308515e+00  6.34188817e-01
   7.32666240e-03 -4.39289417e-01 -1.25910808e+00 -1.36733694e-01
  -1.52882871e+00  7.63546645e-01 -7.96239019e-01  4.19783858e-01
   1.35031152e+00  2.02664296e-01  5.47135475e-01 -1.66469081e+00
   1.57021214e+00  5.62201389e-01 -1.77290533e-01 -1.55811289e-01
   8.69607006e-01  1.86266639e+00  8.48320204e-01]
 [-3.45175964e-01  9.02483330e-01  9.73878834e-01 -4.30435273e-02
  -3.03440123e-01 -4.36807725e-03 -7.85476046e-01 -2.95085783e-01
  -1.92314340e-01 -1.86479830e-01  2.77340311e-01 -1.72972957e-01
   2.86732282e-01 -9.14860427e-01  7.34690544e-02  1.06229243e-01
  -9.34017253e-01  4.09083344e-01 -8.88800737e-02 -1.19079752e-01
  -8.76737644e-01 -8.92692648e-02  9.71176052e-01  1.41700736e-01
  -4.67680557e-01 -3.92653883e-01 -4.74093970e-01]
 [-1.00969280e+00  9.02483330e-01  9.73878834e-01  7.00998101e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.85480473e-01
   5.09449294e-01  6.80400754e-01 -6.61732948e-01  6.06723804e-01
   5.06006310e-01 -9.14860427e-01 -3.18005505e-01 -5.60827561e-01
  -9.34017253e-01  7.18817562e-01 -2.13025725e-01  8.96375875e-01
  -8.76737644e-01 -3.60572653e-01  9.71176052e-01 -4.97249638e-01
  -4.67680557e-01 -7.91321381e-01  1.04077311e+00]
 [-6.77434383e-01  9.02483330e-01  9.73878834e-01  3.40977958e-01
   1.15179249e+00  8.89821274e-01 -7.85476046e-01 -3.69045075e-01
   4.50968991e-01  7.88760827e-01 -6.61732948e-01  3.64755008e-01
   5.06006310e-01 -9.14860427e-01 -2.95245357e-01 -4.27416359e-01
  -9.34017253e-01  6.38115041e-01 -2.77724159e-01  1.09946700e+00
  -8.76737644e-01 -3.13796207e-01  9.71176052e-01 -7.10233096e-01
  -4.67680557e-01 -5.82495549e-01  1.04077311e+00]
 [-3.45175964e-01  9.02483330e-01  9.73878834e-01  1.24965873e-01
  -3.03440123e-01 -4.36807725e-03 -7.85476046e-01 -4.18351269e-01
  -7.53537344e-02  8.44203525e-02  2.77340311e-01 -2.28331023e-01
  -2.61453441e-01 -9.14860427e-01 -3.12276302e-02  3.73051647e-01
  -9.34017253e-01  3.47736685e-01  4.01798964e-02  1.85556936e-01
  -8.76737644e-01 -1.17335133e-01  9.71176052e-01  3.54684194e-01
  -4.67680557e-01 -6.99230509e-02 -4.74093970e-01]
 [-3.57440061e-02  3.73901637e-01 -1.53393169e+00  4.95399346e-01
   5.58643072e-01 -5.72950484e-01  7.27228689e-01 -3.26436382e-01
  -1.60112878e-01  8.51157815e-01 -1.27371089e+00 -1.56361192e-01
   3.38596688e-01  7.24603981e-01  2.19864780e+00 -8.54083135e-01
  -2.46107984e-01 -1.56031862e+00 -1.90489151e+00  7.31317996e-01
   7.39634019e-01  8.28141220e-01  8.46212779e-02  3.48668793e-02
  -1.59182856e+00  1.00212482e+00  6.03114255e-01]
 [-6.08801077e-01 -1.62466619e+00 -2.52774121e-01  5.22296391e-01
   1.03180107e+00 -1.68792633e+00  1.97903898e+00 -1.28361143e+00
  -3.23386375e+00 -2.03322647e+00  7.65307631e-01  1.19616778e+00
  -1.49836381e+00 -5.14976745e-01  2.28987866e+00 -8.12247033e-02
   4.52748211e-02 -1.46983352e+00  2.24271279e+00 -2.73363700e+00
   4.46247641e-01  5.60996332e-01  9.38467799e-01 -7.73366047e-01
   1.01602366e+00 -1.40062546e-02  1.47555891e-03]
 [ 1.50940855e+00 -6.16682791e-01 -1.74472392e+00  4.08576393e-01
  -1.61857557e+00 -2.03592175e+00  1.75112378e-01  1.54446074e-01
  -2.70151196e-01  1.52299662e+00  2.17341822e+00 -6.06996406e-01
   7.55072743e-01  9.96367855e-01  1.14029646e+00  4.15735050e-01
  -1.23019635e-01 -1.55659127e+00 -2.18164911e+00  1.00333793e-01
   2.06119949e+00  3.19525575e-01 -4.37478423e-01 -7.95516720e-01
   4.95916088e-01  1.59900019e+00 -2.51785337e+00]
 [-8.24472102e-01  2.57213194e-01 -8.19309923e-01 -2.46618980e+00
  -1.18538864e+00 -2.22318475e+00  1.14484317e+00 -6.18281581e-01
  -5.31895318e-01 -1.74408583e+00 -1.19603925e+00 -1.41296336e+00
   1.08932346e+00  1.21712895e+00  1.55666701e+00  9.22295992e-02
   7.59852167e-01 -1.40242028e+00 -2.44093675e-02  8.16012962e-02
  -5.74576544e-01 -1.61220295e+00 -2.37945441e-01  2.66313853e+00
   1.44643598e+00 -1.56950466e+00 -8.71512935e-01]
 [-6.08836963e-01  6.08083719e-01  5.13261082e-01  1.14574586e+00
   6.12416062e-01 -5.95135371e-02 -5.30602860e-01 -1.19537679e+00
  -1.26271053e+00 -4.21922410e-01 -8.50243751e-01 -9.70227330e-01
  -1.02147279e+00  9.99684622e-01  3.68627465e-01  3.05601672e+00
   1.02220868e+00  1.13066973e+00 -4.25194598e-01  2.05987487e-01
   2.57184496e-01  9.46128175e-01  3.23657781e-01  1.59526788e+00
  -1.95599735e+00 -1.08629573e-01  5.08263879e-01]]
upper = 
[6392.38310154 6392.38307569 6392.38309953 ... 6392.3830991  6392.38309931
 6392.38310593]
upper.argmax() = 1085
all predict_target = 
[5192.4341036  5192.43416687 5192.43410852 ... 5192.43410957 5192.43410906
 5192.43409285]
upper.argmax() = 1085, sortnumber[0] = 1085
x_max = [4.55570675e+01 6.99522212e-01 7.24155771e-01 4.61385906e+02
 2.60044587e+00 7.96123443e+00 5.35033660e+00 7.56349035e+02
 1.13305626e+02 8.99147968e+01 5.88901166e+00 2.02795725e+09
 7.03530446e-01 3.96170620e-01 1.42677365e+02 6.52349409e-01
 9.14104272e-01 1.86204721e+09 1.44237129e+09 6.84115482e+01
 7.78713223e-01 8.37685058e+02 2.04366581e-01 1.93572884e+01
 1.94185663e+00 2.73258844e+02 2.60495994e+00]
probe说：以前见过你啦！params = {'spark.broadcast.blockSize': 45.5570674879536, 'spark.broadcast.checksum': 0.6995222117507027, 'spark.broadcast.compress': 0.7241557714073902, 'spark.default.parallelism': 461.3859059930155, 'spark.executor.cores': 2.600445867963067, 'spark.executor.instances': 7.961234431776733, 'spark.executor.memory': 5.350336602133374, 'spark.executor.memoryOverhead': 756.3490354847936, 'spark.kryoserializer.buffer': 113.30562596269314, 'spark.kryoserializer.buffer.max': 89.91479680944182, 'spark.locality.wait': 5.88901166342568, 'spark.maxRemoteBlockSizeFetchToMem': 2027957246.7748785, 'spark.memory.fraction': 0.7035304459823646, 'spark.memory.offHeap.enabled': 0.3961706202937373, 'spark.memory.offHeap.size': 142.67736455579973, 'spark.memory.storageFraction': 0.6523494086148022, 'spark.rdd.compress': 0.9141042721737792, 'spark.reducer.maxBlocksInFlightPerAddress': 1862047212.8484643, 'spark.reducer.maxReqsInFlight': 1442371286.7338047, 'spark.reducer.maxSizeInFlight': 68.41154823650236, 'spark.scheduler.mode': 0.778713223026741, 'spark.scheduler.revive.interval': 837.6850578522669, 'spark.shuffle.compress': 0.20436658068089875, 'spark.shuffle.file.buffer': 19.357288430913158, 'spark.shuffle.io.numConnectionsPerPeer': 1.9418566331652345, 'spark.shuffle.sort.bypassMergeThreshold': 273.25884354397147, 'spark.storage.memoryMapThreshold': 2.604959940719593} target = -181.266
x_probe = {'spark.broadcast.blockSize': 45.5570674879536, 'spark.broadcast.checksum': 0.6995222117507027, 'spark.broadcast.compress': 0.7241557714073902, 'spark.default.parallelism': 461.3859059930155, 'spark.executor.cores': 2.600445867963067, 'spark.executor.instances': 7.961234431776733, 'spark.executor.memory': 5.350336602133374, 'spark.executor.memoryOverhead': 756.3490354847936, 'spark.kryoserializer.buffer': 113.30562596269314, 'spark.kryoserializer.buffer.max': 89.91479680944182, 'spark.locality.wait': 5.88901166342568, 'spark.maxRemoteBlockSizeFetchToMem': 2027957246.7748785, 'spark.memory.fraction': 0.7035304459823646, 'spark.memory.offHeap.enabled': 0.3961706202937373, 'spark.memory.offHeap.size': 142.67736455579973, 'spark.memory.storageFraction': 0.6523494086148022, 'spark.rdd.compress': 0.9141042721737792, 'spark.reducer.maxBlocksInFlightPerAddress': 1862047212.8484643, 'spark.reducer.maxReqsInFlight': 1442371286.7338047, 'spark.reducer.maxSizeInFlight': 68.41154823650236, 'spark.scheduler.mode': 0.778713223026741, 'spark.scheduler.revive.interval': 837.6850578522669, 'spark.shuffle.compress': 0.20436658068089875, 'spark.shuffle.file.buffer': 19.357288430913158, 'spark.shuffle.io.numConnectionsPerPeer': 1.9418566331652345, 'spark.shuffle.sort.bypassMergeThreshold': 273.25884354397147, 'spark.storage.memoryMapThreshold': 2.604959940719593}
target = -181.266
1261s
{'maxIndex': 13, 'target': -160.548, 'params': {'spark.broadcast.blockSize': 33.0, 'spark.broadcast.checksum': 1.0, 'spark.broadcast.compress': 1.0, 'spark.default.parallelism': 453.0, 'spark.executor.cores': 4.0, 'spark.executor.instances': 8.0, 'spark.executor.memory': 4.0, 'spark.executor.memoryOverhead': 574.0, 'spark.kryoserializer.buffer': 106.0, 'spark.kryoserializer.buffer.max': 112.0, 'spark.locality.wait': 5.0, 'spark.maxRemoteBlockSizeFetchToMem': 1903390720.0, 'spark.memory.fraction': 0.8399999737739563, 'spark.memory.offHeap.enabled': 0.0, 'spark.memory.offHeap.size': 216.0, 'spark.memory.storageFraction': 0.5600000023841858, 'spark.rdd.compress': 0.0, 'spark.reducer.maxBlocksInFlightPerAddress': 1831726080.0, 'spark.reducer.maxReqsInFlight': 1514585984.0, 'spark.reducer.maxSizeInFlight': 69.0, 'spark.scheduler.mode': 0.0, 'spark.scheduler.revive.interval': 650.0, 'spark.shuffle.compress': 1.0, 'spark.shuffle.file.buffer': 22.0, 'spark.shuffle.io.numConnectionsPerPeer': 3.0, 'spark.shuffle.sort.bypassMergeThreshold': 193.0, 'spark.storage.memoryMapThreshold': 4.0}}
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/yyq/bo/ganrs_bo_new/general_data.csv" 的文件状态(stat): 没有那个文件或目录
=============== finish wordcount-100G ===============
2022年 02月 22日 星期二 17:45:59 CST
=============== finish wordcount-100G ===============
